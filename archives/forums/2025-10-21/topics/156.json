{
  "post_stream": {
    "posts": [
      {
        "id": 261,
        "name": "Caleb Spare",
        "username": "cespare",
        "avatar_template": "/user_avatar/forums.foundationdb.org/cespare/{size}/36_2.png",
        "created_at": "2018-04-20T22:03:24.684Z",
        "cooked": "<p>I\u2019m considering FDB for the following use case:</p>\n<ol>\n<li>A key/value store with short binary keys and moderately-sized values (&lt;1KB)</li>\n<li>Operations are mostly point queries by key (read and upsert)</li>\n<li>Key/value pairs expire and are removed after some time (weeks/months). Every update logically bumps the TTL for the record.</li>\n</ol>\n<p>1 and 2 seem to fit very naturally into FDB. The interesting part is how expiration should work.</p>\n<p>For expiration, it\u2019s not critical that keys are deleted immediately when they expire; we\u2019re more concerned with the overall database size and ensuring that the overhead from expired data isn\u2019t a large fraction of the total size.</p>\n<p>Here are two approaches that occurred to me:</p>\n<h3>Approach A: a background process iterates all keys and clears the expired ones</h3>\n<p>We store an expiration timestamp inside each value. Every value update also needs to replace the expiration with [now + expiration].</p>\n<p>We have a background expiration process (or processes) which continually iterate through all the keys using range reads. When this process locates keys that have expired, it deletes them.</p>\n<h3>Approach B: organize keys together by when they expire</h3>\n<p>There are a few different ways to go about this; here\u2019s one way.</p>\n<p>Suppose we want 1 month expiry. We can group keys by expiration day. We\u2019ll need a level of indirection to go from the original key to the appropriate day-prefixed key:</p>\n<pre><code>2018-05-01:key1 -&gt; val1\n2018-05-01:key3 -&gt; val3\n...\n2018-05-02:key2 -&gt; val2\n...\nkey1 -&gt; 2018-05-01\nkey2 -&gt; 2018-05-02\nkey3 -&gt; 2018-05-01\n...\n</code></pre>\n<p>Then:</p>\n<ul>\n<li>For every update, if the expiration day isn\u2019t [today + 1 month], then we need to move the key to the current expiration date (i.e., create a new key for [now + 1 month] with the value; clear the old date-prefixed key; update the date associated with the key).</li>\n<li>To delete old data, do a range query to get all the expired indirection keys and delete them one-by-one. Then do a single range clear to delete the expired keys/vals.</li>\n</ul>\n<hr>\n<p>Though now that I\u2019ve written that out, it sort of seems like B is doing all the work of A over and over again as it moves the keys to later expiration days (our key sets are fairly stable). Perhaps there\u2019s some other way to do less work will still being able to delete the bulk of the data with single range clear.</p>\n<p>Do either of these make sense? Is there another, better approach to consider? What are the performance implications of deleting lots of keys one-at-a-time? What about space overhead/reclamation?</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 2,
        "updated_at": "2018-04-20T22:03:24.684Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 1394,
        "reads": 106,
        "readers_count": 105,
        "score": 7001.2,
        "yours": false,
        "topic_id": 156,
        "topic_slug": "designing-key-value-expiration-in-fdb",
        "display_username": "Caleb Spare",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://forums.foundationdb.org/t/designing-an-expiring-key-value-store/758",
            "internal": true,
            "reflection": true,
            "title": "Designing an expiring key/value store",
            "clicks": 3
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 44,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/designing-key-value-expiration-in-fdb/156/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 270,
        "name": "David Scherer",
        "username": "dave",
        "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
        "created_at": "2018-04-21T00:18:33.401Z",
        "cooked": "<p>You are more or less on the right track.  In your approach B, it is strictly better to keep the values in the primary key index, so you don\u2019t have to follow a level of indirection.</p>\n<p>(\u2018pk\u2019, key1) := (val1, 2018-05-01)<br>\n\u2026<br>\n(\u2018exp\u2019, 2018-05-01, key1) := ()</p>\n<p>Approach B is asymptotically optimal, since you only do O(1) work for each update to a key.  But there are imaginable workloads where approach A would be faster in practice.</p>\n<p>Dave</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 2,
        "updated_at": "2018-04-21T00:18:33.401Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 14,
        "reads": 93,
        "readers_count": 92,
        "score": 135.6,
        "yours": false,
        "topic_id": 156,
        "topic_slug": "designing-key-value-expiration-in-fdb",
        "display_username": "David Scherer",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 2
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 22,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/designing-key-value-expiration-in-fdb/156/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      261,
      270
    ]
  },
  "timeline_lookup": [
    [
      1,
      2741
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "Designing key/value expiration in FDB",
  "id": 156,
  "title": "Designing key/value expiration in FDB",
  "posts_count": 2,
  "created_at": "2018-04-20T22:03:24.598Z",
  "views": 3439,
  "reply_count": 0,
  "like_count": 3,
  "last_posted_at": "2018-04-21T00:18:33.401Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "designing-key-value-expiration-in-fdb",
  "category_id": 7,
  "word_count": 527,
  "deleted_at": null,
  "user_id": 44,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_156",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 2,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 2,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "Designing an expiring key/value store",
      "id": 758,
      "title": "Designing an expiring key/value store",
      "slug": "designing-an-expiring-key-value-store",
      "posts_count": 5,
      "reply_count": 1,
      "highest_post_number": 5,
      "image_url": null,
      "created_at": "2018-10-10T01:28:42.464Z",
      "last_posted_at": "2018-10-11T04:22:58.609Z",
      "bumped": true,
      "bumped_at": "2018-10-11T04:22:58.609Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 2598,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 44,
            "username": "cespare",
            "name": "Caleb Spare",
            "avatar_template": "/user_avatar/forums.foundationdb.org/cespare/{size}/36_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 173,
            "username": "jkominek",
            "name": "Jay Kominek",
            "avatar_template": "/user_avatar/forums.foundationdb.org/jkominek/{size}/140_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Used disk space dramatically increases while sum of key-value sizes is constant",
      "id": 644,
      "title": "Used disk space dramatically increases while sum of key-value sizes is constant",
      "slug": "used-disk-space-dramatically-increases-while-sum-of-key-value-sizes-is-constant",
      "posts_count": 6,
      "reply_count": 4,
      "highest_post_number": 7,
      "image_url": null,
      "created_at": "2018-08-17T14:38:26.479Z",
      "last_posted_at": "2018-09-04T16:08:07.423Z",
      "bumped": true,
      "bumped_at": "2018-09-04T16:08:07.423Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 2087,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 297,
            "username": "imukhin",
            "name": "Ivan Mukhin",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/i/b19c9b/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Document expiry in FoundationDB",
      "id": 4164,
      "title": "Document expiry in FoundationDB",
      "slug": "document-expiry-in-foundationdb",
      "posts_count": 4,
      "reply_count": 1,
      "highest_post_number": 4,
      "image_url": null,
      "created_at": "2023-09-21T00:09:57.401Z",
      "last_posted_at": "2023-09-29T15:03:12.506Z",
      "bumped": true,
      "bumped_at": "2023-09-29T15:03:12.506Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 502,
      "category_id": 17,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 1298,
            "username": "bharathrani1980",
            "name": "Bharath",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/b/49beb7/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 307,
            "username": "jwr",
            "name": "Jan Rychter",
            "avatar_template": "/user_avatar/forums.foundationdb.org/jwr/{size}/302_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 164,
            "username": "Imperatorx",
            "name": "",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/i/d2c977/{size}.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 1160,
            "username": "hbs",
            "name": "Mathias Herberts",
            "avatar_template": "/user_avatar/forums.foundationdb.org/hbs/{size}/1419_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Way to rename key",
      "id": 2142,
      "title": "Way to rename key",
      "slug": "way-to-rename-key",
      "posts_count": 19,
      "reply_count": 15,
      "highest_post_number": 19,
      "image_url": null,
      "created_at": "2020-05-29T16:40:04.242Z",
      "last_posted_at": "2020-06-01T00:47:36.612Z",
      "bumped": true,
      "bumped_at": "2020-06-01T00:47:36.612Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 6,
      "views": 1053,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 337,
            "username": "mengxu",
            "name": "Meng Xu",
            "avatar_template": "/user_avatar/forums.foundationdb.org/mengxu/{size}/893_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 7,
            "username": "SteavedHams",
            "name": "Steve Atherton",
            "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 771,
            "username": "hustnn",
            "name": "Hustnn",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/h/43a26b/{size}.png",
            "trust_level": 0
          }
        }
      ]
    },
    {
      "fancy_title": "FoundationDB cluster performance issue - Periods of high disk I/O and sustained high latency",
      "id": 2184,
      "title": "FoundationDB cluster performance issue - Periods of high disk I/O and sustained high latency",
      "slug": "foundationdb-cluster-performance-issue-periods-of-high-disk-i-o-and-sustained-high-latency",
      "posts_count": 22,
      "reply_count": 17,
      "highest_post_number": 22,
      "image_url": null,
      "created_at": "2020-06-15T15:45:43.650Z",
      "last_posted_at": "2020-07-06T06:50:56.594Z",
      "bumped": true,
      "bumped_at": "2020-07-06T06:50:56.594Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [
        "performance"
      ],
      "tags_descriptions": {},
      "like_count": 2,
      "views": 2571,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 779,
            "username": "imtdk",
            "name": null,
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/i/22d042/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 747,
            "username": "ashishgupta",
            "name": "Ashish Gupta",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/a/c67d28/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 7,
            "username": "SteavedHams",
            "name": "Steve Atherton",
            "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 22,
        "username": "dave",
        "name": "David Scherer",
        "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 44,
        "username": "cespare",
        "name": "Caleb Spare",
        "avatar_template": "/user_avatar/forums.foundationdb.org/cespare/{size}/36_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      }
    ],
    "created_by": {
      "id": 44,
      "username": "cespare",
      "name": "Caleb Spare",
      "avatar_template": "/user_avatar/forums.foundationdb.org/cespare/{size}/36_2.png"
    },
    "last_poster": {
      "id": 22,
      "username": "dave",
      "name": "David Scherer",
      "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png"
    },
    "links": [
      {
        "url": "https://forums.foundationdb.org/t/designing-an-expiring-key-value-store/758",
        "title": "Designing an expiring key/value store",
        "internal": true,
        "attachment": false,
        "reflection": true,
        "clicks": 3,
        "user_id": 44,
        "domain": "forums.foundationdb.org",
        "root_domain": "foundationdb.org"
      }
    ]
  },
  "bookmarks": []
}