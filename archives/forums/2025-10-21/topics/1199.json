{
  "post_stream": {
    "posts": [
      {
        "id": 3588,
        "name": "gaurav",
        "username": "gaurav",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
        "created_at": "2019-03-06T03:07:33.498Z",
        "cooked": "<p>Hi,</p>\n<p>When using Java client libraries for accessing an fdb cluster, how much maximum memory can be allocated at any given time by the native C library that Java client library calls into? Does it depend on how much data is being returned in a single read/range iteration? Does it also depend on the number of concurrent server requests at a given point in time?</p>\n<p>What is the strategy to release the allocated memory back to the OS? Is there any way to influence the client to release the memory back in case the allocations are above a threshold?</p>\n<p>If we want to cap this memory (allocated by C client), are there any Knobs, or other suggestions to limit the memory usage (like using a particular Iteration strategy, to limit max number of rows returned in a single RPC)?</p>\n<p>Additionally, how can I get visibility into the amount of allocated memory by the C client library at any given point (logs, tools\u2026)? Java heap will not show that allocation, as it is outside the heap; and I am not very good with other lower level tools to measure a JVM\u2019s outside heap allocated memory.</p>\n<p>\u2013<br>\nthanks,<br>\ngaurav</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2019-03-06T10:23:44.624Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 166,
        "reads": 58,
        "readers_count": 57,
        "score": 846.6,
        "yours": false,
        "topic_id": 1199,
        "topic_slug": "fdb-c-client-library-memory-allocations",
        "display_username": "gaurav",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 166,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/fdb-c-client-library-memory-allocations/1199/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 3610,
        "name": "gaurav",
        "username": "gaurav",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
        "created_at": "2019-03-08T11:57:34.501Z",
        "cooked": "<p>Hi, just wanted to recheck if someone has any thoughts on this. This consideration is important for us to size the machines where clients would be running. And we also want to control the memory requirements for fdb clients due to tight memory situation.</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2019-03-08T11:57:34.501Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 3,
        "reads": 55,
        "readers_count": 54,
        "score": 31.0,
        "yours": false,
        "topic_id": 1199,
        "topic_slug": "fdb-c-client-library-memory-allocations",
        "display_username": "gaurav",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 166,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/fdb-c-client-library-memory-allocations/1199/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3614,
        "name": "Alec Grieser",
        "username": "alloc",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "created_at": "2019-03-09T00:38:35.219Z",
        "cooked": "<p>I\u2019ll admit, I\u2019m not the most knowledgeable on all of these topics, but I\u2019ll try my best to answer what I know.</p>\n<aside class=\"quote no-group\" data-username=\"gaurav\" data-post=\"1\" data-topic=\"1199\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/g/b487fb/48.png\" class=\"avatar\"> gaurav:</div>\n<blockquote>\n<p>When using Java client libraries for accessing an fdb cluster, how much maximum memory can be allocated at any given time by the native C library that Java client library calls into?</p>\n</blockquote>\n</aside>\n<p>I\u2019m not aware of any way to have the C client purposefully decrease it\u2019s memory usage (by, say, using smaller buffers), but I could be wrong. Usually, I think you would do this by restricting the process\u2019s memory usage or something.</p>\n<aside class=\"quote no-group\" data-username=\"gaurav\" data-post=\"1\" data-topic=\"1199\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/g/b487fb/48.png\" class=\"avatar\"> gaurav:</div>\n<blockquote>\n<p>Does it depend on how much data is being returned in a single read/range iteration?</p>\n</blockquote>\n</aside>\n<p>Not too much. I suppose when you do a read, there will be slightly more memory used for the lifetime of that request, but the bigger thing is that transactions keep around a cache of read keys and read values for the lifetime of the transaction. So the easy way to fill up memory accidentally is to start a transaction, read a bunch of data, and then never close it. This is a big reason why it\u2019s important to call <code>close</code> on any transaction you start.</p>\n<aside class=\"quote no-group\" data-username=\"gaurav\" data-post=\"1\" data-topic=\"1199\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/g/b487fb/48.png\" class=\"avatar\"> gaurav:</div>\n<blockquote>\n<p>Does it also depend on the number of concurrent server requests at a given point in time?</p>\n</blockquote>\n</aside>\n<p>I guess? There\u2019s some amount of space used to store, say, the fact that you are making a request. I don\u2019t think that\u2019s where most of the memory is going most of the time.</p>\n<aside class=\"quote no-group\" data-username=\"gaurav\" data-post=\"1\" data-topic=\"1199\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/g/b487fb/48.png\" class=\"avatar\"> gaurav:</div>\n<blockquote>\n<p>What is the strategy to release the allocated memory back to the OS?</p>\n</blockquote>\n</aside>\n<p>All of the native objects are <code>AutoCloseable</code> and upon close, free their underlying data in the C client. (Or release their reference.) The big ones to watch out for are <code>Transactions</code>. These are automatically closed by the retry loops in the Java bindings, but it\u2019s not impossible to write client code that doesn\u2019t properly close them. They also release their references on object finalization (for now), but that\u2019s not reliable in that the object might not be finalized at any predictable time. The other problem with relying on the finalizers is that they are invoked when the JVM is under memory pressure which might be after when the native memory is under memory pressure. (For example, because transactions keep a large amount of state associated with what\u2019s happened so far but have a fairly minimal representation in the JVM, the native memory might fill up with data from <code>Transaction</code> objects well before the JVM memory is used to any significant degree.)</p>\n<aside class=\"quote no-group\" data-username=\"gaurav\" data-post=\"1\" data-topic=\"1199\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/g/b487fb/48.png\" class=\"avatar\"> gaurav:</div>\n<blockquote>\n<p>Is there any way to influence the client to release the memory back in case the allocations are above a threshold?</p>\n</blockquote>\n</aside>\n<p>Not to my knowledge. For the most part, you should be releasing references to native objects as soon as possible, and then there is less need to worry about increasing memory releasing.</p>\n<aside class=\"quote no-group\" data-username=\"gaurav\" data-post=\"1\" data-topic=\"1199\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/g/b487fb/48.png\" class=\"avatar\"> gaurav:</div>\n<blockquote>\n<p>If we want to cap this memory (allocated by C client), are there any Knobs, or other suggestions to limit the memory usage (like using a particular Iteration strategy, to limit max number of rows returned in a single RPC)?</p>\n</blockquote>\n</aside>\n<p>I don\u2019t think there are any knobs that are, like, \u201cdon\u2019t allocate more than this much memory\u201d, but there are a few related to the sizes of caches that might be useful to set (location cache size, for example). But fiddling with knobs in general is somewhat dangerous, and we don\u2019t really document which ones are dangerous to set and which ones aren\u2019t.</p>\n<p>I think all of the iteration strategies will be roughly equivalent. Decreasing the number of rows read per transaction also might help.</p>\n<p>You can also disable the read your writes cache through a transaction option: <a href=\"https://apple.github.io/foundationdb/javadoc/com/apple/foundationdb/TransactionOptions.html#setReadYourWritesDisable--\" class=\"inline-onebox\">TransactionOptions (FoundationDB Java Client API)</a> This will decrease the amount of memory used, and for read only transactions, it doesn\u2019t change semantics. (It <em>will</em> change the semantics of read/write transactions, so use with care.) It also means for read-only transactions that reading the same key twice will require two successive network requests, so my suggestion would be to try it after you\u2019ve explored other things.</p>\n<aside class=\"quote no-group\" data-username=\"gaurav\" data-post=\"1\" data-topic=\"1199\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/g/b487fb/48.png\" class=\"avatar\"> gaurav:</div>\n<blockquote>\n<p>Additionally, how can I get visibility into the amount of allocated memory by the C client library at any given point (logs, tools\u2026)? Java heap will not show that allocation, as it is outside the heap; and I am not very good with other lower level tools to measure a JVM\u2019s outside heap allocated memory.</p>\n</blockquote>\n</aside>\n<p>Not sure. I think tools that work for profiling any C++ program would generally work for the  FDB client (or I don\u2019t see why they wouldn\u2019t), but I haven\u2019t actually tried.</p>\n<hr>\n<p>Maybe <a class=\"mention\" href=\"/u/killertypo\">@killertypo</a> or <a class=\"mention\" href=\"/u/panghy\">@panghy</a> have insight into what they\u2019ve done for this kind of thing?</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2019-03-09T00:38:35.219Z",
        "reply_count": 0,
        "reply_to_post_number": 2,
        "quote_count": 1,
        "incoming_link_count": 3,
        "reads": 51,
        "readers_count": 50,
        "score": 25.2,
        "yours": false,
        "topic_id": 1199,
        "topic_slug": "fdb-c-client-library-memory-allocations",
        "display_username": "Alec Grieser",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://apple.github.io/foundationdb/javadoc/com/apple/foundationdb/TransactionOptions.html#setReadYourWritesDisable--",
            "internal": false,
            "reflection": false,
            "title": "TransactionOptions (FoundationDB Java Client API)",
            "clicks": 3
          }
        ],
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 166,
          "username": "gaurav",
          "name": "gaurav",
          "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 8,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/fdb-c-client-library-memory-allocations/1199/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3615,
        "name": "Clement Pang",
        "username": "panghy",
        "avatar_template": "/user_avatar/forums.foundationdb.org/panghy/{size}/19_2.png",
        "created_at": "2019-03-09T02:11:10.403Z",
        "cooked": "<p>So to control memory use, you cannot rely on finalizers, you should just dispose native objects as aggressively as possible. Since that\u2019s not always doable, what we do (in 3.x at least but this is being ported to 5.x/6.x) is to only allow objects to live during the live of the transaction itself. We track every call to Transaction and collect them in a map from txn to native objects. When we dispose the transaction, we also dispose every object. We also print a message in the finalizer if we forgot to dispose an object and we are now doing it in the finalizer.</p>\n<p>With AutoCloseable I\u2019d imagine it would be easier but still the chance that someone might forget is still high (I assume it\u2019s easier to control how you start and end transactions since I don\u2019t think we ever start and commit/abort transactions manually but YMMV).</p>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2019-03-09T02:11:10.403Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 45,
        "readers_count": 44,
        "score": 9.0,
        "yours": false,
        "topic_id": 1199,
        "topic_slug": "fdb-c-client-library-memory-allocations",
        "display_username": "Clement Pang",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": "",
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 38,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/fdb-c-client-library-memory-allocations/1199/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3616,
        "name": "gaurav",
        "username": "gaurav",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
        "created_at": "2019-03-09T06:27:48.500Z",
        "cooked": "<p>Thank you <a class=\"mention\" href=\"/u/alloc\">@alloc</a> and <a class=\"mention\" href=\"/u/panghy\">@panghy</a> for the helpful suggestions!</p>\n<p>In this post, I am lesser concerned about the JVM freeing up references to native pointers, but rather, I am trying to get a better understanding of the <em>fast allocator pool</em> size maintained in C library and any memory held by it over a long time (even after the transactions using that memory being closed).</p>\n<p>Please refer to this post by <a class=\"mention\" href=\"/u/steavedhams\">@SteavedHams</a> : <a href=\"https://forums.foundationdb.org/t/memory-leak-in-c-api/554/4?u=gaurav\">fast-alloc</a> . This talks about some long term memory pool maintained by fast-allocator, and transaction arenas borrow out memory from this pool and return the memory back to it on being closed.</p>\n<p>This also clarifies that given a transaction limit of 10MB and a duration of 5 sec, there should be a very little chance of the <em>fast-allocator</em> pool being of a large size.</p>\n<p>However, I wanted to get a better understanding of this and confirm the worst case size of this common pool in the client process. Specifically,</p>\n<ul>\n<li>Is the max pool size proportional to the number of concurrent write transactions (each tx may need up to 10 MB, and there can be 100s of such concurrent transactions)?</li>\n<li>Does the max pool size depend on the number of concurrent read operations? Each range-read operation can retrieve huge amounts of data in a single network call, and if data from each call needs to be buffered in this pool, then the pool needs to grow to accommodate the reads.</li>\n<li>If there is no cap on the worst-case size of this pool by default, then are there any suggestions to limit it to a threshold, or else, keep it minimal?</li>\n<li>How is the lifecycle of this pool maintained? How soon does it shrink back when unused?</li>\n</ul>\n<p><strong>It may be that I have misunderstood the behavior of fast-allocator pool in C library, and in that case, the entire post is irrelevant.</strong></p>",
        "post_number": 5,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2019-03-11T08:27:47.700Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 2,
        "reads": 46,
        "readers_count": 45,
        "score": 24.2,
        "yours": false,
        "topic_id": 1199,
        "topic_slug": "fdb-c-client-library-memory-allocations",
        "display_username": "gaurav",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 3,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://forums.foundationdb.org/t/memory-leak-in-c-api/554/4",
            "internal": true,
            "reflection": false,
            "title": "Memory leak in C API?",
            "clicks": 16
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 166,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/fdb-c-client-library-memory-allocations/1199/5",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3621,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2019-03-11T19:10:52.178Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"gaurav\" data-post=\"5\" data-topic=\"1199\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/g/b487fb/48.png\" class=\"avatar\"> gaurav:</div>\n<blockquote>\n<ul>\n<li>Is the max pool size proportional to the number of concurrent write transactions (each tx may need up to 10 MB, and there can be 100s of such concurrent transactions)?</li>\n<li>Does the max pool size depend on the number of concurrent read operations? Each range-read operation can retrieve huge amounts of data in a single network call, and if data from each call needs to be buffered in this pool, then the pool needs to grow to accommodate the reads.</li>\n</ul>\n</blockquote>\n</aside>\n<p>Transactions do use memory in proportion to the work they are doing, so if a transaction does a lot of reads or writes, it will use more memory. Also, if a transaction isn\u2019t able to get any free memory from the pool, it will instead allocate more. That means that if you have a lot of concurrent transactions, there will need to be enough memory allocated for all of them.</p>\n<aside class=\"quote no-group\" data-username=\"gaurav\" data-post=\"5\" data-topic=\"1199\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/g/b487fb/48.png\" class=\"avatar\"> gaurav:</div>\n<blockquote>\n<ul>\n<li>If there is no cap on the worst-case size of this pool by default, then are there any suggestions to limit it to a threshold, or else, keep it minimal?</li>\n</ul>\n</blockquote>\n</aside>\n<p>Limiting concurrency or the size of your transactions can help. Being timely with your destruction of relevant objects (e.g. Transaction) like Alec mentioned is also important, as failing to do so can effectively increase your concurrency.</p>\n<aside class=\"quote no-group\" data-username=\"gaurav\" data-post=\"5\" data-topic=\"1199\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/g/b487fb/48.png\" class=\"avatar\"> gaurav:</div>\n<blockquote>\n<ul>\n<li>How is the lifecycle of this pool maintained? How soon does it shrink back when unused?</li>\n</ul>\n</blockquote>\n</aside>\n<p>I don\u2019t believe this memory is ever returned back from the allocation pools. If you allocate a lot of it and stop using it, it will persist for the lifetime of the program waiting for someone else who needs it.</p>",
        "post_number": 6,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2019-03-11T19:10:52.178Z",
        "reply_count": 1,
        "reply_to_post_number": 5,
        "quote_count": 1,
        "incoming_link_count": 2,
        "reads": 38,
        "readers_count": 37,
        "score": 22.6,
        "yours": false,
        "topic_id": 1199,
        "topic_slug": "fdb-c-client-library-memory-allocations",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/fdb-c-client-library-memory-allocations/1199/6",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3624,
        "name": "gaurav",
        "username": "gaurav",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
        "created_at": "2019-03-12T01:53:15.598Z",
        "cooked": "<p>Hi AJ, Thank you for these clarifications.</p>\n<p>I would have to do some profiling for my client code over a longer term to see how much memory are they allocating out-of-heap, but do you think there should be some more control given to the clients for limiting or reducing the memory footprint?</p>\n<p>I think it will be very tricky to reason about long term memory usage based on point-in-time concurrency and size of operations (specially with size of range reads).</p>",
        "post_number": 7,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2019-03-12T03:30:52.257Z",
        "reply_count": 0,
        "reply_to_post_number": 6,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 37,
        "readers_count": 36,
        "score": 12.4,
        "yours": false,
        "topic_id": 1199,
        "topic_slug": "fdb-c-client-library-memory-allocations",
        "display_username": "gaurav",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 12,
          "username": "ajbeamon",
          "name": "A.J. Beamon",
          "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 166,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/fdb-c-client-library-memory-allocations/1199/7",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3632,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2019-03-12T21:09:38.157Z",
        "cooked": "<p>If you\u2019re interested, could you summarize your requirements for client memory management as a GitHub issue for consideration by the development team?</p>\n<p>I\u2019m not sure how easy the features will be to add without compromising performance as I believe our fast allocator was designed with speed as a top priority. I think the current design would make it difficult to reclaim memory, for example, but I haven\u2019t given it a ton of thought.</p>",
        "post_number": 8,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2019-03-12T21:09:38.157Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 35,
        "readers_count": 34,
        "score": 17.0,
        "yours": false,
        "topic_id": 1199,
        "topic_slug": "fdb-c-client-library-memory-allocations",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/fdb-c-client-library-memory-allocations/1199/8",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3639,
        "name": "gaurav",
        "username": "gaurav",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
        "created_at": "2019-03-13T11:19:11.780Z",
        "cooked": "<p>Thanks. I will create an issue.</p>",
        "post_number": 9,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2019-03-13T11:19:11.780Z",
        "reply_count": 1,
        "reply_to_post_number": 8,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 34,
        "readers_count": 33,
        "score": 11.8,
        "yours": false,
        "topic_id": 1199,
        "topic_slug": "fdb-c-client-library-memory-allocations",
        "display_username": "gaurav",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 12,
          "username": "ajbeamon",
          "name": "A.J. Beamon",
          "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 166,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/fdb-c-client-library-memory-allocations/1199/9",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3647,
        "name": "Meng Xu",
        "username": "mengxu",
        "avatar_template": "/user_avatar/forums.foundationdb.org/mengxu/{size}/893_2.png",
        "created_at": "2019-03-14T00:14:17.371Z",
        "cooked": "<p>It will be nicer if you are interested in creating a PR for it. <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=6\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\"></p>",
        "post_number": 10,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2019-03-14T00:14:17.371Z",
        "reply_count": 0,
        "reply_to_post_number": 9,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 32,
        "readers_count": 31,
        "score": 6.4,
        "yours": false,
        "topic_id": 1199,
        "topic_slug": "fdb-c-client-library-memory-allocations",
        "display_username": "Meng Xu",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 166,
          "username": "gaurav",
          "name": "gaurav",
          "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 337,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/fdb-c-client-library-memory-allocations/1199/10",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      3588,
      3610,
      3614,
      3615,
      3616,
      3621,
      3624,
      3632,
      3639,
      3647
    ]
  },
  "timeline_lookup": [
    [
      1,
      2422
    ],
    [
      2,
      2419
    ],
    [
      6,
      2416
    ],
    [
      8,
      2415
    ],
    [
      9,
      2414
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "Fdb C client library memory allocations",
  "id": 1199,
  "title": "Fdb C client library memory allocations",
  "posts_count": 10,
  "created_at": "2019-03-06T03:07:33.409Z",
  "views": 1392,
  "reply_count": 5,
  "like_count": 0,
  "last_posted_at": "2019-03-14T00:14:17.371Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "fdb-c-client-library-memory-allocations",
  "category_id": 7,
  "word_count": 2068,
  "deleted_at": null,
  "user_id": 166,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_1199",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 10,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 5,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "Memory leak in C API?",
      "id": 554,
      "title": "Memory leak in C API?",
      "slug": "memory-leak-in-c-api",
      "posts_count": 5,
      "reply_count": 1,
      "highest_post_number": 5,
      "image_url": null,
      "created_at": "2018-07-09T10:54:23.376Z",
      "last_posted_at": "2018-07-10T12:55:14.679Z",
      "bumped": true,
      "bumped_at": "2018-07-10T12:55:14.679Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 2,
      "views": 1120,
      "category_id": 5,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 319,
            "username": "kirilltitov",
            "name": "Kirill Titov",
            "avatar_template": "/user_avatar/forums.foundationdb.org/kirilltitov/{size}/328_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 7,
            "username": "SteavedHams",
            "name": "Steve Atherton",
            "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Memory leak in C client-lib - when a timeout() is set on transaction options?",
      "id": 1710,
      "title": "Memory leak in C client-lib - when a timeout() is set on transaction options?",
      "slug": "memory-leak-in-c-client-lib-when-a-timeout-is-set-on-transaction-options",
      "posts_count": 7,
      "reply_count": 3,
      "highest_post_number": 7,
      "image_url": "https://global.discourse-cdn.com/foundationdb/original/1X/b55b0e80a4a533be00e26d30756cb9b860ad76b1.png",
      "created_at": "2019-11-01T07:02:02.599Z",
      "last_posted_at": "2019-11-09T04:04:11.942Z",
      "bumped": true,
      "bumped_at": "2019-11-09T10:56:45.389Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 865,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Continuous out-of-memory crashes in small cluster with modest read-only workload",
      "id": 864,
      "title": "Continuous out-of-memory crashes in small cluster with modest read-only workload",
      "slug": "continuous-out-of-memory-crashes-in-small-cluster-with-modest-read-only-workload",
      "posts_count": 10,
      "reply_count": 6,
      "highest_post_number": 10,
      "image_url": null,
      "created_at": "2018-11-12T18:15:45.539Z",
      "last_posted_at": "2018-11-13T22:03:20.420Z",
      "bumped": true,
      "bumped_at": "2018-11-13T22:03:20.420Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 1256,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 424,
            "username": "jwb",
            "name": "Jeff Baker",
            "avatar_template": "/user_avatar/forums.foundationdb.org/jwb/{size}/413_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 22,
            "username": "dave",
            "name": "David Scherer",
            "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
            "trust_level": 1
          }
        }
      ]
    },
    {
      "fancy_title": "Foundationdb 6.2 - fdbserver going out of memory",
      "id": 2080,
      "title": "Foundationdb 6.2 - fdbserver going out of memory",
      "slug": "foundationdb-6-2-fdbserver-going-out-of-memory",
      "posts_count": 10,
      "reply_count": 5,
      "highest_post_number": 10,
      "image_url": null,
      "created_at": "2020-04-20T14:55:39.274Z",
      "last_posted_at": "2020-04-23T04:34:49.858Z",
      "bumped": true,
      "bumped_at": "2020-04-23T04:34:49.858Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 1037,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 714,
            "username": "tuk",
            "name": "",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/t/b5ac83/{size}.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Memory leak in client profiling code",
      "id": 2108,
      "title": "Memory leak in client profiling code",
      "slug": "memory-leak-in-client-profiling-code",
      "posts_count": 5,
      "reply_count": 3,
      "highest_post_number": 5,
      "image_url": null,
      "created_at": "2020-05-07T20:05:59.143Z",
      "last_posted_at": "2020-05-08T23:21:40.526Z",
      "bumped": true,
      "bumped_at": "2020-05-08T23:21:40.526Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 726,
      "category_id": 8,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 173,
            "username": "jkominek",
            "name": "Jay Kominek",
            "avatar_template": "/user_avatar/forums.foundationdb.org/jkominek/{size}/140_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 14,
            "username": "andrew.noyes",
            "name": "",
            "avatar_template": "/user_avatar/forums.foundationdb.org/andrew.noyes/{size}/443_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 166,
        "username": "gaurav",
        "name": "gaurav",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
        "post_count": 5,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 3
      },
      {
        "id": 12,
        "username": "ajbeamon",
        "name": "A.J. Beamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "admin": true,
        "trust_level": 4
      },
      {
        "id": 8,
        "username": "alloc",
        "name": "Alec Grieser",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      },
      {
        "id": 38,
        "username": "panghy",
        "name": "Clement Pang",
        "avatar_template": "/user_avatar/forums.foundationdb.org/panghy/{size}/19_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      },
      {
        "id": 337,
        "username": "mengxu",
        "name": "Meng Xu",
        "avatar_template": "/user_avatar/forums.foundationdb.org/mengxu/{size}/893_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      }
    ],
    "created_by": {
      "id": 166,
      "username": "gaurav",
      "name": "gaurav",
      "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png"
    },
    "last_poster": {
      "id": 337,
      "username": "mengxu",
      "name": "Meng Xu",
      "avatar_template": "/user_avatar/forums.foundationdb.org/mengxu/{size}/893_2.png"
    },
    "links": [
      {
        "url": "https://forums.foundationdb.org/t/memory-leak-in-c-api/554/4",
        "title": "Memory leak in C API?",
        "internal": true,
        "attachment": false,
        "reflection": false,
        "clicks": 16,
        "user_id": 166,
        "domain": "forums.foundationdb.org",
        "root_domain": "foundationdb.org"
      },
      {
        "url": "https://apple.github.io/foundationdb/javadoc/com/apple/foundationdb/TransactionOptions.html#setReadYourWritesDisable--",
        "title": "TransactionOptions (FoundationDB Java Client API)",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 3,
        "user_id": 8,
        "domain": "apple.github.io",
        "root_domain": "apple.github.io"
      }
    ]
  },
  "bookmarks": []
}