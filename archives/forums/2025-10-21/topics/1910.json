{
  "post_stream": {
    "posts": [
      {
        "id": 6037,
        "name": "Samit Sawant",
        "username": "samitsawant",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/13edae/{size}.png",
        "created_at": "2020-01-27T01:16:00.181Z",
        "cooked": "<p>Hi,</p>\n<p>I am completely new to Foundation DB and Record layer. I was trying to understand secondary indexes through the existing documentation. I am curious to know how would be index a data which is unknown before hand.</p>\n<p>For example\u2026 imagine a data model below\u2026</p>\n<pre><code>message Outer {\n\toptional Inner static_events = 1;\n         map&lt;String, Inner&gt; dynamic_events = 2;\t\n}\n\nmessage Inner {\n       optional Event known_a = 1;\n       optional Event known_b = 2;\n       optional Event known_c = 3;\n\n}\n\nmessage Event {\n\toptional string name = 1;\n     ......\n}\n</code></pre>\n<p>Creating secondary indexes for any of the properties (eg name) for the \u201cEvent\u201d type nested within the static_events is understood.<br>\nCan we do the same for the the same type within the dynamic_event map ?<br>\nCan we write some sort of FunctionKeyExpression implementation to do that ?</p>\n<p>Thanks,</p>\n<p>Samit</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 4,
        "updated_at": "2020-01-27T01:17:14.247Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 153,
        "reads": 35,
        "readers_count": 34,
        "score": 777.0,
        "yours": false,
        "topic_id": 1910,
        "topic_slug": "creating-secondary-index-on-data-within-a-map",
        "display_username": "Samit Sawant",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 713,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/creating-secondary-index-on-data-within-a-map/1910/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 6043,
        "name": "Alec Grieser",
        "username": "alloc",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "created_at": "2020-01-27T17:04:26.485Z",
        "cooked": "<p>In Protobuf, a map is actually implemented as a repeated nested message with two fields, one called \u201ckey\u201d and one called \u201cvalue\u201d. The record layer allows you to then address them as such, and there are some constants and utilities included to make that somewhat easier.</p>\n<p>I\u2019m not exactly sure which indexes you\u2019re interested in, but if you wanted to index just the \u201cname\u201d of all <code>known_a</code> dynamic events, you could do something like:</p>\n<pre><code class=\"lang-java\">Key.Expressions.field(\"dynamic_events\", FanType.FanOut).nest(\n   Key.Expressions.field(Key.Expressions.MAP_VALUE_FIELD).nest(\n       Key.Expressions.field(\"known_a\").nest(\n           Key.Expressions.field(\"name\")\n       )\n   )\n)\n</code></pre>\n<p>And getting a little more advanced, if you wanted to have an index on, say, <code>(dynamic_event.key, known_b.name)</code>, you could do that with something like:</p>\n<pre><code class=\"lang-java\">Key.Expressions.field(\"dynamic_events\", FanType.FanOut).nest(\n   Key.Expressions.concat(\n       Key.Expressions.field(Key.Expressions.MAP_KEY_FIELD),\n       Key.Expressions.field(Key.Expressions.MAP_VALUE_FIELD).nest(\n           Key.Expressions.field(\"known_b\").nest(\n               Key.Expressions.field(\"name\")\n           )\n       )\n   )\n)\n</code></pre>\n<p>Note that the <code>known_b.name</code> is indexed here in a way that associates it with the <code>dynamic_event.key</code> that produced it specifically.</p>\n<p>There are also utility methods for defining key expressions on either the keys, the values, the (key, value) pairs, or the (value, key) pairs of a map. (Those last two produce the same index entries except with the order flipped, which means that the former can answer queries of the form <code>key = x</code>, the latter can answer queries of the form <code>value = y</code>, and both can answer queries of the form <code>key = x AND value = y</code>.) For example, if you just wanted to index the keys of all dynamic events, you can do that with:</p>\n<pre><code class=\"lang-java\">Key.Expressions.mapKeys(\"dynamic_events\")\n</code></pre>\n<p>Which is essentially syntactic sugar for:</p>\n<pre><code class=\"lang-java\">Key.Expressions.field(\"dyanmic_events\", FanType.FanOut).nest(\n    Key.Expressions.field(Key.Expressions.MAP_KEY_FIELD)\n)\n</code></pre>\n<p>Unfortunately, none of those static utility methods play great with map types where the value is itself a nested message, so it\u2019ll have to be done the long way if you need to nest into the value.</p>\n<p>See: our javadoc on <code>Key.Expressions</code>, in particular all of the things with \u201cmap\u201d in the name: <a href=\"https://javadoc.io/static/org.foundationdb/fdb-record-layer-core/2.8.97.0/com/apple/foundationdb/record/metadata/Key.Expressions.html\">https://javadoc.io/static/org.foundationdb/fdb-record-layer-core/2.8.97.0/com/apple/foundationdb/record/metadata/Key.Expressions.html</a></p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 4,
        "updated_at": "2020-01-27T17:06:11.786Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 8,
        "reads": 34,
        "readers_count": 33,
        "score": 51.8,
        "yours": false,
        "topic_id": 1910,
        "topic_slug": "creating-secondary-index-on-data-within-a-map",
        "display_username": "Alec Grieser",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://javadoc.io/static/org.foundationdb/fdb-record-layer-core/2.8.97.0/com/apple/foundationdb/record/metadata/Key.Expressions.html",
            "internal": false,
            "reflection": false,
            "title": "Key.Expressions (fdb-record-layer-core 2.8.97.0 API)",
            "clicks": 6
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 8,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/creating-secondary-index-on-data-within-a-map/1910/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6046,
        "name": "Samit Sawant",
        "username": "samitsawant",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/13edae/{size}.png",
        "created_at": "2020-01-27T18:58:35.377Z",
        "cooked": "<aside class=\"quote no-group quote-modified\" data-username=\"samitsawant\" data-post=\"1\" data-topic=\"1910\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/s/13edae/48.png\" class=\"avatar\"> samitsawant:</div>\n<blockquote>\n<p>message Outer { optional Inner static_events = 1; map&lt;String, Inner&gt; dynamic_events = 2; } message Inner { optional Event known_a = 1; optional Event known_b = 2; optional Event known_c = 3; } message Event { optional string name = 1; \u2026 }</p>\n</blockquote>\n</aside>\n<p>Hi Alec,</p>\n<p>Thanks for the detailed reply.</p>\n<p>I made a mistake in my earlier data model. The dynamic_events has \u201cEvent\u201d as the type instead of \u201cInner\u201d.</p>\n<pre><code>message Outer {\n\toptional Inner static_events = 1;\n         map&lt;String, **Event**&gt; dynamic_events = 2;\t\n}\n\nmessage Inner {\n       optional Event known_a = 1;\n       optional Event known_b = 2;\n       optional Event known_c = 3;\n\n}\n\nmessage Event {\n\toptional string name = 1;\n     ......\n}\n</code></pre>\n<p>But from you reply it looks like it would still be possible won\u2019t it ?</p>\n<pre><code>Key.Expressions.field(\"dynamic_events\", FanType.FanOut).nest(\n   Key.Expressions.field(Key.Expressions.MAP_VALUE_FIELD).nest(\n       Key.Expressions.field(\"name\")\n       )\n   )\n</code></pre>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 4,
        "updated_at": "2020-01-27T19:00:10.935Z",
        "reply_count": 1,
        "reply_to_post_number": 2,
        "quote_count": 1,
        "incoming_link_count": 2,
        "reads": 28,
        "readers_count": 27,
        "score": 20.6,
        "yours": false,
        "topic_id": 1910,
        "topic_slug": "creating-secondary-index-on-data-within-a-map",
        "display_username": "Samit Sawant",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 8,
          "username": "alloc",
          "name": "Alec Grieser",
          "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 713,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/creating-secondary-index-on-data-within-a-map/1910/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6053,
        "name": "Alec Grieser",
        "username": "alloc",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "created_at": "2020-01-27T21:21:25.792Z",
        "cooked": "<p>Yeah, exactly. That will produce an index on all names from all dynamic events, linking the name back to the <code>Outer</code> record from which it came.</p>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 4,
        "updated_at": "2020-01-27T21:21:25.792Z",
        "reply_count": 0,
        "reply_to_post_number": 3,
        "quote_count": 0,
        "incoming_link_count": 3,
        "reads": 20,
        "readers_count": 19,
        "score": 19.0,
        "yours": false,
        "topic_id": 1910,
        "topic_slug": "creating-secondary-index-on-data-within-a-map",
        "display_username": "Alec Grieser",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 713,
          "username": "samitsawant",
          "name": "Samit Sawant",
          "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/13edae/{size}.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 8,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/creating-secondary-index-on-data-within-a-map/1910/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      6037,
      6043,
      6046,
      6053
    ]
  },
  "timeline_lookup": [
    [
      1,
      2095
    ],
    [
      2,
      2094
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "Creating secondary index on data within a Map",
  "id": 1910,
  "title": "Creating secondary index on data within a Map",
  "posts_count": 4,
  "created_at": "2020-01-27T01:16:00.108Z",
  "views": 1054,
  "reply_count": 2,
  "like_count": 0,
  "last_posted_at": "2020-01-27T21:21:25.792Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "creating-secondary-index-on-data-within-a-map",
  "category_id": 12,
  "word_count": 655,
  "deleted_at": null,
  "user_id": 713,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_1910",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 4,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 2,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "Multiple questions about Indexes, functions and watches to implement etcd-layer",
      "id": 2047,
      "title": "Multiple questions about Indexes, functions and watches to implement etcd-layer",
      "slug": "multiple-questions-about-indexes-functions-and-watches-to-implement-etcd-layer",
      "posts_count": 8,
      "reply_count": 6,
      "highest_post_number": 8,
      "image_url": null,
      "created_at": "2020-04-06T11:43:10.344Z",
      "last_posted_at": "2020-06-03T06:21:53.521Z",
      "bumped": true,
      "bumped_at": "2020-06-03T06:21:53.521Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 8,
      "views": 3094,
      "category_id": 12,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 534,
            "username": "PierreZ",
            "name": "Pierre Zemb",
            "avatar_template": "/user_avatar/forums.foundationdb.org/pierrez/{size}/866_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Creating an index on a repeated nested field",
      "id": 1988,
      "title": "Creating an index on a repeated nested field",
      "slug": "creating-an-index-on-a-repeated-nested-field",
      "posts_count": 2,
      "reply_count": 0,
      "highest_post_number": 2,
      "image_url": null,
      "created_at": "2020-02-27T19:42:48.134Z",
      "last_posted_at": "2020-03-02T12:30:07.155Z",
      "bumped": true,
      "bumped_at": "2020-03-02T12:30:07.155Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 739,
      "category_id": 12,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 735,
            "username": "dmitrig01",
            "name": "Dmitri G",
            "avatar_template": "/user_avatar/forums.foundationdb.org/dmitrig01/{size}/791_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 34,
            "username": "scgray",
            "name": "Scott Gray",
            "avatar_template": "/user_avatar/forums.foundationdb.org/scgray/{size}/30_2.png",
            "trust_level": 1
          }
        }
      ]
    },
    {
      "fancy_title": "Emulate secondary index",
      "id": 430,
      "title": "Emulate secondary index",
      "slug": "emulate-secondary-index",
      "posts_count": 5,
      "reply_count": 2,
      "highest_post_number": 5,
      "image_url": null,
      "created_at": "2018-05-18T07:04:04.967Z",
      "last_posted_at": "2018-05-21T14:11:05.503Z",
      "bumped": true,
      "bumped_at": "2018-05-21T14:11:05.503Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 1123,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 268,
            "username": "urykhy",
            "name": "Yury",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/u/7bcc69/{size}.png",
            "trust_level": 0
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 190,
            "username": "itp",
            "name": "Ian Peters",
            "avatar_template": "/user_avatar/forums.foundationdb.org/itp/{size}/151_2.png",
            "trust_level": 1
          }
        }
      ]
    },
    {
      "fancy_title": "Application design using Subspace and Tuple",
      "id": 452,
      "title": "Application design using Subspace and Tuple",
      "slug": "application-design-using-subspace-and-tuple",
      "posts_count": 9,
      "reply_count": 7,
      "highest_post_number": 9,
      "image_url": null,
      "created_at": "2018-05-22T21:46:43.537Z",
      "last_posted_at": "2018-07-14T21:02:50.010Z",
      "bumped": true,
      "bumped_at": "2018-07-14T21:02:50.010Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 5,
      "views": 3678,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 211,
            "username": "brk0v",
            "name": "Viacheslav Biriukov",
            "avatar_template": "/user_avatar/forums.foundationdb.org/brk0v/{size}/173_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 317,
            "username": "Lundin",
            "name": "Pontus Lundin",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/l/dfb087/{size}.png",
            "trust_level": 1
          }
        }
      ]
    },
    {
      "fancy_title": "Question about FDB Record Layer&rsquo;s SIGMOD&rsquo;19 paper",
      "id": 2460,
      "title": "Question about FDB Record Layer's SIGMOD'19 paper",
      "slug": "question-about-fdb-record-layers-sigmod19-paper",
      "posts_count": 5,
      "reply_count": 3,
      "highest_post_number": 5,
      "image_url": null,
      "created_at": "2020-12-02T13:26:04.240Z",
      "last_posted_at": "2020-12-04T12:54:03.141Z",
      "bumped": true,
      "bumped_at": "2020-12-04T12:54:03.141Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 1056,
      "category_id": 12,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 857,
            "username": "zydong",
            "name": "ZhiyuanDong",
            "avatar_template": "/user_avatar/forums.foundationdb.org/zydong/{size}/994_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 8,
        "username": "alloc",
        "name": "Alec Grieser",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      },
      {
        "id": 713,
        "username": "samitsawant",
        "name": "Samit Sawant",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/13edae/{size}.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      }
    ],
    "created_by": {
      "id": 713,
      "username": "samitsawant",
      "name": "Samit Sawant",
      "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/13edae/{size}.png"
    },
    "last_poster": {
      "id": 8,
      "username": "alloc",
      "name": "Alec Grieser",
      "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png"
    },
    "links": [
      {
        "url": "https://javadoc.io/static/org.foundationdb/fdb-record-layer-core/2.8.97.0/com/apple/foundationdb/record/metadata/Key.Expressions.html",
        "title": "Key.Expressions (fdb-record-layer-core 2.8.97.0 API)",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 6,
        "user_id": 8,
        "domain": "javadoc.io",
        "root_domain": "javadoc.io"
      }
    ]
  },
  "bookmarks": []
}