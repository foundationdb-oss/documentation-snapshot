{
  "post_stream": {
    "posts": [
      {
        "id": 2797,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2018-12-04T23:57:04.891Z",
        "cooked": "<p>We\u2019ve recently discovered a bug in the tuple layer encoding of the integers <code>2^64-1</code> and <code>-2^64+1</code> and are interested in gathering feedback about some of the options available to address it. The bug is limited to the Python bindings, but there\u2019s nothing about this that\u2019s really specific to the Python bindings and we\u2019d encourage anyone with an opinion to chime in.</p>\n<details>\n<summary>\nThe technical details of the problem aren't super relevant to the discussion, but I've hidden them in this section in case you are interested.</summary>\n<p>First I\u2019ll provide some quick background about how integers are encoded in the Tuple layer. Each type in the Tuple layer has its own type code(s), and for integers there are 19 of them. There are a set of fixed-length type codes that represent integers of different byte lengths and signs (in order, there is a negative eight-byte type code, then a negative seven-byte type code, \u2026, then a type code for 0, then a positive 1-byte type code, \u2026, and finally a positive 8-byte type code).</p>\n<p>In addition to the fixed-length type codes, there is a type code on either end for positive and negative variable length integers up to 255 bytes.</p>\n<p>The problem is that in Python, the variable length encoding is used for the problem integers, whereas every other binding uses the 8-byte fixed length encoding.</p>\n</details>\n<p>The Python binding uses a different encoding for these two integers than the other bindings do, but it\u2019s not completely incompatible. All bindings will be able to decode both encodings of the integers, and both encodings still sort correctly. This means that you\u2019ll be able to unpack any tuple that you read from a binding that uses the alternate encoding. However, if you explicitly encode this integer using the Tuple layer, the result in Python will be different than in other bindings. This means that Python may not be able to interoperate with other bindings in a single database if multiple bindings are used to encode this integer.</p>\n<p>Because of the difficulty of providing a general-purpose migration to correct this problem for the data in an existing database, our thought is that any change would involve allowing the user to choose which encoding behavior they want. Here are some of the ways we could do that:</p>\n<ol>\n<li>\n<p>Add the ability to opt-in to the correct behavior in the Python bindings. The benefit of this is that it\u2019s unlikely to cause any problems for someone already running the Python bindings, but the downside is that it requires new users to take a proactive step to get the desired behavior. Some users likely won\u2019t and may end up with a database that has a binding interoperability problem that they don\u2019t discover until later.</p>\n</li>\n<li>\n<p>Change the behavior in API version 610 to require users to opt-out of the new behavior if they want to maintain the old behavior. This allows us to phase out the incorrect behavior more effectively, but at the risk that an existing user fails to opt-out when they needed to. If this happens, keys that they expect to be in the database may appear to have gone missing.</p>\n</li>\n<li>\n<p>Change the behavior in API version 610 to require users to choose the behavior they want. This approach mostly avoids the problems of the previous two, but the extra step required for all Python Tuple users would definitely be a wart in the API.</p>\n</li>\n</ol>\n<p>It\u2019s also possible we could transition between these states in different releases. For example, we could start with an opt-in and move to an opt-out, or we could require the user to specify for a while and then switch to an opt-out.</p>\n<p>How do people feel about this? Would any of these options make you uncomfortable if we implemented them?</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 13,
        "updated_at": "2018-12-04T23:57:04.891Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 57,
        "reads": 52,
        "readers_count": 51,
        "score": 300.4,
        "yours": false,
        "topic_id": 936,
        "topic_slug": "request-for-feedback-tuple-encoding-bug",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://forums.foundationdb.org/t/using-the-same-keys-and-values-across-different-languages/2523/5",
            "internal": true,
            "reflection": true,
            "title": "Using the same keys and values across different languages",
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/request-for-feedback-tuple-encoding-bug/936/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 2801,
        "name": "David Scherer",
        "username": "dave",
        "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
        "created_at": "2018-12-05T16:55:13.338Z",
        "cooked": "<p>I think my vote is for <span class=\"hashtag\">#2</span> (new API version defaults to fix, and a separate opt out is available).  Make sure the documentation is very clear about the change and that the safest upgrade path if you can\u2019t migrate your data is to opt out. Users are really really really supposed to read release notes before changing API versions because of exactly this sort of thing, and I think it\u2019s better for reckless upgraders to suffer than for the API to be permanently weird.</p>\n<p>Obviously incompatible changes to the tuple layer are best to avoid where possible, but this one seems justified to me.</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 13,
        "updated_at": "2018-12-05T16:55:13.338Z",
        "reply_count": 2,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 47,
        "readers_count": 46,
        "score": 19.4,
        "yours": false,
        "topic_id": 936,
        "topic_slug": "request-for-feedback-tuple-encoding-bug",
        "display_username": "David Scherer",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 22,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/request-for-feedback-tuple-encoding-bug/936/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 2802,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2018-12-05T17:03:34.992Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"dave\" data-post=\"2\" data-topic=\"936\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/dave/48/89_2.png\" class=\"avatar\"> dave:</div>\n<blockquote>\n<p>Make sure the documentation is very clear about the change and that the safest upgrade path if you can\u2019t migrate your data is to opt out.</p>\n</blockquote>\n</aside>\n<p>I\u2019ve been interested in adding a section to the documentation (in the release notes or at least linked from them) that describe specifically how a new API version will affect existing code and what changes may need to be made when upgrading between API versions. It can sometimes be a bit difficult now to piece that out from the release notes which cover lots of other aspects of the release. If we go with <span class=\"hashtag-raw\">#2</span>, then perhaps that provides us a strong enough nudge to actually write this section.</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 13,
        "updated_at": "2018-12-05T17:03:34.992Z",
        "reply_count": 0,
        "reply_to_post_number": 2,
        "quote_count": 1,
        "incoming_link_count": 1,
        "reads": 46,
        "readers_count": 45,
        "score": 29.2,
        "yours": false,
        "topic_id": 936,
        "topic_slug": "request-for-feedback-tuple-encoding-bug",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/request-for-feedback-tuple-encoding-bug/936/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 2803,
        "name": "Amirouche",
        "username": "amirouche",
        "avatar_template": "/user_avatar/forums.foundationdb.org/amirouche/{size}/1911_2.png",
        "created_at": "2018-12-05T19:00:01.712Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"ajbeamon\" data-post=\"1\" data-topic=\"936\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/ajbeamon/48/13_2.png\" class=\"avatar\"> ajbeamon:</div>\n<blockquote>\n<p>Change the behavior in API version 610 to require users to choose the behavior they want. This approach mostly avoids the problems of the previous two, but the extra step required for all Python Tuple users would definitely be a wart in the API.</p>\n</blockquote>\n</aside>\n<p>It\u2019s not the only \u201cwart\u201d, the <code>value == None</code> or the generators that can not work in <code>@transactional</code> are also difficulties.</p>\n<aside class=\"quote no-group\" data-username=\"dave\" data-post=\"2\" data-topic=\"936\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/dave/48/89_2.png\" class=\"avatar\"> dave:</div>\n<blockquote>\n<p>Users are really really really supposed to read release notes before changing API versions because of exactly this sort of thing, and I think it\u2019s better for reckless upgraders to suffer than for the API to be permanently weird.</p>\n</blockquote>\n</aside>\n<p>I agree.</p>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 13,
        "updated_at": "2018-12-05T19:00:27.695Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 2,
        "incoming_link_count": 0,
        "reads": 45,
        "readers_count": 44,
        "score": 9.0,
        "yours": false,
        "topic_id": 936,
        "topic_slug": "request-for-feedback-tuple-encoding-bug",
        "display_username": "Amirouche",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 41,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/request-for-feedback-tuple-encoding-bug/936/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 2807,
        "name": "Christophe Chevalier",
        "username": "KrzysFR",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "created_at": "2018-12-06T18:43:29.568Z",
        "cooked": "<p>I\u2019ve had a similar issue with a change in the way some values were encoded. In our case, we were using a \u201cdraft\u201d version of the spec for storing UUIDs and the header byte changed between 3.x and 5.x, which is a bit similar to the case above: our 5.x tuple library could read both old and new spec, but would only write the new spec (which broke some layers like indexes, counters, document stores with uuid keys, \u2026).</p>\n<p>We \u201cfixed\u201d the issue by exporting everything to a neutral format that is specific to our application (JSON), re-importing everything back after upgrading all the servers to the new version, and re-indexing everything. If the dataset is not very large, this can be done (took a few hours, but it could have been optimized if this was not a one-time only upgrade). If the data set can not realistically be converted to/from some neutral format in a realistic time, this solution may not be applicable.</p>\n<p>I also thought about having a tool that would read all keys of the database, looking for old-style keys, and rewriting them one by one. This can work for some layers (especially if this does not break encoding), but this can be problematic where the tuple encoding is also used in values (that are pointers to other keys). This would need to have some sort of knowledge of the schema used by the application, and also the database would need to be relatively quiet during this time\u2026 Since we already had a backup system that exports/reimports JSON, this was not required in the end.</p>\n<p>But maybe having a simple tool that just scan for bad keys (without mutating anything) could help people determine if they are affected or not? (presence of at least once key with the old format?. And if they find that they are not affected, then they don\u2019t really need to do anything. If they are, then they can start looking for a migration strategy?</p>\n<p>Also, is it known if both these integers are really used frequently in <em>keys</em>? Are we talking about a few entries per database? or a significant fraction? Integers in keys are usually sequence numbers (starting from 1) or indexed natural values (quantities, enumerations, \u2026). Naively, I would expect finding these two integers mostly in <em>values</em>?</p>",
        "post_number": 5,
        "post_type": 1,
        "posts_count": 13,
        "updated_at": "2018-12-06T18:43:29.568Z",
        "reply_count": 2,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 38,
        "readers_count": 37,
        "score": 17.6,
        "yours": false,
        "topic_id": 936,
        "topic_slug": "request-for-feedback-tuple-encoding-bug",
        "display_username": "Christophe Chevalier",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 53,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/request-for-feedback-tuple-encoding-bug/936/5",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 2811,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2018-12-07T17:05:38.438Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"KrzysFR\" data-post=\"5\" data-topic=\"936\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/krzysfr/48/43_2.png\" class=\"avatar\"> KrzysFR:</div>\n<blockquote>\n<p>Also, is it known if both these integers are really used frequently in <em>keys</em> ? Are we talking about a few entries per database? or a significant fraction? Integers in keys are usually sequence numbers (starting from 1) or indexed natural values (quantities, enumerations, \u2026). Naively, I would expect finding these two integers mostly in <em>values</em> ?</p>\n</blockquote>\n</aside>\n<p>It\u2019s hard to say anything definitive, of course, but I agree it seems true that many common use cases wouldn\u2019t be affected by this. On the other hand, there are scenarios one could imagine where you might end up at risk. For example, anything that inserts a number based on something external (e.g. input from a user or the client of a layer provider) could be subject to this.</p>\n<aside class=\"quote no-group\" data-username=\"KrzysFR\" data-post=\"5\" data-topic=\"936\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/krzysfr/48/43_2.png\" class=\"avatar\"> KrzysFR:</div>\n<blockquote>\n<p>But maybe having a simple tool that just scan for bad keys (without mutating anything) could help people determine if they are affected or not?</p>\n</blockquote>\n</aside>\n<p>A simple tool that scans through key space looking for keys that are tuples and validating them would probably be easy to write. It may be hard to deal with keys that include but don\u2019t entirely consist of a packed tuple (e.g. if keys live in a non-tuple subspace), but that may not be a problem for many users.</p>\n<p>The main concern I have is that it\u2019s tricky to run the check safely without turning off your clients while it\u2019s being run. That\u2019s because you\u2019d likely want to wait to do the switch until after you\u2019ve done the check, and a problem key could be inserted unnoticed any time between when you start the check and when you switch to the new encoding. I guess you could potentially try to first instrument your clients or the bindings to detect when such a key is being written and then carefully switch to the new encoding if neither tool finds anything.</p>",
        "post_number": 6,
        "post_type": 1,
        "posts_count": 13,
        "updated_at": "2018-12-07T17:05:38.438Z",
        "reply_count": 1,
        "reply_to_post_number": 5,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 34,
        "readers_count": 33,
        "score": 11.8,
        "yours": false,
        "topic_id": 936,
        "topic_slug": "request-for-feedback-tuple-encoding-bug",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/request-for-feedback-tuple-encoding-bug/936/6",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 2816,
        "name": "Alec Grieser",
        "username": "alloc",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "created_at": "2018-12-09T00:31:15.058Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"ajbeamon\" data-post=\"6\" data-topic=\"936\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/ajbeamon/48/13_2.png\" class=\"avatar\"> ajbeamon:</div>\n<blockquote>\n<p>A simple tool that scans through key space looking for keys that are tuples and validating them would probably be easy to write.</p>\n</blockquote>\n</aside>\n<p>I actually think this problem is somewhat subtler than one might think.</p>\n<p>For one, there may be circumstances where one has a tuple-encoded thing as a binary blob within another key. For example, if one had a data model where the keys were encoded as:</p>\n<p><code>(index_key, binary_encoded_primary_key)</code></p>\n<p>Then this tool would need to know which columns could be packed tuples.</p>\n<p>Another situation might be places where someone has embedded packed tuples in another serialization format (for example, within JSON). So, for example, one could imagine keeping raw FDB keys (which are tuple packed) as fields inside JSON which is then inserted directly as FDB values.</p>\n<p>Hopefully, users know whether they are doing these things or not, so if they have to write the tools themselves, then they can correctly try to unpack the right things, but it probably depends on the data model, etc. So, I think a general purpose tool that doesn\u2019t miss any edge cases might be a little too hard.</p>",
        "post_number": 7,
        "post_type": 1,
        "posts_count": 13,
        "updated_at": "2018-12-09T00:31:15.058Z",
        "reply_count": 1,
        "reply_to_post_number": 6,
        "quote_count": 1,
        "incoming_link_count": 1,
        "reads": 33,
        "readers_count": 32,
        "score": 16.6,
        "yours": false,
        "topic_id": 936,
        "topic_slug": "request-for-feedback-tuple-encoding-bug",
        "display_username": "Alec Grieser",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 8,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/request-for-feedback-tuple-encoding-bug/936/7",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 2817,
        "name": "Alec Grieser",
        "username": "alloc",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "created_at": "2018-12-09T00:39:06.200Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"KrzysFR\" data-post=\"5\" data-topic=\"936\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/krzysfr/48/43_2.png\" class=\"avatar\"> KrzysFR:</div>\n<blockquote>\n<p>Also, is it known if both these integers are really used frequently in <em>keys</em> ?</p>\n</blockquote>\n</aside>\n<p>I think my concern would be, as these are the largest numbers (in magnitude) expressible with 64 bits, that someone might have tried to use them as \u201cinfinity\u201d and \u201cnegative infinity\u201d respectively. Like, if someone were indexing some integer value and filled in values with either infinity or negative infinity depending on whether they were interested in null values showing up at the beginning or the end of the index, someone could conceivably used these numbers.</p>",
        "post_number": 8,
        "post_type": 1,
        "posts_count": 13,
        "updated_at": "2018-12-09T00:39:06.200Z",
        "reply_count": 1,
        "reply_to_post_number": 5,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 33,
        "readers_count": 32,
        "score": 11.6,
        "yours": false,
        "topic_id": 936,
        "topic_slug": "request-for-feedback-tuple-encoding-bug",
        "display_username": "Alec Grieser",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 8,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/request-for-feedback-tuple-encoding-bug/936/8",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 2819,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2018-12-09T01:05:12.476Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"alloc\" data-post=\"8\" data-topic=\"936\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/alloc/48/9_2.png\" class=\"avatar\"> alloc:</div>\n<blockquote>\n<p>I think my concern would be, as these are the largest numbers (in magnitude) expressible with 64 bits, that someone might have tried to use them as \u201cinfinity\u201d and \u201cnegative infinity\u201d respectively.</p>\n</blockquote>\n</aside>\n<p>Yeah I was worried about these numbers being used for this reason, but fortunately this also seems like a case where it would be known that these numbers are being used.</p>\n<aside class=\"quote no-group\" data-username=\"alloc\" data-post=\"7\" data-topic=\"936\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/alloc/48/9_2.png\" class=\"avatar\"> alloc:</div>\n<blockquote>\n<p>I actually think this problem is somewhat subtler than one might think.</p>\n<p>For one, there may be circumstances where one has a tuple-encoded thing as a binary blob within another key. For example, if one had a data model where the keys were encoded as:</p>\n<p><code>(index_key, binary_encoded_primary_key)</code></p>\n</blockquote>\n</aside>\n<p>Yeah, I think this is an interesting example of \u201cyour key isn\u2019t just a packed tuple\u201d that I mentioned. And hopefully, those with keys of these forms would know who they are and would not rely on a tool like this if it existed.</p>\n<p>I think perhaps the more interesting question regarding the proposed tool is whether there exists anybody who knows they would be affected by this bug and would be able to use it if all it did was scan the key space finding keys that consist entirely of packed tuples, reporting those that contain these two integers.</p>",
        "post_number": 9,
        "post_type": 1,
        "posts_count": 13,
        "updated_at": "2018-12-09T01:05:12.476Z",
        "reply_count": 1,
        "reply_to_post_number": 8,
        "quote_count": 2,
        "incoming_link_count": 0,
        "reads": 35,
        "readers_count": 34,
        "score": 12.0,
        "yours": false,
        "topic_id": 936,
        "topic_slug": "request-for-feedback-tuple-encoding-bug",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/request-for-feedback-tuple-encoding-bug/936/9",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6434,
        "name": "Seph Gentle",
        "username": "josephg",
        "avatar_template": "/user_avatar/forums.foundationdb.org/josephg/{size}/84_2.png",
        "created_at": "2020-03-07T02:41:35.797Z",
        "cooked": "<p>A small followup to this bug: I\u2019ve added tuple encoding support in the javascript bindings for <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt\" rel=\"nofollow noopener\">bigints</a>. It has the caveat that because there\u2019s only a single way to encode numbers in the tuple encoding, <code>tuple.encode(1n)</code> === <code>tuple.encode(1)</code>. (So unfortunately <code>tuple.decode(tuple.encode(1n)) === 1</code>). But I figure that ok, and it matches the other bindings. (Its impossible for a bigint to \u201cpop out\u201d after encoding a normal javascript number).</p>\n<p>Based on this thread it sounds like the behavior in the java bindings is considered most correct, so I\u2019ve copied the java implementation\u2019s behavior for these \u2018problem integers\u2019. (And ported the <a href=\"https://github.com/josephg/node-foundationdb/blob/8fdbe90f199467b4e9a6844996305177aaf2587c/test/tuple.ts#L58-L71\" rel=\"nofollow noopener\">java tests</a> to typescript to make sure).</p>\n<p>It\u2019d be nice to make a note about all this in the <a href=\"https://github.com/apple/foundationdb/blob/master/design/tuple.md#negative-arbitrary-precision-integer\" rel=\"nofollow noopener\">tuple spec</a> - since we now have at least 3 compatible implementations for arbitrary precision integers in the bindings.</p>",
        "post_number": 10,
        "post_type": 1,
        "posts_count": 13,
        "updated_at": "2020-03-07T02:42:29.493Z",
        "reply_count": 1,
        "reply_to_post_number": 9,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 20,
        "readers_count": 19,
        "score": 9.0,
        "yours": false,
        "topic_id": 936,
        "topic_slug": "request-for-feedback-tuple-encoding-bug",
        "display_username": "Seph Gentle",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/apple/foundationdb/blob/master/design/tuple.md#negative-arbitrary-precision-integer",
            "internal": false,
            "reflection": false,
            "title": "foundationdb/tuple.md at master \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 2
          },
          {
            "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt",
            "internal": false,
            "reflection": false,
            "title": "BigInt - JavaScript | MDN",
            "clicks": 1
          },
          {
            "url": "https://github.com/josephg/node-foundationdb/blob/8fdbe90f199467b4e9a6844996305177aaf2587c/test/tuple.ts#L58-L71",
            "internal": false,
            "reflection": false,
            "title": "node-foundationdb/tuple.ts at 8fdbe90f199467b4e9a6844996305177aaf2587c \u00b7 josephg/node-foundationdb \u00b7 GitHub",
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 12,
          "username": "ajbeamon",
          "name": "A.J. Beamon",
          "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 120,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/request-for-feedback-tuple-encoding-bug/936/10",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 8971,
        "name": null,
        "username": "falsandtru",
        "avatar_template": "/user_avatar/forums.foundationdb.org/falsandtru/{size}/546_2.png",
        "created_at": "2021-01-24T04:44:42.895Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"josephg\" data-post=\"10\" data-topic=\"936\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/josephg/48/84_2.png\" class=\"avatar\"> josephg:</div>\n<blockquote>\n<p><code>tuple.encode(1n) === tuple.encode(1)</code></p>\n</blockquote>\n</aside>\n<p>I think it\u2019s good as a key. However, we have to be aware that BigInt and number are incompatible.</p>\n<pre data-code-wrap=\"js\"><code class=\"lang-js\">1 + 1n // Error\n1 === 1n // false\n</code></pre>",
        "post_number": 11,
        "post_type": 1,
        "posts_count": 13,
        "updated_at": "2021-01-24T04:44:42.895Z",
        "reply_count": 1,
        "reply_to_post_number": 10,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 17,
        "readers_count": 16,
        "score": 8.4,
        "yours": false,
        "topic_id": 936,
        "topic_slug": "request-for-feedback-tuple-encoding-bug",
        "display_username": null,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 551,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/request-for-feedback-tuple-encoding-bug/936/11",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 8972,
        "name": null,
        "username": "falsandtru",
        "avatar_template": "/user_avatar/forums.foundationdb.org/falsandtru/{size}/546_2.png",
        "created_at": "2021-01-24T04:52:02.181Z",
        "cooked": "<p>Does the bug fix have already finished? If not, I vote for <span class=\"hashtag\">#2</span>.</p>",
        "post_number": 12,
        "post_type": 1,
        "posts_count": 13,
        "updated_at": "2021-01-24T04:52:02.181Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 17,
        "readers_count": 16,
        "score": 8.4,
        "yours": false,
        "topic_id": 936,
        "topic_slug": "request-for-feedback-tuple-encoding-bug",
        "display_username": null,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 551,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/request-for-feedback-tuple-encoding-bug/936/12",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 8974,
        "name": "Seph Gentle",
        "username": "josephg",
        "avatar_template": "/user_avatar/forums.foundationdb.org/josephg/{size}/84_2.png",
        "created_at": "2021-01-24T11:53:42.053Z",
        "cooked": "<p>Yeah I know. It\u2019s not ideal - the choice was either this behaviour (all small-to-medium ints in javascript get encoded as fdb integers) or make it so small integers in javascript get encoded as floats or doubles. I decided on this behavior because:</p>\n<ul>\n<li>If you encode 1 in javascript and then decode it in python, it should come out as 1, not 1.0</li>\n<li>If you encode 1 in python and decode it in javascript, it should come out as 1. Not 1n.</li>\n<li>The tuple encoding for the integer 1 is <em>much</em> smaller than the tuple encoding for the double precision number 1. Most tuples with numbers in them will be small integers, and the small integer encoding is a better choice.</li>\n</ul>\n<p>You can always override this choice by using <code>tuple.encode({type: 'float' | 'double', value: 1})</code> if you want to force your numbers to get encoded as floats / doubles. <a href=\"https://github.com/josephg/fdb-tuple#js-to-tuple-value-mapping\" rel=\"noopener nofollow ugc\">This table</a> has examples on all the different values and how they\u2019re encoded.</p>",
        "post_number": 13,
        "post_type": 1,
        "posts_count": 13,
        "updated_at": "2021-01-24T11:53:42.053Z",
        "reply_count": 0,
        "reply_to_post_number": 11,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 17,
        "readers_count": 16,
        "score": 3.4,
        "yours": false,
        "topic_id": 936,
        "topic_slug": "request-for-feedback-tuple-encoding-bug",
        "display_username": "Seph Gentle",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/josephg/fdb-tuple#js-to-tuple-value-mapping",
            "internal": false,
            "reflection": false,
            "title": "GitHub - josephg/fdb-tuple: Pure javascript FoundationDB tuple encoder and decoder",
            "clicks": 1
          }
        ],
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 551,
          "username": "falsandtru",
          "name": null,
          "avatar_template": "/user_avatar/forums.foundationdb.org/falsandtru/{size}/546_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 120,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/request-for-feedback-tuple-encoding-bug/936/13",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      2797,
      2801,
      2802,
      2803,
      2807,
      2811,
      2816,
      2817,
      2819,
      6434,
      8971,
      8972,
      8974
    ]
  },
  "timeline_lookup": [
    [
      1,
      2513
    ],
    [
      2,
      2512
    ],
    [
      5,
      2511
    ],
    [
      6,
      2510
    ],
    [
      7,
      2509
    ],
    [
      10,
      2055
    ],
    [
      11,
      1732
    ],
    [
      13,
      1731
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "Request for feedback: tuple encoding bug",
  "id": 936,
  "title": "Request for feedback: tuple encoding bug",
  "posts_count": 13,
  "created_at": "2018-12-04T23:57:04.793Z",
  "views": 982,
  "reply_count": 8,
  "like_count": 1,
  "last_posted_at": "2021-01-24T11:53:42.053Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "request-for-feedback-tuple-encoding-bug",
  "category_id": 7,
  "word_count": 2675,
  "deleted_at": null,
  "user_id": 12,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_936",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 13,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 7,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "Using the same keys and values across different languages",
      "id": 2523,
      "title": "Using the same keys and values across different languages",
      "slug": "using-the-same-keys-and-values-across-different-languages",
      "posts_count": 7,
      "reply_count": 5,
      "highest_post_number": 7,
      "image_url": null,
      "created_at": "2021-01-21T20:47:58.796Z",
      "last_posted_at": "2021-01-24T11:40:17.940Z",
      "bumped": true,
      "bumped_at": "2021-01-24T11:40:17.940Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 3,
      "views": 521,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 551,
            "username": "falsandtru",
            "name": null,
            "avatar_template": "/user_avatar/forums.foundationdb.org/falsandtru/{size}/546_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 14,
            "username": "andrew.noyes",
            "name": "",
            "avatar_template": "/user_avatar/forums.foundationdb.org/andrew.noyes/{size}/443_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 120,
            "username": "josephg",
            "name": "Seph Gentle",
            "avatar_template": "/user_avatar/forums.foundationdb.org/josephg/{size}/84_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Impact of encoding on range read performance",
      "id": 1350,
      "title": "Impact of encoding on range read performance",
      "slug": "impact-of-encoding-on-range-read-performance",
      "posts_count": 6,
      "reply_count": 1,
      "highest_post_number": 6,
      "image_url": null,
      "created_at": "2019-05-06T21:58:48.160Z",
      "last_posted_at": "2019-05-10T18:34:37.894Z",
      "bumped": true,
      "bumped_at": "2019-05-10T18:34:37.894Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [
        "performance"
      ],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 1098,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 475,
            "username": "monsiper",
            "name": "mehmet onsiper",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/m/ba9def/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 81,
            "username": "ryanworl",
            "name": "Ryan Worl",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 120,
            "username": "josephg",
            "name": "Seph Gentle",
            "avatar_template": "/user_avatar/forums.foundationdb.org/josephg/{size}/84_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 7,
            "username": "SteavedHams",
            "name": "Steve Atherton",
            "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Rust Client API 0.2.0",
      "id": 386,
      "title": "Rust Client API 0.2.0",
      "slug": "rust-client-api-0-2-0",
      "posts_count": 7,
      "reply_count": 4,
      "highest_post_number": 7,
      "image_url": null,
      "created_at": "2018-05-09T13:57:29.898Z",
      "last_posted_at": "2018-07-11T18:44:03.478Z",
      "bumped": true,
      "bumped_at": "2018-07-11T18:44:03.478Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [
        "bindings"
      ],
      "tags_descriptions": {},
      "like_count": 3,
      "views": 1358,
      "category_id": 5,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 226,
            "username": "bluejekyll",
            "name": "Benjamin Fry",
            "avatar_template": "/user_avatar/forums.foundationdb.org/bluejekyll/{size}/195_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 41,
            "username": "amirouche",
            "name": "Amirouche",
            "avatar_template": "/user_avatar/forums.foundationdb.org/amirouche/{size}/1911_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Using unsigned 64-bit integers with the Go tuple package",
      "id": 468,
      "title": "Using unsigned 64-bit integers with the Go tuple package",
      "slug": "using-unsigned-64-bit-integers-with-the-go-tuple-package",
      "posts_count": 3,
      "reply_count": 1,
      "highest_post_number": 3,
      "image_url": null,
      "created_at": "2018-05-24T06:34:22.216Z",
      "last_posted_at": "2018-05-29T20:35:07.590Z",
      "bumped": true,
      "bumped_at": "2018-05-29T20:35:07.590Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 1378,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 230,
            "username": "umpc",
            "name": "Justin Lowery",
            "avatar_template": "/user_avatar/forums.foundationdb.org/umpc/{size}/203_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Backward compatibility of stored keys",
      "id": 2525,
      "title": "Backward compatibility of stored keys",
      "slug": "backward-compatibility-of-stored-keys",
      "posts_count": 3,
      "reply_count": 1,
      "highest_post_number": 3,
      "image_url": null,
      "created_at": "2021-01-22T23:35:45.903Z",
      "last_posted_at": "2021-01-23T02:14:12.001Z",
      "bumped": true,
      "bumped_at": "2021-01-23T02:14:12.001Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 2,
      "views": 338,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 551,
            "username": "falsandtru",
            "name": null,
            "avatar_template": "/user_avatar/forums.foundationdb.org/falsandtru/{size}/546_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 12,
        "username": "ajbeamon",
        "name": "A.J. Beamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "post_count": 4,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "admin": true,
        "trust_level": 4
      },
      {
        "id": 120,
        "username": "josephg",
        "name": "Seph Gentle",
        "avatar_template": "/user_avatar/forums.foundationdb.org/josephg/{size}/84_2.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      },
      {
        "id": 551,
        "username": "falsandtru",
        "name": null,
        "avatar_template": "/user_avatar/forums.foundationdb.org/falsandtru/{size}/546_2.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 8,
        "username": "alloc",
        "name": "Alec Grieser",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      },
      {
        "id": 41,
        "username": "amirouche",
        "name": "Amirouche",
        "avatar_template": "/user_avatar/forums.foundationdb.org/amirouche/{size}/1911_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      },
      {
        "id": 22,
        "username": "dave",
        "name": "David Scherer",
        "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 53,
        "username": "KrzysFR",
        "name": "Christophe Chevalier",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      }
    ],
    "created_by": {
      "id": 12,
      "username": "ajbeamon",
      "name": "A.J. Beamon",
      "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png"
    },
    "last_poster": {
      "id": 120,
      "username": "josephg",
      "name": "Seph Gentle",
      "avatar_template": "/user_avatar/forums.foundationdb.org/josephg/{size}/84_2.png"
    },
    "links": [
      {
        "url": "https://github.com/apple/foundationdb/blob/master/design/tuple.md#negative-arbitrary-precision-integer",
        "title": "foundationdb/tuple.md at master \u00b7 apple/foundationdb \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 2,
        "user_id": 120,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt",
        "title": "BigInt - JavaScript | MDN",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 1,
        "user_id": 120,
        "domain": "developer.mozilla.org",
        "root_domain": "mozilla.org"
      },
      {
        "url": "https://github.com/josephg/fdb-tuple#js-to-tuple-value-mapping",
        "title": "GitHub - josephg/fdb-tuple: Pure javascript FoundationDB tuple encoder and decoder",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 1,
        "user_id": 120,
        "domain": "github.com",
        "root_domain": "github.com"
      }
    ]
  },
  "bookmarks": []
}