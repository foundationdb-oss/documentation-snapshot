{
  "post_stream": {
    "posts": [
      {
        "id": 1748,
        "name": "gaurav",
        "username": "gaurav",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
        "created_at": "2018-07-30T06:50:38.946Z",
        "cooked": "<p>[EDIT: trying to go over the discussion at <a href=\"https://forums.foundationdb.org/t/implementing-versionstamps-in-bindings/250/9\">Implementing VersionStamps in bindings</a> to see if it provides answers]</p>\n<p>Hi,</p>\n<p>What is the relation between values of VersionStamp and a CommittedVersion? More specifically:</p>\n<p>A <code>VersionStamp</code> is <code>12 bytes</code> long - first <code>10 bytes</code> containing the <code>\"transaction\" version</code> and last <code>2 bytes</code> containing <code>\"user\" version</code>. What do the first 10 bytes actually represent? I am a bit confused here because the <code>getCommittedVersion()</code> API returns a Long which also, seemingly, represents the transaction version number; in that case, what are extra 2 bytes (out of 10 bytes \u201ctransaction\u201d version in VersionStamp) represent?</p>\n<p>\u2013<br>\nthanks,<br>\ngaurav</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 7,
        "updated_at": "2018-07-30T06:52:35.392Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 1015,
        "reads": 115,
        "readers_count": 114,
        "score": 5098.0,
        "yours": false,
        "topic_id": 600,
        "topic_slug": "versionstamp-vs-committedversion",
        "display_username": "gaurav",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://forums.foundationdb.org/t/implementing-versionstamps-in-bindings/250/9",
            "internal": true,
            "reflection": false,
            "title": "Implementing VersionStamps in bindings",
            "clicks": 83
          },
          {
            "url": "https://forums.foundationdb.org/t/use-case-of-versionstamp-and-behavior-of-pack-with-versionstamp/869/2",
            "internal": true,
            "reflection": true,
            "title": "Use case of versionstamp and behavior of pack_with_versionstamp",
            "clicks": 7
          },
          {
            "url": "https://forums.foundationdb.org/t/fdb-zk-rough-cut-of-zookeeper-api-layer/1278",
            "internal": true,
            "reflection": true,
            "title": "Fdb-zk: rough cut of Zookeeper API layer",
            "clicks": 3
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 166,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/versionstamp-vs-committedversion/600/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 1749,
        "name": "gaurav",
        "username": "gaurav",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
        "created_at": "2018-07-30T09:01:20.793Z",
        "cooked": "<p>I read through the linked discussion but still have a few questions:</p>\n<ul>\n<li>Is 8-byte <code>Transaction Version</code> unique across transactions?</li>\n<li>What is the significance of <code>Transaction Batch Order</code> (last 2 bytes out of total 10 bytes that are stored on server); how is it computed? I suspect that it is providing some ordering for multiple writes happening in same transaction; Is that correct?</li>\n<li>Is the <code>Transaction Batch Order</code> related to <code>user version</code> that Java client API exposes? How?</li>\n<li>Seems like the <code>user version</code> only a client-side concept. How is it used to determine the final 10 bytes stored on server.</li>\n</ul>\n<p>My use-case is that I am trying to write an API to generate a unique long if for a given key: <code>long getOrCreateId(String guidKey)</code></p>\n<p>I am trying to using VersionStamp\u2019s first 8 bytes to get the Transaction Version which I am assuming to be a unique id globally.</p>\n<pre><code class=\"lang-auto\">byte[] ver = db.run(tx -&gt; {\n    final byte[] guidBytes = Tuple.from(\"key\").pack();\n    {\n        // string-&gt;id\n        final byte[] v = Tuple.from(Versionstamp.incomplete()).packWithVersionstamp();\n        tx.mutate(MutationType.SET_VERSIONSTAMPED_VALUE, guidBytes, v);\n    }\n    {\n        // id-&gt;string\n        final byte[] k = new Tuple().add(Versionstamp.incomplete()).packWithVersionstamp();\n        tx.mutate(MutationType.SET_VERSIONSTAMPED_KEY, k, guidBytes);\n    }\n    return tx.getVersionstamp();\n});\n\nver.thenApply(versionStamp -&gt; {\n  final ByteBuffer bb = ByteBuffer.allocate(Long.BYTES).put(versionStamp, 0, Long.BYTES).order(ByteOrder.BIG_ENDIAN);\n        bb.flip();\n        return bb.getLong();\n  });\n</code></pre>\n<p>At some later point, if I only have the \u201cTransaction Version\u201d (8 bytes) available, can I create a key using it to lookup the row in \u201cid-&gt;string\u201d index? In other words, I do not have a need for the last \u201c2 bytes\u201d of server stored VersionStamp; can I force it to be 0 (for above write transaction)?</p>\n<p>\u2013<br>\nthanks,<br>\ngaurav</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 7,
        "updated_at": "2018-07-30T09:01:20.793Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 13,
        "reads": 114,
        "readers_count": 113,
        "score": 92.8,
        "yours": false,
        "topic_id": 600,
        "topic_slug": "versionstamp-vs-committedversion",
        "display_username": "gaurav",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://forums.foundationdb.org/t/versionstamp-uniqueness-and-monotonicity/602",
            "internal": true,
            "reflection": true,
            "title": "VersionStamp uniqueness and monotonicity",
            "clicks": 3
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 166,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/versionstamp-vs-committedversion/600/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 1750,
        "name": "Christophe Chevalier",
        "username": "KrzysFR",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "created_at": "2018-07-30T18:59:15.203Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"gaurav\" data-post=\"2\" data-topic=\"600\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/g/b487fb/48.png\" class=\"avatar\"> gaurav:</div>\n<blockquote>\n<p>Seems like the <code>user version</code> only a client-side concept. How is it used to determine the final 10 bytes stored on server.</p>\n</blockquote>\n</aside>\n<p>The user version is a purely client-side convention, and the cluster only knows about the first 10 bytes. The next two bytes are managed by the client (with a local counter per transaction), but you could use your own convention in your application to be able to insert more than one versionstamped keys in the same transactions.</p>\n<p>Most bindings offer a 96-bit VersionStamp as a convenience if you don\u2019t want to reinvent the wheel, but under the hood, the only thing seen by the cluster is the first 80-bit. In practice, the binding will send 10 x <code>0xFF</code> bytes for the actual 80-bits, followed by the 2 byte for the user version (but it could have been any number of bytes).</p>\n<p>I don\u2019t think that the Java binding will allow you to only use 80-bit stamps, but this is an API decision at the binding layer. The .NET binding allows you to use both types, for example.</p>\n<aside class=\"quote no-group\" data-username=\"gaurav\" data-post=\"2\" data-topic=\"600\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/g/b487fb/48.png\" class=\"avatar\"> gaurav:</div>\n<blockquote>\n<p>I am trying to using VersionStamp\u2019s first 8 bytes to get the Transaction Version which I am assuming to be a unique id globally.</p>\n</blockquote>\n</aside>\n<p>I don\u2019t  think this assumption is true, especially under load if the cluster decides to merge transactions. That\u2019s probably what the batch order is for. So you should use the whole 10 bytes as the global id to be 100% correct.</p>\n<p>If you do some local testing, and always see the batch order equal to 0, it is probably because you are not able to generate enough concurrent load to trigger merging of transactions?</p>\n<p>By the way: there is no guarantee that version stamps will always go up: if you are restoring from a backup after completely reinstalling a new cluster, it may be possible that the read version starts again from 0\u2026 The conditions to make this happen may be improbable, but not impossible!</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 7,
        "updated_at": "2018-07-30T19:09:01.408Z",
        "reply_count": 0,
        "reply_to_post_number": 2,
        "quote_count": 1,
        "incoming_link_count": 7,
        "reads": 98,
        "readers_count": 97,
        "score": 54.6,
        "yours": false,
        "topic_id": 600,
        "topic_slug": "versionstamp-vs-committedversion",
        "display_username": "Christophe Chevalier",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 53,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/versionstamp-vs-committedversion/600/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 1760,
        "name": "gaurav",
        "username": "gaurav",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
        "created_at": "2018-07-31T09:20:53.990Z",
        "cooked": "<p>Thank you Christophe.</p>\n<p>I ran a few more experiments after it and I think things are a bit more clear to me now. I will put the summary here for others to review:</p>\n<ul>\n<li>FDB Server (core-backend) understands the version_stamp as a 10 byte value. All of these 10 bytes are determined by the server. Together these 10 bytes are guaranteed to be unique and monotonic (no guarantees on uniqueness on first 8 bytes of these 10).</li>\n<li>Java (and python) client bindings provide a 12 byte VersionStamp class that is made up of 10 byte placeholder for \u201creal\u201d (server-controlled) version_stamp, and 2 more user supplied (arbitrary values) - <code>user version</code>.</li>\n<li>The <code>user version</code> value make it to server (i.e. persisted) and are directly appended AFTER the 10 byte version_stamp. I have not yet done the last part of experiment, but I am almost certain that if I parse the retrieved complete byte[] (key or value) using the Tuple layer, it will reconstruct/separate 10 byte version_stamp and user version from it.</li>\n</ul>\n<p>Few things that I am yet trying to determine:</p>\n<ul>\n<li>What is the significance of <code>getCommittedVersion()</code> API. It seems like first 8 bytes (of 10) being returned by it are purely <code>implementation details</code> and so what is the reason for exposing it out?</li>\n<li>Same question for <code>getReadVersion()</code> API.</li>\n<li>Is version_stamp value (10 bytes) guaranteed to be unique for the lifetime of database? What about scenarios when the data is being restored from backup - is there a chance that the version_stamp can get reused from earlier (as hinted by Christophe)? If this is so, then I am curious what are some good use-cases of version_stamp - if uniqueness cannot be guaranteed in all situations? I thought that good use cases were (a) efficiently generating unique id for things and using this id in other rows (b) as a sequencing prefix for indexes providing <code>log</code> semantics.</li>\n</ul>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 7,
        "updated_at": "2018-07-31T09:20:53.990Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 11,
        "reads": 92,
        "readers_count": 91,
        "score": 93.4,
        "yours": false,
        "topic_id": 600,
        "topic_slug": "versionstamp-vs-committedversion",
        "display_username": "gaurav",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 166,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/versionstamp-vs-committedversion/600/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 1764,
        "name": "Alec Grieser",
        "username": "alloc",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "created_at": "2018-07-31T21:32:31.133Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"gaurav\" data-post=\"4\" data-topic=\"600\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/g/b487fb/48.png\" class=\"avatar\"> gaurav:</div>\n<blockquote>\n<ul>\n<li>What is the significance of <code>getCommittedVersion()</code> API. It seems like first 8 bytes (of 10) being returned by it are purely <code>implementation details</code> and so what is the reason for exposing it out?</li>\n<li>Same question for <code>getReadVersion()</code> API.</li>\n</ul>\n</blockquote>\n</aside>\n<p>For the purposes of versionstamps, I suppose that\u2019s true. But the version means something more, in particular, all operations occur at a version. (Essentially, these are the versions we use for MVCC.) After a commit has completed, precisely any transaction with a read version at least as large as the commit version will see the results of that commit.</p>\n<p>We also offer a <code>setReadVersion()</code> function that takes this 8-byte value. So, in theory, you could call <code>getCommittedVersion()</code> on a transaction and then create a new transaction, call <code>setReadVersion()</code> with the commited version you just got, and the new transaction would be able to see the commit you just did. Because of how the cluster gives out read versions, you would also be assured to get a read version at least as big as that version any way, but maybe you\u2019ve saved a round trip. (You could also feed <code>setReadVersion()</code> the result of previous calls to <code>getReadVersion()</code>\u2013essentially caching your read versions and accepting stale reads instead of a round trip.) We don\u2019t normally recommend this\u2013it\u2019s certainly an advanced technique and should only really be done by someone who knows what they are doing\u2122\u2013but it is there.</p>\n<aside class=\"quote no-group\" data-username=\"gaurav\" data-post=\"4\" data-topic=\"600\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/g/b487fb/48.png\" class=\"avatar\"> gaurav:</div>\n<blockquote>\n<p>Is version_stamp value (10 bytes) guaranteed to be unique for the lifetime of database?</p>\n</blockquote>\n</aside>\n<p>Yes, for the lifetime of a database, no two transactions will get the same 10 byte versionstamp. If you are careful about how you give out <code>user_version</code>, you can maintain the invariant that no two keys have the same 12 byte versionstamp associated with it.</p>\n<aside class=\"quote no-group\" data-username=\"gaurav\" data-post=\"4\" data-topic=\"600\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/g/b487fb/48.png\" class=\"avatar\"> gaurav:</div>\n<blockquote>\n<p>What about scenarios when the data is being restored from backup - is there a chance that the version_stamp can get reused from earlier (as hinted by Christophe)?</p>\n</blockquote>\n</aside>\n<p>Yes. The versionstamp essentially goes up from 0 and increases by a (roughly) constant rate. If you restored data into a fresh database, then there is no guarantee that the database\u2019s version is greater than the original one. If you restore into the same database (like, let\u2019s say you back up a database, clear it out, and then restore), then the monotonicity and uniqueness of versionstamps will be maintained.</p>\n<aside class=\"quote no-group\" data-username=\"gaurav\" data-post=\"4\" data-topic=\"600\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/g/b487fb/48.png\" class=\"avatar\"> gaurav:</div>\n<blockquote>\n<p>If this is so, then I am curious what are some good use-cases of version_stamp - if uniqueness cannot be guaranteed in all situations? I thought that good use cases were (a) efficiently generating unique id for things and using this id in other rows (b) as a sequencing prefix for indexes providing <code>log</code> semantics.</p>\n</blockquote>\n</aside>\n<p>Those are still all good examples of cases where you might want to use versionstamps. Within a database, the uniqueness and monotonicity of versionstamps is always maintained. The only problem is if you take data from one cluster and put it into another one (perhaps through a restore, perhaps because you moved data around). Adding a prefix indicating the \u201cgeneration\u201d of the data (the number of times it has been moved around) is one way to get around the fact that you can\u2019t depend on the newly restored to cluster being correctly ordered. If we had a way of advancing a cluster\u2019s version arbitrarily, that might be another way.</p>",
        "post_number": 5,
        "post_type": 1,
        "posts_count": 7,
        "updated_at": "2018-07-31T21:32:31.133Z",
        "reply_count": 1,
        "reply_to_post_number": 4,
        "quote_count": 1,
        "incoming_link_count": 16,
        "reads": 89,
        "readers_count": 88,
        "score": 117.8,
        "yours": false,
        "topic_id": 600,
        "topic_slug": "versionstamp-vs-committedversion",
        "display_username": "Alec Grieser",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 8,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/versionstamp-vs-committedversion/600/5",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 1770,
        "name": "gaurav",
        "username": "gaurav",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
        "created_at": "2018-08-01T09:23:07.149Z",
        "cooked": "<p>Thank you for the detailed clarifications; I really appreciate you taking out time to answer these <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=5\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\"></p>",
        "post_number": 6,
        "post_type": 1,
        "posts_count": 7,
        "updated_at": "2018-08-01T09:23:07.149Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 2,
        "reads": 78,
        "readers_count": 77,
        "score": 25.6,
        "yours": false,
        "topic_id": 600,
        "topic_slug": "versionstamp-vs-committedversion",
        "display_username": "gaurav",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 166,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/versionstamp-vs-committedversion/600/6",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 2120,
        "name": "Amirouche",
        "username": "amirouche",
        "avatar_template": "/user_avatar/forums.foundationdb.org/amirouche/{size}/1911_2.png",
        "created_at": "2018-09-17T19:43:14.827Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"alloc\" data-post=\"5\" data-topic=\"600\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/alloc/48/9_2.png\" class=\"avatar\"> alloc:</div>\n<blockquote>\n<p>Adding a prefix indicating the \u201cgeneration\u201d of the data (the number of times it has been moved around) is one way to get around the fact that you can\u2019t depend on the newly restored to cluster being correctly ordered.</p>\n</blockquote>\n</aside>\n<p>Very interesting. It helps in the design of my layer where I want to be able to pull somekind of timeseries, for instance from production cluster to preproduction cluster.</p>",
        "post_number": 7,
        "post_type": 1,
        "posts_count": 7,
        "updated_at": "2018-09-17T19:43:14.827Z",
        "reply_count": 0,
        "reply_to_post_number": 5,
        "quote_count": 1,
        "incoming_link_count": 3,
        "reads": 74,
        "readers_count": 73,
        "score": 44.8,
        "yours": false,
        "topic_id": 600,
        "topic_slug": "versionstamp-vs-committedversion",
        "display_username": "Amirouche",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 41,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/versionstamp-vs-committedversion/600/7",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      1748,
      1749,
      1750,
      1760,
      1764,
      1770,
      2120
    ]
  },
  "timeline_lookup": [
    [
      1,
      2641
    ],
    [
      3,
      2640
    ],
    [
      5,
      2639
    ],
    [
      7,
      2591
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "VersionStamp vs CommittedVersion",
  "id": 600,
  "title": "VersionStamp vs CommittedVersion",
  "posts_count": 7,
  "created_at": "2018-07-30T06:50:38.826Z",
  "views": 3916,
  "reply_count": 3,
  "like_count": 3,
  "last_posted_at": "2018-09-17T19:43:14.827Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "versionstamp-vs-committedversion",
  "category_id": 7,
  "word_count": 1744,
  "deleted_at": null,
  "user_id": 166,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_600",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 7,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 4,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "Use case of versionstamp and behavior of pack_with_versionstamp",
      "id": 869,
      "title": "Use case of versionstamp and behavior of pack_with_versionstamp",
      "slug": "use-case-of-versionstamp-and-behavior-of-pack-with-versionstamp",
      "posts_count": 7,
      "reply_count": 4,
      "highest_post_number": 8,
      "image_url": null,
      "created_at": "2018-11-14T21:14:41.993Z",
      "last_posted_at": "2018-11-26T18:06:38.323Z",
      "bumped": true,
      "bumped_at": "2018-11-26T18:06:38.323Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [
        "bindings"
      ],
      "tags_descriptions": {},
      "like_count": 5,
      "views": 2402,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 41,
            "username": "amirouche",
            "name": "Amirouche",
            "avatar_template": "/user_avatar/forums.foundationdb.org/amirouche/{size}/1911_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Implementing VersionStamps in bindings",
      "id": 250,
      "title": "Implementing VersionStamps in bindings",
      "slug": "implementing-versionstamps-in-bindings",
      "posts_count": 25,
      "reply_count": 18,
      "highest_post_number": 25,
      "image_url": null,
      "created_at": "2018-04-24T19:05:11.830Z",
      "last_posted_at": "2018-05-09T18:14:10.990Z",
      "bumped": true,
      "bumped_at": "2018-05-09T18:14:10.990Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 3,
      "views": 5417,
      "category_id": 8,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 156,
            "username": "spullara",
            "name": "Sam Pullara",
            "avatar_template": "/user_avatar/forums.foundationdb.org/spullara/{size}/125_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 120,
            "username": "josephg",
            "name": "Seph Gentle",
            "avatar_template": "/user_avatar/forums.foundationdb.org/josephg/{size}/84_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "VersionStamp uniqueness and monotonicity",
      "id": 602,
      "title": "VersionStamp uniqueness and monotonicity",
      "slug": "versionstamp-uniqueness-and-monotonicity",
      "posts_count": 12,
      "reply_count": 8,
      "highest_post_number": 12,
      "image_url": null,
      "created_at": "2018-07-31T10:44:01.009Z",
      "last_posted_at": "2019-03-04T22:40:06.565Z",
      "bumped": true,
      "bumped_at": "2019-03-04T22:40:06.565Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 7,
      "views": 2776,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 81,
            "username": "ryanworl",
            "name": "Ryan Worl",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "What is the most efficient way to generate version stamps in FDB",
      "id": 2062,
      "title": "What is the most efficient way to generate version stamps in FDB",
      "slug": "what-is-the-most-efficient-way-to-generate-version-stamps-in-fdb",
      "posts_count": 19,
      "reply_count": 13,
      "highest_post_number": 19,
      "image_url": null,
      "created_at": "2020-04-13T23:10:51.841Z",
      "last_posted_at": "2020-07-26T16:46:50.841Z",
      "bumped": true,
      "bumped_at": "2020-07-26T16:46:50.841Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 5,
      "views": 2324,
      "category_id": 9,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 15,
            "username": "markus.pilman",
            "name": "Markus Pilman",
            "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 454,
            "username": "jzhou",
            "name": "Jingyu Zhou",
            "avatar_template": "/user_avatar/forums.foundationdb.org/jzhou/{size}/445_2.png",
            "admin": true,
            "moderator": true,
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Use Same Versionstamp in Multiple Subspaces",
      "id": 701,
      "title": "Use Same Versionstamp in Multiple Subspaces",
      "slug": "use-same-versionstamp-in-multiple-subspaces",
      "posts_count": 3,
      "reply_count": 0,
      "highest_post_number": 3,
      "image_url": null,
      "created_at": "2018-09-13T00:06:32.578Z",
      "last_posted_at": "2018-09-13T18:14:05.248Z",
      "bumped": true,
      "bumped_at": "2018-09-13T18:14:05.248Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 781,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 372,
            "username": "seancarroll",
            "name": "Sean Carroll",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/4af34b/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 166,
        "username": "gaurav",
        "name": "gaurav",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
        "post_count": 4,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 3
      },
      {
        "id": 8,
        "username": "alloc",
        "name": "Alec Grieser",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      },
      {
        "id": 41,
        "username": "amirouche",
        "name": "Amirouche",
        "avatar_template": "/user_avatar/forums.foundationdb.org/amirouche/{size}/1911_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      },
      {
        "id": 53,
        "username": "KrzysFR",
        "name": "Christophe Chevalier",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      }
    ],
    "created_by": {
      "id": 166,
      "username": "gaurav",
      "name": "gaurav",
      "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png"
    },
    "last_poster": {
      "id": 41,
      "username": "amirouche",
      "name": "Amirouche",
      "avatar_template": "/user_avatar/forums.foundationdb.org/amirouche/{size}/1911_2.png"
    },
    "links": [
      {
        "url": "https://forums.foundationdb.org/t/implementing-versionstamps-in-bindings/250/9",
        "title": "Implementing VersionStamps in bindings",
        "internal": true,
        "attachment": false,
        "reflection": false,
        "clicks": 83,
        "user_id": 166,
        "domain": "forums.foundationdb.org",
        "root_domain": "foundationdb.org"
      },
      {
        "url": "https://forums.foundationdb.org/t/use-case-of-versionstamp-and-behavior-of-pack-with-versionstamp/869/2",
        "title": "Use case of versionstamp and behavior of pack_with_versionstamp",
        "internal": true,
        "attachment": false,
        "reflection": true,
        "clicks": 7,
        "user_id": 166,
        "domain": "forums.foundationdb.org",
        "root_domain": "foundationdb.org"
      },
      {
        "url": "https://forums.foundationdb.org/t/fdb-zk-rough-cut-of-zookeeper-api-layer/1278",
        "title": "Fdb-zk: rough cut of Zookeeper API layer",
        "internal": true,
        "attachment": false,
        "reflection": true,
        "clicks": 3,
        "user_id": 113,
        "domain": "forums.foundationdb.org",
        "root_domain": "foundationdb.org"
      },
      {
        "url": "https://forums.foundationdb.org/t/versionstamp-uniqueness-and-monotonicity/602",
        "title": "VersionStamp uniqueness and monotonicity",
        "internal": true,
        "attachment": false,
        "reflection": true,
        "clicks": 3,
        "user_id": 166,
        "domain": "forums.foundationdb.org",
        "root_domain": "foundationdb.org"
      }
    ]
  },
  "bookmarks": []
}