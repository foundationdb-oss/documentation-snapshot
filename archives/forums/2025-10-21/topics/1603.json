{
  "post_stream": {
    "posts": [
      {
        "id": 4996,
        "name": "Jun Li",
        "username": "jltz",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/j/c0e974/{size}.png",
        "created_at": "2019-08-30T22:59:33.893Z",
        "cooked": "<p>I am running a long-duration testing for my Java application that uses the FDB Java Binding Library to access the FDB backend. My version of  the FDB backend is 6.0.15 and the Java Library is with 6.0 correspondingly.  I just found that over the 9-hour window, the VM container running my Java application process (only 1 process in one VM container) has the memory residential memory (RSS)  increased over 8 GB and thus reaches the container\u2019s memory limit and then gets killed by the VM container manager. Though I am still investigating where the memory leaking comes from, I found that there is a FDB release note, <a href=\"https://apple.github.io/foundationdb/old-release-notes/release-notes-200.html\" rel=\"nofollow noopener\">https://apple.github.io/foundationdb/old-release-notes/release-notes-200.html</a>, and there is  a section on \u201cJava\u201d in it, which states \u201cFix: calling getRange on a Transaction could leak memory\u201d.  In fact, all of my application\u2019s access to the FDB backend is via  \u201cgetRange\u201d queries.   So I would like to see whether this is really the problem that  I run into.</p>\n<p>(1) Is this the bug that has been there in FDB 6.0.15 already?<br>\n(1) could you describe under what circumstance the memory leak can happen for getRange?<br>\n(2) could you point me to the PR that is related to this particular fix, in FDB 6.1*, and  in Both Java and in the Client Library (likely), so that I can check whether my code does run into this memory leak problem?</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 5,
        "updated_at": "2019-08-30T22:59:33.893Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 41,
        "reads": 26,
        "readers_count": 25,
        "score": 205.2,
        "yours": false,
        "topic_id": 1603,
        "topic_slug": "on-potential-memory-leaking-due-to-fdb-java-library-getrange-on-a-transaction",
        "display_username": "Jun Li",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://apple.github.io/foundationdb/old-release-notes/release-notes-200.html",
            "internal": false,
            "reflection": false,
            "title": "Release Notes (2.0) \u2014 FoundationDB 6.1",
            "clicks": 2
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 531,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/on-potential-memory-leaking-due-to-fdb-java-library-getrange-on-a-transaction/1603/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 4997,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2019-08-30T23:22:14.498Z",
        "cooked": "<p>That fix is from a very old release, so I don\u2019t think it would apply to you here. There are two things that immediately come to mind to look for. The first is that there was a fix in 6.0.18 related to a memory leak when a client closes threads (see the <a href=\"https://github.com/apple/foundationdb/blob/master/documentation/sphinx/source/old-release-notes/release-notes-600.rst\" rel=\"nofollow noopener\">release notes</a> and <a href=\"https://github.com/apple/foundationdb/pull/1011\" rel=\"nofollow noopener\">PR</a>). You could try updating your client to 6.0.18 and see if that helps.</p>\n<p>The other thing is that the Java bindings require that you explicitly close various objects (most notably, <code>Transaction</code>) in order to free resources. Is it possible that you aren\u2019t closing something? I believe by default, if you fail to close something that should have been closed it will log a warning to stderr.</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 5,
        "updated_at": "2019-08-30T23:22:14.498Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 3,
        "reads": 25,
        "readers_count": 24,
        "score": 25.0,
        "yours": false,
        "topic_id": 1603,
        "topic_slug": "on-potential-memory-leaking-due-to-fdb-java-library-getrange-on-a-transaction",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/apple/foundationdb/pull/1011",
            "internal": false,
            "reflection": false,
            "title": "Fix: fast allocator would not cleanup memory for a thread if... by ajbeamon \u00b7 Pull Request #1011 \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 1
          },
          {
            "url": "https://github.com/apple/foundationdb/blob/master/documentation/sphinx/source/old-release-notes/release-notes-600.rst",
            "internal": false,
            "reflection": false,
            "title": "foundationdb/release-notes-600.rst at master \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/on-potential-memory-leaking-due-to-fdb-java-library-getrange-on-a-transaction/1603/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 4998,
        "name": "Jun Li",
        "username": "jltz",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/j/c0e974/{size}.png",
        "created_at": "2019-08-31T00:59:43.570Z",
        "cooked": "<p>I just checked the PR and it seems that the changes are all in the C++ side, nothing changed at the Java client. And for the FDB Java Library,  I checked the  Java version 6.0.15 and 6.0.18 from FDB Git Repo., foundationdb/bindings/java. I diff-ed the two snapshot versions  and I found no difference at all.</p>\n<p>Regarding Java object closing, I will double check whether transaction.close() gets invoked always.</p>\n<p>(1) we are using AsyncIterator to retrieve the getRange results. If some code path does not invoke cancel () of AsyncIterator at the end, will that introduce memory leaking?</p>\n<p>(2)also,  is there some instrumentation that we can turn on, so that we can see the report on the memory use, for the C/C++ Client Library that gets invoked by the FDB Java  Client Library?</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 5,
        "updated_at": "2019-08-31T00:59:43.570Z",
        "reply_count": 1,
        "reply_to_post_number": 2,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 24,
        "readers_count": 23,
        "score": 9.8,
        "yours": false,
        "topic_id": 1603,
        "topic_slug": "on-potential-memory-leaking-due-to-fdb-java-library-getrange-on-a-transaction",
        "display_username": "Jun Li",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 12,
          "username": "ajbeamon",
          "name": "A.J. Beamon",
          "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 531,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/on-potential-memory-leaking-due-to-fdb-java-library-getrange-on-a-transaction/1603/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 4999,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2019-08-31T01:29:15.197Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"jltz\" data-post=\"3\" data-topic=\"1603\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/j/c0e974/48.png\" class=\"avatar\"> jltz:</div>\n<blockquote>\n<p>I just checked the PR and it seems that the changes are all in the C++ side, nothing changed at the Java client.</p>\n</blockquote>\n</aside>\n<p>Since the Java library loads the native client when it runs, a memory leak there would affect a user of the Java bindings. I would recommend trying to use the 6.0.18 version of the C client (libfdb_c) just to be sure.</p>\n<aside class=\"quote no-group\" data-username=\"jltz\" data-post=\"3\" data-topic=\"1603\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/j/c0e974/48.png\" class=\"avatar\"> jltz:</div>\n<blockquote>\n<p>(1) we are using AsyncIterator to retrieve the getRange results. If some code path does not invoke cancel () of AsyncIterator at the end, will that introduce memory leaking?</p>\n</blockquote>\n</aside>\n<p><code>AsyncIterator</code> isn\u2019t a closable type (one that descends from <code>AutoCloseable</code>), so you don\u2019t have to do anything special. Some API functions return a <code>CloseableAsyncIterator</code>, and if you use one of them then you would need to close the iterator at the end.</p>\n<aside class=\"quote no-group\" data-username=\"jltz\" data-post=\"3\" data-topic=\"1603\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/j/c0e974/48.png\" class=\"avatar\"> jltz:</div>\n<blockquote>\n<p>(2)also, is there some instrumentation that we can turn on, so that we can see the report on the memory use, for the C/C++ Client Library that gets invoked by the FDB Java Client Library?</p>\n</blockquote>\n</aside>\n<p>There\u2019s not a lot here, but if you turn on trace logging, then one of the events emitted in the logs is called <code>MemoryMetrics</code>. It has some data on the memory usage of the native client, and if we see the numbers in here growing it would point to the memory leak being native. If you think the numbers look interesting or suspicious, feel free to share some of your events for us to look at.</p>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 5,
        "updated_at": "2019-08-31T01:29:15.197Z",
        "reply_count": 1,
        "reply_to_post_number": 3,
        "quote_count": 1,
        "incoming_link_count": 3,
        "reads": 27,
        "readers_count": 26,
        "score": 25.4,
        "yours": false,
        "topic_id": 1603,
        "topic_slug": "on-potential-memory-leaking-due-to-fdb-java-library-getrange-on-a-transaction",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/on-potential-memory-leaking-due-to-fdb-java-library-getrange-on-a-transaction/1603/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 5000,
        "name": "Ashish Motivala",
        "username": "ashishnm",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/a/b5e925/{size}.png",
        "created_at": "2019-08-31T18:40:10.044Z",
        "cooked": "<p>Also would be useful to get a Java heapdump and run it through a heap analyzer like <a href=\"https://www.eclipse.org/mat/\" rel=\"nofollow noopener\">Eclipse\u2019s Mat</a>. You can gauge whether the memory is from the Java or the native client.</p>",
        "post_number": 5,
        "post_type": 1,
        "posts_count": 5,
        "updated_at": "2019-08-31T18:40:10.044Z",
        "reply_count": 0,
        "reply_to_post_number": 4,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 26,
        "readers_count": 25,
        "score": 5.2,
        "yours": false,
        "topic_id": 1603,
        "topic_slug": "on-potential-memory-leaking-due-to-fdb-java-library-getrange-on-a-transaction",
        "display_username": "Ashish Motivala",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://www.eclipse.org/mat/",
            "internal": false,
            "reflection": false,
            "title": "Eclipse Memory Analyzer Open Source Project | The Eclipse Foundation",
            "clicks": 1
          }
        ],
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 12,
          "username": "ajbeamon",
          "name": "A.J. Beamon",
          "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 16,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/on-potential-memory-leaking-due-to-fdb-java-library-getrange-on-a-transaction/1603/5",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      4996,
      4997,
      4998,
      4999,
      5000
    ]
  },
  "timeline_lookup": [
    [
      1,
      2244
    ],
    [
      5,
      2243
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "On Potential Memory Leaking due to FDB Java Library getRange on a Transaction",
  "id": 1603,
  "title": "On Potential Memory Leaking due to FDB Java Library getRange on a Transaction",
  "posts_count": 5,
  "created_at": "2019-08-30T22:59:33.728Z",
  "views": 653,
  "reply_count": 3,
  "like_count": 0,
  "last_posted_at": "2019-08-31T18:40:10.044Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "on-potential-memory-leaking-due-to-fdb-java-library-getrange-on-a-transaction",
  "category_id": 7,
  "word_count": 855,
  "deleted_at": null,
  "user_id": 531,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_1603",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 5,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 3,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "Memory leak in Java client bindings when server request tracing is enabled?",
      "id": 3611,
      "title": "Memory leak in Java client bindings when server request tracing is enabled?",
      "slug": "memory-leak-in-java-client-bindings-when-server-request-tracing-is-enabled",
      "posts_count": 1,
      "reply_count": 0,
      "highest_post_number": 1,
      "image_url": null,
      "created_at": "2022-10-20T13:32:54.137Z",
      "last_posted_at": "2022-10-20T13:32:54.207Z",
      "bumped": true,
      "bumped_at": "2022-10-20T13:34:13.637Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [
        "bindings",
        "performance"
      ],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 401,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest single",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 1142,
            "username": "danm",
            "name": "Dan Meyers",
            "avatar_template": "/user_avatar/forums.foundationdb.org/danm/{size}/1393_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Memory leak in C API?",
      "id": 554,
      "title": "Memory leak in C API?",
      "slug": "memory-leak-in-c-api",
      "posts_count": 5,
      "reply_count": 1,
      "highest_post_number": 5,
      "image_url": null,
      "created_at": "2018-07-09T10:54:23.376Z",
      "last_posted_at": "2018-07-10T12:55:14.679Z",
      "bumped": true,
      "bumped_at": "2018-07-10T12:55:14.679Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 2,
      "views": 1120,
      "category_id": 5,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 319,
            "username": "kirilltitov",
            "name": "Kirill Titov",
            "avatar_template": "/user_avatar/forums.foundationdb.org/kirilltitov/{size}/328_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 7,
            "username": "SteavedHams",
            "name": "Steve Atherton",
            "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Fdb C client library memory allocations",
      "id": 1199,
      "title": "Fdb C client library memory allocations",
      "slug": "fdb-c-client-library-memory-allocations",
      "posts_count": 10,
      "reply_count": 5,
      "highest_post_number": 10,
      "image_url": null,
      "created_at": "2019-03-06T03:07:33.409Z",
      "last_posted_at": "2019-03-14T00:14:17.371Z",
      "bumped": true,
      "bumped_at": "2019-03-14T00:14:17.371Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 1392,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 38,
            "username": "panghy",
            "name": "Clement Pang",
            "avatar_template": "/user_avatar/forums.foundationdb.org/panghy/{size}/19_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 337,
            "username": "mengxu",
            "name": "Meng Xu",
            "avatar_template": "/user_avatar/forums.foundationdb.org/mengxu/{size}/893_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Memory leak in client profiling code",
      "id": 2108,
      "title": "Memory leak in client profiling code",
      "slug": "memory-leak-in-client-profiling-code",
      "posts_count": 5,
      "reply_count": 3,
      "highest_post_number": 5,
      "image_url": null,
      "created_at": "2020-05-07T20:05:59.143Z",
      "last_posted_at": "2020-05-08T23:21:40.526Z",
      "bumped": true,
      "bumped_at": "2020-05-08T23:21:40.526Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 726,
      "category_id": 8,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 173,
            "username": "jkominek",
            "name": "Jay Kominek",
            "avatar_template": "/user_avatar/forums.foundationdb.org/jkominek/{size}/140_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 14,
            "username": "andrew.noyes",
            "name": "",
            "avatar_template": "/user_avatar/forums.foundationdb.org/andrew.noyes/{size}/443_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Memory leak in C client-lib - when a timeout() is set on transaction options?",
      "id": 1710,
      "title": "Memory leak in C client-lib - when a timeout() is set on transaction options?",
      "slug": "memory-leak-in-c-client-lib-when-a-timeout-is-set-on-transaction-options",
      "posts_count": 7,
      "reply_count": 3,
      "highest_post_number": 7,
      "image_url": "https://global.discourse-cdn.com/foundationdb/original/1X/b55b0e80a4a533be00e26d30756cb9b860ad76b1.png",
      "created_at": "2019-11-01T07:02:02.599Z",
      "last_posted_at": "2019-11-09T04:04:11.942Z",
      "bumped": true,
      "bumped_at": "2019-11-09T10:56:45.389Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 865,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 12,
        "username": "ajbeamon",
        "name": "A.J. Beamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "admin": true,
        "trust_level": 4
      },
      {
        "id": 531,
        "username": "jltz",
        "name": "Jun Li",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/j/c0e974/{size}.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 16,
        "username": "ashishnm",
        "name": "Ashish Motivala",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/a/b5e925/{size}.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      }
    ],
    "created_by": {
      "id": 531,
      "username": "jltz",
      "name": "Jun Li",
      "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/j/c0e974/{size}.png"
    },
    "last_poster": {
      "id": 16,
      "username": "ashishnm",
      "name": "Ashish Motivala",
      "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/a/b5e925/{size}.png"
    },
    "links": [
      {
        "url": "https://apple.github.io/foundationdb/old-release-notes/release-notes-200.html",
        "title": "Release Notes (2.0) \u2014 FoundationDB 6.1",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 2,
        "user_id": 531,
        "domain": "apple.github.io",
        "root_domain": "apple.github.io"
      },
      {
        "url": "https://github.com/apple/foundationdb/pull/1011",
        "title": "Fix: fast allocator would not cleanup memory for a thread if... by ajbeamon \u00b7 Pull Request #1011 \u00b7 apple/foundationdb \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 1,
        "user_id": 12,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://www.eclipse.org/mat/",
        "title": "Eclipse Memory Analyzer Open Source Project | The Eclipse Foundation",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 1,
        "user_id": 16,
        "domain": "www.eclipse.org",
        "root_domain": "eclipse.org"
      }
    ]
  },
  "bookmarks": []
}