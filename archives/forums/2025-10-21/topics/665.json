{
  "post_stream": {
    "posts": [
      {
        "id": 1979,
        "name": "",
        "username": "George",
        "avatar_template": "/user_avatar/forums.foundationdb.org/george/{size}/620_2.png",
        "created_at": "2018-08-26T18:47:07.357Z",
        "cooked": "<p>Sorry if this should be obvious, but I was wondering if there was a preferred mechanism for limiting a key range to some cardinality (i.e. \u201cmessages/* should have no more than 10,000 keys\u201d).</p>\n<p>The documentation points out that offsets are O(n) complexity, so it seems expensive to do a clear(start + 10,000, end) with every transaction affecting that key range.</p>\n<p>Does this becomes easier if the constraint is relaxed? (i.e. \u201cmessages/* should not have <em>significantly</em> more than 10,000 keys\u201d).</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 2,
        "updated_at": "2018-08-26T18:47:07.357Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 46,
        "reads": 33,
        "readers_count": 32,
        "score": 241.6,
        "yours": false,
        "topic_id": 665,
        "topic_slug": "limiting-the-cardinality-of-a-key-range",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 251,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/limiting-the-cardinality-of-a-key-range/665/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 1991,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2018-08-27T17:05:16.467Z",
        "cooked": "<p>If you want to support limiting the size of a range while supporting concurrency, you\u2019ll probably need to rely on atomic operations to keep track of its size. There is some discussion about that here:</p>\n<aside class=\"quote\" data-post=\"1\" data-topic=\"189\">\n  <div class=\"title\">\n    <div class=\"quote-controls\"></div>\n    <img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/m/4bbf92/48.png\" class=\"avatar\">\n    <a href=\"https://forums.foundationdb.org/t/getting-the-number-of-key-value-pairs/189\">Getting the number of key/value pairs</a> <a class=\"badge-category__wrapper \" href=\"/c/using-foundationdb/7\"><span data-category-id=\"7\" data-drop-close=\"true\" class=\"badge-category \" title=\"Topics related to use of FoundationDB.\"><span class=\"badge-category__name\">Using FoundationDB</span></span></a>\n  </div>\n  <blockquote>\n    Sorry if this is something obvious but i have been looking for a way to quickly get the total number of keys / values in the database.  I know status shows total size and utilization of the database but is there a simple way to get the total number of key value pairs?\n  </blockquote>\n</aside>\n\n<aside class=\"quote no-group\" data-username=\"George\" data-post=\"1\" data-topic=\"665\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/george/48/620_2.png\" class=\"avatar\"> George:</div>\n<blockquote>\n<p>Does this becomes easier if the constraint is relaxed? (i.e. \u201cmessages/* should not have <em>significantly</em> more than 10,000 keys\u201d).</p>\n</blockquote>\n</aside>\n<p>Depending on the nature of your writes, if you are willing to enforce this at write time (rather than by clearing keys after having exceeded the limit), you could disallow writes to messages when the counter exceeds 10,000. If you have lots of concurrent writers and/or if they are each writing lots of keys to \u201cmessages\u201d, then the counter could exceed this limit by a sizable margin.</p>\n<p>If you instead want to be able to estimate where the 10,000th key is and then clear all keys after that, then you could try something like what Dave described in the link above called the ranked set. Alec provides a more detailed description here:</p>\n<aside class=\"quote quote-modified\" data-post=\"9\" data-topic=\"373\">\n  <div class=\"title\">\n    <div class=\"quote-controls\"></div>\n    <img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/alloc/48/9_2.png\" class=\"avatar\">\n    <a href=\"https://forums.foundationdb.org/t/how-to-model-a-leaderboard/373/9\">How to model a Leaderboard</a> <a class=\"badge-category__wrapper \" href=\"/c/using-foundationdb/7\"><span data-category-id=\"7\" data-drop-close=\"true\" class=\"badge-category \" title=\"Topics related to use of FoundationDB.\"><span class=\"badge-category__name\">Using FoundationDB</span></span></a>\n  </div>\n  <blockquote>\n    There\u2019s another solution that I don\u2019t think I\u2019ve seen here that doesn\u2019t require a background job or reading through the entire data set, but it does involve doing multiple reads from the database\u2019s data structures. But then as soon as your data are inserted, you can start querying your index, which might be a desirable property. \nThe basic idea is to persist a skip list in FDB. Each level of the skip list is kept as a contiguous range, and the keys in each level are the indexed values (probably \u2026\n  </blockquote>\n</aside>\n\n<p>And there\u2019s an implementation of the idea here in C#, though I haven\u2019t looked at it to see how closely it matches the previous descriptions:</p>\n<aside class=\"onebox githubblob\" data-onebox-src=\"https://github.com/Doxense/foundationdb-dotnet-client/blob/fe9f183bb5b70cd186e99fab6be9ed0be795ad34/FoundationDB.Layers.Common/Collections/FdbRankedSet.cs#L42\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/Doxense/foundationdb-dotnet-client/blob/fe9f183bb5b70cd186e99fab6be9ed0be795ad34/FoundationDB.Layers.Common/Collections/FdbRankedSet.cs#L42\" target=\"_blank\" rel=\"noopener\">github.com</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <h4><a href=\"https://github.com/Doxense/foundationdb-dotnet-client/blob/fe9f183bb5b70cd186e99fab6be9ed0be795ad34/FoundationDB.Layers.Common/Collections/FdbRankedSet.cs#L42\" target=\"_blank\" rel=\"noopener\">Doxense/foundationdb-dotnet-client/blob/fe9f183bb5b70cd186e99fab6be9ed0be795ad34/FoundationDB.Layers.Common/Collections/FdbRankedSet.cs#L42</a></h4>\n\n\n\n    <pre class=\"onebox\"><code class=\"lang-cs\">\n      <ol class=\"start lines\" start=\"32\" style=\"counter-reset: li-counter 31 ;\">\n          <li>\tusing System.Linq;</li>\n          <li>\tusing System.Threading.Tasks;</li>\n          <li>\tusing Doxense.Diagnostics.Contracts;</li>\n          <li>\tusing Doxense.Linq;</li>\n          <li>\tusing FoundationDB.Client;</li>\n          <li>\tusing JetBrains.Annotations;</li>\n          <li></li>\n          <li>\t/// &lt;summary&gt;</li>\n          <li>\t/// Provides a high-contention Queue class</li>\n          <li>\t/// &lt;/summary&gt;</li>\n          <li class=\"selected\">\tpublic class FdbRankedSet</li>\n          <li>\t{</li>\n          <li>\t\t// from https://github.com/FoundationDB/python-layers/blob/master/lib/rankedset.py</li>\n          <li></li>\n          <li>\t\tprivate const int MAX_LEVELS = 6;</li>\n          <li>\t\tprivate const int LEVEL_FAN_POW = 4; // 2^X per level</li>\n          <li></li>\n          <li>\t\t// TODO: should we use a PRNG ? If two counter instances are created at the same moment, they could share the same seed ?</li>\n          <li>\t\tprivate readonly Random Rng = new Random();</li>\n          <li></li>\n          <li>\t\t/// &lt;summary&gt;Initializes a new ranked set at a given location&lt;/summary&gt;</li>\n      </ol>\n    </code></pre>\n\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 2,
        "updated_at": "2018-08-27T17:05:16.467Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 1,
        "incoming_link_count": 1,
        "reads": 28,
        "readers_count": 27,
        "score": 10.6,
        "yours": false,
        "topic_id": 665,
        "topic_slug": "limiting-the-cardinality-of-a-key-range",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/Doxense/foundationdb-dotnet-client/blob/fe9f183bb5b70cd186e99fab6be9ed0be795ad34/FoundationDB.Layers.Common/Collections/FdbRankedSet.cs#L42",
            "internal": false,
            "reflection": false,
            "title": "foundationdb-dotnet-client/FdbRankedSet.cs at fe9f183bb5b70cd186e99fab6be9ed0be795ad34 \u00b7 Doxense/foundationdb-dotnet-client \u00b7 GitHub",
            "clicks": 3
          },
          {
            "url": "https://forums.foundationdb.org/t/getting-the-number-of-key-value-pairs/189",
            "internal": true,
            "reflection": false,
            "title": "Getting the number of key/value pairs",
            "clicks": 0
          },
          {
            "url": "https://forums.foundationdb.org/t/how-to-model-a-leaderboard/373/9",
            "internal": true,
            "reflection": false,
            "title": "How to model a Leaderboard",
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/limiting-the-cardinality-of-a-key-range/665/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      1979,
      1991
    ]
  },
  "timeline_lookup": [
    [
      1,
      2613
    ],
    [
      2,
      2612
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "Limiting the cardinality of a key range",
  "id": 665,
  "title": "Limiting the cardinality of a key range",
  "posts_count": 2,
  "created_at": "2018-08-26T18:47:07.288Z",
  "views": 1248,
  "reply_count": 0,
  "like_count": 0,
  "last_posted_at": "2018-08-27T17:05:16.467Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "limiting-the-cardinality-of-a-key-range",
  "category_id": 7,
  "word_count": 345,
  "deleted_at": null,
  "user_id": 251,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_665",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 3,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 2,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "Missing API for getting just the count of a key range?",
      "id": 444,
      "title": "Missing API for getting just the count of a key range?",
      "slug": "missing-api-for-getting-just-the-count-of-a-key-range",
      "posts_count": 14,
      "reply_count": 9,
      "highest_post_number": 14,
      "image_url": null,
      "created_at": "2018-05-21T09:23:36.938Z",
      "last_posted_at": "2018-09-10T16:25:03.060Z",
      "bumped": true,
      "bumped_at": "2018-09-10T16:25:03.060Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 4,
      "views": 3599,
      "category_id": 8,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 208,
            "username": "cloudspeech",
            "name": "Cloudspeech",
            "avatar_template": "/user_avatar/forums.foundationdb.org/cloudspeech/{size}/330_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 31,
            "username": "dicklacara",
            "name": "Richard Applebaum",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/d/8797f3/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 173,
            "username": "jkominek",
            "name": "Jay Kominek",
            "avatar_template": "/user_avatar/forums.foundationdb.org/jkominek/{size}/140_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Getting the number of key/value pairs",
      "id": 189,
      "title": "Getting the number of key/value pairs",
      "slug": "getting-the-number-of-key-value-pairs",
      "posts_count": 12,
      "reply_count": 9,
      "highest_post_number": 12,
      "image_url": null,
      "created_at": "2018-04-21T20:01:47.493Z",
      "last_posted_at": "2021-04-17T19:06:40.085Z",
      "bumped": true,
      "bumped_at": "2021-04-17T19:06:40.085Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 6,
      "views": 6235,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 132,
            "username": "Michael",
            "name": "Michael",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/m/4bbf92/{size}.png",
            "trust_level": 0
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 22,
            "username": "dave",
            "name": "David Scherer",
            "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 156,
            "username": "spullara",
            "name": "Sam Pullara",
            "avatar_template": "/user_avatar/forums.foundationdb.org/spullara/{size}/125_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 323,
            "username": "WolfDan",
            "name": "Wolf Dan",
            "avatar_template": "/user_avatar/forums.foundationdb.org/wolfdan/{size}/806_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 41,
            "username": "amirouche",
            "name": "Amirouche",
            "avatar_template": "/user_avatar/forums.foundationdb.org/amirouche/{size}/1911_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "How to get exact range of keys using fdb_transaction_get_range in C Programming",
      "id": 1355,
      "title": "How to get exact range of keys using fdb_transaction_get_range in C Programming",
      "slug": "how-to-get-exact-range-of-keys-using-fdb-transaction-get-range-in-c-programming",
      "posts_count": 5,
      "reply_count": 3,
      "highest_post_number": 5,
      "image_url": null,
      "created_at": "2019-05-09T12:22:07.878Z",
      "last_posted_at": "2019-05-20T14:14:50.692Z",
      "bumped": true,
      "bumped_at": "2019-05-20T14:14:50.692Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [
        "bindings"
      ],
      "tags_descriptions": {},
      "like_count": 2,
      "views": 1573,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 511,
            "username": "sakthivelpvs",
            "name": "Sakthivel",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/9dc877/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 219,
            "username": "MMcM",
            "name": "Mike McMahon",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/m/d07c76/{size}.png",
            "trust_level": 1
          }
        }
      ]
    },
    {
      "fancy_title": "[Java] API to get only the keys?",
      "id": 972,
      "title": "[Java] API to get only the keys?",
      "slug": "java-api-to-get-only-the-keys",
      "posts_count": 3,
      "reply_count": 1,
      "highest_post_number": 3,
      "image_url": null,
      "created_at": "2018-12-23T14:22:21.743Z",
      "last_posted_at": "2018-12-23T15:18:08.397Z",
      "bumped": true,
      "bumped_at": "2018-12-23T15:18:08.397Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 530,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 81,
            "username": "ryanworl",
            "name": "Ryan Worl",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png",
            "trust_level": 3
          }
        }
      ]
    },
    {
      "fancy_title": "Last less than or last less or equal with limit added to keyselector returns different values",
      "id": 392,
      "title": "Last less than or last less or equal with limit added to keyselector returns different values",
      "slug": "last-less-than-or-last-less-or-equal-with-limit-added-to-keyselector-returns-different-values",
      "posts_count": 3,
      "reply_count": 1,
      "highest_post_number": 3,
      "image_url": null,
      "created_at": "2018-05-10T05:13:03.437Z",
      "last_posted_at": "2018-05-10T06:40:07.295Z",
      "bumped": true,
      "bumped_at": "2018-05-10T06:40:07.295Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 2,
      "views": 1008,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 231,
            "username": "xtreak",
            "name": "",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/x/ad7895/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 12,
        "username": "ajbeamon",
        "name": "A.J. Beamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "admin": true,
        "trust_level": 4
      },
      {
        "id": 251,
        "username": "George",
        "name": "",
        "avatar_template": "/user_avatar/forums.foundationdb.org/george/{size}/620_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      }
    ],
    "created_by": {
      "id": 251,
      "username": "George",
      "name": "",
      "avatar_template": "/user_avatar/forums.foundationdb.org/george/{size}/620_2.png"
    },
    "last_poster": {
      "id": 12,
      "username": "ajbeamon",
      "name": "A.J. Beamon",
      "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png"
    },
    "links": [
      {
        "url": "https://github.com/Doxense/foundationdb-dotnet-client/blob/fe9f183bb5b70cd186e99fab6be9ed0be795ad34/FoundationDB.Layers.Common/Collections/FdbRankedSet.cs#L42",
        "title": "foundationdb-dotnet-client/FdbRankedSet.cs at fe9f183bb5b70cd186e99fab6be9ed0be795ad34 \u00b7 Doxense/foundationdb-dotnet-client \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 3,
        "user_id": 12,
        "domain": "github.com",
        "root_domain": "github.com"
      }
    ]
  },
  "bookmarks": []
}