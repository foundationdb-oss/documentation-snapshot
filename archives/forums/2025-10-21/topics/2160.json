{
  "post_stream": {
    "posts": [
      {
        "id": 7209,
        "name": "Quang Le Hong",
        "username": "iamquang95",
        "avatar_template": "/user_avatar/forums.foundationdb.org/iamquang95/{size}/889_2.png",
        "created_at": "2020-06-04T05:04:39.191Z",
        "cooked": "<p>I have two records</p>\n<pre><code class=\"lang-auto\">    message SampleEntityName {\n        string entity_id = 1;\n        string name = 2;\n    }\n\n    message SampleEntityNumber {\n        string entity_id = 1;\n        int32 number = 2;\n    }\n</code></pre>\n<p>The <code>SampleEntityName</code> has <code>entity_id</code> is primary key and <code>SampleEntityNumber</code> has <code>(entity_id, number)</code> as primary key.</p>\n<p>When i try to get some <code>SampleEntityName</code> records, it throws <code>com.apple.foundationdb.record.RecordCoreException: Expected only a single key extension for split record.</code>. After some investigation,  i guess it\u2019s because of the <code>splitLongRecords</code> (my model is bigger than 100kb so i need split long records), since it try to add another <code>long</code> to primary key.</p>\n<p>Is there any solution to fix this, currently i split the <code>SampleEntityNumber</code> to another store, but it\u2019s a bit boilerplate. I\u2019m wondering is there any solution that i can fit these two records on the same store?</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 4,
        "updated_at": "2020-06-04T05:04:39.191Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 93,
        "reads": 29,
        "readers_count": 28,
        "score": 470.8,
        "yours": false,
        "topic_id": 2160,
        "topic_slug": "split-long-record-causes-conflict-with-other-record",
        "display_username": "Quang Le Hong",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 775,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/split-long-record-causes-conflict-with-other-record/2160/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 7214,
        "name": "Alec Grieser",
        "username": "alloc",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "created_at": "2020-06-05T02:06:15.753Z",
        "cooked": "<p>Yeah, unfortunately, that\u2019s true. We <em>really</em> should document this better, but (1) the Record Layer doesn\u2019t like it if you have two records with the same primary key but one is a prefix of another but (2) it doesn\u2019t warn you, it just errors at inconvenient times. We\u2019ve discussed ways in which we could make it better, but I think they are:</p>\n<ol>\n<li>Enforce this rule, and check for other keys with the same prefix at write time</li>\n<li>Enforce this rule at meta-data validation time, i.e., look at the primary key definitions and validate that you don\u2019t have two entries where the types match, but one is a prefix of another</li>\n<li>Change our data model on disk so that we use nested tuples, which would solve this problem. I\u2019d also have to think if we\u2019d need to do that for index entries (I think not, but I could be wrong), and there probably wouldn\u2019t be an upgrade path for existing record stores</li>\n</ol>\n<p>In your case, assuming your still developing, probably the base courses of action would be to:</p>\n<ol>\n<li>Change each primary key to be prefixed by its type name, e.g., something like: <code>concat(recordType(), field(\"entity_id\"))</code> and <code>concat(recordType(), field(\"entity_id\"), field(\"number\"))</code>. This <a href=\"https://foundationdb.github.io/fdb-record-layer/FAQ.html#is-there-some-way-to-make-record-types-behave-more-like-tables\">has a number of advantages</a> anyway, so you might want to do this for its own sake.</li>\n<li>If, for some reason, you want all of your records of all types to have primary keys prefixed by \u201centity_id\u201d (because, e.g., you will sometimes query for all of the things for a given entity, and want the name and number records together), you could change the primary key for <code>SampleEntityName</code> to something like <code>concat(field(entity), new LiteralKeyExpression&lt;Long&gt;(null))</code>, which will add a <em>suffix</em> to that key to avoid this problem.</li>\n</ol>\n<p>I hope that helps. This is definitely a thorny pit that exists in the Record Layer that probably we should do a better job either removing or at least publicizing.</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 4,
        "updated_at": "2020-06-05T02:06:15.753Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 16,
        "reads": 26,
        "readers_count": 25,
        "score": 120.2,
        "yours": false,
        "topic_id": 2160,
        "topic_slug": "split-long-record-causes-conflict-with-other-record",
        "display_username": "Alec Grieser",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://foundationdb.github.io/fdb-record-layer/FAQ.html#is-there-some-way-to-make-record-types-behave-more-like-tables",
            "internal": false,
            "reflection": false,
            "title": "FoundationDB Record Layer FAQ",
            "clicks": 5
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 2
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 8,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/split-long-record-causes-conflict-with-other-record/2160/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 7215,
        "name": "Quang Le Hong",
        "username": "iamquang95",
        "avatar_template": "/user_avatar/forums.foundationdb.org/iamquang95/{size}/889_2.png",
        "created_at": "2020-06-05T03:29:37.947Z",
        "cooked": "<p>Great, thanks!<br>\nThe error is a bit of implicit to me. I think it should be on the compile time or something that i can notice earlier.<br>\nAnd i think adding Record Type as prefix of all primary key is a good suggestion. But in the future when a primary key can\u2019t be a prefix of another primary key, will it be an issue? Since i think the recordType is just a string.</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 4,
        "updated_at": "2020-06-05T03:29:37.947Z",
        "reply_count": 1,
        "reply_to_post_number": 2,
        "quote_count": 0,
        "incoming_link_count": 4,
        "reads": 26,
        "readers_count": 25,
        "score": 30.2,
        "yours": false,
        "topic_id": 2160,
        "topic_slug": "split-long-record-causes-conflict-with-other-record",
        "display_username": "Quang Le Hong",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 8,
          "username": "alloc",
          "name": "Alec Grieser",
          "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 775,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/split-long-record-causes-conflict-with-other-record/2160/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 7306,
        "name": "Alec Grieser",
        "username": "alloc",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "created_at": "2020-06-10T18:04:42.683Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"iamquang95\" data-post=\"3\" data-topic=\"2160\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/iamquang95/48/889_2.png\" class=\"avatar\"> iamquang95:</div>\n<blockquote>\n<p>The error is a bit of implicit to me. I think it should be on the compile time or something that i can notice earlier.</p>\n</blockquote>\n</aside>\n<p>Yeah. There are probably ways we could adjust this error to be more upfront and let you know what happened. Filed: <a href=\"https://github.com/FoundationDB/fdb-record-layer/issues/959\" class=\"inline-onebox\">One record cannot have a primary key that is a prefix of another \u00b7 Issue #959 \u00b7 FoundationDB/fdb-record-layer \u00b7 GitHub</a></p>\n<aside class=\"quote no-group\" data-username=\"iamquang95\" data-post=\"3\" data-topic=\"2160\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/iamquang95/48/889_2.png\" class=\"avatar\"> iamquang95:</div>\n<blockquote>\n<p>And i think adding Record Type as prefix of all primary key is a good suggestion. But in the future when a primary key can\u2019t be a prefix of another primary key, will it be an issue? Since i think the recordType is just a string.</p>\n</blockquote>\n</aside>\n<p>So, it\u2019s a little subtle, but it\u2019s actually only a problem if the primary key tuple is an <em>element-wise</em> prefix of another primary key. So, for example, if you had a single string field as your primary key, then <code>(\"foo\")</code> and <code>(\"food\")</code> could coexist without issue. The problem is if you had something like one record with primary key <code>(\"foo\")</code> and another with a key like <code>(\"foo\", \"bar\")</code>.</p>\n<p>It\u2019s also possibly worth noting that the record type key expression isn\u2019t (generally) a string, but a configurable item that the meta-data requires is unique per record type. By default, it\u2019s actually an integer (the same integer used for the field in the union message in the protobuf definition).</p>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 4,
        "updated_at": "2020-06-10T18:04:42.683Z",
        "reply_count": 0,
        "reply_to_post_number": 3,
        "quote_count": 1,
        "incoming_link_count": 7,
        "reads": 24,
        "readers_count": 23,
        "score": 54.8,
        "yours": false,
        "topic_id": 2160,
        "topic_slug": "split-long-record-causes-conflict-with-other-record",
        "display_username": "Alec Grieser",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/FoundationDB/fdb-record-layer/issues/959",
            "internal": false,
            "reflection": false,
            "title": "One record cannot have a primary key that is a prefix of another \u00b7 Issue #959 \u00b7 FoundationDB/fdb-record-layer \u00b7 GitHub",
            "clicks": 5
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 8,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/split-long-record-causes-conflict-with-other-record/2160/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      7209,
      7214,
      7215,
      7306
    ]
  },
  "timeline_lookup": [
    [
      1,
      1966
    ],
    [
      2,
      1965
    ],
    [
      4,
      1959
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "Split long record causes conflict with other record",
  "id": 2160,
  "title": "Split long record causes conflict with other record",
  "posts_count": 4,
  "created_at": "2020-06-04T05:04:39.122Z",
  "views": 932,
  "reply_count": 2,
  "like_count": 3,
  "last_posted_at": "2020-06-10T18:04:42.683Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "split-long-record-causes-conflict-with-other-record",
  "category_id": 12,
  "word_count": 806,
  "deleted_at": null,
  "user_id": 775,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_2160",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 4,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 2,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "Number types in Tuples may not be null | Reverse scan",
      "id": 1912,
      "title": "Number types in Tuples may not be null | Reverse scan",
      "slug": "number-types-in-tuples-may-not-be-null-reverse-scan",
      "posts_count": 4,
      "reply_count": 2,
      "highest_post_number": 4,
      "image_url": null,
      "created_at": "2020-01-27T13:38:56.010Z",
      "last_posted_at": "2020-02-20T14:50:37.088Z",
      "bumped": true,
      "bumped_at": "2020-02-20T14:50:37.088Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 992,
      "category_id": 12,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 653,
            "username": "VibhutiD",
            "name": "Vibhuti Dembi",
            "avatar_template": "/user_avatar/forums.foundationdb.org/vibhutid/{size}/668_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Record layer saveRecord fails with ***java.util.concurrent.ExecutionException: com.apple.foundationdb.record.RecordCoreException: Expected only a single key extension for split record***",
      "id": 1887,
      "title": "Record layer saveRecord fails with ***java.util.concurrent.ExecutionException: com.apple.foundationdb.record.RecordCoreException: Expected only a single key extension for split record***",
      "slug": "record-layer-saverecord-fails-with-java-util-concurrent-executionexception-com-apple-foundationdb-record-recordcoreexception-expected-only-a-single-key-extension-for-split-record",
      "posts_count": 4,
      "reply_count": 1,
      "highest_post_number": 4,
      "image_url": null,
      "created_at": "2020-01-17T12:24:17.084Z",
      "last_posted_at": "2020-01-22T17:17:40.033Z",
      "bumped": true,
      "bumped_at": "2020-01-22T17:17:40.033Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 1023,
      "category_id": 12,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 712,
            "username": "rahul-nitkkr",
            "name": "Rahul Roy",
            "avatar_template": "/user_avatar/forums.foundationdb.org/rahul-nitkkr/{size}/754_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 219,
            "username": "MMcM",
            "name": "Mike McMahon",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/m/d07c76/{size}.png",
            "trust_level": 1
          }
        }
      ]
    },
    {
      "fancy_title": "Record Layer Primary Key Prefixes",
      "id": 4539,
      "title": "Record Layer Primary Key Prefixes",
      "slug": "record-layer-primary-key-prefixes",
      "posts_count": 2,
      "reply_count": 0,
      "highest_post_number": 2,
      "image_url": "https://global.discourse-cdn.com/foundationdb/optimized/2X/6/68f291b2fd4da2de5c974c4ec2b3dd2e81e42bdd_2_1024x130.png",
      "created_at": "2024-06-28T19:41:09.768Z",
      "last_posted_at": "2024-07-01T19:06:37.622Z",
      "bumped": true,
      "bumped_at": "2024-07-01T19:06:37.622Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 77,
      "category_id": 12,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 1441,
            "username": "ArnieW",
            "name": "Arnold Wang",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/a/8baadc/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 219,
            "username": "MMcM",
            "name": "Mike McMahon",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/m/d07c76/{size}.png",
            "trust_level": 1
          }
        }
      ]
    },
    {
      "fancy_title": "How to use versionstamp as a column of primary key in record layer",
      "id": 2726,
      "title": "How to use versionstamp as a column of primary key in record layer",
      "slug": "how-to-use-versionstamp-as-a-column-of-primary-key-in-record-layer",
      "posts_count": 4,
      "reply_count": 2,
      "highest_post_number": 4,
      "image_url": null,
      "created_at": "2021-06-04T08:20:49.002Z",
      "last_posted_at": "2021-06-07T19:13:28.083Z",
      "bumped": true,
      "bumped_at": "2021-06-07T19:13:28.083Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 512,
      "category_id": 14,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 940,
            "username": "david",
            "name": "david cai",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/d/aeb1de/{size}.png",
            "trust_level": 0
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 534,
            "username": "PierreZ",
            "name": "Pierre Zemb",
            "avatar_template": "/user_avatar/forums.foundationdb.org/pierrez/{size}/866_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Full range scan performed in sort when not required",
      "id": 1995,
      "title": "Full range scan performed in sort when not required",
      "slug": "full-range-scan-performed-in-sort-when-not-required",
      "posts_count": 4,
      "reply_count": 2,
      "highest_post_number": 4,
      "image_url": null,
      "created_at": "2020-03-02T10:49:06.926Z",
      "last_posted_at": "2020-03-03T10:16:53.281Z",
      "bumped": true,
      "bumped_at": "2020-03-03T10:16:53.281Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 987,
      "category_id": 12,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 737,
            "username": "aymalik",
            "name": "Aayushi Malik",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/a/aca169/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 8,
        "username": "alloc",
        "name": "Alec Grieser",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      },
      {
        "id": 775,
        "username": "iamquang95",
        "name": "Quang Le Hong",
        "avatar_template": "/user_avatar/forums.foundationdb.org/iamquang95/{size}/889_2.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      }
    ],
    "created_by": {
      "id": 775,
      "username": "iamquang95",
      "name": "Quang Le Hong",
      "avatar_template": "/user_avatar/forums.foundationdb.org/iamquang95/{size}/889_2.png"
    },
    "last_poster": {
      "id": 8,
      "username": "alloc",
      "name": "Alec Grieser",
      "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png"
    },
    "links": [
      {
        "url": "https://foundationdb.github.io/fdb-record-layer/FAQ.html#is-there-some-way-to-make-record-types-behave-more-like-tables",
        "title": "FoundationDB Record Layer FAQ",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 5,
        "user_id": 8,
        "domain": "foundationdb.github.io",
        "root_domain": "foundationdb.github.io"
      },
      {
        "url": "https://github.com/FoundationDB/fdb-record-layer/issues/959",
        "title": "One record cannot have a primary key that is a prefix of another \u00b7 Issue #959 \u00b7 FoundationDB/fdb-record-layer \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 5,
        "user_id": 8,
        "domain": "github.com",
        "root_domain": "github.com"
      }
    ]
  },
  "bookmarks": []
}