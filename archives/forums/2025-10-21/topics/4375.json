{
  "post_stream": {
    "posts": [
      {
        "id": 13814,
        "name": "Eloi D\u00e9molis",
        "username": "Wonshtrum",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/w/e36b37/{size}.png",
        "created_at": "2024-03-07T13:28:10.413Z",
        "cooked": "<p>Last year we managed with <a class=\"mention\" href=\"/u/pierrez\">@PierreZ</a> to integrate a Rust Workload in the fdbserver simulation. We use the <code>ExternalWorkload</code> of FoundationDB to load a C++ wrapper that calls into Rust. It worked perfectly in version 7.1 but suddenly stopped in 7.3. We encounter a segmentation fault when instantiating our custom Workload. It happens before Rust is called, everything stays in \u201cC++ land\u201d. Here is the simplified code of our wrapper:</p>\n<pre data-code-wrap=\"cpp\"><code class=\"lang-cpp\">class MyWorkloadFactory: public FDBWorkloadFactory {\n    public:\n        MyWorkloadFactory(FDBLogger* logger): FDBWorkloadFactory() {\n            logger-&gt;trace(FDBSeverity::Info, \"MyWorkloadFactory\", {});\n        }\n\n        virtual std::shared_ptr&lt;FDBWorkload&gt; create(const std::string&amp; name) {\n            // segmentation fault here:\n            std::cout &lt;&lt; \"MyWorkloadFactory::create(\" &lt;&lt; name &lt;&lt; \")\" &lt;&lt; std::endl;\n            return std::make_shared&lt;MyWorkload&gt;(name);\n        }\n};\n\nextern \"C\" FDBWorkloadFactory* workloadFactory(FDBLogger* logger) {\n    static MyWorkloadFactory factory(logger);\n    return &amp;factory;\n}\n</code></pre>\n<p>Here is the fdbserver call site from <code>ExtertnalWorkload.actor.cpp</code>:</p>\n<pre data-code-wrap=\"cpp\"><code class=\"lang-cpp\">FDBWorkloadFactory* (*workloadFactory)(FDBLogger*);\n...\nauto wName = ::getOption(options, \"workloadName\"_sr, \"\"_sr);\n...\nworkloadFactory = reinterpret_cast&lt;decltype(workloadFactory)&gt;(loadFunction(library, \"workloadFactory\"));\nif (workloadFactory == nullptr) {\n\t...\n\treturn;\n}\nworkloadImpl = (*workloadFactory)(FDBLoggerImpl::instance())-&gt;create(wName.toString());\n</code></pre>\n<p>I investigated all relevant header files for a meaningful change in contract but found nothing. Most of them haven\u2019t even changed in years. I looked into the generated assembly and found that the fdbserer and our workload seem to represent the type <code>const std::string&amp; name differently</code>. From the disassembly and gdb it seems to me that the fdbserver passes the <code>const std::string&amp;</code> as a pointer in <code>rdx</code> which points to a memory region that looks like:</p>\n<pre data-code-wrap=\"cpp\"><code class=\"lang-cpp\">struct fdb_string {\n\tuint8_t size,\n\tchar content[size/2],\n}\n</code></pre>\n<p>This pointer seems to be 8 bytes aligned. Strangely, the size is double the length of the string and stored on a single byte. It feels more like a custom type than a type for std, but I couldn\u2019t find anything in your <code>Arena</code>, <code>StringRef</code> and other similar types that matches exactly.</p>\n<p>On our workload side, <code>create</code> seems to expect the string to be passed as a pointer of pointer in <code>rdx</code>. And the memory region pointed should look like:</p>\n<pre data-code-wrap=\"cpp\"><code class=\"lang-cpp\">struct w_string {\n\tuint64_t length,\n\tuint64_t _1,\n\tuint64_t _2,\n\tchar content[length],\n}\n</code></pre>\n<p>I don\u2019t know what the 2 quadwords are for (it resembles a <code>basic_string</code> but I\u2019m not sure). Strangely <code>rdx</code> is a double pointer indirection and doesn\u2019t point to the start of the struct, but at the \u201ccontent\u201d field. The length is retrieved by looking 24 bytes before the value pointed by the pointer pointed by <code>rdx</code>.<br>\nFor those interested, here is the simplified assembly of the workload trying to use the string:</p>\n<pre data-code-wrap=\"cpp\"><code class=\"lang-cpp\">mov    r13,rdx\nmov    rsi,QWORD PTR [r13+0x0]\t// &amp;w_string.content\nmov    rdx,QWORD PTR [rsi-0x18]\t// *(&amp;w_string.content-24) = w_string.length\n</code></pre>\n<p>This last instruction is the cause of the segfault, as the value <code>rsi</code> takes when the fdbserver calls is not a valid pointer.</p>\n<p>Here is the simplified assembly of the fdbserver calling create:</p>\n<pre data-code-wrap=\"cpp\"><code class=\"lang-cpp\">test   rax,rax\t\t\t\t\t// if (workloadFactory == nullptr)\nje     0x39cacc6\nlea    rdi,[rip+0x2310c8d]\t\t// FDBLoggerImpl::instance()\ncall   rax\t\t\t\t\t\t// (*workloadFactory)(logger)\nmov    r13,rax\t\t\t\t\t// workloadImpl\nmovsxd rbx,DWORD PTR [rbp-0x50]\t\t// ???\nlea    eax,[rbx+rbx*1]\t\t\t\t// ???\nmov    BYTE PTR [rbp-0x188],al\t\t// fdb_string.size\nmov    rax,QWORD PTR [r13+0x0]\t// workloadImpl.vtable[0], FDBWorkloadFactory::create\nlea    rdi,[rbp-0x90]\t\t\t// ???\nlea    rdx,[rbp-0x188]\t\t\t// fdb_string\nmov    rsi,r13\t\t\t\t\t// \"this\" pointer of workloadImpl\ncall   QWORD PTR [rax]\t\t\t// workloadImpl.create(fdb_string)\n</code></pre>\n<p>I tried to fix this issue by artificially reconstructing the string in my workload:</p>\n<pre><code class=\"lang-auto\">class MyWorkloadFactory: public FDBWorkloadFactory {\n    public:\n        ...\n        virtual std::shared_ptr&lt;FDBWorkload&gt; create(const std::string&amp; mangled) override {\n            char* raw = (char*)&amp;mangled;\n            std::string name = std::string(raw+1, raw[0]&gt;&gt;1);\n            return std::make_shared&lt;WorkloadTranslater&gt;(name);\n        }\n}\n</code></pre>\n<p>This works fine, I get back the expected name, but then I have another segmentation fault a bit later on <code>FDBWorkloadContext::getOption</code> also due to mismatched string representation.</p>\n<p>I suspect this is due to a difference in compilation. We use the official FoundationDB docker (foundationdb/build:centos7-20240228040135-fc272dd89b) with devtoolset-11. What version of the docker and devtoolset did you use to compile the 7.3 fdbserver? Could it have changed between 7.1 and 7.3?</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2024-03-07T13:45:42.195Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 11,
        "reads": 25,
        "readers_count": 24,
        "score": 65.0,
        "yours": false,
        "topic_id": 4375,
        "topic_slug": "externalworkload-segmentation-fault-in-7-3",
        "display_username": "Eloi D\u00e9molis",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 1121,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/externalworkload-segmentation-fault-in-7-3/4375/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 13818,
        "name": "Jingyu Zhou",
        "username": "jzhou",
        "avatar_template": "/user_avatar/forums.foundationdb.org/jzhou/{size}/445_2.png",
        "created_at": "2024-03-07T21:39:23.156Z",
        "cooked": "<p><a class=\"mention\" href=\"/u/ammolitor\">@ammolitor</a> , is there any change of compilers for 7.3?</p>\n<aside class=\"quote no-group\" data-username=\"Wonshtrum\" data-post=\"1\" data-topic=\"4375\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/w/e36b37/48.png\" class=\"avatar\"> Wonshtrum:</div>\n<blockquote>\n<p>I suspect this is due to a difference in compilation. We use the official FoundationDB docker (foundationdb/build:centos7-20240228040135-fc272dd89b) with devtoolset-11. What version of the docker and devtoolset did you use to compile the 7.3 fdbserver? Could it have changed between 7.1 and 7.3?</p>\n</blockquote>\n</aside>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2024-03-07T21:39:23.156Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 22,
        "readers_count": 21,
        "score": 9.4,
        "yours": false,
        "topic_id": 4375,
        "topic_slug": "externalworkload-segmentation-fault-in-7-3",
        "display_username": "Jingyu Zhou",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": true,
        "admin": true,
        "staff": true,
        "user_id": 454,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/externalworkload-segmentation-fault-in-7-3/4375/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 13819,
        "name": "Aaron Molitor",
        "username": "ammolitor",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ammolitor/{size}/1050_2.png",
        "created_at": "2024-03-07T23:28:09.053Z",
        "cooked": "<p>The 7.3 releases are compiled with clang. I think this would explain the discrepancy.</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2024-03-07T23:28:09.053Z",
        "reply_count": 0,
        "reply_to_post_number": 2,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 22,
        "readers_count": 21,
        "score": 9.4,
        "yours": false,
        "topic_id": 4375,
        "topic_slug": "externalworkload-segmentation-fault-in-7-3",
        "display_username": "Aaron Molitor",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 454,
          "username": "jzhou",
          "name": "Jingyu Zhou",
          "avatar_template": "/user_avatar/forums.foundationdb.org/jzhou/{size}/445_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 910,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/externalworkload-segmentation-fault-in-7-3/4375/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 13821,
        "name": "Eloi D\u00e9molis",
        "username": "Wonshtrum",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/w/e36b37/{size}.png",
        "created_at": "2024-03-08T16:10:27.678Z",
        "cooked": "<p>I looked into the gcc/clang differences and they both have their standard lib, respectively libstdc++ and libc++. Their string representation is indeed different and the pattern I found in the assembly seem to match their respect SSO (small string optimization).</p>\n<p>I tried to compile with clang and libc++, but it always fails at linking:</p>\n<pre data-code-wrap=\"txt\"><code class=\"lang-txt\">  = note: /usr/bin/ld: cannot find -lc++\n          collect2: error: ld returned 1 exit status\n</code></pre>\n<p>Here you can see <code>ld</code> comes from <code>/usr/bin/</code>, but it also fails if I source the devtoolset:</p>\n<pre data-code-wrap=\"txt\"><code class=\"lang-txt\">source /opt/rh/devtoolset-11/enable\ncargo build -p foundationdb-simulation --release --example atomic --features fdb-7_3\n...\n  = note: /opt/rh/devtoolset-11/root/usr/libexec/gcc/x86_64-redhat-linux/11/ld: cannot find -lc++\n          collect2: error: ld returned 1 exit status\n</code></pre>\n<p>Just in case, if I try to link against libstdc++, then it works with the devtoolset, and fails without:</p>\n<pre data-code-wrap=\"txt\"><code class=\"lang-txt\">  = note: /usr/bin/ld: cannot find -lstdc++\n          collect2: error: ld returned 1 exit status\n</code></pre>\n<p>Do you use another linker and/or set the <code>LD_LIBRARY_PATH</code> (or other environment variables) to point to a specific standard library (<code>/usr/local/include/c++/v1/</code> for example) to compile the fdbserver?</p>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2024-03-08T16:11:06.699Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 3,
        "reads": 21,
        "readers_count": 20,
        "score": 24.2,
        "yours": false,
        "topic_id": 4375,
        "topic_slug": "externalworkload-segmentation-fault-in-7-3",
        "display_username": "Eloi D\u00e9molis",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 1121,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/externalworkload-segmentation-fault-in-7-3/4375/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 13822,
        "name": "Eloi D\u00e9molis",
        "username": "Wonshtrum",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/w/e36b37/{size}.png",
        "created_at": "2024-03-08T16:32:58.439Z",
        "cooked": "<p>Ha, I found it, I used clang as linker and it finally works!<br>\nBut I\u2019m afraid it will become a recurring problem where each new version of the fdbserver could lead to a similar error because we must have the exact same compilation environment for our workload as the fdbserver. It is not a great situation as we want to rely more and more on the simulation.<br>\nMay I suggest that the <code>bindinds/c/foundationdb/ClientWorkload.h</code> should expose pure C bindings instead of C++, like all the <code>fdb_c*.h</code> bindings? It would make integration in other languages a breeze and the standard C ABI would guarantee it will work regardless of the compilation environment of the workload. We won\u2019t have to chase after the latest compilation environment.<br>\nAs I worked on the Rust bindings I have some knowledge on the subject. Our integration is basically a C++ layer to convert into C bindings which then can be understood by Rust. I\u2019m willing to make a PR that converts the C++ bindings in C and updates accordingly the ExternalWorkload, SimpleWorkload and JavaWorkload. Would you be interested?</p>",
        "post_number": 5,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2024-03-08T16:32:58.439Z",
        "reply_count": 1,
        "reply_to_post_number": 4,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 20,
        "readers_count": 19,
        "score": 29.0,
        "yours": false,
        "topic_id": 4375,
        "topic_slug": "externalworkload-segmentation-fault-in-7-3",
        "display_username": "Eloi D\u00e9molis",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 1121,
          "username": "Wonshtrum",
          "name": "Eloi D\u00e9molis",
          "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/w/e36b37/{size}.png"
        },
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 1121,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/externalworkload-segmentation-fault-in-7-3/4375/5",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 13823,
        "name": "Jingyu Zhou",
        "username": "jzhou",
        "avatar_template": "/user_avatar/forums.foundationdb.org/jzhou/{size}/445_2.png",
        "created_at": "2024-03-09T19:17:05.205Z",
        "cooked": "<p>Yes. I think exposing a C interface is great. Can we keep the C++ interface as well? I.e., is it possible to wrap C++ with C ABI?</p>",
        "post_number": 6,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2024-03-09T19:17:05.205Z",
        "reply_count": 0,
        "reply_to_post_number": 5,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 20,
        "readers_count": 19,
        "score": 4.0,
        "yours": false,
        "topic_id": 4375,
        "topic_slug": "externalworkload-segmentation-fault-in-7-3",
        "display_username": "Jingyu Zhou",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 1121,
          "username": "Wonshtrum",
          "name": "Eloi D\u00e9molis",
          "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/w/e36b37/{size}.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": true,
        "admin": true,
        "staff": true,
        "user_id": 454,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/externalworkload-segmentation-fault-in-7-3/4375/6",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 13924,
        "name": "Eloi D\u00e9molis",
        "username": "Wonshtrum",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/w/e36b37/{size}.png",
        "created_at": "2024-04-09T10:03:34.718Z",
        "cooked": "<p>I got some time to try and implement a C API. You can find my attempt <a href=\"https://github.com/apple/foundationdb/pull/11288\" rel=\"noopener nofollow ugc\">in this PR</a>. As I didn\u2019t want to change the <code>ExternalWorkload</code> or the <code>JavaWorkload</code>, I kept the C++ API unchanged and added the C bindings alongside.<br>\nI would really like some feedback on the solution or open discussions on other ways to solve the original problem.</p>",
        "post_number": 7,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2024-04-09T10:03:34.718Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 18,
        "readers_count": 17,
        "score": 8.6,
        "yours": false,
        "topic_id": 4375,
        "topic_slug": "externalworkload-segmentation-fault-in-7-3",
        "display_username": "Eloi D\u00e9molis",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/apple/foundationdb/pull/11288",
            "internal": false,
            "reflection": false,
            "title": "Draft: C workload bindings by Wonshtrum \u00b7 Pull Request #11288 \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 6
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 1121,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/externalworkload-segmentation-fault-in-7-3/4375/7",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 14137,
        "name": "Eloi D\u00e9molis",
        "username": "Wonshtrum",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/w/e36b37/{size}.png",
        "created_at": "2024-06-12T07:12:57.312Z",
        "cooked": "<p>I finally compiled the whole project and fixed all the compilation errors.<br>\nThe system seems to work. Now the <code>ExternalWorkload</code> looks for a <code>useCAPI</code> option (alongside the <code>libraryName</code>, <code>libraryPath</code>\u2026) to toggle between the C and C++ bindings. If the C API is used, the <code>workloadInstantiate</code> symbol is invoked (instead of <code>workloadFactory</code>) with a <code>BridgeToServer</code> instance (a collection of function pointers that enables C to interact with <code>FDBWorkloadContext</code> and <code>GenericPromise&lt;bool&gt;</code> pointers). The returned <code>BridgeToClient</code> (a collection of function pointers that enables C++ to interact with the C workload pointer) is wrapped in a \u201ctranslator\u201d C++ workload. So as far as the <code>ExternalWorkload</code> is concerned, only the instantiation is different, both API result in a C++ workload, so the rest of the code is unchanged.</p>\n<p>Here is:</p>\n<ul>\n<li>the C bindings: <a href=\"https://github.com/Wonshtrum/foundationdb/blob/c_workload_api/bindings/c/foundationdb/CWorkload.h\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">foundationdb/bindings/c/foundationdb/CWorkload.h at c_workload_api \u00b7 Wonshtrum/foundationdb \u00b7 GitHub</a></li>\n<li>the test workload: <a href=\"https://github.com/Wonshtrum/foundationdb/blob/c_workload_api/bindings/c/test/workloads/CWorkload.c\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">foundationdb/bindings/c/test/workloads/CWorkload.c at c_workload_api \u00b7 Wonshtrum/foundationdb \u00b7 GitHub</a></li>\n</ul>\n<p>With this test file:</p>\n<pre data-code-wrap=\"toml\"><code class=\"lang-toml\">[[test]]\ntestTitle = 'MyCWorkloadTitle'\n\n  [[test.workload]]\n    testName = 'External'\n    useCAPI = true\n    libraryPath = './bin'\n    libraryName = 'cworkload'\n    workloadName = 'MyCWorkloadName'\n    my_c_option = 'my_value'\n</code></pre>\n<p>I get the following output:</p>\n<pre data-code-wrap=\"console\"><code class=\"lang-console\">Run test:MyCWorkloadTitle start\nExternalWorkload::useCAPI: 1\nworkloadInstantiate(MyCWorkloadName, 0x7c596d08f120)[0/2]\nmy_c_option: my_value\nworkloadInstantiate(MyCWorkloadName, 0x7c5969b20540)[1/2]\nmy_c_option: my_value\nsetting up test (MyCWorkloadTitle)...\nTest received trigger for setup...\nworkload_setup(MyCWorkloadName_0)\nTest received trigger for setup...\nworkload_setup(MyCWorkloadName_1)\nworkload_start(MyCWorkloadName_0)\nExternal complete\nworkload_start(MyCWorkloadName_1)\nExternal complete\nMyCWorkloadTitle complete\nchecking test (MyCWorkloadTitle)...\nworkload_check(MyCWorkloadName_1)\nworkload_getCheckTimeout(MyCWorkloadName_1)\nworkload_check(MyCWorkloadName_0)\nworkload_getCheckTimeout(MyCWorkloadName_0)\nfetching metrics (MyCWorkloadTitle)...\nworkload_getMetrics(MyCWorkloadName_0)\nworkload_getMetrics(MyCWorkloadName_1)\nworkload_free(MyCWorkloadName_1)\nworkload_free(MyCWorkloadName_0)\nFDBD joined cluster.\nFDBD joined cluster.\nsetting up test (ConsistencyCheck)...\nTest received trigger for setup...\nTest received trigger for setup...\nSet perpetual_storage_wiggle=0 ...\nSet perpetual_storage_wiggle=0 Done.\nConsistency scan already complete.\nrunning test (ConsistencyCheck)...\nConsistencyCheck complete\nConsistencyCheck complete\nConsistencyCheck complete\nConsistencyCheck complete\nConsistencyCheck complete\nchecking test (ConsistencyCheck)...\nfetching metrics (ConsistencyCheck)...\n2 test clients passed; 0 test clients failed\nRun test:MyCWorkloadTitle Done.\n</code></pre>\n<p><a class=\"mention\" href=\"/u/jzhou\">@jzhou</a> I would appreciate it if you could review my PR.</p>",
        "post_number": 8,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2024-06-12T07:12:57.312Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 2,
        "reads": 18,
        "readers_count": 17,
        "score": 28.6,
        "yours": false,
        "topic_id": 4375,
        "topic_slug": "externalworkload-segmentation-fault-in-7-3",
        "display_username": "Eloi D\u00e9molis",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/Wonshtrum/foundationdb/blob/c_workload_api/bindings/c/foundationdb/CWorkload.h",
            "internal": false,
            "reflection": false,
            "title": "foundationdb/bindings/c/foundationdb/CWorkload.h at c_workload_api \u00b7 Wonshtrum/foundationdb \u00b7 GitHub",
            "clicks": 3
          },
          {
            "url": "https://github.com/Wonshtrum/foundationdb/blob/c_workload_api/bindings/c/test/workloads/CWorkload.c",
            "internal": false,
            "reflection": false,
            "title": "foundationdb/bindings/c/test/workloads/CWorkload.c at c_workload_api \u00b7 Wonshtrum/foundationdb \u00b7 GitHub",
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 1121,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/externalworkload-segmentation-fault-in-7-3/4375/8",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 14476,
        "name": "Eloi D\u00e9molis",
        "username": "Wonshtrum",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/w/e36b37/{size}.png",
        "created_at": "2024-10-28T23:11:08.221Z",
        "cooked": "<p>Hi! It\u2019s been a while since my last update. The simulation framework we integrated into foundationdb-rs has already proven valuable, catching numerous bugs in our database layers. However, we\u2019re still dependent on the <code>ClientWorkload.h</code> C++ bindings, which aren\u2019t FFI-safe.</p>\n<p>Would you be open to reviewing my PR or perhaps discussing any alternative approaches? While I haven\u2019t made changes since June, I\u2019d be glad to adapt the implementation if there\u2019s a better way forward.</p>\n<p>Thank you for your time and consideration!</p>",
        "post_number": 9,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2024-10-28T23:11:08.221Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 14,
        "readers_count": 13,
        "score": 12.8,
        "yours": false,
        "topic_id": 4375,
        "topic_slug": "externalworkload-segmentation-fault-in-7-3",
        "display_username": "Eloi D\u00e9molis",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 1121,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/externalworkload-segmentation-fault-in-7-3/4375/9",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 14498,
        "name": "Jingyu Zhou",
        "username": "jzhou",
        "avatar_template": "/user_avatar/forums.foundationdb.org/jzhou/{size}/445_2.png",
        "created_at": "2024-11-05T16:38:41.601Z",
        "cooked": "<p>I\u2019ll review your <a href=\"https://github.com/apple/foundationdb/pull/11288\">PR</a>.</p>",
        "post_number": 10,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2024-11-05T16:38:41.601Z",
        "reply_count": 0,
        "reply_to_post_number": 9,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 13,
        "readers_count": 12,
        "score": 2.6,
        "yours": false,
        "topic_id": 4375,
        "topic_slug": "externalworkload-segmentation-fault-in-7-3",
        "display_username": "Jingyu Zhou",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/apple/foundationdb/pull/11288",
            "internal": false,
            "reflection": false,
            "title": "C workload bindings by Wonshtrum \u00b7 Pull Request #11288 \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 5
          }
        ],
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 1121,
          "username": "Wonshtrum",
          "name": "Eloi D\u00e9molis",
          "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/w/e36b37/{size}.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": true,
        "admin": true,
        "staff": true,
        "user_id": 454,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/externalworkload-segmentation-fault-in-7-3/4375/10",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      13814,
      13818,
      13819,
      13821,
      13822,
      13823,
      13924,
      14137,
      14476,
      14498
    ]
  },
  "timeline_lookup": [
    [
      1,
      593
    ],
    [
      4,
      592
    ],
    [
      6,
      591
    ],
    [
      7,
      561
    ],
    [
      8,
      497
    ],
    [
      9,
      358
    ],
    [
      10,
      350
    ]
  ],
  "suggested_topics": [],
  "tags": [
    "bindings"
  ],
  "tags_descriptions": {},
  "fancy_title": "ExternalWorkload segmentation fault in 7.3",
  "id": 4375,
  "title": "ExternalWorkload segmentation fault in 7.3",
  "posts_count": 10,
  "created_at": "2024-03-07T13:28:10.313Z",
  "views": 415,
  "reply_count": 4,
  "like_count": 2,
  "last_posted_at": "2024-11-05T16:38:41.601Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "externalworkload-segmentation-fault-in-7-3",
  "category_id": 7,
  "word_count": 1671,
  "deleted_at": null,
  "user_id": 1121,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_4375",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 10,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 3,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "Cpp implementation of an ExternalWorkload",
      "id": 3380,
      "title": "Cpp implementation of an ExternalWorkload",
      "slug": "cpp-implementation-of-an-externalworkload",
      "posts_count": 6,
      "reply_count": 2,
      "highest_post_number": 6,
      "image_url": null,
      "created_at": "2022-06-15T19:05:16.764Z",
      "last_posted_at": "2022-08-18T08:53:10.968Z",
      "bumped": true,
      "bumped_at": "2022-08-18T10:09:30.281Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [
        "bindings"
      ],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 779,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 1121,
            "username": "Wonshtrum",
            "name": "Eloi D\u00e9molis",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/w/e36b37/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 14,
            "username": "andrew.noyes",
            "name": "",
            "avatar_template": "/user_avatar/forums.foundationdb.org/andrew.noyes/{size}/443_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 534,
            "username": "PierreZ",
            "name": "Pierre Zemb",
            "avatar_template": "/user_avatar/forums.foundationdb.org/pierrez/{size}/866_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "FreeBSD support for FoundationDB",
      "id": 357,
      "title": "FreeBSD support for FoundationDB",
      "slug": "freebsd-support-for-foundationdb",
      "posts_count": 28,
      "reply_count": 15,
      "highest_post_number": 28,
      "image_url": "https://global.discourse-cdn.com/foundationdb/optimized/1X/d398e4e4d091e9513c8c4b18d766da38a01f930e_2_1024x640.png",
      "created_at": "2018-05-06T16:36:03.074Z",
      "last_posted_at": "2018-08-01T02:53:16.728Z",
      "bumped": true,
      "bumped_at": "2018-08-01T02:53:16.728Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 9,
      "views": 4956,
      "category_id": 5,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 235,
            "username": "wolfspider",
            "name": "Jesse Bennett",
            "avatar_template": "/user_avatar/forums.foundationdb.org/wolfspider/{size}/206_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 22,
            "username": "dave",
            "name": "David Scherer",
            "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 173,
            "username": "jkominek",
            "name": "Jay Kominek",
            "avatar_template": "/user_avatar/forums.foundationdb.org/jkominek/{size}/140_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 30,
            "username": "wwilson",
            "name": "Will Wilson",
            "avatar_template": "/user_avatar/forums.foundationdb.org/wwilson/{size}/88_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 120,
            "username": "josephg",
            "name": "Seph Gentle",
            "avatar_template": "/user_avatar/forums.foundationdb.org/josephg/{size}/84_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Porting FoundationDB to Power (ppc64le)",
      "id": 1115,
      "title": "Porting FoundationDB to Power (ppc64le)",
      "slug": "porting-foundationdb-to-power-ppc64le",
      "posts_count": 23,
      "reply_count": 9,
      "highest_post_number": 23,
      "image_url": null,
      "created_at": "2019-02-05T10:43:39.843Z",
      "last_posted_at": "2019-09-20T22:27:07.374Z",
      "bumped": true,
      "bumped_at": "2019-09-20T22:27:07.374Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 3,
      "views": 2372,
      "category_id": 5,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 505,
            "username": "seth-priya",
            "name": "Priya Seth",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/db5fbb/{size}.png",
            "trust_level": 0
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 22,
            "username": "dave",
            "name": "David Scherer",
            "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 158,
            "username": "aseipp",
            "name": "Austin Seipp",
            "avatar_template": "/user_avatar/forums.foundationdb.org/aseipp/{size}/124_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 454,
            "username": "jzhou",
            "name": "Jingyu Zhou",
            "avatar_template": "/user_avatar/forums.foundationdb.org/jzhou/{size}/445_2.png",
            "admin": true,
            "moderator": true,
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Update FreeBSD port",
      "id": 1892,
      "title": "Update FreeBSD port",
      "slug": "update-freebsd-port",
      "posts_count": 15,
      "reply_count": 11,
      "highest_post_number": 15,
      "image_url": null,
      "created_at": "2020-01-22T14:29:00.580Z",
      "last_posted_at": "2020-11-03T21:39:34.580Z",
      "bumped": true,
      "bumped_at": "2020-11-03T21:39:34.580Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 5,
      "views": 1558,
      "category_id": 5,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 476,
            "username": "dch",
            "name": "Dave Cottlehuber",
            "avatar_template": "/user_avatar/forums.foundationdb.org/dch/{size}/473_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Proposal: Dropping MSVC",
      "id": 1939,
      "title": "Proposal: Dropping MSVC",
      "slug": "proposal-dropping-msvc",
      "posts_count": 13,
      "reply_count": 8,
      "highest_post_number": 13,
      "image_url": null,
      "created_at": "2020-02-12T01:24:59.706Z",
      "last_posted_at": "2020-02-13T20:00:39.983Z",
      "bumped": true,
      "bumped_at": "2020-02-13T20:00:39.983Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 12,
      "views": 1644,
      "category_id": 8,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 15,
            "username": "markus.pilman",
            "name": "Markus Pilman",
            "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 323,
            "username": "WolfDan",
            "name": "Wolf Dan",
            "avatar_template": "/user_avatar/forums.foundationdb.org/wolfdan/{size}/806_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 500,
            "username": "wohali",
            "name": "Joan Touzet",
            "avatar_template": "/user_avatar/forums.foundationdb.org/wohali/{size}/773_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 1121,
        "username": "Wonshtrum",
        "name": "Eloi D\u00e9molis",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/w/e36b37/{size}.png",
        "post_count": 6,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 454,
        "username": "jzhou",
        "name": "Jingyu Zhou",
        "avatar_template": "/user_avatar/forums.foundationdb.org/jzhou/{size}/445_2.png",
        "post_count": 3,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "admin": true,
        "moderator": true,
        "trust_level": 2
      },
      {
        "id": 910,
        "username": "ammolitor",
        "name": "Aaron Molitor",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ammolitor/{size}/1050_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      }
    ],
    "created_by": {
      "id": 1121,
      "username": "Wonshtrum",
      "name": "Eloi D\u00e9molis",
      "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/w/e36b37/{size}.png"
    },
    "last_poster": {
      "id": 454,
      "username": "jzhou",
      "name": "Jingyu Zhou",
      "avatar_template": "/user_avatar/forums.foundationdb.org/jzhou/{size}/445_2.png"
    },
    "links": [
      {
        "url": "https://github.com/apple/foundationdb/pull/11288",
        "title": "Draft: C workload bindings by Wonshtrum \u00b7 Pull Request #11288 \u00b7 apple/foundationdb \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 6,
        "user_id": 1121,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://github.com/apple/foundationdb/pull/11288",
        "title": "C workload bindings by Wonshtrum \u00b7 Pull Request #11288 \u00b7 apple/foundationdb \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 5,
        "user_id": 454,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://github.com/Wonshtrum/foundationdb/blob/c_workload_api/bindings/c/foundationdb/CWorkload.h",
        "title": "foundationdb/bindings/c/foundationdb/CWorkload.h at c_workload_api \u00b7 Wonshtrum/foundationdb \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 3,
        "user_id": 1121,
        "domain": "github.com",
        "root_domain": "github.com"
      }
    ]
  },
  "bookmarks": []
}