{
  "post_stream": {
    "posts": [
      {
        "id": 6229,
        "name": "Subramaniam R",
        "username": "subramaniamr",
        "avatar_template": "/user_avatar/forums.foundationdb.org/subramaniamr/{size}/658_2.png",
        "created_at": "2020-02-17T13:36:55.429Z",
        "cooked": "<p>I have a usecase to optimize a single large transaction which add/update/delete more than 10K keys. Value size are about 1KB with a upper bound of 32KB. Key size are typically 64bytes. The biggest problem is the number of keys which are part of the transaction.</p>\n<p>The bottleneck is mostly due to the business logic involved but I am trying to figure out the best way to optimize it.</p>\n<p>Business Logic - For each key lookup the previous instance from db (if exists) and check update count between old and new object. Typical flow is that the client does a plenty of business processing so the old reads could be from a different read version. So we need to do a second level check before writing to the database.</p>\n<p>Transaction Mutex - For certain type of transactions we need to serialize the writes, so we use a global mutex which gets updated for every write. This is how we serialize across multiple clients.</p>\n<blockquote>\n<p>Whole transaction is run by a single thread in a serial fashion.<br>\nEach key is stored twice in the database , One with a very small piece of metadata and other with actual value. Metadata is what is pulled for the checker. This includes the update count.<br>\nThe keys are not ordered. I cant do a range lookup to fetch those keys.<br>\nIts common to have 100 million keys in a production database.</p>\n</blockquote>\n<p>Measured latency - The end to end latency observed is about 2.5 seconds for 10K keys.  Of the 2.5 seconds about 1.5 seconds is taken by the checker function which looks up previous value of the new key.</p>\n<p>Questions -</p>\n<ol>\n<li>In java binding is the transaction Object thread-safe ? My idea is to spin multiple threads with the transaction object which will work on a set of keys in parallel. If its not thread-safe then create multiple txn and set the same readversion for lookups and run writes in the main transaction.</li>\n<li>99% of the keys will be insert - which means that key shouldnt exist in the database. But still I have to lookup this key to be 100% certain no-one hasnt created this as part of different transaction.<br>\nQuestion - Is looking up a non-existent key more expensive than a key which is recently written?<br>\nIs there any technique I can use to distinguish between create and update in an optimal way ?</li>\n<li>I suspect that since we read a very large key set as part of the same transaction the resolver has to validate a large set of keys for read-conflict. Is my understanding correct ? Any way to optimize it ?</li>\n<li>Will disabling RYW cache improve write performance ?</li>\n</ol>\n<p>Thanks for your help.</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 12,
        "updated_at": "2020-02-17T13:36:55.429Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 738,
        "reads": 80,
        "readers_count": 79,
        "score": 3706.0,
        "yours": false,
        "topic_id": 1961,
        "topic_slug": "optimizing-a-single-large-transaction-10-000-keys",
        "display_username": "Subramaniam R",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 645,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/optimizing-a-single-large-transaction-10-000-keys/1961/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 6230,
        "name": "Alec Grieser",
        "username": "alloc",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "created_at": "2020-02-17T14:58:16.771Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"subramaniamr\" data-post=\"1\" data-topic=\"1961\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/subramaniamr/48/658_2.png\" class=\"avatar\"> subramaniamr:</div>\n<blockquote>\n<p>I have a usecase to optimize a single large transaction which add/update/delete more than 10K keys. Value size are about 1KB with a upper bound of 32KB. Key size are typically 64bytes. The biggest problem is the number of keys which are part of the transaction.</p>\n</blockquote>\n</aside>\n<p>Note that there is a 10 MB limit to the size of FDB transactions. While the exact calculation there is somewhat complicated (as it includes the conflict ranges from reads and writes (more-or-less)), at a minimum, it must include all keys and values written in the transaction (and all key ranges cleared\u2013just the boundary <em>keys</em>, no values for clears). If you are updating 10k keys with an average size of 1 kB, then that is enough to hit the 10 MB limit. We also generally recommend that one try to keep transactions under 1 MB, if possible, as performance can degrade beyond that point. So, you may need to work around that limitation to make this work. (How exactly you do that kind of depends on your use case, etc.)</p>\n<p>See: <a href=\"https://apple.github.io/foundationdb/known-limitations.html#large-transactions\" class=\"inline-onebox\">Known Limitations \u2014 FoundationDB 7.1</a></p>\n<aside class=\"quote no-group\" data-username=\"subramaniamr\" data-post=\"1\" data-topic=\"1961\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/subramaniamr/48/658_2.png\" class=\"avatar\"> subramaniamr:</div>\n<blockquote>\n<p>In java binding is the transaction Object thread-safe ?</p>\n</blockquote>\n</aside>\n<p>Yes, the transaction object is thread-safe (modulo bugs). There are a few caveats to note, though. The first is that the FDB C client (which the Java bindings wrap) is itself single-threaded, and most client operations just push a task onto a task queue which the C client then consumes later. This means that multiple threads on one transaction each should have about the same performance (ish) as multiple threads on one transaction. The second is that all I/O to and from the database servers is asynchronous, so you can take advantage of parallelism even with the single-threaded architecture.</p>\n<aside class=\"quote no-group\" data-username=\"subramaniamr\" data-post=\"1\" data-topic=\"1961\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/subramaniamr/48/658_2.png\" class=\"avatar\"> subramaniamr:</div>\n<blockquote>\n<p>Is looking up a non-existent key more expensive than a key which is recently written?</p>\n</blockquote>\n</aside>\n<p>I\u2019m not 100% sure, but possibly. Note that recently written keys are likely to be in memory on the database servers, whereas that is less likely for non-existent keys. (Note that FDB keeps all recent mutations in memory for 5 seconds, at least, and then the pages are just likely to be in the page cache after that. Note that the pages that would contain that non-existent key might be in cache, so there isn\u2019t, for example, a <em>guarantee</em> or anything that the read will be entirely out of cache.) I would expect an out-of-cache read and an out of cache read of a non-existent key read to take about the same amount of time.</p>\n<p>It\u2019s possible I\u2019m wrong about this, and someone with more knowledge about the storage engines would have more informed opinions.</p>\n<aside class=\"quote no-group\" data-username=\"subramaniamr\" data-post=\"1\" data-topic=\"1961\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/subramaniamr/48/658_2.png\" class=\"avatar\"> subramaniamr:</div>\n<blockquote>\n<p>Is there any technique I can use to distinguish between create and update in an optimal way ?</p>\n</blockquote>\n</aside>\n<p>Purely relying on FDB, I don\u2019t think so (like, there aren\u2019t efficient \u201ccreate if absent\u201d primitives). There is possibly a way to do this at, like, the \u201clayer\u201d level (e.g., storing in one key information about what other keys are written), though those will all have trade-offs (e.g., write amplification from maintaining that index).</p>\n<aside class=\"quote no-group\" data-username=\"subramaniamr\" data-post=\"1\" data-topic=\"1961\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/subramaniamr/48/658_2.png\" class=\"avatar\"> subramaniamr:</div>\n<blockquote>\n<p>I suspect that since we read a very large key set as part of the same transaction the resolver has to validate a large set of keys for read-conflict. Is my understanding correct ? Any way to optimize it ?</p>\n</blockquote>\n</aside>\n<p>Yes, the resolver would have to check each key (ish) for any conflicts (so your understanding is correct). One trick you can play is you can add one single conflict range over <em>all</em> your data so that the resolver only needs to check it once. (So, for example, over the whole database with conflict range on from the empty byte array to <code>\\xff</code>, or if all of your data live in a single subspace, then over <code>subspace.range()</code>.) Then each read, rather than adding a new conflict range, will just notice that its read range is already contained in the already extant read conflict range. This has the disadvantage that your transaction could be failed (with a conflict) if any thing in that range changes (including on a key you didn\u2019t actually read), but it has the advantage of minimizing the number of conflict ranges (and therefore resolver work).</p>\n<p>You can play a similar trick with writes (adding a single write conflict range containing all data you might write).</p>\n<p>How much this buys you and whether it\u2019s worth it may require some tinkering. We actually do this in the Record Layer with some of our text indexes to minimize resolver load, but it may or may not help your use case.</p>\n<aside class=\"quote no-group\" data-username=\"subramaniamr\" data-post=\"1\" data-topic=\"1961\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/subramaniamr/48/658_2.png\" class=\"avatar\"> subramaniamr:</div>\n<blockquote>\n<p>Will disabling RYW cache improve write performance ?</p>\n</blockquote>\n</aside>\n<p>I wouldn\u2019t expect it to make that much of a difference, but I could be wrong. I think we had performance tests at one point, and I think the answer was that it might help like a little, but not too much. Note that it can actually also cause performance <em>problems</em>, as the RYW cache also controls (1) the read cache (so reading the same key twice in the same transaction, with RYW enabled, reads it from memory the second time, but if RYW is disabled, then it goes to the DB each time) and (2) mutation coalescing (so if you write the same key twice in the same transaction, with RYW enabled, a single mutation is written to the final transaction, but if RYW is disabled, then there is one mutation in the final transaction for each time you write to that key). Depending on your use case, those may or may not be optimizations that you\u2019re relying on. And then, well, there\u2019s also possible serializability problems introduced if you do read a key you wrote and don\u2019t see your own write.</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 12,
        "updated_at": "2020-02-17T14:58:16.771Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 1,
        "incoming_link_count": 33,
        "reads": 76,
        "readers_count": 75,
        "score": 185.2,
        "yours": false,
        "topic_id": 1961,
        "topic_slug": "optimizing-a-single-large-transaction-10-000-keys",
        "display_username": "Alec Grieser",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://apple.github.io/foundationdb/known-limitations.html#large-transactions",
            "internal": false,
            "reflection": false,
            "title": "Known Limitations \u2014 FoundationDB 6.2",
            "clicks": 21
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 8,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/optimizing-a-single-large-transaction-10-000-keys/1961/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6237,
        "name": "Subramaniam R",
        "username": "subramaniamr",
        "avatar_template": "/user_avatar/forums.foundationdb.org/subramaniamr/{size}/658_2.png",
        "created_at": "2020-02-18T05:36:45.056Z",
        "cooked": "<p>Thanks the detailed answer. It is very useful.</p>\n<aside class=\"quote no-group\" data-username=\"alloc\" data-post=\"2\" data-topic=\"1961\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/alloc/48/9_2.png\" class=\"avatar\"> alloc:</div>\n<blockquote>\n<p>Note that there is a 10 MB limit to the size of FDB transactions.</p>\n</blockquote>\n</aside>\n<p>Bigger transactions will be close to that limit, at the moment we are running with about 15MB txn size. We havent noticed much of a performance difference between 10MB and 15MB.  Also this is an extreme scenario and the normal loads about 1MB transactions.</p>\n<aside class=\"quote no-group\" data-username=\"alloc\" data-post=\"2\" data-topic=\"1961\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/alloc/48/9_2.png\" class=\"avatar\"> alloc:</div>\n<blockquote>\n<p>The second is that all I/O to and from the database servers is asynchronous, so you can take advantage of parallelism even with the single-threaded architecture.</p>\n</blockquote>\n</aside>\n<p>There is a bit of processing involved after every key is read, so processing in multiple threads actually help us.<br>\nHaving said that I see the performance doubles when I use 2 threads and after that point parallelism doesnt help. This is most likely the processing time in our layer than anything to do with fdb-driver itself.</p>\n<aside class=\"quote no-group\" data-username=\"alloc\" data-post=\"2\" data-topic=\"1961\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/alloc/48/9_2.png\" class=\"avatar\"> alloc:</div>\n<blockquote>\n<p>Purely relying on FDB, I don\u2019t think so (like, there aren\u2019t efficient \u201ccreate if absent\u201d primitives).</p>\n</blockquote>\n</aside>\n<p>I think it will be super useful to have such a feature (at least for us).  I dont know what others think of this. If there is interest I can raise a feature request for the same.</p>\n<aside class=\"quote no-group\" data-username=\"alloc\" data-post=\"2\" data-topic=\"1961\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/alloc/48/9_2.png\" class=\"avatar\"> alloc:</div>\n<blockquote>\n<p>You can play a similar trick with writes (adding a single write conflict range containing all data you might write).</p>\n</blockquote>\n</aside>\n<p>I think if I can get this working then it will save a lot of processing time in the resolver. I will give it a go, thanks for the suggestion.</p>\n<p>One more random question, is there a way to disable read-conflict checks  for a specific transaction ? In some cases write-conflict is good enough \u2026</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 12,
        "updated_at": "2020-02-18T05:36:45.056Z",
        "reply_count": 3,
        "reply_to_post_number": 2,
        "quote_count": 1,
        "incoming_link_count": 5,
        "reads": 64,
        "readers_count": 63,
        "score": 52.8,
        "yours": false,
        "topic_id": 1961,
        "topic_slug": "optimizing-a-single-large-transaction-10-000-keys",
        "display_username": "Subramaniam R",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 645,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/optimizing-a-single-large-transaction-10-000-keys/1961/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6238,
        "name": "gaurav",
        "username": "gaurav",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
        "created_at": "2020-02-18T08:44:18.056Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"subramaniamr\" data-post=\"3\" data-topic=\"1961\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/subramaniamr/48/658_2.png\" class=\"avatar\"> subramaniamr:</div>\n<blockquote>\n<p>One more random question, is there a way to disable read-conflict checks for a specific transaction ? In some cases write-conflict is good enough \u2026</p>\n</blockquote>\n</aside>\n<p>Pease see if this helps: <a href=\"https://apple.github.io/foundationdb/developer-guide.html#snapshot-reads\" class=\"inline-onebox\">Developer Guide \u2014 FoundationDB 7.1</a></p>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 12,
        "updated_at": "2020-02-18T08:44:18.056Z",
        "reply_count": 1,
        "reply_to_post_number": 3,
        "quote_count": 1,
        "incoming_link_count": 5,
        "reads": 52,
        "readers_count": 51,
        "score": 40.4,
        "yours": false,
        "topic_id": 1961,
        "topic_slug": "optimizing-a-single-large-transaction-10-000-keys",
        "display_username": "gaurav",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://apple.github.io/foundationdb/developer-guide.html#snapshot-reads",
            "internal": false,
            "reflection": false,
            "title": "Developer Guide \u2014 FoundationDB 6.2",
            "clicks": 23
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 166,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/optimizing-a-single-large-transaction-10-000-keys/1961/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6239,
        "name": "Subramaniam R",
        "username": "subramaniamr",
        "avatar_template": "/user_avatar/forums.foundationdb.org/subramaniamr/{size}/658_2.png",
        "created_at": "2020-02-18T10:07:03.548Z",
        "cooked": "<p>This is exactly what we need. Thanks.</p>",
        "post_number": 5,
        "post_type": 1,
        "posts_count": 12,
        "updated_at": "2020-02-18T10:07:03.548Z",
        "reply_count": 0,
        "reply_to_post_number": 4,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 53,
        "readers_count": 52,
        "score": 10.6,
        "yours": false,
        "topic_id": 1961,
        "topic_slug": "optimizing-a-single-large-transaction-10-000-keys",
        "display_username": "Subramaniam R",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 166,
          "username": "gaurav",
          "name": "gaurav",
          "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 645,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/optimizing-a-single-large-transaction-10-000-keys/1961/5",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6241,
        "name": "Alec Grieser",
        "username": "alloc",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "created_at": "2020-02-18T14:07:46.277Z",
        "cooked": "<p>Happy to help!</p>\n<aside class=\"quote no-group\" data-username=\"subramaniamr\" data-post=\"3\" data-topic=\"1961\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/subramaniamr/48/658_2.png\" class=\"avatar\"> subramaniamr:</div>\n<blockquote>\n<p>Bigger transactions will be close to that limit, at the moment we are running with about 15MB txn size.</p>\n</blockquote>\n</aside>\n<p>Oh, are you playing with some of the knobs to make that happen? I suppose that\u2019s a thing you can do, though one should always be careful when fiddling with those, as changing their values can have sometimes degrade performance (or sometimes correctness (!!)). Large transactions like that, for example, can cause SlowTasks on the proxy (and maybe log) processes.</p>\n<aside class=\"quote no-group\" data-username=\"subramaniamr\" data-post=\"3\" data-topic=\"1961\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/subramaniamr/48/658_2.png\" class=\"avatar\"> subramaniamr:</div>\n<blockquote>\n<p>I think it will be super useful to have such a feature (at least for us). I dont know what others think of this. If there is interest I can raise a feature request for the same.</p>\n</blockquote>\n</aside>\n<p>I think one could add this through the atomic mutation framework that we already use for things like \u201cincrement a value by some amount\u201d, so I don\u2019t think this feature is incompatible with FDB\u2019s architecture. So, if you were to request the feature, I think it could be done (if there is someone with the time to do it).</p>\n<aside class=\"quote no-group\" data-username=\"subramaniamr\" data-post=\"3\" data-topic=\"1961\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/subramaniamr/48/658_2.png\" class=\"avatar\"> subramaniamr:</div>\n<blockquote>\n<p>One more random question, is there a way to disable read-conflict checks for a specific transaction ? In some cases write-conflict is good enough \u2026</p>\n</blockquote>\n</aside>\n<p>If you perform all of your reads at \u201csnapshot\u201d isolation level (e.g., call <code>tr.snapshot()</code> to get a read-only view of the transaction), then none of the reads will add read conflict ranges. This is only a good idea if you really are sure you only need to the write conflicts, but it\u2019s a thing you can do.</p>",
        "post_number": 6,
        "post_type": 1,
        "posts_count": 12,
        "updated_at": "2020-02-18T14:07:46.277Z",
        "reply_count": 1,
        "reply_to_post_number": 3,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 53,
        "readers_count": 52,
        "score": 15.6,
        "yours": false,
        "topic_id": 1961,
        "topic_slug": "optimizing-a-single-large-transaction-10-000-keys",
        "display_username": "Alec Grieser",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 8,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/optimizing-a-single-large-transaction-10-000-keys/1961/6",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6246,
        "name": "Alex Miller",
        "username": "alexmiller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "created_at": "2020-02-18T21:46:19.768Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"subramaniamr\" data-post=\"3\" data-topic=\"1961\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/subramaniamr/48/658_2.png\" class=\"avatar\"> subramaniamr:</div>\n<blockquote>\n<p>In some cases write-conflict is good enough \u2026</p>\n</blockquote>\n</aside>\n<p>Just to be clear, FDB doesn\u2019t abort on write-write conflicts.  If you have two FDB transactions, that in time order do:</p>\n<pre><code class=\"lang-auto\">T1:    Write(X)                Commit()\nT2:                Write(x)                 Commit()\n</code></pre>\n<p>Then both T1 and T2 will successfully commit.</p>",
        "post_number": 7,
        "post_type": 1,
        "posts_count": 12,
        "updated_at": "2020-02-18T21:46:19.768Z",
        "reply_count": 1,
        "reply_to_post_number": 3,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 44,
        "readers_count": 43,
        "score": 13.8,
        "yours": false,
        "topic_id": 1961,
        "topic_slug": "optimizing-a-single-large-transaction-10-000-keys",
        "display_username": "Alex Miller",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 13,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/optimizing-a-single-large-transaction-10-000-keys/1961/7",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6300,
        "name": "Subramaniam R",
        "username": "subramaniamr",
        "avatar_template": "/user_avatar/forums.foundationdb.org/subramaniamr/{size}/658_2.png",
        "created_at": "2020-02-24T09:16:11.678Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"alloc\" data-post=\"6\" data-topic=\"1961\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/alloc/48/9_2.png\" class=\"avatar\"> alloc:</div>\n<blockquote>\n<p>are you playing with some of the knobs to make that happen? I suppose that\u2019s a thing you can do, though one should always be careful when fiddling with those, as changing their values can have sometimes degrade performance (or sometimes correctness (!!)).</p>\n</blockquote>\n</aside>\n<p>yes, we are tweaking the knobs to cater for bigger transactions. Txns bigger than 10MB are outliers and shouldnt happen often. We are OK with things being slow for bigger transactions but I would assume correctness will not be compromised ?</p>\n<p>If correctness is compromised then the knob should not be even exposed in my opinion.</p>\n<aside class=\"quote no-group\" data-username=\"alloc\" data-post=\"6\" data-topic=\"1961\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/alloc/48/9_2.png\" class=\"avatar\"> alloc:</div>\n<blockquote>\n<p>So, if you were to request the feature, I think it could be done (if there is someone with the time to do it).</p>\n</blockquote>\n</aside>\n<p>Thanks for the feedback. I will add a feature request.</p>",
        "post_number": 8,
        "post_type": 1,
        "posts_count": 12,
        "updated_at": "2020-02-24T09:16:11.678Z",
        "reply_count": 0,
        "reply_to_post_number": 6,
        "quote_count": 1,
        "incoming_link_count": 1,
        "reads": 38,
        "readers_count": 37,
        "score": 12.6,
        "yours": false,
        "topic_id": 1961,
        "topic_slug": "optimizing-a-single-large-transaction-10-000-keys",
        "display_username": "Subramaniam R",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 645,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/optimizing-a-single-large-transaction-10-000-keys/1961/8",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6301,
        "name": "Subramaniam R",
        "username": "subramaniamr",
        "avatar_template": "/user_avatar/forums.foundationdb.org/subramaniamr/{size}/658_2.png",
        "created_at": "2020-02-24T09:21:54.972Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"alexmiller\" data-post=\"7\" data-topic=\"1961\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/alexmiller/48/326_2.png\" class=\"avatar\"> alexmiller:</div>\n<blockquote>\n<p>Then both T1 and T2 will successfully commit.</p>\n</blockquote>\n</aside>\n<p>Not sure if I fully understand this example, you mean if T2.ReadVersion &lt;= T1.ReadVersion  &amp;&amp; T1.commit() succeeds then T2 will not result in write-conflict (atleast gets retried) ?</p>\n<p>We will be fine if the transactions gets retried. But minimally retry should trigger.</p>",
        "post_number": 9,
        "post_type": 1,
        "posts_count": 12,
        "updated_at": "2020-02-24T09:21:54.972Z",
        "reply_count": 1,
        "reply_to_post_number": 7,
        "quote_count": 1,
        "incoming_link_count": 1,
        "reads": 39,
        "readers_count": 38,
        "score": 17.8,
        "yours": false,
        "topic_id": 1961,
        "topic_slug": "optimizing-a-single-large-transaction-10-000-keys",
        "display_username": "Subramaniam R",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 645,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/optimizing-a-single-large-transaction-10-000-keys/1961/9",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6302,
        "name": "gaurav",
        "username": "gaurav",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
        "created_at": "2020-02-24T10:01:59.710Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"subramaniamr\" data-post=\"9\" data-topic=\"1961\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/subramaniamr/48/658_2.png\" class=\"avatar\"> subramaniamr:</div>\n<blockquote>\n<p>Not sure if I fully understand this example, you mean if T2.ReadVersion &lt;= T1.ReadVersion &amp;&amp; T1.commit() succeeds then T2 will not result in write-conflict (atleast gets retried) ?</p>\n</blockquote>\n</aside>\n<p>For a transaction to be conflicted it must satisfy two things:</p>\n<p>(a) It must have read-conflict range - either added implicitly when doing a read via get/get_range, or an explicitly added a read-conflict.<br>\n(b) AND it must have a mutation (set or clear).</p>\n<p>The transaction is said to be conflicted if at the <code>commit()</code> time, any of its read keys have been possibly modified since the <code>getReadVersion</code> of this transaction.</p>\n<p>If either of the two properties is not satisfied, then the transaction cannot be conflicted (or invalidated) by other transactions.</p>\n<p>In the example that Alex gave above, property (a) is not satisfied.</p>\n<p>Similarly, a read-only transaction does not satisfy property (b) and thus cannot be conflicted (underneath, such a transaction does not even make a commit() call, as there is nothing to commit; thus no conflict checking is possible for these).</p>",
        "post_number": 10,
        "post_type": 1,
        "posts_count": 12,
        "updated_at": "2020-02-24T10:12:39.797Z",
        "reply_count": 1,
        "reply_to_post_number": 9,
        "quote_count": 1,
        "incoming_link_count": 5,
        "reads": 38,
        "readers_count": 37,
        "score": 52.6,
        "yours": false,
        "topic_id": 1961,
        "topic_slug": "optimizing-a-single-large-transaction-10-000-keys",
        "display_username": "gaurav",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 166,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/optimizing-a-single-large-transaction-10-000-keys/1961/10",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6303,
        "name": "Subramaniam R",
        "username": "subramaniamr",
        "avatar_template": "/user_avatar/forums.foundationdb.org/subramaniamr/{size}/658_2.png",
        "created_at": "2020-02-24T10:54:30.046Z",
        "cooked": "<p>I got it. so</p>\n<blockquote>\n<p>T2 { Read (x) ; write (x); commit; } // conflict since x is read and then updated.</p>\n</blockquote>\n<p>will result in a conflict. That makes sense and we are fine with it.</p>",
        "post_number": 11,
        "post_type": 1,
        "posts_count": 12,
        "updated_at": "2020-02-24T10:54:30.046Z",
        "reply_count": 1,
        "reply_to_post_number": 10,
        "quote_count": 0,
        "incoming_link_count": 6,
        "reads": 38,
        "readers_count": 37,
        "score": 42.6,
        "yours": false,
        "topic_id": 1961,
        "topic_slug": "optimizing-a-single-large-transaction-10-000-keys",
        "display_username": "Subramaniam R",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 166,
          "username": "gaurav",
          "name": "gaurav",
          "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 645,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/optimizing-a-single-large-transaction-10-000-keys/1961/11",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6304,
        "name": "gaurav",
        "username": "gaurav",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
        "created_at": "2020-02-24T11:30:42.854Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"subramaniamr\" data-post=\"11\" data-topic=\"1961\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/subramaniamr/48/658_2.png\" class=\"avatar\"> subramaniamr:</div>\n<blockquote>\n<p>will result in a conflict. That makes sense and we are fine with it.</p>\n</blockquote>\n</aside>\n<p>Yes that is correct. But note that at <code>snapshot</code> transaction level (that you asked about earlier), a read R(x) will not add a read_conflict implicitly to the transaction; and so the transaction will not conflict. You can either not use snapshot transaction, or use them but add a read_conflict explicitly as demonstrated in the doc I linked earlier.</p>",
        "post_number": 12,
        "post_type": 1,
        "posts_count": 12,
        "updated_at": "2020-02-24T11:30:42.854Z",
        "reply_count": 0,
        "reply_to_post_number": 11,
        "quote_count": 1,
        "incoming_link_count": 3,
        "reads": 38,
        "readers_count": 37,
        "score": 22.6,
        "yours": false,
        "topic_id": 1961,
        "topic_slug": "optimizing-a-single-large-transaction-10-000-keys",
        "display_username": "gaurav",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 166,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/optimizing-a-single-large-transaction-10-000-keys/1961/12",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      6229,
      6230,
      6237,
      6238,
      6239,
      6241,
      6246,
      6300,
      6301,
      6302,
      6303,
      6304
    ]
  },
  "timeline_lookup": [
    [
      1,
      2073
    ],
    [
      6,
      2072
    ],
    [
      8,
      2067
    ],
    [
      11,
      2066
    ]
  ],
  "suggested_topics": [],
  "tags": [
    "performance"
  ],
  "tags_descriptions": {},
  "fancy_title": "Optimizing a single large transaction ( 10,000 keys)",
  "id": 1961,
  "title": "Optimizing a single large transaction ( 10,000 keys)",
  "posts_count": 12,
  "created_at": "2020-02-17T13:36:55.355Z",
  "views": 2373,
  "reply_count": 10,
  "like_count": 1,
  "last_posted_at": "2020-02-24T11:30:42.854Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "optimizing-a-single-large-transaction-10-000-keys",
  "category_id": 7,
  "word_count": 2684,
  "deleted_at": null,
  "user_id": 645,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_1961",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 12,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 4,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "Questions regarding FDB transaction conflict on two concurrent transactions",
      "id": 2913,
      "title": "Questions regarding FDB transaction conflict on two concurrent transactions",
      "slug": "questions-regarding-fdb-transaction-conflict-on-two-concurrent-transactions",
      "posts_count": 10,
      "reply_count": 5,
      "highest_post_number": 10,
      "image_url": null,
      "created_at": "2021-09-28T06:26:34.642Z",
      "last_posted_at": "2021-10-28T08:17:02.264Z",
      "bumped": true,
      "bumped_at": "2021-10-28T09:13:59.130Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 3,
      "views": 2185,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 550,
            "username": "ntrhieu89",
            "name": "Hieu Nguyen",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ntrhieu89/{size}/587_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "A few design-pattern + check-my-understanding questions",
      "id": 1153,
      "title": "A few design-pattern + check-my-understanding questions",
      "slug": "a-few-design-pattern-check-my-understanding-questions",
      "posts_count": 10,
      "reply_count": 6,
      "highest_post_number": 10,
      "image_url": null,
      "created_at": "2019-02-19T15:18:58.329Z",
      "last_posted_at": "2019-02-21T19:51:53.686Z",
      "bumped": true,
      "bumped_at": "2019-02-21T19:51:53.686Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 2273,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 519,
            "username": "JamesThompson",
            "name": "James Thompson",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/j/c67d28/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 173,
            "username": "jkominek",
            "name": "Jay Kominek",
            "avatar_template": "/user_avatar/forums.foundationdb.org/jkominek/{size}/140_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Relax consistency guarantees",
      "id": 1560,
      "title": "Relax consistency guarantees",
      "slug": "relax-consistency-guarantees",
      "posts_count": 18,
      "reply_count": 14,
      "highest_post_number": 19,
      "image_url": null,
      "created_at": "2019-08-05T00:31:11.823Z",
      "last_posted_at": "2019-10-30T15:35:37.702Z",
      "bumped": true,
      "bumped_at": "2019-10-30T15:35:37.702Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 2278,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 542,
            "username": "jonahwest",
            "name": "",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/j/90db22/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 14,
            "username": "andrew.noyes",
            "name": "",
            "avatar_template": "/user_avatar/forums.foundationdb.org/andrew.noyes/{size}/443_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 15,
            "username": "markus.pilman",
            "name": "Markus Pilman",
            "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Technical overview of the database",
      "id": 135,
      "title": "Technical overview of the database",
      "slug": "technical-overview-of-the-database",
      "posts_count": 27,
      "reply_count": 15,
      "highest_post_number": 27,
      "image_url": null,
      "created_at": "2018-04-20T15:30:31.788Z",
      "last_posted_at": "2019-01-11T23:25:47.462Z",
      "bumped": true,
      "bumped_at": "2019-01-11T23:25:47.462Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 64,
      "views": 12958,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 96,
            "username": "idiot",
            "name": "",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/i/f04885/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 22,
            "username": "dave",
            "name": "David Scherer",
            "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 443,
            "username": "junius",
            "name": "junius",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/j/f08c70/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 54,
            "username": "Evan",
            "name": "Evan Tschannen",
            "avatar_template": "/user_avatar/forums.foundationdb.org/evan/{size}/104_2.png",
            "moderator": true,
            "trust_level": 1
          }
        }
      ]
    },
    {
      "fancy_title": "Transaction/operation throughput",
      "id": 1880,
      "title": "Transaction/operation throughput",
      "slug": "transaction-operation-throughput",
      "posts_count": 11,
      "reply_count": 5,
      "highest_post_number": 11,
      "image_url": null,
      "created_at": "2020-01-14T22:48:44.649Z",
      "last_posted_at": "2020-01-23T15:09:25.796Z",
      "bumped": true,
      "bumped_at": "2020-01-23T15:09:25.796Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [
        "performance"
      ],
      "tags_descriptions": {},
      "like_count": 6,
      "views": 2027,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 679,
            "username": "Daniel-B-Smith",
            "name": "Daniel Smith",
            "avatar_template": "/user_avatar/forums.foundationdb.org/daniel-b-smith/{size}/743_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 81,
            "username": "ryanworl",
            "name": "Ryan Worl",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 321,
            "username": "poma",
            "name": "Roman Semenov",
            "avatar_template": "/user_avatar/forums.foundationdb.org/poma/{size}/325_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 645,
        "username": "subramaniamr",
        "name": "Subramaniam R",
        "avatar_template": "/user_avatar/forums.foundationdb.org/subramaniamr/{size}/658_2.png",
        "post_count": 6,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      },
      {
        "id": 166,
        "username": "gaurav",
        "name": "gaurav",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
        "post_count": 3,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 3
      },
      {
        "id": 8,
        "username": "alloc",
        "name": "Alec Grieser",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      },
      {
        "id": 13,
        "username": "alexmiller",
        "name": "Alex Miller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      }
    ],
    "created_by": {
      "id": 645,
      "username": "subramaniamr",
      "name": "Subramaniam R",
      "avatar_template": "/user_avatar/forums.foundationdb.org/subramaniamr/{size}/658_2.png"
    },
    "last_poster": {
      "id": 166,
      "username": "gaurav",
      "name": "gaurav",
      "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png"
    },
    "links": [
      {
        "url": "https://apple.github.io/foundationdb/developer-guide.html#snapshot-reads",
        "title": "Developer Guide \u2014 FoundationDB 6.2",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 23,
        "user_id": 166,
        "domain": "apple.github.io",
        "root_domain": "apple.github.io"
      },
      {
        "url": "https://apple.github.io/foundationdb/known-limitations.html#large-transactions",
        "title": "Known Limitations \u2014 FoundationDB 6.2",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 21,
        "user_id": 8,
        "domain": "apple.github.io",
        "root_domain": "apple.github.io"
      }
    ]
  },
  "bookmarks": []
}