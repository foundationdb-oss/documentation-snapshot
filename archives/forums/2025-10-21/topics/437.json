{
  "post_stream": {
    "posts": [
      {
        "id": 1184,
        "name": "Christophe Chevalier",
        "username": "KrzysFR",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "created_at": "2018-05-19T12:26:50.632Z",
        "cooked": "<p>Following the discussion in <a href=\"https://forums.foundationdb.org/t/how-do-bindings-get-an-appropriate-copy-of-fdb-c/311/7?u=krzysfr\">How do bindings get an appropriate copy of `fdb_c`?</a>, it looks like it would be a great help if bindings and/or custom deployment scripts could be able to detect the version of a currently running fdb cluster, <em>without</em> requiring to have the appropriate version of <code>libfdb_c</code> installed.</p>\n<p>The goal would be to detect the current version (let say 5.1.7 currently), then obtain the corresponding <code>libfdb_c</code> library, either by downloading it from a private repo or directlty from <a href=\"http://foundationdb.org\" rel=\"nofollow noopener\">foundationdb.org</a>, and then we could be in the expected situation of having a matching libfdb_c version installed for bindings to use.</p>\n<p>Currently, you need an already existing compatible version of libfdb_c (so for our example, at least an 5.1.x version) to bootstrap the process.</p>\n<p>For custom scripts that must deploy an application without previous knowledge of the running cluster version, this can be tricky.</p>\n<p>For example, today I create a custom installation script that targets fdb 5.1.x, and I ship a version of my binding that supports at least API version 510, and in the setup I also ship <code>libfdb_c_5.1.7.dll</code>. Assuming I also instruct the adminsys to setup a 5.1.x cluster for the application to use, this will work fine.</p>\n<p>But let\u2019s say in 2 or 3 years, the fdb cluster has already been upgraded to something like v7.1.x, and all the sudden a major event wipes the application server and they must be reinstalled using the initial setup script (or maybe they move to a new datacenter, a new OS version, etc\u2026). During all that, the fdb cluster is stil running fine and will stay at version 7.1</p>\n<p>The custom script will reinstall libfdb_5_1_7.dll but then it will not be able to connect to the cluster, and all the error messages will probably not give me the actual cluster version. So the customer will have to get in contact, and request an updated version of the installation script. Or maybe if they know about the problem, they would need to customize the install package themselves to replace the libfdbc after install (not easy to do with MSI or custom package systems).</p>\n<p>An ideal solution would be that all (future) versions of libfdb_c would have an additional API that would use a very simple way to get the current version of a cluster:</p>\n<ul>\n<li>the custom script could load any version of libfdb_c it has, call this method, and get the current version.</li>\n<li>if the version matches the currently loaded libfdb_c then proceed with the rest of the installation as planed.</li>\n<li>if the version does not matches:\n<ul>\n<li>either abort with an explicit error message: <em><code>\"You need to download version x.y from foobar.org and place in this folder / edit this file / etc..\"</code></em>\n</li>\n<li>download the library itself from any source, replace the library with the appropriate one, and then continue the install.</li>\n</ul>\n</li>\n</ul>\n<p>As a side bonus, if a binding would load the currently deployed libfdb_c library, and start getting errors about the version not matching the cluster, it could call the same API and display a more useful error message: <em><code>\"you libfdc_c library found at /path/to/somewhere is version X.x but the cluster is version Y.y that is not compatible. You need to updadate the library and restart the process.\"</code></em></p>\n<p>notes:</p>\n<ul>\n<li>I don\u2019t think we can rely on using <code>fdbcli</code> because if we have a running fdbcli installed locally, then it means we already have the client binaries installed on the app server, and here we are talking about custom deployment scenarios.</li>\n<li>the library would probably need to get access to a valid <code>fdb.cluster</code> that would probably be in a custom path, so the API would need to request the path to the cluster file.</li>\n<li>I\u2019m not sure if the cluster name is still require to be \u201cDB\u201d, but if it can change in the future, the API should also ask for this.</li>\n</ul>\n<p>Something like this?</p>\n<p><code>int fdb_get_cluster_version(char* cluster_file, char* db_name)</code></p>\n<p>I\u2019m not sure if it should return the current version in the same format as the API version, so <code>517</code>, or may a more traditional version string like <code>5.1.7</code> ? It should also be able to return an error code signaling that the version of the cluster is so different that it does not even support this request anymore.</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 8,
        "updated_at": "2018-05-19T12:27:56.854Z",
        "reply_count": 2,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 667,
        "reads": 93,
        "readers_count": 92,
        "score": 3408.6,
        "yours": false,
        "topic_id": 437,
        "topic_slug": "new-api-to-get-the-version-of-a-running-cluster-without-needing-a-matching-libfdb-c-library",
        "display_username": "Christophe Chevalier",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://forums.foundationdb.org/t/how-do-bindings-get-an-appropriate-copy-of-fdb-c/311/7",
            "internal": true,
            "reflection": false,
            "title": "How do bindings get an appropriate copy of `fdb_c`?",
            "clicks": 14
          },
          {
            "url": "http://foundationdb.org",
            "internal": false,
            "reflection": false,
            "clicks": 4
          },
          {
            "url": "https://forums.foundationdb.org/t/how-do-bindings-get-an-appropriate-copy-of-fdb-c/311/8",
            "internal": true,
            "reflection": true,
            "title": "How do bindings get an appropriate copy of `fdb_c`?",
            "clicks": 1
          },
          {
            "url": "https://forums.foundationdb.org/t/header-version-in-bindings/1113/6",
            "internal": true,
            "reflection": true,
            "title": "Header version in bindings",
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 3
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 53,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/new-api-to-get-the-version-of-a-running-cluster-without-needing-a-matching-libfdb-c-library/437/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 1188,
        "name": "Jared2501",
        "username": "jared2501",
        "avatar_template": "/user_avatar/forums.foundationdb.org/jared2501/{size}/266_2.png",
        "created_at": "2018-05-20T07:20:48.009Z",
        "cooked": "<p>One thing to note is that the industry is quickly heading to deploying using immutable containers (i.e. docker, kubernetes, etc). Using an immutable container deploy model the situation you describe (where an admin moves datacenters using an initial deploy script) is no longer a concern since upgrading FDB client libraries involves publishing new containers with new client libs, rather than mutating the state of a running image. When an admin moves datacenters using containers they will likely just tell the cluster manager to drain from datacenter A into datacenter B (or redeploy all containers from A into B using the current/latest versions). In the immutable container world, downloading DLLs would be considered a \u201cbad\u201d thing.</p>\n<p>All that being said, the rest of the proposal sounds great (including offering an error to the user for mismatched client/server versions) <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=5\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\"></p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 8,
        "updated_at": "2018-05-20T07:20:48.009Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 3,
        "reads": 84,
        "readers_count": 83,
        "score": 31.8,
        "yours": false,
        "topic_id": 437,
        "topic_slug": "new-api-to-get-the-version-of-a-running-cluster-without-needing-a-matching-libfdb-c-library",
        "display_username": "Jared2501",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 260,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/new-api-to-get-the-version-of-a-running-cluster-without-needing-a-matching-libfdb-c-library/437/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 1194,
        "name": "Alec Grieser",
        "username": "alloc",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "created_at": "2018-05-21T01:44:05.205Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"KrzysFR\" data-post=\"1\" data-topic=\"437\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/krzysfr/48/43_2.png\" class=\"avatar\"> KrzysFR:</div>\n<blockquote>\n<p>The goal would be to detect the current version (let say 5.1.7 currently), then obtain the corresponding libfdb_c library, either by downloading it from a private repo or directlty from <a href=\"http://foundationdb.org\">foundationdb.org</a></p>\n</blockquote>\n</aside>\n<p>You could also deploy along side your app a folder with one version of libfdb_c for each minor version of FDB and use a mechanism like this to choose the right one from among those options. In some sense, this is what the multi-version client is already doing, but this would let you, say, load the most recent libfdb_c as the primary and one of every minor version as multi-version clients for all versions as new as the server version. This makes you ready for no-downtime upgrades of whatever cluster you are connecting to without having extraneous external clients loaded, which can introduce extra traffic (though I think on release-5.2, there is a change so that versions as new as 5.2 won\u2019t be as expensive to load as incompatible secondary clients, so maybe that\u2019s not such a big deal). This isn\u2019t quite the problem you\u2019re trying to solve (I don\u2019t think), but it\u2019s somewhat related.</p>\n<aside class=\"quote no-group\" data-username=\"KrzysFR\" data-post=\"1\" data-topic=\"437\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/krzysfr/48/43_2.png\" class=\"avatar\"> KrzysFR:</div>\n<blockquote>\n<p>the custom script could load any version of libfdb_c it has, call this method, and get the current version.</p>\n</blockquote>\n</aside>\n<p>Would this be more convenient as an fdbcli command? I guess it depends on what you mean by \u201cscript\u201d, but it seems to me that if this is a shell script, it seems weird to load a DLL and (somehow) call a function inside of it rather than issuing a CLI command. I can see other instances where an API call is the easiest thing, though, so I\u2019m not saying that a method in FDB C is necessarily the wrong thing. In other words, would it be better if it existed in both places?</p>\n<aside class=\"quote no-group\" data-username=\"KrzysFR\" data-post=\"1\" data-topic=\"437\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/krzysfr/48/43_2.png\" class=\"avatar\"> KrzysFR:</div>\n<blockquote>\n<p>As a side bonus, if a binding would load the currently deployed libfdb_c library, and start getting errors about the version not matching the cluster, it could call the same API and display a more useful error message</p>\n</blockquote>\n</aside>\n<p>One slightly tricky case to handle is the upgrade case. Arguably, the correct behavior is (1) if the version of the client is <em>newer</em> than the version of the server, than it could be that the client has been upgraded before the server and there is an ongoing upgrade, so keep looping until the cluster is upgraded (the current behavior) and (2) if the version of the client is <em>older</em> than the version of the server, because we don\u2019t support downgrading, this must be a configuration issue, so you should throw an error about version incompatibilities. Then some care needs to be taken in the multi-version transaction class to only surface the (non-retriable) error all the way up if none of the loaded fdb_c versions are compatible.</p>\n<hr>\n<p>Would the API call make more sense as a member on an FDBCluster (or FDBDatabase)? So, something like:</p>\n<pre><code class=\"lang-auto\">int fdb_cluster_get_version(FDBCluster* cluster);\n</code></pre>\n<p>It seems like the \u201ccluster\u201d is the thing that has a version, given that all databases (or, well, the one database) in a cluster will share a version, and then you would specify how it gets the cluster file and DB name* in the normal way (i.e., the same way it is done for all other operations). Presumably, this would all be hidden from the user if they did happen to have a CLI lying around, but if they didn\u2019t, they could do something like <code>fdb.createCluster(path_to_cluster_file).getVersion()</code> in their binding of choice.</p>\n<p>From an implementation point of view, it\u2019s probably easiest to get the protocol version, given that all messages already have that meta-data inside of them, so it would just require the node attempt to talk to the cluster and see what the header is. This is also the thing that actually determines whether the client can\u2019t talk to the server (i.e., it is protocol version mismatch that more strictly prohibits two versions from communicating), so in some sense, it\u2019s the thing that you actually have to watch out for changing. However, it is also really supposed to be an internal number, so while having clients look at it to see if it matches expectations or not\u2026somewhat makes sense, but it would seem weird if they started looking at it and using that to guess what the semantic version was.</p>\n<p>I think you\u2019d want to return the version as a string, but I could be wrong. Returning it as a single integer like the API version seems somewhat weird to me, but I guess it depends on whether you want this endpoint for human edification or for machines to make decisions on. (For the latter, you might want to put it in some kind of struct with major, minor, and patch fields.) And then you have to ask if your script needs to be able to handle different servers with different protocol versions within a <em>prerelease</em> build. (Until we actually release a version of fdbserver, we might update the protocol version of unreleased software at will multiple times. This let\u2019s us experiment with the protocol freely until such time as it\u2019s ready to release.)</p>\n<p>But those are just my two cents. I\u2019m also not convinced that I actually said anything after saying so much, but that\u2019s what came to mind.</p>\n<p>* The create cluster API still takes a DB name, and it is still the case that it will throw an error if it isn\u2019t literally \u201cDB\u201d. Some of the bindings, like the Java bindings, no longer give the user the ability to specify anything else.</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 8,
        "updated_at": "2018-05-21T01:44:05.205Z",
        "reply_count": 2,
        "reply_to_post_number": null,
        "quote_count": 1,
        "incoming_link_count": 6,
        "reads": 86,
        "readers_count": 85,
        "score": 57.2,
        "yours": false,
        "topic_id": 437,
        "topic_slug": "new-api-to-get-the-version-of-a-running-cluster-without-needing-a-matching-libfdb-c-library",
        "display_username": "Alec Grieser",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 8,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/new-api-to-get-the-version-of-a-running-cluster-without-needing-a-matching-libfdb-c-library/437/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 1198,
        "name": "Christophe Chevalier",
        "username": "KrzysFR",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "created_at": "2018-05-21T08:37:16.476Z",
        "cooked": "<p>Maybe I should have clarified previously: We want to deploy and use FDB as part of a solution that can be installed by people with minimal to no training at all, so everything must be as automated as possible, without requiring user input, and we cannot assume that they will always perform the most appropriate action.</p>\n<p>For the vast majority of the installs, I foresee very tiny deployments, either 1 or maybe 3 servers in the cluster. If the customer does not choose to buy upgrades or a technical support contract, he/she must still be able to reinstall/re-deploy the solution, using the binaries and documentation that they found in an old backup folder.</p>\n<p><em>I know that people who write distributed databases with ACID guarantees for a living always cringe at the idea of their baby running on crappy hardware with buggy hard-drive firmware and with no-one monitoring the log files or reading the documentation :). The cloud can help solve this issue, but not everybody is there yet, and we still need to support customers that prefer - for whatever reason - to stay on-premise, or cannot use the cloud for legal reasons.</em></p>\n<p>I foresee four different situations:</p>\n<ol>\n<li>\n<p><strong>Single instance deployment</strong> where the application and fdb are installed on the same machine, and deployed at the same time. <em>These customers will probably have no pre-existing virtual machines or container infrastructure, and certainly no-one trained in the complexities of distributed databases.</em></p>\n</li>\n<li>\n<p><strong>Medium deployments</strong> with multiple servers, and possibly an existing VM / container infrastructure if we are lucky. The deployment will most probably be done by technicians with minimal training with access to level 2 phone/email tech support. They will probably have no experience with distributed database (or any kind of databases even) so we can\u2019t rely on them being fluent with all the tools or even reading log files.</p>\n</li>\n<li>\n<p><strong>Large accounts</strong> with their own data centers and trained sysadmins/sub-contractors where everything is designed and tested before going to production <em>(well,\u2026 most of the times <img src=\"https://emoji.discourse-cdn.com/twitter/sweat_smile.png?v=12\" title=\":sweat_smile:\" class=\"emoji\" alt=\":sweat_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"> )</em>.</p>\n</li>\n<li>\n<p>Customers that are already 99.9% in the cloud that don\u2019t need anything installed on-premise (at least not a distributed database). We handle everything, and hopefully we know what we are doing <img src=\"https://emoji.discourse-cdn.com/twitter/wink.png?v=12\" title=\":wink:\" class=\"emoji\" alt=\":wink:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n</li>\n</ol>\n<p>For case <strong>3.</strong> and <strong>4.</strong>,  we will have trained people handling the installation and upgrade process, so we can impose any constraint we want and require them to think about what they are doing.</p>\n<p>The main issue that I need to resolve is <strong>1.</strong> and <strong>2.</strong>. We need a way to make sure that the installation process can - if possible - handle most of the situations, or at least give use proper error messages so that we can minimize the time needed to troubleshoot. <em>I don\u2019t want ever again to spend hours getting logs with some weird error code, and chasing red herrings, just to realize that they used the old setup with old binaries</em>.</p>\n<aside class=\"quote no-group\" data-username=\"alloc\" data-post=\"3\" data-topic=\"437\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/alloc/48/9_2.png\" class=\"avatar\"> alloc:</div>\n<blockquote>\n<p>You could also deploy along side your app a folder with one version of libfdb_c for each minor version of FDB and use a mechanism like this to choose the right one from among those options</p>\n</blockquote>\n</aside>\n<p>This works if the customer always downloads the latest installation package that by default always redistributes all previous major versions of the fdb_c.</p>\n<p>This does not work if for some reason, someone uses an old package that they kept from the initial install a few years ago. I\u2019ve seen this happen so many times with our product, hence why I need a solution here <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n<p>The current version of our product already checks the SQL schema on startup, and notifies the admin of a problem if the database schema matches an older version, or even if it looks \u201cfrom the future\u201d. Also, most SQL drivers out there will still be able to connect to older/newer versions and allow use to query for minimum supported features (or to enable/disable some behavior depending on their availability).</p>\n<p>I cannot do that currently with fdb if the cluster is more recent, because I won\u2019t be able to connect to it and read any keys (including a schema version key). I cannot even tell what future version it is. Worse, the user-visible symptom will be a timeout (the error code will be in log files that nobody ever bother to read). I\u2019m trying to prevent that <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n<aside class=\"quote no-group\" data-username=\"alloc\" data-post=\"3\" data-topic=\"437\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/alloc/48/9_2.png\" class=\"avatar\"> alloc:</div>\n<blockquote>\n<p>Would this be more convenient as an fdbcli command? I guess it depends on what you mean by \u201cscript\u201d, but it seems to me that if this is a shell script, it seems weird to load a DLL and (somehow) call a function inside of it rather than issuing a CLI command</p>\n</blockquote>\n</aside>\n<p>I used the word \u201cscript\u201d as a general term. I would probably have some executable that would use the .NET binding and only call the API needed to print the version string stdout, and exit. Or maybe a PowerShell script could call the binding itself. I\u2019ll let the guys who are expert in custom deployment decide what they prefer.</p>\n<p>Using fdbcli, currently, would require having the correct version deployed, which would not work in this case (cluster upgraded since the initial deployment). Unless of course fdbcli gets support for the get_version API and does this for us, then we could use it directly, instead of via a binding. I guess having access to this via the bindings would allow better error messages at runtime.</p>\n<aside class=\"quote no-group\" data-username=\"alloc\" data-post=\"3\" data-topic=\"437\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/alloc/48/9_2.png\" class=\"avatar\"> alloc:</div>\n<blockquote>\n<p>Would the API call make more sense as a member on an FDBCluster (or FDBDatabase)? So, something like:</p>\n<pre data-code-wrap=\"c\"><code class=\"lang-c\">int fdb_cluster_get_version(FDBCluster* cluster);\n</code></pre>\n</blockquote>\n</aside>\n<p>Sure, but wouldn\u2019t this need to return an <code>FdbFuture&lt;int&gt;</code>? Since it has to connect to at least one coordinator, it is async and could also fail if no coordinators are valid (most probably if the fdb.cluster file is obsolete).</p>\n<p>If futures require a running network thread, this could become a bit more difficult, since we cannot stop/restart it in the same process\u2026</p>\n<p>Ideally, it would be nice if this API could work in way that require minimal setup. But if this is not possible, then at least if it is properly documented we can work around that.</p>\n<aside class=\"quote no-group\" data-username=\"alloc\" data-post=\"3\" data-topic=\"437\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/alloc/48/9_2.png\" class=\"avatar\"> alloc:</div>\n<blockquote>\n<p>I think you\u2019d want to return the version as a string, but I could be wrong</p>\n</blockquote>\n</aside>\n<p>I\u2019m not sure either. The only thing I see that string would give us, is support for <code>-alpha</code>/<code>-beta</code> suffixes, but I don\u2019t think you guys use them? Also, since this is the version of the cluster itself, I think that if someone decided to upgrade the entire cluster to some pre-release version, they probably had good reasons, and the application <em>should</em> respect the choice.</p>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 8,
        "updated_at": "2018-05-21T08:37:16.476Z",
        "reply_count": 0,
        "reply_to_post_number": 3,
        "quote_count": 1,
        "incoming_link_count": 2,
        "reads": 67,
        "readers_count": 66,
        "score": 23.4,
        "yours": false,
        "topic_id": 437,
        "topic_slug": "new-api-to-get-the-version-of-a-running-cluster-without-needing-a-matching-libfdb-c-library",
        "display_username": "Christophe Chevalier",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 53,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/new-api-to-get-the-version-of-a-running-cluster-without-needing-a-matching-libfdb-c-library/437/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 1199,
        "name": "Christophe Chevalier",
        "username": "KrzysFR",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "created_at": "2018-05-21T08:57:20.323Z",
        "cooked": "<p>Thinking about this more, one solution <em>could</em> be to address the problem with auto-updates of the application itself. We could, like you say, ship all previous versions of libfdb_c so that it can connect to current or older versions.</p>\n<p>But the current library is at almost 6 MB, and having multiple instances of them will quickly grow to a large fraction of the current setup package. We wan\u2019t to keep the installation package as slim as possible.</p>\n<p>Scenario:</p>\n<ul>\n<li>Customer downloads version N that - at the time of download - uses the most current fdb and libfdb_c versions.</li>\n<li>Other the time, the application auto-updates to add new features without changing the fdb version. So far so good and reinstalling from previous version will only lose features (until the next auto-update).</li>\n<li>If at some point, we need to use new fdb features, we will require upgrading the cluster itself to version N+1. This cannot be done by the application itself if the cluster is running on different servers, so action by the adminsys (or sub-contractor) is required.</li>\n<li>This process will repeat itself for a few cycles, and we are now some years later at fdb version N+2.</li>\n</ul>\n<p>If, at some point, the app server needs to be reinstalled for whatever reason, and the admin uses the old binary installer (and by \u201cold\u201d it could be the installer from last week, before yesterday\u2019s version that upgraded the cluster), then the installer or application will not be able to talk to the upgraded cluster, and will not provide any useful error message, except maybe timeouts in the logs.</p>\n<p>The custom will call us with a symptom \u201cthe installer is stuck\u201d/\u201cthe application will not start\u201d, which can be anything and the resolution of the ticket will take too much time and effort.</p>\n<ul>\n<li>One such reason that could happen, is when an attempt to upgrade both the application and fdb cluster fails, and the customer wants to quickly revert to a previous version, but the cluster has already been upgraded to version N+1. If the previous installer can tell us which version of the library we need, we can instruct the customer to download it and install it in some well known location, while waiting for a full resolution of the initial problem.</li>\n</ul>\n<p><strong>tl;dr</strong>: I\u2019m looking for a solution where some automatic installation process (or application at runtime) can display a message like <em>\u201cYou are using version X of the client library, but the cluster is at version Y. Call your technical support and tell them exactly that\u201d</em>. This way, the issue can be solved in a matter of minutes. The installer could even download the new version automatically.</p>",
        "post_number": 5,
        "post_type": 1,
        "posts_count": 8,
        "updated_at": "2018-05-21T08:57:20.323Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 2,
        "reads": 50,
        "readers_count": 49,
        "score": 35.0,
        "yours": false,
        "topic_id": 437,
        "topic_slug": "new-api-to-get-the-version-of-a-running-cluster-without-needing-a-matching-libfdb-c-library",
        "display_username": "Christophe Chevalier",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 53,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/new-api-to-get-the-version-of-a-running-cluster-without-needing-a-matching-libfdb-c-library/437/5",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 1210,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2018-05-21T18:09:40.714Z",
        "cooked": "<p>A couple other random thoughts:</p>\n<aside class=\"quote no-group quote-modified\" data-username=\"KrzysFR\" data-post=\"1\" data-topic=\"437\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/krzysfr/48/43_2.png\" class=\"avatar\"> KrzysFR:</div>\n<blockquote>\n<p>As a side bonus, if a binding would load the currently deployed libfdb_c library, and start getting errors about the version not matching the cluster, it could call the same API and display a more useful error message: \u201cyou libfdc_c library found at /path/to/somewhere is version X.x but the cluster is version Y.y that is not compatible. You need to updadate the library and restart the process.\u201d</p>\n</blockquote>\n</aside>\n<p><code>fdbcli</code> now tells you if it\u2019s trying to connect to any processes that are incompatible. Note that it\u2019s possible that some but not all processes are incompatible if you have a partially upgraded cluster. It won\u2019t tell you what version the cluster is running at (it only knows about protocol versions, not release versions), but at least it\u2019s a more informative signal than printing nothing. We\u2019ve tossed around some ideas for how to do this in the native library, and I think the currently favored idea is to have some side channel that we can push this kind of information through (so as not to interrupt the connection attempt). It\u2019s probably going to be a little bit more complicated when using the client library because of the multi-version client, but it should be doable.</p>\n<aside class=\"quote no-group\" data-username=\"KrzysFR\" data-post=\"1\" data-topic=\"437\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/krzysfr/48/43_2.png\" class=\"avatar\"> KrzysFR:</div>\n<blockquote>\n<p>I\u2019m not sure if it should return the current version in the same format as the API version, so 517, or may a more traditional version string like 5.1.7 ?</p>\n</blockquote>\n</aside>\n<p>The API version\u2019s value is technically not tied to the release version, though we try to make them line up. It\u2019s probably best to use the release version in this case (e.g. 5.1.7). However, given that the processes in a cluster could be running any combination of 5.1 versions, maybe the right number to provide would just be \u201c5.1\u201d? Or we\u2019d have to try to better define what constitutes a cluster\u2019s version. Prerelease versions (at least those that are incompatible with the release) should be specifically marked as well to avoid confusion.</p>\n<aside class=\"quote no-group\" data-username=\"alloc\" data-post=\"3\" data-topic=\"437\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/alloc/48/9_2.png\" class=\"avatar\"> alloc:</div>\n<blockquote>\n<p>Would the API call make more sense as a member on an FDBCluster (or FDBDatabase)?</p>\n</blockquote>\n</aside>\n<p>I agree this seems like the most natural place, though it\u2019s a bit unfortunate that the typical use of our bindings (<code>fdb.open</code>) doesn\u2019t have the user dealing with Cluster objects at all.</p>",
        "post_number": 6,
        "post_type": 1,
        "posts_count": 8,
        "updated_at": "2018-05-21T18:09:40.714Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 2,
        "incoming_link_count": 0,
        "reads": 44,
        "readers_count": 43,
        "score": 13.8,
        "yours": false,
        "topic_id": 437,
        "topic_slug": "new-api-to-get-the-version-of-a-running-cluster-without-needing-a-matching-libfdb-c-library",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/new-api-to-get-the-version-of-a-running-cluster-without-needing-a-matching-libfdb-c-library/437/6",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 1211,
        "name": "Christophe Chevalier",
        "username": "KrzysFR",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "created_at": "2018-05-21T18:46:02.167Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"ajbeamon\" data-post=\"6\" data-topic=\"437\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/ajbeamon/48/13_2.png\" class=\"avatar\"> ajbeamon:</div>\n<blockquote>\n<p>However, given that the processes in a cluster could be running any combination of 5.1 versions, maybe the right number to provide would just be \u201c5.1\u201d?</p>\n</blockquote>\n</aside>\n<p>Since the goal of the API is to detect which version of the libfdb_c to use, then at least it should be a value that points to the minimum version that fits the bill. So for 5.1.7, it should probably return 510 because (I think?) libfdc_c v5.1.0 should be able to connect to processes that run v5.1.7 ?</p>\n<p>If the installation process gets 510, it could have its own logic to decide the range of compatible version (5.1.0 &lt;= v &lt;= 5.1.7) and either use the lowest version, OR use the highest version available (not sure which is better, I\u2019d say the higher version with all the bugfix, but it could introduce new bugs\u2026).</p>\n<aside class=\"quote no-group\" data-username=\"ajbeamon\" data-post=\"6\" data-topic=\"437\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/ajbeamon/48/13_2.png\" class=\"avatar\"> ajbeamon:</div>\n<blockquote>\n<p>I agree this seems like the most natural place, though it\u2019s a bit unfortunate that the typical use of our bindings (fdb.open) doesn\u2019t have the user dealing with Cluster objects at all.</p>\n</blockquote>\n</aside>\n<p>That\u2019s true, though the bindings could expose a static helper method that creates a cluster instance, call the API and then destroys this handle immediately after (a bit wasteful but it is expected to be called once during installation or startup of the application).</p>\n<p>And internally, if the bindings need to resolve this version at runtime - when transactions start failing because the cluster was just upgraded - they could use the existing cluster handle that they should have somewhere (at least in my case, the database object references the cluster object which wraps a valid ClusterHandle).</p>\n<aside class=\"quote no-group\" data-username=\"ajbeamon\" data-post=\"6\" data-topic=\"437\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/ajbeamon/48/13_2.png\" class=\"avatar\"> ajbeamon:</div>\n<blockquote>\n<p>It won\u2019t tell you what version the cluster is running at (it only knows about protocol versions, not release versions), but at least it\u2019s a more informative signal than printing nothing</p>\n</blockquote>\n</aside>\n<p>The <code>status json</code> can give the runtime version of the nodes in the cluster. Do you think that getting that info would be possible for an older client ?</p>\n<p>If the client needs to connect to a storage (or master?) nodes to get this info, then it would need to support the new protocol anyway. The other option would be to have a dedicated request type that is protocol-version neutral, just to get this information (part of what status json returns) and that would not change in future versions. Not sure if this is feasible or even a good idea\u2026</p>",
        "post_number": 7,
        "post_type": 1,
        "posts_count": 8,
        "updated_at": "2018-05-21T18:46:02.167Z",
        "reply_count": 1,
        "reply_to_post_number": 6,
        "quote_count": 1,
        "incoming_link_count": 3,
        "reads": 46,
        "readers_count": 45,
        "score": 29.2,
        "yours": false,
        "topic_id": 437,
        "topic_slug": "new-api-to-get-the-version-of-a-running-cluster-without-needing-a-matching-libfdb-c-library",
        "display_username": "Christophe Chevalier",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 53,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/new-api-to-get-the-version-of-a-running-cluster-without-needing-a-matching-libfdb-c-library/437/7",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 1212,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2018-05-21T19:33:34.145Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"KrzysFR\" data-post=\"7\" data-topic=\"437\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/krzysfr/48/43_2.png\" class=\"avatar\"> KrzysFR:</div>\n<blockquote>\n<p>The status json can give the runtime version of the nodes in the cluster. Do you think that getting that info would be possible for an older client ?</p>\n<p>If the client needs to connect to a storage (or master?) nodes to get this info, then it would need to support the new protocol anyway. The other option would be to have a dedicated request type that is protocol-version neutral, just to get this information (part of what status json returns) and that would not change in future versions. Not sure if this is feasible or even a good idea\u2026</p>\n</blockquote>\n</aside>\n<p>I suspect the easiest thing to do here would be to report out the protocol versions that are already being exchanged and then have some external mapping between release versions and protocol versions. I haven\u2019t thought about it much, but if were feasible to update this connection packet with a release version number as well, then that could be reported instead (I\u2019m not sure yet what the implications of this are, though). The result of this is that you would know the (protocol and maybe release) versions of the processes you were trying to connect to, which in an incompatible scenario are going to be the coordinators only.</p>\n<p>Providing a version agnostic way for reading status sounds like a much thornier feature, as it would require sufficient testing of this feature across versions (which our simulator doesn\u2019t currently support), and you\u2019d have to deal with the possibility that the status schema can change over versions.</p>\n<aside class=\"quote no-group\" data-username=\"KrzysFR\" data-post=\"7\" data-topic=\"437\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/krzysfr/48/43_2.png\" class=\"avatar\"> KrzysFR:</div>\n<blockquote>\n<p>So for 5.1.7, it should probably return 510 because (I think?) libfdc_c v5.1.0 should be able to connect to processes that run v5.1.7 ?</p>\n</blockquote>\n</aside>\n<p>Ignoring prerelease versions, 5.1.x are all compatible, so the best thing for the client to do is probably to use whatever the newest version of 5.1 is that they can get their hands on. In general, we enforce by policy that patch releases within the same major/minor version are compatible, and that any major or minor version change is protocol incompatible. For that reason, I think the major and minor version (e.g. 5.1) are the most relevant details to know, in addition to whether it\u2019s a prerelease.</p>\n<p>The problem with using the API version (510) is that there aren\u2019t any guarantees about it\u2019s relation to the server version. It\u2019s possible we could formalize something (which would probably also require setting the max minor version to 9 and maybe also not changing the API version on patch releases), but I haven\u2019t given any thought to whether that\u2019s a good idea.</p>",
        "post_number": 8,
        "post_type": 1,
        "posts_count": 8,
        "updated_at": "2018-05-21T19:33:34.145Z",
        "reply_count": 0,
        "reply_to_post_number": 7,
        "quote_count": 1,
        "incoming_link_count": 10,
        "reads": 47,
        "readers_count": 46,
        "score": 59.4,
        "yours": false,
        "topic_id": 437,
        "topic_slug": "new-api-to-get-the-version-of-a-running-cluster-without-needing-a-matching-libfdb-c-library",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/new-api-to-get-the-version-of-a-running-cluster-without-needing-a-matching-libfdb-c-library/437/8",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      1184,
      1188,
      1194,
      1198,
      1199,
      1210,
      1211,
      1212
    ]
  },
  "timeline_lookup": [
    [
      1,
      2712
    ],
    [
      3,
      2711
    ],
    [
      6,
      2710
    ]
  ],
  "suggested_topics": [],
  "tags": [
    "bindings"
  ],
  "tags_descriptions": {},
  "fancy_title": "New API to get the version of a running cluster without needing a matching libfdb_c library",
  "id": 437,
  "title": "New API to get the version of a running cluster without needing a matching libfdb_c library",
  "posts_count": 8,
  "created_at": "2018-05-19T12:26:50.509Z",
  "views": 2729,
  "reply_count": 3,
  "like_count": 4,
  "last_posted_at": "2018-05-21T19:33:34.145Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "new-api-to-get-the-version-of-a-running-cluster-without-needing-a-matching-libfdb-c-library",
  "category_id": 8,
  "word_count": 4806,
  "deleted_at": null,
  "user_id": 53,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_437",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 8,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 4,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "How do bindings get an appropriate copy of `fdb_c`?",
      "id": 311,
      "title": "How do bindings get an appropriate copy of `fdb_c`?",
      "slug": "how-do-bindings-get-an-appropriate-copy-of-fdb-c",
      "posts_count": 9,
      "reply_count": 6,
      "highest_post_number": 9,
      "image_url": null,
      "created_at": "2018-04-30T08:29:35.925Z",
      "last_posted_at": "2019-03-07T21:28:28.848Z",
      "bumped": true,
      "bumped_at": "2020-10-02T19:38:40.426Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [
        "bindings"
      ],
      "tags_descriptions": {},
      "like_count": 12,
      "views": 2829,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 120,
            "username": "josephg",
            "name": "Seph Gentle",
            "avatar_template": "/user_avatar/forums.foundationdb.org/josephg/{size}/84_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 3,
            "username": "john_brownlee",
            "name": "John Brownlee",
            "avatar_template": "/user_avatar/forums.foundationdb.org/john_brownlee/{size}/22_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 491,
            "username": "iilyak",
            "name": "Iilyak",
            "avatar_template": "/user_avatar/forums.foundationdb.org/iilyak/{size}/1073_2.png",
            "trust_level": 1
          }
        }
      ]
    },
    {
      "fancy_title": "Header version in bindings",
      "id": 1113,
      "title": "Header version in bindings",
      "slug": "header-version-in-bindings",
      "posts_count": 7,
      "reply_count": 4,
      "highest_post_number": 7,
      "image_url": null,
      "created_at": "2019-02-04T23:31:41.897Z",
      "last_posted_at": "2019-02-05T20:57:20.686Z",
      "bumped": true,
      "bumped_at": "2019-02-05T21:03:35.324Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 1399,
      "category_id": 5,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 120,
            "username": "josephg",
            "name": "Seph Gentle",
            "avatar_template": "/user_avatar/forums.foundationdb.org/josephg/{size}/84_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Upgrading FoundationDB",
      "id": 191,
      "title": "Upgrading FoundationDB",
      "slug": "upgrading-foundationdb",
      "posts_count": 11,
      "reply_count": 5,
      "highest_post_number": 11,
      "image_url": null,
      "created_at": "2018-04-21T23:51:26.311Z",
      "last_posted_at": "2018-08-27T03:33:51.669Z",
      "bumped": true,
      "bumped_at": "2018-08-27T03:33:51.669Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 9,
      "views": 3852,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 133,
            "username": "titanous",
            "name": "",
            "avatar_template": "/user_avatar/forums.foundationdb.org/titanous/{size}/94_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 22,
            "username": "dave",
            "name": "David Scherer",
            "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 54,
            "username": "Evan",
            "name": "Evan Tschannen",
            "avatar_template": "/user_avatar/forums.foundationdb.org/evan/{size}/104_2.png",
            "moderator": true,
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Command to find version",
      "id": 2691,
      "title": "Command to find version",
      "slug": "command-to-find-version",
      "posts_count": 2,
      "reply_count": 0,
      "highest_post_number": 2,
      "image_url": null,
      "created_at": "2021-05-07T00:11:25.931Z",
      "last_posted_at": "2021-05-07T21:55:42.973Z",
      "bumped": true,
      "bumped_at": "2021-05-07T21:55:42.973Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 1770,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 933,
            "username": "rmanoj",
            "name": "Manoj Ramakrishnan",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/r/c5a1d2/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Client library backwards compatibility issues",
      "id": 919,
      "title": "Client library backwards compatibility issues",
      "slug": "client-library-backwards-compatibility-issues",
      "posts_count": 2,
      "reply_count": 0,
      "highest_post_number": 2,
      "image_url": null,
      "created_at": "2018-11-30T16:17:55.490Z",
      "last_posted_at": "2018-11-30T19:21:19.862Z",
      "bumped": true,
      "bumped_at": "2018-11-30T19:21:19.862Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 1325,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 369,
            "username": "ricky.saltzer",
            "name": "Ricky Saltzer",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/r/f17d59/{size}.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 158,
            "username": "aseipp",
            "name": "Austin Seipp",
            "avatar_template": "/user_avatar/forums.foundationdb.org/aseipp/{size}/124_2.png",
            "trust_level": 2
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 53,
        "username": "KrzysFR",
        "name": "Christophe Chevalier",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "post_count": 4,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      },
      {
        "id": 12,
        "username": "ajbeamon",
        "name": "A.J. Beamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "admin": true,
        "trust_level": 4
      },
      {
        "id": 8,
        "username": "alloc",
        "name": "Alec Grieser",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      },
      {
        "id": 260,
        "username": "jared2501",
        "name": "Jared2501",
        "avatar_template": "/user_avatar/forums.foundationdb.org/jared2501/{size}/266_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      }
    ],
    "created_by": {
      "id": 53,
      "username": "KrzysFR",
      "name": "Christophe Chevalier",
      "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png"
    },
    "last_poster": {
      "id": 12,
      "username": "ajbeamon",
      "name": "A.J. Beamon",
      "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png"
    },
    "links": [
      {
        "url": "https://forums.foundationdb.org/t/how-do-bindings-get-an-appropriate-copy-of-fdb-c/311/7",
        "title": "How do bindings get an appropriate copy of `fdb_c`?",
        "internal": true,
        "attachment": false,
        "reflection": false,
        "clicks": 14,
        "user_id": 53,
        "domain": "forums.foundationdb.org",
        "root_domain": "foundationdb.org"
      },
      {
        "url": "http://foundationdb.org",
        "title": null,
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 4,
        "user_id": 53,
        "domain": "foundationdb.org",
        "root_domain": "foundationdb.org"
      },
      {
        "url": "https://forums.foundationdb.org/t/how-do-bindings-get-an-appropriate-copy-of-fdb-c/311/8",
        "title": "How do bindings get an appropriate copy of `fdb_c`?",
        "internal": true,
        "attachment": false,
        "reflection": true,
        "clicks": 1,
        "user_id": 53,
        "domain": "forums.foundationdb.org",
        "root_domain": "foundationdb.org"
      }
    ]
  },
  "bookmarks": []
}