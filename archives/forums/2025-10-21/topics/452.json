{
  "post_stream": {
    "posts": [
      {
        "id": 1238,
        "name": "Viacheslav Biriukov",
        "username": "brk0v",
        "avatar_template": "/user_avatar/forums.foundationdb.org/brk0v/{size}/173_2.png",
        "created_at": "2018-05-22T21:46:43.808Z",
        "cooked": "<p>Hi,</p>\n<p>I\u2019m a bit confused about proper design for application using Subspaces and Tuples.</p>\n<p>I want to create a bunch of indexes for arbitrary number of tables. For example I want to have:</p>\n<pre><code>/table/{{name1}}/index/{{key1}}/size\n/table/{{name1}}/index/{{key1}}/price\n/table/{{name2}}/index/{{key2}}/size\n/table/{{name2}}/index/{{key2}}/price\n</code></pre>\n<p>where <code>{{name}}</code> \u2013 is a table name, and <code>{{key}}</code> is a name of a <em>primary key</em> in table for a record.</p>\n<p>I see 4 following variants to design this:</p>\n<pre><code>dir, _ := directory.CreateOrOpen(db, []string{\"index\"}, nil)\n\nsub1 := dir.Sub(tuple.Tuple{\"table\", name, \"index\"})\ntr.Set(sub1.Pack(tuple.Tuple{\"price\"}), price)\n// Key: `\\x15\\x12\\x05\\x02table\\x00\\x02name\\x00\\x02index\\x00\\x00\\x02price\\x00``\n\nsub2 := dir.Sub(tuple.Tuple{\"table\", name, \"index\", \"price\"})\ntr.Set(sub2, price)\n// Key: `\\x15\\x12\\x05\\x02table\\x00\\x02name\\x00\\x02index\\x00\\x02price\\x00\\x00`\n\nsub3 := dir.Sub(\"table\", name, \"index\")\ntr.Set(sub3.Pack(tuple.Tuple{\"price\"}), price)\n// Key: `\\x15\\x12\\x02table\\x00\\x02name\\x00\\x02index\\x00\\x02price\\x00`\n\nsub4 := dir.Sub(\"table\", name, \"index\", \"price\")\ntr.Set(sub4, price)\n// Key: `\\x15\\x12\\x02table\\x00\\x02name\\x00\\x02index\\x00\\x02price\\x00`\n</code></pre>\n<p>I can see the difference in the key generation outcome, but can\u2019t understand which case would be the best and what drawbacks could be with each of them.</p>\n<p>Also I\u2019m a bit confused about first and second examples with two <code>\\x00</code> \u2013 one at the end and one in the middle. Don\u2019t understand this logic and why it is needed here.</p>\n<p>Thank you.</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2018-05-22T21:46:43.808Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 991,
        "reads": 122,
        "readers_count": 121,
        "score": 4975.4,
        "yours": false,
        "topic_id": 452,
        "topic_slug": "application-design-using-subspace-and-tuple",
        "display_username": "Viacheslav Biriukov",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 211,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/application-design-using-subspace-and-tuple/452/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 1240,
        "name": "Christophe Chevalier",
        "username": "KrzysFR",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "created_at": "2018-05-22T23:31:46.224Z",
        "cooked": "<p>Your code is opening a Directory called \u201c/index\u201d, but then it creates keys that look like <code>(..., (\"table\", name, \"index\"), \"price\")</code></p>\n<p>I think you should open a Directory with a path composed of <code>{ \"table\", name1, \"index\" }</code> so that you get a very short key prefix per index per table. Then the rest of the key will be a simple tuple <code>(key1, \"size\")</code>.</p>\n<p>In you example, the first 2 bytes <code>\\x15\\x12</code> corresponds to the prefix allocated to your directory \u201cindex\u201d, the rest is the encoded tuple that your are building in fragments, using an intermediate subspace (which does not serve any purpose here).</p>\n<p>The double <code>\\x00</code> in the middle come from the embedded tuple <code>(\"table\", name, \"price\")</code>: one for the terminator of the string, and the second for the terminator of the embedded tuple. The other samples are variants of the same issue (tuples inside tuples). The <code>\\x05</code> byte is the marker of the start of an embedded tuple.</p>\n<p>If you change your code to open a Directory using multiple subfolders, get rid of the <code>dir.Sub(...)</code> and pack tuples with only <code>(key, \"size\")</code> or <code>(key, \"price\")</code>, you should get something that looks a lot nicer.</p>\n<p>And then, if you replace the strings \u201csize\u201d/\u201cprice\u201d by some integer constant, you can compress it even more (at the cost of a little less readability).</p>\n<p>To sum up: you should probably create a Directory entry in the directory layer per index per table (if you). Then if you keys are very simple, you can simply tack a simple tuple on top of that without needed any intermediate subspace.</p>\n<p>Embedded tuples can be usefull if you want to build coumpound index with a constant size (ex: decomposing a date into a sub-tuple (year, month, day, \u2026))</p>\n<p>My go-foo is limited, but if you try something like this, it should produce better results:</p>\n<pre><code class=\"lang-auto\">dir, _ := directory.CreateOrOpen(db, []string{\"table\", name, \"index\"}, nil)\ntr.Set(dir.Pack(tuple.Tuple{key1, \"price\"}), price)\ntr.Set(dir.Pack(tuple.Tuple{key1, \"size\"}), size)\n...\ntr.Set(dir.Pack(tuple.Tuple{key1, \"xyz\"}), xyz)\n</code></pre>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2018-05-23T08:46:33.541Z",
        "reply_count": 2,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 17,
        "reads": 115,
        "readers_count": 114,
        "score": 148.0,
        "yours": false,
        "topic_id": 452,
        "topic_slug": "application-design-using-subspace-and-tuple",
        "display_username": "Christophe Chevalier",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 3,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 2
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 53,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/application-design-using-subspace-and-tuple/452/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 1248,
        "name": "Viacheslav Biriukov",
        "username": "brk0v",
        "avatar_template": "/user_avatar/forums.foundationdb.org/brk0v/{size}/173_2.png",
        "created_at": "2018-05-23T13:03:12.247Z",
        "cooked": "<p>Thank you for answer!</p>\n<blockquote>\n<p>The double \\x00 in the middle come from the embedded tuple (\u201ctable\u201d, name, \u201cprice\u201d): one for the terminator of the string, and the second for the terminator of the embedded tuple.</p>\n</blockquote>\n<p>I see, but don\u2019t understand why we need this explicit emphasising of a tuple with additional symbols (perhaps it\u2019s out of my question and I\u2019m missing something about this compound index logic with a constant size).</p>\n<blockquote>\n<p>And then, if you replace the strings \u201csize\u201d/\u201cprice\u201d by some integer constant, you can compress it even more (at the cost of a little less readability).</p>\n</blockquote>\n<p>Yes, I though about that, but it looks like we save a little space by decreasing readability. So I prefer to have stings here.</p>\n<p>But back to design question. What if I also want to have additional layers for values per table (for example with chunks to save values bigger than 100KB). So a new full pseudo schema:</p>\n<pre><code># from above\n/table/{{name1}}/index/{{key1}}/size\n/table/{{name1}}/index/{{key1}}/price\n/table/{{name2}}/index/{{key2}}/size\n/table/{{name2}}/index/{{key2}}/price\n\n# additional schema for values with chunks\n/table/{{name1}}/values/{{key1}}/0\n/table/{{name1}}/values/{{key1}}/1\n/table/{{name1}}/values/{{key2}}/0\n/table/{{name2}}/values/{{key3}}/0\n/table/{{name2}}/values/{{key4}}/0\n/table/{{name2}}/values/{{key4}}/1\n/table/{{name2}}/values/{{key4}}/2\n</code></pre>\n<p>So in this case, should I use following design:</p>\n<pre><code>dirTableName1, _ := directory.CreateOrOpen(db, []string{\"table\", name1}, nil)\n\ndirName1Index, _ := directory.CreateOrOpen(dirTableName1, []string{\"index\"}, nil)\ntr.Set(dirIndex.Pack(tuple.Tuple{key1, \"price\"}), price)\ntr.Set(dirIndex.Pack(tuple.Tuple{key1, \"size\"}), size)\ntr.Set(dirIndex.Pack(tuple.Tuple{key1, \"xyz\"}), xyz)\n\n...\n\ndirName1Values, _ := directory.CreateOrOpen(dirTableName1, []string{\"values\"}, nil)\n\nsubKey1 := dirName1Values.Sub(key1)\nfor ... {\n    ...\n    tr.Set(subKey1.Pack(tuple.Tuple{i}), chunk)\n}\n\nsubKey2 := dirName1Values.Sub(key2)\nfor ... {\n    ...\n    tr.Set(subKey2.Pack(tuple.Tuple{i}), chunk)\n}\n</code></pre>\n<p>\u2026 or it\u2019s time to use Subspaces for dirName1Values and dirName1Index? Or Pack using Tuples?</p>\n<p>Thank you!</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2018-05-23T13:05:09.247Z",
        "reply_count": 2,
        "reply_to_post_number": 2,
        "quote_count": 0,
        "incoming_link_count": 11,
        "reads": 101,
        "readers_count": 100,
        "score": 85.2,
        "yours": false,
        "topic_id": 452,
        "topic_slug": "application-design-using-subspace-and-tuple",
        "display_username": "Viacheslav Biriukov",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 53,
          "username": "KrzysFR",
          "name": "Christophe Chevalier",
          "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 211,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/application-design-using-subspace-and-tuple/452/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 1252,
        "name": "Christophe Chevalier",
        "username": "KrzysFR",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "created_at": "2018-05-23T14:12:27.511Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"brk0v\" data-post=\"3\" data-topic=\"452\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/brk0v/48/173_2.png\" class=\"avatar\"> brk0v:</div>\n<blockquote>\n<p>I see, but don\u2019t understand why we need this explicit emphasising of a tuple with additional symbols (perhaps it\u2019s out of my question and I\u2019m missing something about this compound index logic with a constant size).</p>\n</blockquote>\n</aside>\n<p>I think the \u201cissue\u201d is that <code>dir.Sub(arg1, arg2, ..., argN)</code> creates a tuple <code>(arg1, arg2, .... argN)</code> and then encodes that tuple into binary. If you are already passing a tuple as the first argument to <code>dir.Sub(...)</code> you are in essence creating a tuple with a single element that is itself a tuple. In your last examples, you were passing multiple arguments to Sub(\u2026) and it produced the expected result.</p>\n<p>You are having the same issues I had a few years ago, and this is because of a change that happened to the design of tuples, which made things ambiguous with the API at the time.</p>\n<p>I think this is a common design flaw which is present in most bindings, and everyone will probably stumble on this when learning about layers.</p>\n<p><em>Story time!</em></p>\n<blockquote>\n<p>For the first version of directories and subspace, embedded tuples were not supported, and in practice, using them would flatten all the items: so passing a key like <code>(1, (2, 3), 4)</code> would become <code>(1, 2, 3, 4)</code> once encoded or decoded. This was hiding the bug in the code, and everyone took a dependence on this \u201cbehavior\u201d as if it was normal.<br>\nWhen embedded tuples were introduced, this immediately blew with the same result that you are seeing. For example, I had to do a breaking change in the .NET binding API, because I was not able to fix this issue due to overload resolution ordering issues between interfaces and generics in C#. My only solution was to change the name of the method that takes <em>items</em> to distinguish it with the method that takes <em>tuples</em>.</p>\n</blockquote>\n<p>In the case of the .NET binding, the convention is now that methods like <code>EncodeKey(T1 arg1, T2 arg2, ..., TN argN)</code> will create a tuple with all the arguments, while methods <code>Pack((T1, T2, ..., TN) tuple)</code> will take a single argument that is the already-created tuple. I <em>think</em> that <code>dir.Sub(..., ..., ...)</code> in the go binding corresponds to my <code>EncodeKey(x1, x2, ...)</code> while you thought that it was <code>Pack(tuple)</code></p>\n<p>To illustrate with the .NET binding:</p>\n<ul>\n<li><code>EncodeKey(1, 2, 3, 4)</code> is the equivalent of packing <code>(1, 2, 3, 4)</code> of length = 4.</li>\n<li><code>Pack((1, 2, 3, 4))</code> is the equivalent of packing <code>(1, 2, 3, 4)</code> of length = 4,</li>\n<li><code>EncodeKey((1, 2, 3, 4))</code> is the equivalent of packing <code>( (1, 2, 3, 4), )</code> of length = 1,</li>\n</ul>\n<h4><a name=\"subspace-encodings-and-type-systems-1\" class=\"anchor\" href=\"#subspace-encodings-and-type-systems-1\"></a>Subspace, Encodings and Type Systems</h4>\n<p>I had to do a lot of work in the .NET binding to solve the issue of encoding and decoding keys, so that the application layer does not need to think about all of that, and also to prevent easy mistakes (like you found out the hard way).</p>\n<p>I had a few discussions with <a class=\"mention\" href=\"/u/dave\">@dave</a> at the time about a \u201cType System\u201d that could help Layer implementors deal with this. I implemented a few of the ideas in the .NET binding, in the form of <a href=\"https://github.com/Doxense/foundationdb-dotnet-client/blob/master/FoundationDB.Client/Shared/TypeSystem/IKeyEncoding.cs\" rel=\"noopener nofollow ugc\"><code>IKeyEncoding</code></a> / <a href=\"https://github.com/Doxense/foundationdb-dotnet-client/blob/master/FoundationDB.Client/Shared/TypeSystem/Encoders/IKeyEncoder.cs\" rel=\"noopener nofollow ugc\"><code>IKeyEncoder&lt;T&gt;</code></a>, and other variants (<a href=\"https://github.com/Doxense/foundationdb-dotnet-client/blob/master/FoundationDB.Client/Shared/TypeSystem/Encoders/IDynamicKeyEncoder.cs\" rel=\"noopener nofollow ugc\"><code>IDynamicKeyEncoder</code></a>, <a href=\"https://github.com/Doxense/foundationdb-dotnet-client/blob/master/FoundationDB.Client/Subspaces/TypedKeySubspace%603.cs\" rel=\"noopener nofollow ugc\"><code>IKeyEncoder&lt;T1, T2, ...&gt;</code></a> and so on).</p>\n<p>These types handle all the business of encoding keys (single field or composite) into binary and back. They offer different guarantees: On implementations uses the Tuple Encoding and is used by default (for compatibility with the other bindings). Other implementations can use something like protobuf (more compact, but no ordering guarantees, etc\u2026).</p>\n<p>You can then combine a Subspace (a pre-computed binary prefix) and a Key Encoder to create a \u201cKey Space\u201d that does both: encode logical keys using some encoding scheme, and prepend the binary suffix automatically.</p>\n<p>Some KeySpaces are dynamically typed, like <a href=\"https://github.com/Doxense/foundationdb-dotnet-client/blob/master/FoundationDB.Client/Subspaces/DynamicKeySubspace.cs\" rel=\"noopener nofollow ugc\">DynamicKeySubspace</a> while others are statically typed like <a href=\"https://github.com/Doxense/foundationdb-dotnet-client/blob/master/FoundationDB.Client/Subspaces/TypedKeySubspace%603.cs\" rel=\"noopener nofollow ugc\">TypedKeySubspace&lt;string, int, Uuid128&gt;</a>, and the layer code can decide which one to use depending on circumstances, personal choice or risk tolerance <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n<p>I don\u2019t think that other bindings went that far, so you are probably stuck at the basic level of combining binary prefix (subspaces) with packed tuples yourself.</p>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2018-05-23T18:06:57.084Z",
        "reply_count": 0,
        "reply_to_post_number": 3,
        "quote_count": 1,
        "incoming_link_count": 10,
        "reads": 88,
        "readers_count": 87,
        "score": 82.6,
        "yours": false,
        "topic_id": 452,
        "topic_slug": "application-design-using-subspace-and-tuple",
        "display_username": "Christophe Chevalier",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 5,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/Doxense/foundationdb-dotnet-client/blob/master/FoundationDB.Client/Subspaces/DynamicKeySubspace.cs",
            "internal": false,
            "reflection": false,
            "title": "foundationdb-dotnet-client/DynamicKeySubspace.cs at master \u00b7 Doxense/foundationdb-dotnet-client \u00b7 GitHub",
            "clicks": 2
          },
          {
            "url": "https://github.com/Doxense/foundationdb-dotnet-client/blob/master/FoundationDB.Client/Subspaces/TypedKeySubspace%603.cs",
            "internal": false,
            "reflection": false,
            "title": "foundationdb-dotnet-client/TypedKeySubspace`3.cs at master \u00b7 Doxense/foundationdb-dotnet-client \u00b7 GitHub",
            "clicks": 1
          },
          {
            "url": "https://github.com/Doxense/foundationdb-dotnet-client/blob/master/FoundationDB.Client/Shared/TypeSystem/Encoders/IDynamicKeyEncoder.cs",
            "internal": false,
            "reflection": false,
            "title": "foundationdb-dotnet-client/IDynamicKeyEncoder.cs at master \u00b7 Doxense/foundationdb-dotnet-client \u00b7 GitHub",
            "clicks": 1
          },
          {
            "url": "https://github.com/Doxense/foundationdb-dotnet-client/blob/master/FoundationDB.Client/Shared/TypeSystem/IKeyEncoding.cs",
            "internal": false,
            "reflection": false,
            "title": "foundationdb-dotnet-client/IKeyEncoding.cs at master \u00b7 Doxense/foundationdb-dotnet-client \u00b7 GitHub",
            "clicks": 1
          },
          {
            "url": "https://github.com/Doxense/foundationdb-dotnet-client/blob/master/FoundationDB.Client/Shared/TypeSystem/Encoders/IKeyEncoder.cs",
            "internal": false,
            "reflection": false,
            "title": "foundationdb-dotnet-client/IKeyEncoder.cs at master \u00b7 Doxense/foundationdb-dotnet-client \u00b7 GitHub",
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 53,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/application-design-using-subspace-and-tuple/452/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 1254,
        "name": "Christophe Chevalier",
        "username": "KrzysFR",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "created_at": "2018-05-23T14:25:59.867Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"brk0v\" data-post=\"3\" data-topic=\"452\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/brk0v/48/173_2.png\" class=\"avatar\"> brk0v:</div>\n<blockquote>\n<p>But back to design question. What if I also want to have additional layers for values per table (for example with chunks to save values bigger than 100KB)</p>\n</blockquote>\n</aside>\n<p>Yes, the typical solution is to add an additional integer after your keys, with 0, 1, \u2026 for each chunk.</p>\n<p>Now, instead of doing a <code>get(key)</code> to read a value, you do a <code>get_range(KeyRange.startsWith(key))</code> and glue back the chunks into a single buffer, and then parse the value. Likewise, use clear_range instead of clear to remove them.</p>\n<p>For values that are less than 100 KB, I suggest still adding a chunk index of 0, so that you don\u2019t have multiple code path to maintain (ie: return arrays of values, of length 0 if not found,  1 if small value, &gt;= 2 if large value, etc\u2026).</p>\n<aside class=\"quote no-group\" data-username=\"brk0v\" data-post=\"3\" data-topic=\"452\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/brk0v/48/173_2.png\" class=\"avatar\"> brk0v:</div>\n<blockquote>\n<p>\u2026 or it\u2019s time to use Subspaces for dirName1Values and dirName1Index? Or Pack using Tuples?</p>\n</blockquote>\n</aside>\n<p>See my answer above regarding type systems and encoding.</p>\n<p>Subspaces and Tuples, currently, are just temporary variables that are use to skip recomputing the same binary prefix over and over again.</p>\n<p>If all the keys for a single document will look like <code>(...., \"FOO\", \"BAR\", \"KEY123\", {FIELD} )</code> and you have dozens of fields, it can be faster to create a subspace for <code>(...., \"FOO\", \"BAR\", \"KEY123\")</code> to pre-compute that part of the key, and then use the subspace to only append the field name for each set. Internally, it will only encode the field, and concat the bytes with the subspace prefix. Less work to do.</p>\n<blockquote>\n<p>Note: a \u201csubspace\u201d is just an object that wraps an already computed binary prefix for your keys. If you create a subspace and only use it once or twice, this is a bit wasteful. You should only see it as a cached temporary variable, and use it for performance reason.</p>\n</blockquote>\n<aside class=\"quote no-group\" data-username=\"brk0v\" data-post=\"3\" data-topic=\"452\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/brk0v/48/173_2.png\" class=\"avatar\"> brk0v:</div>\n<blockquote>\n<p>Yes, I though about that, but it looks like we save a little space by decreasing readability. So I prefer to have stings here.</p>\n</blockquote>\n</aside>\n<p>A million of milliseconds is a lot of time <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n<p>I prefer solving the readability issue with the key encoders and type system in the code. I usually create one or more typed encoder in my layers, by specifying the exact number of fields and their types. That way, I get full intellisense in my code, and don\u2019t mix fields by mistake. It is common to have keys that are <code>(string, string, string, int, int)</code> which are a nightmare for me.</p>\n<p>With typed encoders, I reduce the number of errors, and they can also be used to stringify the keys into a human-friendly string (for logs, debugger, etc\u2026).</p>\n<p>This is perhaps because I\u2019m using a statically typed language and want type safety. A programmer that uses dynamic languages would probably prefer having a dynamic key encoder (like tuple currently is) but this looks too scary to me <img src=\"https://emoji.discourse-cdn.com/twitter/cold_sweat.png?v=12\" title=\":cold_sweat:\" class=\"emoji\" alt=\":cold_sweat:\" loading=\"lazy\" width=\"20\" height=\"20\">  I like my compiler errors when I mess up the ordering of things <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>",
        "post_number": 5,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2018-05-23T15:33:13.343Z",
        "reply_count": 1,
        "reply_to_post_number": 3,
        "quote_count": 1,
        "incoming_link_count": 9,
        "reads": 83,
        "readers_count": 82,
        "score": 81.6,
        "yours": false,
        "topic_id": 452,
        "topic_slug": "application-design-using-subspace-and-tuple",
        "display_username": "Christophe Chevalier",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 3,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 53,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/application-design-using-subspace-and-tuple/452/5",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 1296,
        "name": "Viacheslav Biriukov",
        "username": "brk0v",
        "avatar_template": "/user_avatar/forums.foundationdb.org/brk0v/{size}/173_2.png",
        "created_at": "2018-05-25T16:02:42.808Z",
        "cooked": "<p>Thank you, for such detailed answer and history overview. =)</p>\n<aside class=\"quote no-group quote-modified\" data-username=\"KrzysFR\" data-post=\"5\" data-topic=\"452\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/krzysfr/48/43_2.png\" class=\"avatar\"> KrzysFR:</div>\n<blockquote>\n<blockquote>\n<p>Note: a \u201csubspace\u201d is just an object that wraps an already computed binary prefix for your keys. If you create a subspace and only use it once or twice, this is a bit wasteful. You should only see it as a cached temporary variable, and use it for performance reason.</p>\n</blockquote>\n<p><img src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/brk0v/40/173_1.png\" alt=\"\" width=\"20\" height=\"20\" role=\"presentation\"> brk0v:</p>\n</blockquote>\n</aside>\n<p>Good point, got it.</p>\n<p>Now it\u2019s cleaner to me how to choose and build keys layout.</p>\n<p>I think I\u2019ll start with a simple subspaces logic. Will reuse pre-generated subspaces for saving computation time, as you mentioned above.</p>\n<aside class=\"quote no-group\" data-username=\"KrzysFR\" data-post=\"5\" data-topic=\"452\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/krzysfr/48/43_2.png\" class=\"avatar\"> KrzysFR:</div>\n<blockquote>\n<p>I prefer solving the readability issue with the key encoders and type system in the code. I usually create one or more typed encoder in my layers, by specifying the exact number of fields and their types. That way, I get full intellisense in my code, and don\u2019t mix fields by mistake. It is common to have keys that are <code>(string, string, string, int, int)</code> which are a nightmare for me.</p>\n</blockquote>\n</aside>\n<p>Good point, also. Encoder is a good thing to have here.</p>",
        "post_number": 6,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2018-05-25T16:02:42.808Z",
        "reply_count": 0,
        "reply_to_post_number": 5,
        "quote_count": 1,
        "incoming_link_count": 6,
        "reads": 82,
        "readers_count": 81,
        "score": 46.4,
        "yours": false,
        "topic_id": 452,
        "topic_slug": "application-design-using-subspace-and-tuple",
        "display_username": "Viacheslav Biriukov",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 211,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/application-design-using-subspace-and-tuple/452/6",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 1678,
        "name": "Pontus Lundin",
        "username": "Lundin",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/l/dfb087/{size}.png",
        "created_at": "2018-07-14T14:57:15.780Z",
        "cooked": "<p>Hi!</p>\n<p>How do i get a Range of a \u201cnested\u201d Dir ? (as per your example)</p>\n<p>UserScoreDir, err := directory.CreateOrOpen(db, []string{\u201cuser\u201d,\u201cscore\u201d}, nil)</p>\n<p>rr := tr.GetRange(fdb.KeyRange{UserScoreDir.Pack(tuple.Tuple{\"\"}), UserScoreDir.Pack(tuple.Tuple{0xFF})}, fdb.RangeOptions{})<br>\nri := rr.Iterator()</p>\n<p>I always end up with:<br>\nthe database has keys stored at the prefix chosen by the automatic prefix allocator: []</p>\n<p>Has it automatically allocated a prefix for the path that i need to specify ?<br>\nThanks!</p>",
        "post_number": 7,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2018-07-14T15:08:57.246Z",
        "reply_count": 1,
        "reply_to_post_number": 2,
        "quote_count": 0,
        "incoming_link_count": 3,
        "reads": 74,
        "readers_count": 73,
        "score": 34.8,
        "yours": false,
        "topic_id": 452,
        "topic_slug": "application-design-using-subspace-and-tuple",
        "display_username": "Pontus Lundin",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 53,
          "username": "KrzysFR",
          "name": "Christophe Chevalier",
          "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 317,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/application-design-using-subspace-and-tuple/452/7",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 1680,
        "name": "Christophe Chevalier",
        "username": "KrzysFR",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "created_at": "2018-07-14T16:37:05.072Z",
        "cooked": "<p>The Directory Layer allocates a random prefix the first time the directory is created, and nested directories will have a completely different prefix from their parent directory (just like on a file system, folders are hierarchical but on the disk their are allocated on any sector that was free at the time).</p>\n<p>In your sample, I think the confusion comes from the fact that you are using the tuple encoding instead of binary encoding for the keys:  <code>tuple.Tuple(\"\")</code> will encode to <code>'02 00'</code> (basically, the empty string), and <code>tuple.Tuple(0xFF)</code> will encode to <code>'15 FF'</code> (the integer 255). So you are only reading the range of <code>(xxx.02.00)..(xxx.15.FF)</code>, basically saying for all the keys from the empty string to the integer 254 which does not make much sense.</p>\n<p>If you want to read the <em>entire</em> content of the directory, there should be a method on the directory instance that is named something like <code>ToRange()</code> (will depend on the language and binding you are using) which should return a key range. It should automatically add the 0xFF at the end, so you don\u2019t need to do it yourself.</p>\n<p>For directories that use the tuple encoding, usually if the prefix is \u2018abc\u2019, if will return a range <code>'abc' &lt;= k &lt; 'abc\\xFF'</code>, because the tuple encoding never produces keys starting with 0xFF.</p>\n<p>But if you are using a different encoding, then you should use <code>'abc' &lt;= k &lt; 'abd'</code> which increments the last byte.</p>\n<p>Most language and bindings have a type named something like KeyRange with various methods like \u201cstartsWith\u201d of \u201cprefixedBy\u201d that should do this for you.</p>",
        "post_number": 8,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2018-07-14T16:37:55.583Z",
        "reply_count": 1,
        "reply_to_post_number": 7,
        "quote_count": 0,
        "incoming_link_count": 11,
        "reads": 75,
        "readers_count": 74,
        "score": 90.0,
        "yours": false,
        "topic_id": 452,
        "topic_slug": "application-design-using-subspace-and-tuple",
        "display_username": "Christophe Chevalier",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 317,
          "username": "Lundin",
          "name": "Pontus Lundin",
          "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/l/dfb087/{size}.png"
        },
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 53,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/application-design-using-subspace-and-tuple/452/8",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 1683,
        "name": "Pontus Lundin",
        "username": "Lundin",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/l/dfb087/{size}.png",
        "created_at": "2018-07-14T21:02:50.010Z",
        "cooked": "<p>Many thanks Christophe your FDB insights, very valuable so thanks for sharing =)<br>\nFor anyone using Go bindings i ended up using this method<br>\ns, e := UserScoreDir.FDBRangeKeys() //start and end key<br>\nwithin<br>\nrr := tr.GetRange(fdb.KeyRange{s, e}, fdb.RangeOptions{})</p>\n<p>Also, my DB was a mess i had tried various setters on various paths and prefix. Wiped it all it all out while another processed was using it\u2026it made it more or less corrupt <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=5\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\"> Needles to say i had to uninstall and install it again and now it works as expected\u2026but hey it is a local dev machine so lesson learned =)</p>\n<p>Thanks!</p>",
        "post_number": 9,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2018-07-14T21:02:50.010Z",
        "reply_count": 0,
        "reply_to_post_number": 8,
        "quote_count": 0,
        "incoming_link_count": 9,
        "reads": 74,
        "readers_count": 73,
        "score": 59.8,
        "yours": false,
        "topic_id": 452,
        "topic_slug": "application-design-using-subspace-and-tuple",
        "display_username": "Pontus Lundin",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 53,
          "username": "KrzysFR",
          "name": "Christophe Chevalier",
          "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 317,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/application-design-using-subspace-and-tuple/452/9",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      1238,
      1240,
      1248,
      1252,
      1254,
      1296,
      1678,
      1680,
      1683
    ]
  },
  "timeline_lookup": [
    [
      1,
      2709
    ],
    [
      3,
      2708
    ],
    [
      6,
      2706
    ],
    [
      7,
      2656
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "Application design using Subspace and Tuple",
  "id": 452,
  "title": "Application design using Subspace and Tuple",
  "posts_count": 9,
  "created_at": "2018-05-22T21:46:43.537Z",
  "views": 3678,
  "reply_count": 7,
  "like_count": 5,
  "last_posted_at": "2018-07-14T21:02:50.010Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "application-design-using-subspace-and-tuple",
  "category_id": 7,
  "word_count": 2898,
  "deleted_at": null,
  "user_id": 211,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_452",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 9,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 3,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "What&rsquo;s the purpose of the Directory layer?",
      "id": 677,
      "title": "What's the purpose of the Directory layer?",
      "slug": "whats-the-purpose-of-the-directory-layer",
      "posts_count": 10,
      "reply_count": 6,
      "highest_post_number": 11,
      "image_url": null,
      "created_at": "2018-09-02T20:58:11.436Z",
      "last_posted_at": "2022-07-22T02:24:33.270Z",
      "bumped": true,
      "bumped_at": "2022-07-22T02:24:33.270Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 11,
      "views": 6523,
      "category_id": 9,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 41,
            "username": "amirouche",
            "name": "Amirouche",
            "avatar_template": "/user_avatar/forums.foundationdb.org/amirouche/{size}/1911_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 538,
            "username": "ravilution",
            "name": "Ravilution",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ravilution/{size}/728_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 1080,
            "username": "knarayanan88",
            "name": "Narayanan K",
            "avatar_template": "/user_avatar/forums.foundationdb.org/knarayanan88/{size}/1300_2.png",
            "trust_level": 1
          }
        }
      ]
    },
    {
      "fancy_title": "Is possible set a value as a reference to another subspace?",
      "id": 553,
      "title": "Is possible set a value as a reference to another subspace?",
      "slug": "is-possible-set-a-value-as-a-reference-to-another-subspace",
      "posts_count": 8,
      "reply_count": 4,
      "highest_post_number": 8,
      "image_url": null,
      "created_at": "2018-07-08T21:46:32.215Z",
      "last_posted_at": "2018-08-10T22:47:55.284Z",
      "bumped": true,
      "bumped_at": "2018-09-20T00:46:44.180Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 4,
      "views": 1468,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 323,
            "username": "WolfDan",
            "name": "Wolf Dan",
            "avatar_template": "/user_avatar/forums.foundationdb.org/wolfdan/{size}/806_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 41,
            "username": "amirouche",
            "name": "Amirouche",
            "avatar_template": "/user_avatar/forums.foundationdb.org/amirouche/{size}/1911_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "NodeJS bindings: Announcing 1.0.0 with directory layer support!",
      "id": 2049,
      "title": "NodeJS bindings: Announcing 1.0.0 with directory layer support!",
      "slug": "nodejs-bindings-announcing-1-0-0-with-directory-layer-support",
      "posts_count": 10,
      "reply_count": 5,
      "highest_post_number": 10,
      "image_url": null,
      "created_at": "2020-04-08T08:34:17.351Z",
      "last_posted_at": "2020-08-05T22:19:19.845Z",
      "bumped": true,
      "bumped_at": "2020-08-05T22:19:19.845Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 5,
      "views": 1406,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 120,
            "username": "josephg",
            "name": "Seph Gentle",
            "avatar_template": "/user_avatar/forums.foundationdb.org/josephg/{size}/84_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 763,
            "username": "sergio-olvera",
            "name": "Sergio Olvera",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/ac8455/{size}.png",
            "trust_level": 0
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 1,
            "username": "davelester",
            "name": "Dave Lester",
            "avatar_template": "/user_avatar/forums.foundationdb.org/davelester/{size}/1927_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 393,
            "username": "ex3ndr",
            "name": "Steve Korshakov",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ex3ndr/{size}/389_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Range keys for subspace don&rsquo;t include first or last key",
      "id": 2337,
      "title": "Range keys for subspace don't include first or last key",
      "slug": "range-keys-for-subspace-dont-include-first-or-last-key",
      "posts_count": 4,
      "reply_count": 2,
      "highest_post_number": 4,
      "image_url": null,
      "created_at": "2020-09-15T03:12:25.601Z",
      "last_posted_at": "2020-09-16T23:26:17.094Z",
      "bumped": true,
      "bumped_at": "2020-09-16T23:26:17.094Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 880,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 810,
            "username": "amanda",
            "name": "Amanda",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/a/67e7ee/{size}.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Can subspace/dir be used unlimited (modelling) and about multi client",
      "id": 536,
      "title": "Can subspace/dir be used unlimited (modelling) and about multi client",
      "slug": "can-subspace-dir-be-used-unlimited-modelling-and-about-multi-client",
      "posts_count": 4,
      "reply_count": 1,
      "highest_post_number": 4,
      "image_url": null,
      "created_at": "2018-07-01T15:39:50.966Z",
      "last_posted_at": "2018-07-03T18:41:34.170Z",
      "bumped": true,
      "bumped_at": "2018-07-03T18:44:49.138Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 1105,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 317,
            "username": "Lundin",
            "name": "Pontus Lundin",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/l/dfb087/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 22,
            "username": "dave",
            "name": "David Scherer",
            "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 53,
        "username": "KrzysFR",
        "name": "Christophe Chevalier",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "post_count": 4,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      },
      {
        "id": 211,
        "username": "brk0v",
        "name": "Viacheslav Biriukov",
        "avatar_template": "/user_avatar/forums.foundationdb.org/brk0v/{size}/173_2.png",
        "post_count": 3,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 317,
        "username": "Lundin",
        "name": "Pontus Lundin",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/l/dfb087/{size}.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      }
    ],
    "created_by": {
      "id": 211,
      "username": "brk0v",
      "name": "Viacheslav Biriukov",
      "avatar_template": "/user_avatar/forums.foundationdb.org/brk0v/{size}/173_2.png"
    },
    "last_poster": {
      "id": 317,
      "username": "Lundin",
      "name": "Pontus Lundin",
      "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/l/dfb087/{size}.png"
    },
    "links": [
      {
        "url": "https://github.com/Doxense/foundationdb-dotnet-client/blob/master/FoundationDB.Client/Subspaces/DynamicKeySubspace.cs",
        "title": "foundationdb-dotnet-client/DynamicKeySubspace.cs at master \u00b7 Doxense/foundationdb-dotnet-client \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 2,
        "user_id": 53,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://github.com/Doxense/foundationdb-dotnet-client/blob/master/FoundationDB.Client/Shared/TypeSystem/Encoders/IDynamicKeyEncoder.cs",
        "title": "foundationdb-dotnet-client/IDynamicKeyEncoder.cs at master \u00b7 Doxense/foundationdb-dotnet-client \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 1,
        "user_id": 53,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://github.com/Doxense/foundationdb-dotnet-client/blob/master/FoundationDB.Client/Shared/TypeSystem/IKeyEncoding.cs",
        "title": "foundationdb-dotnet-client/IKeyEncoding.cs at master \u00b7 Doxense/foundationdb-dotnet-client \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 1,
        "user_id": 53,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://github.com/Doxense/foundationdb-dotnet-client/blob/master/FoundationDB.Client/Subspaces/TypedKeySubspace%603.cs",
        "title": "foundationdb-dotnet-client/TypedKeySubspace`3.cs at master \u00b7 Doxense/foundationdb-dotnet-client \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 1,
        "user_id": 53,
        "domain": "github.com",
        "root_domain": "github.com"
      }
    ]
  },
  "bookmarks": []
}