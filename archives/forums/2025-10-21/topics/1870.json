{
  "post_stream": {
    "posts": [
      {
        "id": 5931,
        "name": "nischal kumar",
        "username": "nischalkumar",
        "avatar_template": "/user_avatar/forums.foundationdb.org/nischalkumar/{size}/933_2.png",
        "created_at": "2020-01-08T17:51:42.581Z",
        "cooked": "<p>language = Java 8</p>\n<blockquote>\n<p>result = transaction.getRange(new Range(startKey, endKey), limit).asList().get();</p>\n</blockquote>\n<p>I am using foundation db as janusgraph adapter. While performing RangeReads I want to get the whole result as list. asList() method of AsyncIterable returns a CompletableFuture on which I do get to fetch the result. Most of the times this works, But in production, get() fails for around 1 percent of request with InterruptedExcpetion. If i retry n times, I get the correct result.</p>\n<p>I have a few questions</p>\n<ul>\n<li>Why is Interrupted Exception is being thrown on doing get() on completableFuture</li>\n<li>How can I minimize the occurrence of interrupt exception.</li>\n<li>can foundationDb throw interruptException on its getRange</li>\n</ul>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 4,
        "updated_at": "2020-01-09T07:03:49.491Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 35,
        "reads": 20,
        "readers_count": 19,
        "score": 179.0,
        "yours": false,
        "topic_id": 1870,
        "topic_slug": "rangeread-future-throws-interruptexception-on-get",
        "display_username": "nischal kumar",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 695,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/rangeread-future-throws-interruptexception-on-get/1870/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 5932,
        "name": "gaurav",
        "username": "gaurav",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
        "created_at": "2020-01-09T08:46:50.316Z",
        "cooked": "<p>Can you provide the complete exception stack trace to give more hints on what could be going on?</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 4,
        "updated_at": "2020-01-09T08:46:50.316Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 20,
        "readers_count": 19,
        "score": 14.0,
        "yours": false,
        "topic_id": 1870,
        "topic_slug": "rangeread-future-throws-interruptexception-on-get",
        "display_username": "gaurav",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 166,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/rangeread-future-throws-interruptexception-on-get/1870/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 5933,
        "name": "nischal kumar",
        "username": "nischalkumar",
        "avatar_template": "/user_avatar/forums.foundationdb.org/nischalkumar/{size}/933_2.png",
        "created_at": "2020-01-09T09:18:42.477Z",
        "cooked": "<p>I am using <a href=\"https://github.com/experoinc/janusgraph-foundationdb\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">GitHub - JanusGraph/janusgraph-foundationdb: FoundationDB storage adapter for JanusGraph</a> as adapter for janusgraph.<br>\nthis stacktrace is for multiRange which in itself calls getRange method.</p>\n<blockquote>\n<p>failed to get multi range for queries [[Ljava.lang.Object;<span class=\"mention\">@6e2a12c6</span>]<br>\njava.lang.InterruptedException<br>\nat java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:347)<br>\nat java.util.concurrent.CompletableFuture.get(CompletableFuture.java:1908)<br>\nat com.experoinc.janusgraph.diskstorage.foundationdb.FoundationDBTx.getMultiRange(FoundationDBTx.java:241)<br>\nat com.experoinc.janusgraph.diskstorage.foundationdb.FoundationDBKeyValueStore.getSlices(FoundationDBKeyValueStore.java:191)<br>\nat org.janusgraph.diskstorage.keycolumnvalue.keyvalue.OrderedKeyValueStoreAdapter.getSlice(OrderedKeyValueStoreAdapter.java:78)<br>\nat org.janusgraph.diskstorage.keycolumnvalue.KCVSProxy.getSlice(KCVSProxy.java:81)<br>\nat org.janusgraph.diskstorage.BackendTransaction$2.call(BackendTransaction.java:287)<br>\nat org.janusgraph.diskstorage.BackendTransaction$2.call(BackendTransaction.java:284)<br>\nat org.janusgraph.diskstorage.util.BackendOperation.executeDirect(BackendOperation.java:68)<br>\nat org.janusgraph.diskstorage.util.BackendOperation.execute(BackendOperation.java:54)<br>\nat org.janusgraph.diskstorage.BackendTransaction.executeRead(BackendTransaction.java:469)<br>\nat org.janusgraph.diskstorage.BackendTransaction.edgeStoreMultiQuery(BackendTransaction.java:284)<br>\nat org.janusgraph.graphdb.database.StandardJanusGraph.edgeMultiQuery(StandardJanusGraph.java:450)<br>\nat org.janusgraph.graphdb.transaction.StandardJanusGraphTx.lambda$executeMultiQuery$5(StandardJanusGraphTx.java:1108)<br>\nat org.janusgraph.graphdb.query.profile.QueryProfiler.profile(QueryProfiler.java:99)<br>\nat org.janusgraph.graphdb.query.profile.QueryProfiler.profile(QueryProfiler.java:91)<br>\nat org.janusgraph.graphdb.transaction.StandardJanusGraphTx.executeMultiQuery(StandardJanusGraphTx.java:1108)<br>\nat org.janusgraph.graphdb.query.vertex.MultiVertexCentricQueryBuilder.execute(MultiVertexCentricQueryBuilder.java:113)<br>\nat org.janusgraph.graphdb.query.vertex.MultiVertexCentricQueryBuilder.edges(MultiVertexCentricQueryBuilder.java:133)<br>\nat org.janusgraph.graphdb.tinkerpop.optimize.JanusGraphVertexStep.initializeMultiQuery(JanusGraphVertexStep.java:138)<br>\nat org.janusgraph.graphdb.tinkerpop.optimize.JanusGraphVertexStep.initialize(JanusGraphVertexStep.java:116)<br>\nat org.janusgraph.graphdb.tinkerpop.optimize.JanusGraphVertexStep.processNextStart(JanusGraphVertexStep.java:181)<br>\nat org.apache.tinkerpop.gremlin.process.traversal.step.util.AbstractStep.hasNext(AbstractStep.java:143)<br>\nat org.apache.tinkerpop.gremlin.process.traversal.step.util.ExpandableStepIterator.next(ExpandableStepIterator.java:50)<br>\nat org.apache.tinkerpop.gremlin.process.traversal.step.filter.FilterStep.processNextStart(FilterStep.java:37)<br>\nat org.apache.tinkerpop.gremlin.process.traversal.step.util.AbstractStep.hasNext(AbstractStep.java:143)<br>\nat org.apache.tinkerpop.gremlin.process.traversal.step.util.ExpandableStepIterator.next(ExpandableStepIterator.java:50)<br>\nat org.apache.tinkerpop.gremlin.process.traversal.step.map.MapStep.processNextStart(MapStep.java:36)<br>\nat org.apache.tinkerpop.gremlin.process.traversal.step.util.AbstractStep.hasNext(AbstractStep.java:143)<br>\nat org.apache.tinkerpop.gremlin.process.traversal.step.util.ExpandableStepIterator.hasNext(ExpandableStepIterator.java:42)<br>\nat org.janusgraph.graphdb.tinkerpop.optimize.JanusGraphPropertiesStep.initialize(JanusGraphPropertiesStep.java:89)<br>\nat org.janusgraph.graphdb.tinkerpop.optimize.JanusGraphPropertiesStep.processNextStart(JanusGraphPropertiesStep.java:124)<br>\nat org.apache.tinkerpop.gremlin.process.traversal.step.util.AbstractStep.hasNext(AbstractStep.java:143)<br>\nat org.apache.tinkerpop.gremlin.process.traversal.util.DefaultTraversal.hasNext(DefaultTraversal.java:192)<br>\nat org.apache.tinkerpop.gremlin.server.util.TraverserIterator.fillBulker(TraverserIterator.java:69)<br>\nat org.apache.tinkerpop.gremlin.server.util.TraverserIterator.hasNext(TraverserIterator.java:56)<br>\nat org.apache.tinkerpop.gremlin.server.op.traversal.TraversalOpProcessor.handleIterator(TraversalOpProcessor.java:483)<br>\nat org.apache.tinkerpop.gremlin.server.op.traversal.TraversalOpProcessor.lambda$iterateBytecodeTraversal$4(TraversalOpProcessor.java:382)<br>\nat java.util.concurrent.FutureTask.run(FutureTask.java:266)<br>\nat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)<br>\nat java.util.concurrent.FutureTask.run(FutureTask.java:266)<br>\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)<br>\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)<br>\nat java.lang.Thread.run(Thread.java:748)</p>\n</blockquote>\n<p>adding code for getMulti</p>\n<pre><code>public synchronized  Map&lt;KVQuery, List&lt;KeyValue&gt;&gt; getMultiRange(final List&lt;Object[]&gt; queries)\n        throws PermanentBackendException {\n    Map&lt;KVQuery, List&lt;KeyValue&gt;&gt; resultMap = new ConcurrentHashMap&lt;&gt;();\n    final List&lt;Object[]&gt; retries = new CopyOnWriteArrayList&lt;&gt;(queries);\n    final List&lt;CompletableFuture&gt; futures = new LinkedList&lt;&gt;();\n    for (int i = 0; i &lt; (maxRuns * 5); i++) {\n        for(Object[] obj : retries) {\n            final KVQuery query = (KVQuery) obj[0];\n            final byte[] start = (byte[]) obj[1];\n            final byte[] end = (byte[]) obj[2];\n\n            final int startTxId = txCtr.get();\n            try {\n                futures.add(tx.getRange(start, end, query.getLimit()).asList()\n                        .whenComplete((res, th) -&gt; {\n                            if (th == null) {\n                                retries.remove(query);\n                                if (res == null) {\n                                    res = Collections.emptyList();\n                                }\n                                resultMap.put(query, res);\n                            } else {\n                                if (startTxId == txCtr.get())\n                                    this.restart();\n                            }\n                        }));\n            } catch (IllegalStateException fdbe) {\n                // retry on IllegalStateException thrown when tx state changes prior to getRange call\n            }\n        }\n    }\n    for (final CompletableFuture future : futures) {\n        try {\n            future.get();\n        } catch (ExecutionException ee) {\n            // some tasks will fail due to tx time limits being exceeded\n        } catch (IllegalStateException is) {\n            // illegal state can arise from tx being closed while tx is inflight\n        } catch (Exception e) {\n            log.error(\"failed to get multi range for queries {}\", queries, e);\n            throw new PermanentBackendException(e);\n        }\n    }\n\n    return resultMap;\n}\n</code></pre>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 4,
        "updated_at": "2020-01-09T09:18:42.477Z",
        "reply_count": 0,
        "reply_to_post_number": 2,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 20,
        "readers_count": 19,
        "score": 4.0,
        "yours": false,
        "topic_id": 1870,
        "topic_slug": "rangeread-future-throws-interruptexception-on-get",
        "display_username": "nischal kumar",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/experoinc/janusgraph-foundationdb",
            "internal": false,
            "reflection": false,
            "title": "GitHub - experoinc/janusgraph-foundationdb: FoundationDB storage adapter for JanusGraph",
            "clicks": 4
          }
        ],
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 166,
          "username": "gaurav",
          "name": "gaurav",
          "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 695,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/rangeread-future-throws-interruptexception-on-get/1870/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 5952,
        "name": "nischal kumar",
        "username": "nischalkumar",
        "avatar_template": "/user_avatar/forums.foundationdb.org/nischalkumar/{size}/933_2.png",
        "created_at": "2020-01-13T00:51:25.429Z",
        "cooked": "<p>I was using .get() on completableFuture which throws InterruptExceptions which come with task of finding which thread interrupted completablefuture work. Instead with .join() all exceptions are RunTime Exceptions which are verbose to my use case.</p>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 4,
        "updated_at": "2020-01-13T00:51:25.429Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 3,
        "reads": 14,
        "readers_count": 13,
        "score": 17.8,
        "yours": false,
        "topic_id": 1870,
        "topic_slug": "rangeread-future-throws-interruptexception-on-get",
        "display_username": "nischal kumar",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 695,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/rangeread-future-throws-interruptexception-on-get/1870/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      5931,
      5932,
      5933,
      5952
    ]
  },
  "timeline_lookup": [
    [
      1,
      2113
    ],
    [
      4,
      2109
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "rangeRead future throws interruptException on get",
  "id": 1870,
  "title": "rangeRead future throws interruptException on get",
  "posts_count": 4,
  "created_at": "2020-01-08T17:51:42.524Z",
  "views": 727,
  "reply_count": 1,
  "like_count": 0,
  "last_posted_at": "2020-01-13T00:51:25.429Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "rangeread-future-throws-interruptexception-on-get",
  "category_id": 7,
  "word_count": 878,
  "deleted_at": null,
  "user_id": 695,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_1870",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 4,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 2,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "FoundationDB as backend for JanusGraph - Iterate through all vertices",
      "id": 2280,
      "title": "FoundationDB as backend for JanusGraph - Iterate through all vertices",
      "slug": "foundationdb-as-backend-for-janusgraph-iterate-through-all-vertices",
      "posts_count": 4,
      "reply_count": 2,
      "highest_post_number": 4,
      "image_url": null,
      "created_at": "2020-08-06T18:41:32.903Z",
      "last_posted_at": "2020-08-10T03:42:01.690Z",
      "bumped": true,
      "bumped_at": "2020-08-10T10:38:29.945Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 2118,
      "category_id": 14,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 799,
            "username": "SarthakGhosh16",
            "name": "Sarthak Ghosh16",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/ba9def/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        }
      ]
    },
    {
      "fancy_title": "Scanning a large range with Locality API hangs",
      "id": 2183,
      "title": "Scanning a large range with Locality API hangs",
      "slug": "scanning-a-large-range-with-locality-api-hangs",
      "posts_count": 13,
      "reply_count": 10,
      "highest_post_number": 13,
      "image_url": null,
      "created_at": "2020-06-15T13:08:44.375Z",
      "last_posted_at": "2020-08-12T17:02:10.244Z",
      "bumped": true,
      "bumped_at": "2020-08-12T17:02:10.244Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 1961,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 711,
            "username": "osamarin",
            "name": "Oleg Samarin",
            "avatar_template": "/user_avatar/forums.foundationdb.org/osamarin/{size}/905_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 799,
            "username": "SarthakGhosh16",
            "name": "Sarthak Ghosh16",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/ba9def/{size}.png",
            "trust_level": 1
          }
        }
      ]
    },
    {
      "fancy_title": "Why can I only range read 2857 keys?",
      "id": 1517,
      "title": "Why can I only range read 2857 keys?",
      "slug": "why-can-i-only-range-read-2857-keys",
      "posts_count": 2,
      "reply_count": 0,
      "highest_post_number": 2,
      "image_url": null,
      "created_at": "2019-07-13T06:06:58.493Z",
      "last_posted_at": "2019-07-13T19:32:13.906Z",
      "bumped": true,
      "bumped_at": "2019-07-13T19:32:13.906Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 2,
      "views": 634,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 542,
            "username": "jonahwest",
            "name": "",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/j/90db22/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Java: concurrency questions",
      "id": 1571,
      "title": "Java: concurrency questions",
      "slug": "java-concurrency-questions",
      "posts_count": 7,
      "reply_count": 5,
      "highest_post_number": 7,
      "image_url": null,
      "created_at": "2019-08-07T19:22:14.348Z",
      "last_posted_at": "2020-06-18T15:02:27.357Z",
      "bumped": true,
      "bumped_at": "2020-06-18T15:02:27.357Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [
        "bindings"
      ],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 1793,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 307,
            "username": "jwr",
            "name": "Jan Rychter",
            "avatar_template": "/user_avatar/forums.foundationdb.org/jwr/{size}/302_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 711,
            "username": "osamarin",
            "name": "Oleg Samarin",
            "avatar_template": "/user_avatar/forums.foundationdb.org/osamarin/{size}/905_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "How does FDB execute multiple getRange requests in parallel?",
      "id": 1316,
      "title": "How does FDB execute multiple getRange requests in parallel?",
      "slug": "how-does-fdb-execute-multiple-getrange-requests-in-parallel",
      "posts_count": 6,
      "reply_count": 4,
      "highest_post_number": 6,
      "image_url": null,
      "created_at": "2019-04-18T01:34:17.414Z",
      "last_posted_at": "2019-04-21T04:35:24.749Z",
      "bumped": true,
      "bumped_at": "2019-04-21T04:35:24.749Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 2,
      "views": 1690,
      "category_id": 5,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 567,
            "username": "kunren",
            "name": "Kun Ren",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/k/f475e1/{size}.png",
            "trust_level": 0
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 337,
            "username": "mengxu",
            "name": "Meng Xu",
            "avatar_template": "/user_avatar/forums.foundationdb.org/mengxu/{size}/893_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 15,
            "username": "markus.pilman",
            "name": "Markus Pilman",
            "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
            "admin": true,
            "trust_level": 4
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 695,
        "username": "nischalkumar",
        "name": "nischal kumar",
        "avatar_template": "/user_avatar/forums.foundationdb.org/nischalkumar/{size}/933_2.png",
        "post_count": 3,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 166,
        "username": "gaurav",
        "name": "gaurav",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 3
      }
    ],
    "created_by": {
      "id": 695,
      "username": "nischalkumar",
      "name": "nischal kumar",
      "avatar_template": "/user_avatar/forums.foundationdb.org/nischalkumar/{size}/933_2.png"
    },
    "last_poster": {
      "id": 695,
      "username": "nischalkumar",
      "name": "nischal kumar",
      "avatar_template": "/user_avatar/forums.foundationdb.org/nischalkumar/{size}/933_2.png"
    },
    "links": [
      {
        "url": "https://github.com/experoinc/janusgraph-foundationdb",
        "title": "GitHub - experoinc/janusgraph-foundationdb: FoundationDB storage adapter for JanusGraph",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 4,
        "user_id": 695,
        "domain": "github.com",
        "root_domain": "github.com"
      }
    ]
  },
  "bookmarks": []
}