{
  "post_stream": {
    "posts": [
      {
        "id": 12085,
        "name": "Allen Rohner",
        "username": "arohner",
        "avatar_template": "/user_avatar/forums.foundationdb.org/arohner/{size}/1475_2.png",
        "created_at": "2022-12-02T12:04:19.315Z",
        "cooked": "<p>In the Java API, as far as I can tell it\u2019s only possible to write a single incomplete versionstamp in a single key/value write. Is that correct?</p>\n<p>I find that constraint very limiting, and would really like the ability to write multiple versionstamps in the same write. Is that likely to ever change?</p>\n<p>My usecase is I want to represent entity IDs as versionstamps, and also store relationships between entities. With this limitation it\u2019s not possible to write two new entities, and a relationship in the same transaction.</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 4,
        "updated_at": "2022-12-02T12:04:19.315Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 40,
        "reads": 23,
        "readers_count": 22,
        "score": 204.6,
        "yours": false,
        "topic_id": 3683,
        "topic_slug": "multiple-versionstamps-in-same-key-value",
        "display_username": "Allen Rohner",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 1191,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/multiple-versionstamps-in-same-key-value/3683/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 12093,
        "name": "Alec Grieser",
        "username": "alloc",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "created_at": "2022-12-05T12:06:52.118Z",
        "cooked": "<p>Yes, that\u2019s right that you can\u2019t have more than one incomplete versionstamp in a single key or value. This limitation is baked into the FDB C API that the Java API is built on top of, so to change this, we\u2019d need to do something like change the way the versionstamp atomic operations work.</p>\n<p>For reference, the current scheme for a versionstamped key or value is that when using the <code>SET_VERSIONSTAMPED_KEY</code> or <code>SET_VERSIONSTAMPED_VALUE</code> atomic operations, the last 4 bytes of the key or value are stripped from the bytes given, and then interpreted as a little endian integer. This new integer is then treated as the (zero-indexed) position within the stripped bytes at which the index versionstamp is inserted.</p>\n<p>So if you had something like:</p>\n<pre><code class=\"lang-auto\">\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x0a\\x0b\\x0c\\0d\\x0e\\0x0f\\x10\\x01\\x00\\x00\\x00\n</code></pre>\n<p>Then those last four bytes <code>\\x01\\x00\\x00\\x00</code> get treated as position 1. If the versionstamp is something like <code>\\x00\\x00\\x00\\x00\\x5c\\xa1\\xab\\x1e\\x0f\\xdb</code>, then the new key/value becomes:</p>\n<pre><code class=\"lang-auto\">\\x00\\x00\\x00\\x00\\x00\\x5c\\xa1\\xab\\x1e\\x0f\\xdb\\x0b\\x0c\\0d\\x0e\\0x0f\\x10\n</code></pre>\n<p>But as you can see, this serialization format only allows one versionstamp to be serialized into it.</p>\n<p>To generalize this to more versions, you could imagine we did something like introduce new atomic operations like <code>SET_MULTI_VERSIONSTAMPED_KEY</code> and <code>SET_MULTI_VERSIONSTAMPED_VALUE</code> or perhaps one atomic operation <code>MULTI_VERSIONSTAMPED_SET</code> where the serialization format was something like:</p>\n<ol>\n<li>Start with a byte prefix with dummy values for the versionstamps that will become the final key/value (but with the versionstamps filled in)</li>\n<li>Encode after the prefix four-byte little Endian integer offsets for each incomplete versionstamp</li>\n<li>At the end, suffix the byte array with a single byte containing the number of versionstamps</li>\n</ol>\n<p>This has some nice properties like:</p>\n<ul>\n<li>Vanilla sets are equivalent to this scheme, but with the value <code>\\x00</code> appended at the end</li>\n<li>Versionstamp operations in the older encoding can be converted to the new encoding by appending <code>\\x01</code> at the end</li>\n<li>The <code>\\x00</code> suffix can be leveraged to allow the same <code>MULTI_VERSIONSTAMPED_SET</code> operation to be used for versionstamped key and value operations</li>\n</ul>\n<p>This scheme is limited to 256 versionstamps in each single key/value, which maybe some use cases would find limiting. Of course, that could be increased by either increasing the number of terminating bytes or by using, say, a variable length encoding scheme.</p>\n<p>Adding a new FDB atomic operation is <em>fairly</em> straightforward, though it would require an FDB API change. The standard procedure would be to introduce it in the list of mutations in <a href=\"https://github.com/apple/foundationdb/blob/d76822bc1244d9eef168f7dba717bb3456691b63/fdbclient/vexillographer/fdb.options#L355\"><code>fdb.options</code></a>. This exposes it to all of the bindings, and then code to interpret it needs to be added to the server. You\u2019d probably want to also update the <a href=\"https://github.com/apple/foundationdb/blob/main/bindings/java/src/main/com/apple/foundationdb/tuple/Tuple.java\"><code>Tuple</code> class</a> so that it supports serializing <code>Tuple</code>s with multiple versionstamps using the new scheme.</p>\n<hr>\n<p>If you didn\u2019t want to do that, you could potentially modify your application\u2019s serialization scheme to support using only incomplete versionstamp. For example, I\u2019m not sure how you\u2019re encoding your entity IDs, but if it\u2019s something like:</p>\n<pre><code class=\"lang-auto\">(entity 1 versionstamp, entity 1 suffix, entity 2 versionstamp, entity 2 suffix, entity 3 versionstamp, entity 3 suffix)\n</code></pre>\n<p>Then, say, that you want entity 1 and entity 2 to have the same incomplete versionstamp, and you want entity 3 to have some other versionstamp (because, say, it was written in a different transaction). You could do something like:</p>\n<pre><code class=\"lang-auto\">(shared versionstamp, null, entity 1 suffix, null, entity 2 suffix, entity 3 versionstamp, entity 3 suffix)\n</code></pre>\n<p>Then the <code>null</code> in the entity 1 and entity 2 versionstamp locations indicate that it should use the single shared versionstamp, and entity 3 should use the given versionstamp.</p>\n<p>This only works, though, if you don\u2019t care about the ordering (so probably better for values than keys). If you wanted, say, an index on <code>(entity 1 ID, entity 2 ID)</code>, then I don\u2019t think there\u2019s a great way that doesn\u2019t require this new <code>SET_MULTI_VERSIONSTAMPED_KEY</code> API, or an additional commit (for example, you could serialize entity 1 and entity 2 in transaction to assign them versionstamps, and then update the index in a separate transaction using only complete versionstamps, read from the database from the result of the first transaction)</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 4,
        "updated_at": "2022-12-05T12:11:19.045Z",
        "reply_count": 2,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 5,
        "reads": 24,
        "readers_count": 23,
        "score": 54.8,
        "yours": false,
        "topic_id": 3683,
        "topic_slug": "multiple-versionstamps-in-same-key-value",
        "display_username": "Alec Grieser",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/apple/foundationdb/blob/main/bindings/java/src/main/com/apple/foundationdb/tuple/Tuple.java",
            "internal": false,
            "reflection": false,
            "title": "foundationdb/Tuple.java at main \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 2
          },
          {
            "url": "https://github.com/apple/foundationdb/blob/d76822bc1244d9eef168f7dba717bb3456691b63/fdbclient/vexillographer/fdb.options#L355",
            "internal": false,
            "reflection": false,
            "title": "foundationdb/fdb.options at d76822bc1244d9eef168f7dba717bb3456691b63 \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 1
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 8,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/multiple-versionstamps-in-same-key-value/3683/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 12094,
        "name": "Allen Rohner",
        "username": "arohner",
        "avatar_template": "/user_avatar/forums.foundationdb.org/arohner/{size}/1475_2.png",
        "created_at": "2022-12-05T12:53:36.614Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"alloc\" data-post=\"2\" data-topic=\"3683\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/alloc/48/9_2.png\" class=\"avatar\"> alloc:</div>\n<blockquote>\n<p>This only works, though, if you don\u2019t care about the ordering (so probably better for values than keys). If you wanted, say, an index on <code>(entity 1 ID, entity 2 ID)</code>, then I don\u2019t think there\u2019s a great way that doesn\u2019t require this new <code>SET_MULTI_VERSIONSTAMPED_KEY</code> API</p>\n</blockquote>\n</aside>\n<p>Thanks. I\u2019d like to use these entity IDs in secondary indexes, so that is a restriction. I think I can work around it using UUIDs for now.</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 4,
        "updated_at": "2022-12-05T12:53:36.614Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 22,
        "readers_count": 21,
        "score": 9.4,
        "yours": false,
        "topic_id": 3683,
        "topic_slug": "multiple-versionstamps-in-same-key-value",
        "display_username": "Allen Rohner",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 1191,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/multiple-versionstamps-in-same-key-value/3683/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 12867,
        "name": "Allen Rohner",
        "username": "arohner",
        "avatar_template": "/user_avatar/forums.foundationdb.org/arohner/{size}/1475_2.png",
        "created_at": "2023-05-22T12:43:55.137Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"alloc\" data-post=\"2\" data-topic=\"3683\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/alloc/48/9_2.png\" class=\"avatar\"> alloc:</div>\n<blockquote>\n<p><code>\\x01\\x00\\x00\\x00</code></p>\n</blockquote>\n</aside>\n<p>I\u2019m interested in starting working on the API change.</p>\n<blockquote>\n<ul>\n<li>Vanilla sets are equivalent to this scheme, but with the value <code>\\x00</code> appended at the end</li>\n<li>Versionstamp operations in the older encoding can be converted to the new encoding by appending <code>\\x01</code> at the end</li>\n<li>The <code>\\x00</code> suffix can be leveraged to allow the same <code>MULTI_VERSIONSTAMPED_SET</code> operation to be used for versionstamped key and value operations</li>\n</ul>\n</blockquote>\n<p>I think I follow this logic for setting either keys or values, but I\u2019m not entirely sure how to make it handle keys and values at the same time. Let\u2019s say I want to write a versionstamp to a key and value in the same operation. Would the offset for the first byte in the key start at zero, and the offset for the first byte in the value start at key_length + 1?</p>\n<p>This will be my first FDB patch. Are there any development process things I should be aware of?</p>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 4,
        "updated_at": "2023-05-22T15:01:39.276Z",
        "reply_count": 0,
        "reply_to_post_number": 3,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 15,
        "readers_count": 14,
        "score": 18.0,
        "yours": false,
        "topic_id": 3683,
        "topic_slug": "multiple-versionstamps-in-same-key-value",
        "display_username": "Allen Rohner",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 3,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 1191,
          "username": "arohner",
          "name": "Allen Rohner",
          "avatar_template": "/user_avatar/forums.foundationdb.org/arohner/{size}/1475_2.png"
        },
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 1191,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/multiple-versionstamps-in-same-key-value/3683/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      12085,
      12093,
      12094,
      12867
    ]
  },
  "timeline_lookup": [
    [
      1,
      1054
    ],
    [
      2,
      1051
    ],
    [
      4,
      883
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "Multiple versionstamps in same key/value?",
  "id": 3683,
  "title": "Multiple versionstamps in same key/value?",
  "posts_count": 4,
  "created_at": "2022-12-02T12:04:19.255Z",
  "views": 474,
  "reply_count": 1,
  "like_count": 2,
  "last_posted_at": "2023-05-22T12:43:55.137Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "multiple-versionstamps-in-same-key-value",
  "category_id": 7,
  "word_count": 1108,
  "deleted_at": null,
  "user_id": 1191,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_3683",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 4,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 2,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "Use Same Versionstamp in Multiple Subspaces",
      "id": 701,
      "title": "Use Same Versionstamp in Multiple Subspaces",
      "slug": "use-same-versionstamp-in-multiple-subspaces",
      "posts_count": 3,
      "reply_count": 0,
      "highest_post_number": 3,
      "image_url": null,
      "created_at": "2018-09-13T00:06:32.578Z",
      "last_posted_at": "2018-09-13T18:14:05.248Z",
      "bumped": true,
      "bumped_at": "2018-09-13T18:14:05.248Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 781,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 372,
            "username": "seancarroll",
            "name": "Sean Carroll",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/4af34b/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Use case of versionstamp and behavior of pack_with_versionstamp",
      "id": 869,
      "title": "Use case of versionstamp and behavior of pack_with_versionstamp",
      "slug": "use-case-of-versionstamp-and-behavior-of-pack-with-versionstamp",
      "posts_count": 7,
      "reply_count": 4,
      "highest_post_number": 8,
      "image_url": null,
      "created_at": "2018-11-14T21:14:41.993Z",
      "last_posted_at": "2018-11-26T18:06:38.323Z",
      "bumped": true,
      "bumped_at": "2018-11-26T18:06:38.323Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [
        "bindings"
      ],
      "tags_descriptions": {},
      "like_count": 5,
      "views": 2402,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 41,
            "username": "amirouche",
            "name": "Amirouche",
            "avatar_template": "/user_avatar/forums.foundationdb.org/amirouche/{size}/1911_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Implementing VersionStamps in bindings",
      "id": 250,
      "title": "Implementing VersionStamps in bindings",
      "slug": "implementing-versionstamps-in-bindings",
      "posts_count": 25,
      "reply_count": 18,
      "highest_post_number": 25,
      "image_url": null,
      "created_at": "2018-04-24T19:05:11.830Z",
      "last_posted_at": "2018-05-09T18:14:10.990Z",
      "bumped": true,
      "bumped_at": "2018-05-09T18:14:10.990Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 3,
      "views": 5417,
      "category_id": 8,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 156,
            "username": "spullara",
            "name": "Sam Pullara",
            "avatar_template": "/user_avatar/forums.foundationdb.org/spullara/{size}/125_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 120,
            "username": "josephg",
            "name": "Seph Gentle",
            "avatar_template": "/user_avatar/forums.foundationdb.org/josephg/{size}/84_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "VersionStamp vs CommittedVersion",
      "id": 600,
      "title": "VersionStamp vs CommittedVersion",
      "slug": "versionstamp-vs-committedversion",
      "posts_count": 7,
      "reply_count": 3,
      "highest_post_number": 7,
      "image_url": null,
      "created_at": "2018-07-30T06:50:38.826Z",
      "last_posted_at": "2018-09-17T19:43:14.827Z",
      "bumped": true,
      "bumped_at": "2018-09-17T19:43:14.827Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 3,
      "views": 3916,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 41,
            "username": "amirouche",
            "name": "Amirouche",
            "avatar_template": "/user_avatar/forums.foundationdb.org/amirouche/{size}/1911_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "&ldquo;Read or wrote an unreadable key&rdquo; when read and then write versionstamp value",
      "id": 2301,
      "title": "\"Read or wrote an unreadable key\" when read and then write versionstamp value",
      "slug": "read-or-wrote-an-unreadable-key-when-read-and-then-write-versionstamp-value",
      "posts_count": 2,
      "reply_count": 0,
      "highest_post_number": 2,
      "image_url": null,
      "created_at": "2020-08-22T22:36:53.054Z",
      "last_posted_at": "2020-08-23T00:50:06.076Z",
      "bumped": true,
      "bumped_at": "2020-08-23T00:50:06.076Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [
        "bindings"
      ],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 706,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest single",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 393,
            "username": "ex3ndr",
            "name": "Steve Korshakov",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ex3ndr/{size}/389_2.png",
            "trust_level": 2
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 1191,
        "username": "arohner",
        "name": "Allen Rohner",
        "avatar_template": "/user_avatar/forums.foundationdb.org/arohner/{size}/1475_2.png",
        "post_count": 3,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 8,
        "username": "alloc",
        "name": "Alec Grieser",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      }
    ],
    "created_by": {
      "id": 1191,
      "username": "arohner",
      "name": "Allen Rohner",
      "avatar_template": "/user_avatar/forums.foundationdb.org/arohner/{size}/1475_2.png"
    },
    "last_poster": {
      "id": 1191,
      "username": "arohner",
      "name": "Allen Rohner",
      "avatar_template": "/user_avatar/forums.foundationdb.org/arohner/{size}/1475_2.png"
    },
    "links": [
      {
        "url": "https://github.com/apple/foundationdb/blob/main/bindings/java/src/main/com/apple/foundationdb/tuple/Tuple.java",
        "title": "foundationdb/Tuple.java at main \u00b7 apple/foundationdb \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 2,
        "user_id": 8,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://github.com/apple/foundationdb/blob/d76822bc1244d9eef168f7dba717bb3456691b63/fdbclient/vexillographer/fdb.options#L355",
        "title": "foundationdb/fdb.options at d76822bc1244d9eef168f7dba717bb3456691b63 \u00b7 apple/foundationdb \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 1,
        "user_id": 8,
        "domain": "github.com",
        "root_domain": "github.com"
      }
    ]
  },
  "bookmarks": []
}