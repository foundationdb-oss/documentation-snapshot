{
  "post_stream": {
    "posts": [
      {
        "id": 6671,
        "name": "Chaoguang",
        "username": "zjuLcg",
        "avatar_template": "/user_avatar/forums.foundationdb.org/zjulcg/{size}/652_2.png",
        "created_at": "2020-04-15T16:53:38.817Z",
        "cooked": "<p>We have been working on a <a href=\"https://github.com/apple/foundationdb/pull/2662\" rel=\"nofollow noopener\">PR</a> that introduces a framework that we call special-key-space. Special keys are keys prefixed with <em>\\xff\\xff</em>. The framework associates all these keys with their corresponding client functions. In particular, each function will be registered to a range under <em>(\\xff\\xff, \\xff\\xff\\xff)</em>. The framework will proxy calls to corresponding functions and aggregate results if cross-range read happens. (A more detailed <a href=\"https://github.com/apple/foundationdb/blob/master/design/special-key-space.md\" rel=\"nofollow noopener\">documentation</a> for the context here.)<br>\nThis post wants to get an agreement on how this should behave across different versions.</p>\n<p>Currently, our proposal is to obey the  <code>API_VERSION</code>  that each client passes when initializing the client like this:</p>\n<ul>\n<li>Each range-module would be tagged with an API-version when it was introduced</li>\n<li>The overall framework would then ignore all modules whose API-versions are larger than the one the client set.</li>\n<li>Each submodule could read the API-version as well, which would allow it to behave differently depending on the API version. This would allow for a schema change</li>\n</ul>\n<p>Any other ideas are welcome to discuss and any concerns should be solved before implementation.</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 62,
        "updated_at": "2020-04-16T02:41:34.781Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 231,
        "reads": 63,
        "readers_count": 62,
        "score": 1189.6,
        "yours": false,
        "topic_id": 2068,
        "topic_slug": "versioning-of-special-key-space",
        "display_username": "Chaoguang",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 7,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/apple/foundationdb/blob/master/design/special-key-space.md",
            "internal": false,
            "reflection": false,
            "title": "foundationdb/special-key-space.md at master \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 28
          },
          {
            "url": "https://github.com/apple/foundationdb/pull/2662",
            "internal": false,
            "reflection": false,
            "clicks": 7
          },
          {
            "url": "https://forums.foundationdb.org/t/add-health-metrics-feature-to-special-key-space/2193",
            "internal": true,
            "reflection": true,
            "title": "Add health metrics feature to special key space",
            "clicks": 2
          },
          {
            "url": "https://forums.foundationdb.org/t/reading-your-own-write-conflict-range/2097",
            "internal": true,
            "reflection": true,
            "title": "Reading your own write conflict range",
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 561,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/versioning-of-special-key-space/2068/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 6672,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2020-04-15T17:00:13.488Z",
        "cooked": "<aside class=\"quote no-group quote-modified\" data-username=\"zjuLcg\" data-post=\"1\" data-topic=\"2068\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/zjulcg/48/652_2.png\" class=\"avatar\"> zjuLcg:</div>\n<blockquote>\n<p>The overall framework would then ignore all modules where it\u2019s api-version is larger than the one the client set.</p>\n</blockquote>\n</aside>\n<p>I just wrote this on the GitHub issue created for this, but I\u2019ll repeat here as well. It may not be required that newly added features be disallowed in older API versions, as that isn\u2019t required by the contract of API versioning and is not something we have enforced for most other features that get added. It is, however, a reasonable choice to exclude these in older versions if we want to do so.</p>\n<p>Usually one of the primary motivations for not excluding a new feature in old versions is that it adds implementation complexity unnecessarily. Based on your proposal, though, it sounds like this may not be a big concern here. I just wanted to throw this out there in case it was relevant.</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 62,
        "updated_at": "2020-04-15T17:00:13.488Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 58,
        "readers_count": 57,
        "score": 16.6,
        "yours": false,
        "topic_id": 2068,
        "topic_slug": "versioning-of-special-key-space",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/versioning-of-special-key-space/2068/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6673,
        "name": "Markus Pilman",
        "username": "markus.pilman",
        "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
        "created_at": "2020-04-15T17:06:03.633Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"ajbeamon\" data-post=\"2\" data-topic=\"2068\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/ajbeamon/48/13_2.png\" class=\"avatar\"> ajbeamon:</div>\n<blockquote>\n<p>It may not be required that newly added features be disallowed in older API versions, as that isn\u2019t required by the contract of API versioning and is not something we have enforced for most other features that get added.</p>\n</blockquote>\n</aside>\n<p>I think the problem here is that C functions and key ranges are a bit different in the sense that functions don\u2019t accidentally show up. For keyspaces this is a bit different, if someone does <code>getRange(\"\\xff\\xff/\", \"\\xff\\xff\\xff\")</code> the client might not expect the result set to change across different API versions.</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 62,
        "updated_at": "2020-04-15T17:06:03.633Z",
        "reply_count": 1,
        "reply_to_post_number": 2,
        "quote_count": 1,
        "incoming_link_count": 1,
        "reads": 54,
        "readers_count": 53,
        "score": 35.8,
        "yours": false,
        "topic_id": 2068,
        "topic_slug": "versioning-of-special-key-space",
        "display_username": "Markus Pilman",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 15,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/versioning-of-special-key-space/2068/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6674,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2020-04-15T17:07:44.311Z",
        "cooked": "<p>I haven\u2019t looked at the design of the special key-space feature, but is it going to support doing arbitrary range reads over it? I don\u2019t think existing special keys allow you to do this, rather you need to target the special key specifically.</p>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 62,
        "updated_at": "2020-04-15T17:07:44.311Z",
        "reply_count": 1,
        "reply_to_post_number": 3,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 54,
        "readers_count": 53,
        "score": 15.8,
        "yours": false,
        "topic_id": 2068,
        "topic_slug": "versioning-of-special-key-space",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 15,
          "username": "markus.pilman",
          "name": "Markus Pilman",
          "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/versioning-of-special-key-space/2068/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6675,
        "name": "Markus Pilman",
        "username": "markus.pilman",
        "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
        "created_at": "2020-04-15T17:16:05.343Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"ajbeamon\" data-post=\"4\" data-topic=\"2068\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/ajbeamon/48/13_2.png\" class=\"avatar\"> ajbeamon:</div>\n<blockquote>\n<p>I haven\u2019t looked at the design of the special key-space feature, but is it going to support doing arbitrary range reads over it?</p>\n</blockquote>\n</aside>\n<p>Yes that is a change we did there (and we can change this if people think it is a bad idea). The thinking was:</p>\n<ul>\n<li>It is much more consistent with the way the normal keyspace behaves</li>\n<li>It doesn\u2019t break old code as it enhances functionality without restricting it.</li>\n</ul>\n<p>Personally I would prefer to allow this but restrict which ranges are exposed into this keyspace than throwing exceptions if one tries to access something that doesn\u2019t exist. Otherwise the following can happen:</p>\n<ol>\n<li>Wee add <code>\\xff\\xff/foo</code> in api version <code>700</code></li>\n<li>Someone sets api version to <code>620</code> but adds code somewhere that gets <code>\\xff\\xff/foo</code>. Let\u2019s assume that for testing the user uses fdb 7.0</li>\n<li>In production this user runs 6.2 - but now this will cause weird exceptions.</li>\n</ol>\n<p>I don\u2019t think this is desirable which is why I would prefer to keep this as stable as possible over version.</p>\n<p><a class=\"mention\" href=\"/u/alloc\">@alloc</a> expressed similar concerns before. Can you give us your opinion on this (and other stuff regarding this proposal) please.</p>",
        "post_number": 5,
        "post_type": 1,
        "posts_count": 62,
        "updated_at": "2020-04-15T17:16:05.343Z",
        "reply_count": 1,
        "reply_to_post_number": 4,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 52,
        "readers_count": 51,
        "score": 30.4,
        "yours": false,
        "topic_id": 2068,
        "topic_slug": "versioning-of-special-key-space",
        "display_username": "Markus Pilman",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 15,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/versioning-of-special-key-space/2068/5",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6677,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2020-04-15T17:21:42.907Z",
        "cooked": "<p>One downside of allowing arbitrary range reads is that new \u201ckeys\u201d may be introduced that appear in your existing range reads, and these keys don\u2019t have the typical costs associated with a normal key. If we take the status key as an example, injecting that into someones range read would add an expensive status call to every such read, and may be unexpected.</p>\n<p>My personal thinking is that it would be reasonable for what I think you are calling modules to support arbitrary interactions within the module, but supporting operations querying across modules is something that we should carefully consider whether it makes sense.</p>",
        "post_number": 6,
        "post_type": 1,
        "posts_count": 62,
        "updated_at": "2020-04-15T17:21:42.907Z",
        "reply_count": 1,
        "reply_to_post_number": 5,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 46,
        "readers_count": 45,
        "score": 14.2,
        "yours": false,
        "topic_id": 2068,
        "topic_slug": "versioning-of-special-key-space",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 15,
          "username": "markus.pilman",
          "name": "Markus Pilman",
          "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/versioning-of-special-key-space/2068/6",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6678,
        "name": "Chaoguang",
        "username": "zjuLcg",
        "avatar_template": "/user_avatar/forums.foundationdb.org/zjulcg/{size}/652_2.png",
        "created_at": "2020-04-15T17:58:33.591Z",
        "cooked": "<p>Yeah, it is definitely right that unexpected \u201ckeys\u201d appearing in your range is troublesome.<br>\nMy point is that this may not happen in the special-key-space framework unless you do something like <code>getRange(\\xff\\xff, \\xff\\xff\\xff)</code>.<br>\nThe way it works now is every time you bundle a new feature to a range, it behaves like:</p>\n<ul>\n<li>It only allows registering to a range</li>\n<li>Any new range should not be overlapped with any registered ranges</li>\n</ul>\n<p>In  particular, if you want to register a function to <code>\\xff\\xff/status/submodule/, \\xff\\xff/status/submodule/\\xff</code> and <code>\\xff\\xff/status/json, \\xff\\xff/status/json/\\xff</code> is already registered, then this behavior is not allowed.<br>\nConsequently, the unexpected behavior of a module is only going to happen when the underlying function is changed. In this case, the developer who makes the change should let users know the change. For existing single key <code>get</code>, we can register them to a singleKeyRange.</p>\n<p>A potential drawback here is that the existing registered range takes whole control of the range and you cannot add new sub-modules to it. However, you can still change the implementation or split the range if you do need to add stuff in the range. Every range added should be reviewed carefully so conflicts will not happen in most scenarios.</p>",
        "post_number": 7,
        "post_type": 1,
        "posts_count": 62,
        "updated_at": "2020-04-15T18:03:17.133Z",
        "reply_count": 1,
        "reply_to_post_number": 6,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 45,
        "readers_count": 44,
        "score": 14.0,
        "yours": false,
        "topic_id": 2068,
        "topic_slug": "versioning-of-special-key-space",
        "display_username": "Chaoguang",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 12,
          "username": "ajbeamon",
          "name": "A.J. Beamon",
          "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 561,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/versioning-of-special-key-space/2068/7",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6679,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2020-04-15T18:03:41.039Z",
        "cooked": "<p>The other question I have is whether doing a range read of <code>\\xff\\xff</code> to <code>\\xff\\xff\\xff</code> is legal, as doing something like that spans multiple modules, and the introduction of new ones could be a costly surprise. Likely someone wouldn\u2019t be reading the whole range, but with any range that spans multiple modules, a new one could be introduced in between.</p>\n<p>This is the thing I was considering the merits of, and I think the possibility of someone doing it is one reason Markus gave for not including new modules at old versions.</p>",
        "post_number": 8,
        "post_type": 1,
        "posts_count": 62,
        "updated_at": "2020-04-15T18:03:41.039Z",
        "reply_count": 2,
        "reply_to_post_number": 7,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 38,
        "readers_count": 37,
        "score": 17.6,
        "yours": false,
        "topic_id": 2068,
        "topic_slug": "versioning-of-special-key-space",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 561,
          "username": "zjuLcg",
          "name": "Chaoguang",
          "avatar_template": "/user_avatar/forums.foundationdb.org/zjulcg/{size}/652_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/versioning-of-special-key-space/2068/8",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6681,
        "name": "Chaoguang",
        "username": "zjuLcg",
        "avatar_template": "/user_avatar/forums.foundationdb.org/zjulcg/{size}/652_2.png",
        "created_at": "2020-04-15T18:46:03.925Z",
        "cooked": "<p>Doing a range read over <code>(\\xff\\xff, \\xff\\xff\\xff)</code> is by default legal now, which may introduce unexpected results as you said. Yeah, if we exclude new features in older versions, we can avoid the issue. Some additional thoughts here</p>\n<ul>\n<li>Yeah, as you said, the implementation complexity is not much concern here. The versions can be easily integrated within keys.</li>\n<li>The motivation to allow range read over modules are scenarios like this:<br>\nWe use <code>\\xff\\xff/transaction/, \\xff\\xff/transaction/\\xff</code> to expose all transaction-related information. For example. <code>\\xff\\xff/transaction/conflicting_keys</code>, <code>\\xff\\xff/transaction/mutations</code>, <code>\\xff\\xff/transaction/read_conflict_range</code>, <code>\\xff\\xff/transaction/write_conflict_range</code> and so on.<br>\nI think it makes sense that sometimes you want only one of them and sometimes you want all of them by just calling <code>getRange(\\xff\\xff/transaction, \\xff\\xff/transaction\\xff)</code>. To achieve this, we may need to allow arbitrary range reads, which also makes it behave like general FDB calls. Actually, the goal of the framework is to make special keys\u2019 calls like general FDB calls.</li>\n<li>If the arbitrary range reads are still concerned, we can split the whole space into several top-level modules which can have their own sub-modules. Range read within a top-level module is allowed but cross-module range read between top-level modules is not allowed. However, this makes the framework more complex.</li>\n</ul>",
        "post_number": 9,
        "post_type": 1,
        "posts_count": 62,
        "updated_at": "2020-04-15T18:46:52.432Z",
        "reply_count": 1,
        "reply_to_post_number": 8,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 39,
        "readers_count": 38,
        "score": 57.8,
        "yours": false,
        "topic_id": 2068,
        "topic_slug": "versioning-of-special-key-space",
        "display_username": "Chaoguang",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 12,
          "username": "ajbeamon",
          "name": "A.J. Beamon",
          "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png"
        },
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 561,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/versioning-of-special-key-space/2068/9",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6682,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2020-04-15T18:52:27.494Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"zjuLcg\" data-post=\"9\" data-topic=\"2068\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/zjulcg/48/652_2.png\" class=\"avatar\"> zjuLcg:</div>\n<blockquote>\n<p>If the arbitrary range reads are still concerned, we can split the whole space into several top-level modules which can have their own sub-modules. Range read within a top-level module is allowed but cross-module range read between top-level modules is not allowed. However, this makes the framework more complex.</p>\n</blockquote>\n</aside>\n<p>I think is what I was sort of imagining (e.g. <code>\\xff\\xff/transaction</code> would be a module), and that modules could enforce their own rules about what\u2019s reasonable within them. The nice thing about this is that we avoid these behavior changes that only manifest at runtime and that would require thoughtful consideration for people upgrading, and if all else were equal I think it would be my preference. If it\u2019s significantly more complex to do, though, then maybe it\u2019s not worth it.</p>",
        "post_number": 10,
        "post_type": 1,
        "posts_count": 62,
        "updated_at": "2020-04-15T18:52:27.494Z",
        "reply_count": 0,
        "reply_to_post_number": 9,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 36,
        "readers_count": 35,
        "score": 7.2,
        "yours": false,
        "topic_id": 2068,
        "topic_slug": "versioning-of-special-key-space",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/versioning-of-special-key-space/2068/10",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6683,
        "name": "Markus Pilman",
        "username": "markus.pilman",
        "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
        "created_at": "2020-04-15T18:53:22.990Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"ajbeamon\" data-post=\"8\" data-topic=\"2068\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/ajbeamon/48/13_2.png\" class=\"avatar\"> ajbeamon:</div>\n<blockquote>\n<p>The other question I have is whether doing a range read of <code>\\xff\\xff</code> to <code>\\xff\\xff\\xff</code> is legal, as doing something like that spans multiple modules, and the introduction of new ones could be a costly surprise.</p>\n</blockquote>\n</aside>\n<p>This is another reason to not enable new ranges for old api versions. In that case you won\u2019t get a nasty surprise.</p>\n<p>Generally I agree that reading the whole special keyrange would be a bad idea. To me the design decision boils down to two choices:</p>\n<ol>\n<li>Have something where a user can run into bad performance problems if they misuse this feature</li>\n<li>Be consistent with a general kv interface</li>\n</ol>\n<p>I don\u2019t think we can have both and I would prefer to have something that is consistent with what we do in the special key space.</p>",
        "post_number": 11,
        "post_type": 1,
        "posts_count": 62,
        "updated_at": "2020-04-15T18:53:22.990Z",
        "reply_count": 1,
        "reply_to_post_number": 8,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 36,
        "readers_count": 35,
        "score": 12.2,
        "yours": false,
        "topic_id": 2068,
        "topic_slug": "versioning-of-special-key-space",
        "display_username": "Markus Pilman",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 15,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/versioning-of-special-key-space/2068/11",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6685,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2020-04-15T19:04:12.850Z",
        "cooked": "<p>Right, I agree you shouldn\u2019t add new ranges to old API versions if you are allowed to read arbitrary ranges. If it\u2019s not legal, then I don\u2019t think this particular concern is as important.</p>\n<p>Unfortunately, with this only being detectable at runtime, we still have the risk of there being some surprises, but that\u2019s probably acceptable with sufficient documentation of the changes between versions.</p>\n<aside class=\"quote no-group\" data-username=\"markus.pilman\" data-post=\"11\" data-topic=\"2068\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/markus.pilman/48/379_2.png\" class=\"avatar\"> markus.pilman:</div>\n<blockquote>\n<p>Generally I agree that reading the whole special keyrange would be a bad idea. To me the design decision boils down to two choices:</p>\n<ol>\n<li>Have something where a user can run into bad performance problems if they misuse this feature</li>\n<li>Be consistent with a general kv interface</li>\n</ol>\n<p>I don\u2019t think we can have both and I would prefer to have something that is consistent with what we do in the special key space.</p>\n</blockquote>\n</aside>\n<p>I think a missing facet of this is whether it\u2019s ever not a misuse to read across modules. If there is no valid use, then disallowing it seems like a more friendly approach to me. If there is a valid use, then that use is going to be potentially subjected to these bad performance problems and would be a separate category of \u201crisky but reasonable\u201d actions.</p>",
        "post_number": 12,
        "post_type": 1,
        "posts_count": 62,
        "updated_at": "2020-04-15T19:04:12.850Z",
        "reply_count": 2,
        "reply_to_post_number": 11,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 34,
        "readers_count": 33,
        "score": 16.8,
        "yours": false,
        "topic_id": 2068,
        "topic_slug": "versioning-of-special-key-space",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/versioning-of-special-key-space/2068/12",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6687,
        "name": "Chaoguang",
        "username": "zjuLcg",
        "avatar_template": "/user_avatar/forums.foundationdb.org/zjulcg/{size}/652_2.png",
        "created_at": "2020-04-15T20:28:58.627Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"ajbeamon\" data-post=\"12\" data-topic=\"2068\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/ajbeamon/48/13_2.png\" class=\"avatar\"> ajbeamon:</div>\n<blockquote>\n<p>I think a missing facet of this is whether it\u2019s ever not a misuse to read across modules. If there is no valid use, then disallowing it seems like a more friendly approach to me. If there is a valid use, then that use is going to be potentially subjected to these bad performance problems and would be a separate category of \u201crisky but reasonable\u201d actions.</p>\n</blockquote>\n</aside>\n<p>Yeah, like discussed above. Although the current implementation is not, we can definitely add restriction on cross-module interaction if there is no real use case.</p>",
        "post_number": 13,
        "post_type": 1,
        "posts_count": 62,
        "updated_at": "2020-04-15T20:28:58.627Z",
        "reply_count": 0,
        "reply_to_post_number": 12,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 30,
        "readers_count": 29,
        "score": 6.0,
        "yours": false,
        "topic_id": 2068,
        "topic_slug": "versioning-of-special-key-space",
        "display_username": "Chaoguang",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 561,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/versioning-of-special-key-space/2068/13",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6688,
        "name": "Markus Pilman",
        "username": "markus.pilman",
        "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
        "created_at": "2020-04-15T20:49:51.723Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"ajbeamon\" data-post=\"12\" data-topic=\"2068\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/ajbeamon/48/13_2.png\" class=\"avatar\"> ajbeamon:</div>\n<blockquote>\n<p>I think a missing facet of this is whether it\u2019s ever not a misuse to read across modules. If there is no valid use, then disallowing it seems like a more friendly approach to me.</p>\n</blockquote>\n</aside>\n<p>I guess that is fair. Although one problem with that is that the boundaries of modules might sometimes look a bit artificial - unless we want to build a tree of modules, but I don\u2019t want to go there. I think there are multiple use-cases (although this depends on what we will expose through this mechanism in the future which is hard to predict):</p>\n<ol>\n<li>Debugging: it would be useful to be able to read the whole range just to test stuff.</li>\n<li>We will probably have multiple modules within the <code>transaction</code> keyspace (a range that allows the user to query the internal state of a transaction). Currently this only contains the conflict set - eventually I would like to have the read-set, write-set, options, etc in there as well. Reading the whole range is something that makes sense and should be cheap enough as it only reads local memory.</li>\n<li>We plan to split the <code>status json</code> stuff into a flattened keyspace. This would allow us to ask for only a subset of that which can be implemented faster. But in that case if one still wants the whole status in a flattened way, they should be allowed to do it in one query (and it would also be much faster).</li>\n</ol>\n<p>There are probably more usecases - but these are the ones I can think of right away. If this doesn\u2019t convince you I will think a bit more about this <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>",
        "post_number": 14,
        "post_type": 1,
        "posts_count": 62,
        "updated_at": "2020-04-15T20:49:51.723Z",
        "reply_count": 1,
        "reply_to_post_number": 12,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 32,
        "readers_count": 31,
        "score": 26.4,
        "yours": false,
        "topic_id": 2068,
        "topic_slug": "versioning-of-special-key-space",
        "display_username": "Markus Pilman",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 15,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/versioning-of-special-key-space/2068/14",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6690,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2020-04-15T20:59:59.343Z",
        "cooked": "<p>Oh I do agree that all of those types of queries are useful to be able to do as ranges. I\u2019m not saying that range reads in this key-space are bad, just that range reads across modules seems like a less clear win, depending on how you define modules. Also keep in mind that I\u2019m coming from a position of not having looked at the current design and am just imagining how something might work rather than how it might or actually have been built.</p>\n<aside class=\"quote no-group\" data-username=\"markus.pilman\" data-post=\"14\" data-topic=\"2068\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/markus.pilman/48/379_2.png\" class=\"avatar\"> markus.pilman:</div>\n<blockquote>\n<p>We will probably have multiple modules within the <code>transaction</code> keyspace (a range that allows the user to query the internal state of a transaction). Currently this only contains the conflict set - eventually I would like to have the read-set, write-set, options, etc in there as well. Reading the whole range is something that makes sense and should be cheap enough as it only reads local memory.</p>\n</blockquote>\n</aside>\n<p>My initial thought with this was that it could be one module (with sub-modules?) that allows reading the arbitrary portions of it.</p>\n<aside class=\"quote no-group\" data-username=\"markus.pilman\" data-post=\"14\" data-topic=\"2068\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/markus.pilman/48/379_2.png\" class=\"avatar\"> markus.pilman:</div>\n<blockquote>\n<ol>\n<li>We plan to split the <code>status json</code> stuff into a flattened keyspace. This would allow us to ask for only a subset of that which can be implemented faster. But in that case if one still wants the whole status in a flattened way, they should be allowed to do it in one query (and it would also be much faster).</li>\n</ol>\n</blockquote>\n</aside>\n<p>Same here, I could imagine this being a module where the whole range or parts of it could be read arbitrarily.</p>\n<p>My main reservation is about when range reads end up invoking unrelated actions, and I\u2019m not sure I see a strong use-case for that. Basically what I\u2019m trying to say is that all else being equal, I would prefer that unrelated actions not be triggerable by the same operation, but I\u2019m also sensitive to the fact that it may be difficult to accomplish that in practice. If that\u2019s the case, I\u2019m not sure that this protection would merit adding a lot of extra complexity.</p>",
        "post_number": 15,
        "post_type": 1,
        "posts_count": 62,
        "updated_at": "2020-04-15T20:59:59.343Z",
        "reply_count": 1,
        "reply_to_post_number": 14,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 30,
        "readers_count": 29,
        "score": 11.0,
        "yours": false,
        "topic_id": 2068,
        "topic_slug": "versioning-of-special-key-space",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/versioning-of-special-key-space/2068/15",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6691,
        "name": "Chaoguang",
        "username": "zjuLcg",
        "avatar_template": "/user_avatar/forums.foundationdb.org/zjulcg/{size}/652_2.png",
        "created_at": "2020-04-15T21:34:48.826Z",
        "cooked": "<p>I think I got your idea.<br>\nAt present, every range registered with its function class can be seen as a module and cross-module range read is legal.<br>\nHowever, as you suggest and we discuss above, if we want to have the protection for unexpected results from cross-module behavior and preserve the ability to do range read to some extent, we can have a more formal definition of <code>module</code>.<br>\nLike <code>\\xff\\xff/transaction/</code>, <code>\\xff\\xff/status/json</code> can all be <code>modules</code>. And within them, range reads are allowed. Cross-module reads are forbidden.<br>\nI think this at least makes sense for me. The concerns are to have more documentation about how these modules are defined and restrictions on them and also less consistent with the general kv interface.<br>\nBut if this protection overweights the concerns, I think we can add this module-level restriction to the current implementation in the future.</p>",
        "post_number": 16,
        "post_type": 1,
        "posts_count": 62,
        "updated_at": "2020-04-15T21:34:48.826Z",
        "reply_count": 0,
        "reply_to_post_number": 15,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 27,
        "readers_count": 26,
        "score": 20.4,
        "yours": false,
        "topic_id": 2068,
        "topic_slug": "versioning-of-special-key-space",
        "display_username": "Chaoguang",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 12,
          "username": "ajbeamon",
          "name": "A.J. Beamon",
          "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png"
        },
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 561,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/versioning-of-special-key-space/2068/16",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6692,
        "name": "Markus Pilman",
        "username": "markus.pilman",
        "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
        "created_at": "2020-04-15T21:52:09.487Z",
        "cooked": "<p>Sure we can do that - I just don\u2019t like it. It is very different from what a user might expect.</p>\n<p>We also allow users to query ranges across directories. So if all of FDB has a flat keyspace and the clients are responsible to to divide this up, I don\u2019t think we should do something different here.</p>\n<p>But I would like to get input from a layer developer on this - so far only FDB Core people have taken part in this discussion <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=9\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\"></p>",
        "post_number": 17,
        "post_type": 1,
        "posts_count": 62,
        "updated_at": "2020-04-15T21:52:09.487Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 26,
        "readers_count": 25,
        "score": 10.2,
        "yours": false,
        "topic_id": 2068,
        "topic_slug": "versioning-of-special-key-space",
        "display_username": "Markus Pilman",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 15,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/versioning-of-special-key-space/2068/17",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6693,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2020-04-15T21:58:10.339Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"markus.pilman\" data-post=\"17\" data-topic=\"2068\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/markus.pilman/48/379_2.png\" class=\"avatar\"> markus.pilman:</div>\n<blockquote>\n<p>Sure we can do that - I just don\u2019t like it. It is very different from what a user might expect.</p>\n</blockquote>\n</aside>\n<p>There\u2019s some truth to that, though arguably there are multiple behaviors here that could be unexpected and I think that potentially triggering unanticipated actions in an operation would be one as well. I tend to like failing a request that may have unintended consequences if there\u2019s not a good use case to allow the risky requests.</p>",
        "post_number": 18,
        "post_type": 1,
        "posts_count": 62,
        "updated_at": "2020-04-15T21:58:10.339Z",
        "reply_count": 1,
        "reply_to_post_number": 17,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 30,
        "readers_count": 29,
        "score": 11.0,
        "yours": false,
        "topic_id": 2068,
        "topic_slug": "versioning-of-special-key-space",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/versioning-of-special-key-space/2068/18",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6694,
        "name": "Markus Pilman",
        "username": "markus.pilman",
        "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
        "created_at": "2020-04-15T22:22:37.304Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"ajbeamon\" data-post=\"18\" data-topic=\"2068\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/ajbeamon/48/13_2.png\" class=\"avatar\"> ajbeamon:</div>\n<blockquote>\n<p>I tend to like failing a request that may have unintended consequences if there\u2019s not a good use case to allow the risky requests.</p>\n</blockquote>\n</aside>\n<p>So above use-cases that I mentioned are not good enough?</p>",
        "post_number": 19,
        "post_type": 1,
        "posts_count": 62,
        "updated_at": "2020-04-15T22:22:37.304Z",
        "reply_count": 1,
        "reply_to_post_number": 18,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 31,
        "readers_count": 30,
        "score": 11.2,
        "yours": false,
        "topic_id": 2068,
        "topic_slug": "versioning-of-special-key-space",
        "display_username": "Markus Pilman",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 15,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/versioning-of-special-key-space/2068/19",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6695,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2020-04-15T22:29:26.691Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"markus.pilman\" data-post=\"19\" data-topic=\"2068\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/markus.pilman/48/379_2.png\" class=\"avatar\"> markus.pilman:</div>\n<blockquote>\n<p>So above use-cases that I mentioned are not good enough?</p>\n</blockquote>\n</aside>\n<p>I\u2019m confused, there was some discussion above about these use-cases where I had discussed that I thought these made sense to be queried within themselves (e.g. status and transaction stats individually), and I still support that. My question is about use-cases where you would need to read across disparate modules.</p>",
        "post_number": 20,
        "post_type": 1,
        "posts_count": 62,
        "updated_at": "2020-04-15T22:30:04.724Z",
        "reply_count": 1,
        "reply_to_post_number": 19,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 31,
        "readers_count": 30,
        "score": 11.2,
        "yours": false,
        "topic_id": 2068,
        "topic_slug": "versioning-of-special-key-space",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/versioning-of-special-key-space/2068/20",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      6671,
      6672,
      6673,
      6674,
      6675,
      6677,
      6678,
      6679,
      6681,
      6682,
      6683,
      6685,
      6687,
      6688,
      6690,
      6691,
      6692,
      6693,
      6694,
      6695,
      6696,
      6697,
      6698,
      6700,
      6701,
      6703,
      6704,
      6705,
      6707,
      6708,
      6709,
      6710,
      6714,
      6715,
      6716,
      6717,
      6718,
      6719,
      6720,
      6721,
      6723,
      6724,
      6725,
      6733,
      6735,
      6736,
      6737,
      6740,
      6741,
      6742,
      6743,
      6744,
      6759,
      6763,
      6765,
      6767,
      6769,
      6770,
      6772,
      6773,
      6775,
      6776
    ]
  },
  "timeline_lookup": [
    [
      1,
      2015
    ],
    [
      32,
      2014
    ],
    [
      44,
      2013
    ],
    [
      53,
      2010
    ]
  ],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "Versioning of special key space",
  "id": 2068,
  "title": "Versioning of special key space",
  "posts_count": 62,
  "created_at": "2020-04-15T16:53:38.751Z",
  "views": 2599,
  "reply_count": 45,
  "like_count": 13,
  "last_posted_at": "2020-04-20T19:05:34.342Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": true,
  "archetype": "regular",
  "slug": "versioning-of-special-key-space",
  "category_id": 5,
  "word_count": 11324,
  "deleted_at": null,
  "user_id": 561,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_2068",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 62,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 8,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": null,
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 12,
        "username": "ajbeamon",
        "name": "A.J. Beamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "post_count": 25,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "admin": true,
        "trust_level": 4
      },
      {
        "id": 15,
        "username": "markus.pilman",
        "name": "Markus Pilman",
        "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
        "post_count": 19,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "admin": true,
        "trust_level": 4
      },
      {
        "id": 561,
        "username": "zjuLcg",
        "name": "Chaoguang",
        "avatar_template": "/user_avatar/forums.foundationdb.org/zjulcg/{size}/652_2.png",
        "post_count": 7,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 337,
        "username": "mengxu",
        "name": "Meng Xu",
        "avatar_template": "/user_avatar/forums.foundationdb.org/mengxu/{size}/893_2.png",
        "post_count": 4,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      },
      {
        "id": 708,
        "username": "gabikliot",
        "name": "Gabriel Kliot",
        "avatar_template": "/user_avatar/forums.foundationdb.org/gabikliot/{size}/749_2.png",
        "post_count": 3,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 758,
        "username": "TWarszawski",
        "name": "Todd Warszawski",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/t/3ec8ea/{size}.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 0
      },
      {
        "id": 156,
        "username": "spullara",
        "name": "Sam Pullara",
        "avatar_template": "/user_avatar/forums.foundationdb.org/spullara/{size}/125_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      },
      {
        "id": 13,
        "username": "alexmiller",
        "name": "Alex Miller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      }
    ],
    "created_by": {
      "id": 561,
      "username": "zjuLcg",
      "name": "Chaoguang",
      "avatar_template": "/user_avatar/forums.foundationdb.org/zjulcg/{size}/652_2.png"
    },
    "last_poster": {
      "id": 12,
      "username": "ajbeamon",
      "name": "A.J. Beamon",
      "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png"
    },
    "links": [
      {
        "url": "https://github.com/apple/foundationdb/blob/master/design/special-key-space.md",
        "title": "foundationdb/special-key-space.md at master \u00b7 apple/foundationdb \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 28,
        "user_id": 561,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://github.com/apple/foundationdb/pull/2662",
        "title": null,
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 7,
        "user_id": 561,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://docs.snowflake.com/en/sql-reference/info-schema.html",
        "title": "Information Schema \u2014 Snowflake Documentation",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 2,
        "user_id": 15,
        "domain": "docs.snowflake.com",
        "root_domain": "snowflake.com"
      },
      {
        "url": "https://forums.foundationdb.org/t/add-health-metrics-feature-to-special-key-space/2193",
        "title": "Add health metrics feature to special key space",
        "internal": true,
        "attachment": false,
        "reflection": true,
        "clicks": 2,
        "user_id": 14,
        "domain": "forums.foundationdb.org",
        "root_domain": "foundationdb.org"
      },
      {
        "url": "https://dev.mysql.com/doc/refman/8.0/en/system-schema.html",
        "title": "MySQL :: MySQL 8.0 Reference Manual :: 5.3 The mysql System Schema",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 1,
        "user_id": 15,
        "domain": "dev.mysql.com",
        "root_domain": "mysql.com"
      },
      {
        "url": "https://github.com/apple/foundationdb/pull/2662#issuecomment-586511297",
        "title": null,
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 1,
        "user_id": 15,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-tables-transact-sql?view=sql-server-ver15",
        "title": "sys.tables (Transact-SQL) - SQL Server | Microsoft Docs",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 1,
        "user_id": 15,
        "domain": "docs.microsoft.com",
        "root_domain": "microsoft.com"
      },
      {
        "url": "https://en.wikipedia.org/wiki/Procfs",
        "title": "procfs - Wikipedia",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 1,
        "user_id": 708,
        "domain": "en.wikipedia.org",
        "root_domain": "wikipedia.org"
      },
      {
        "url": "https://github.com/apple/foundationdb/blob/master/fdbclient/NativeAPI.actor.cpp#L2799",
        "title": "foundationdb/NativeAPI.actor.cpp at master \u00b7 apple/foundationdb \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 1,
        "user_id": 561,
        "domain": "github.com",
        "root_domain": "github.com"
      }
    ]
  },
  "bookmarks": []
}