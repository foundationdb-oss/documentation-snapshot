{
  "post_stream": {
    "posts": [
      {
        "id": 11846,
        "name": "Zhang Hui Gui",
        "username": "ZhangHuiGui",
        "avatar_template": "/user_avatar/forums.foundationdb.org/zhanghuigui/{size}/1377_2.png",
        "created_at": "2022-10-13T08:42:35.331Z",
        "cooked": "<h2>\n<a name=\"environment-1\" class=\"anchor\" href=\"#environment-1\"></a><strong>Environment:</strong>\n</h2>\n<ol>\n<li>fdb-version <code>7.1.9</code>\n</li>\n<li>os <code> 5.15.0-50-generic #56~20.04.1-Ubuntu</code>\n</li>\n<li>fdb configuration : one single fdbserver on local machine with below status</li>\n</ol>\n<pre data-code-wrap=\"shell\"><code class=\"lang-nohighlight\">Configuration:\n  Redundancy mode        - single\n  Storage engine         - ssd-2\n  Coordinators           - 1\n  Usable Regions         - 1\n\nCluster:\n  FoundationDB processes - 1\n  Zones                  - 1\n  Machines               - 1\n  Memory availability    - 32.0 GB per process on machine with least available\n  Fault Tolerance        - 0 machines\n  Server time            - 10/13/22 16:34:23\n\nData:\n  Replication health     - Healthy\n  Moving data            - 0.000 GB\n  Sum of key-value sizes - 181 MB\n  Disk space used        - 4.919 GB\n\nOperating space:\n  Storage server         - 24.1 GB free on most full server\n  Log server             - 1510.8 GB free on most full server\n\nWorkload:\n  Read rate              - 17 Hz\n  Write rate             - 0 Hz\n  Transactions started   - 5 Hz\n  Transactions committed - 0 Hz\n  Conflict rate          - 0 Hz\n\nBackup and DR:\n  Running backups        - 0\n  Running DRs            - 0\n\nProcess performance details:\n  127.0.0.1:4500         (  1% cpu;  6% machine; 0.000 Gbps;  3% disk IO; 2.0 GB / 32.0 GB RAM  )\n\nCoordination servers:\n  127.0.0.1:4500  (reachable)\n</code></pre>\n<h2>\n<a name=\"problem-2\" class=\"anchor\" href=\"#problem-2\"></a><strong>Problem:</strong>\n</h2>\n<p>When i running our application on this fdbserver with C API for one hour (maybe more time), the heap memory is continuing growing and i catch whole process with valgrind + massif on my application, memory allocate stack is like this <img src=\"https://emoji.discourse-cdn.com/twitter/upside_down_face.png?v=12\" title=\":upside_down_face:\" class=\"emoji\" alt=\":upside_down_face:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n<pre data-code-wrap=\"shell\"><code class=\"lang-nohighlight\">\u2502 14713 --------------------------------------------------------------------------------\n\u2502 14714 \u258f n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)\n\u2502 14715 --------------------------------------------------------------------------------\n\u2502 14716  93 627,237,678,279      348,705,720      340,253,768     8,451,952            0\n\u2502 14717  94 629,821,773,623      349,505,544      341,041,669     8,463,875            0\n\u2502 14718  95 630,995,566,124      356,079,448      347,602,122     8,477,326            0\n\u2502 14719 97.62% (347,602,122B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.\n\u2502 14720 -&gt;32.78% (116,736,000B) 0x536E479: ArenaBlock::create(int, Reference&lt;ArenaBlock&gt;&amp;) (Arena.cpp:359)\n\u2502 14721 | -&gt;32.78% (116,736,000B) 0x536E715: ArenaBlock::allocate(Reference&lt;ArenaBlock&gt;&amp;, int) (Arena.cpp:293)\n\u2502 14722 | | -&gt;32.77% (116,695,040B) 0x52F0581: operator new [] (Arena.h:202)\n\u2502 14723 | | | -&gt;32.77% (116,695,040B) 0x52F0581: a_body1loopBody1loopBody1 (FlowTransport.actor.cpp:1173)\n\u2502 14724 | | |   -&gt;32.77% (116,695,040B) 0x52F0581: a_body1loopBody1loopHead1 (FlowTransport.actor.g.cpp:4716)\n\u2502 14725 | | |     -&gt;32.77% (116,695,040B) 0x52F0581: a_body1loopBody1 (FlowTransport.actor.g.cpp:4693)\n\u2502 14726 | | |       -&gt;32.77% (116,695,040B) 0x52F0581: a_body1loopHead1 (FlowTransport.actor.g.cpp:4684)\n\u2502 14727 | | |         -&gt;32.77% (116,695,040B) 0x52F0581: a_body1loopBody1cont3 (FlowTransport.actor.g.cpp:5431)\n\u2502 14728 | | |           -&gt;32.77% (116,695,040B) 0x52F0581: a_body1loopBody1cont2when1 (FlowTransport.actor.g.cpp:5443)\n\u2502 14729 | | |             -&gt;32.77% (116,695,040B) 0x52F0581: a_body1loopBody1cont2when1 (FlowTransport.actor.g.cpp:5441)\n\u2502 14730 | | |               -&gt;32.77% (116,695,040B) 0x52F0581: a_callback_fire (FlowTransport.actor.g.cpp:5464)\n\u2502 14731 | | |                 -&gt;32.77% (116,695,040B) 0x52F0581: ActorCallback&lt;(anonymous namespace)::ConnectionReaderActor, 4, Void&gt;::fire(Void const&amp;) (flow.h:1318)\n\u2502 14732 | | |                   -&gt;32.77% (116,695,040B) 0x53AFC47: send&lt;Void&gt; (flow.h:660)\n\u2502 14733 | | |                     -&gt;32.77% (116,695,040B) 0x53AFC47: send&lt;Void&gt; (flow.h:906)\n\u2502 14734 | | |                       -&gt;32.77% (116,695,040B) 0x53AFC47: operator() (Net2.actor.cpp:1201)\n\u2502 14735 | | |                         -&gt;32.77% (116,695,040B) 0x53AFC47: N2::Net2::run() (Net2.actor.cpp:1548)\n\u2502 14736 | | |                           -&gt;32.77% (116,695,040B) 0x4BD442A: runNetwork() (NativeAPI.actor.cpp:2538)\n\u2502 14737 | | |                             -&gt;32.77% (116,695,040B) 0x521BE3E: ThreadSafeApi::runNetwork() (ThreadSafeTransaction.cpp:564)\n\u2502 14738 | | |                               -&gt;32.77% (116,695,040B) 0x4B7B6C1: MultiVersionApi::runNetwork() (MultiVersionTransaction.actor.cpp:2295)\n\u2502 14739 | | |                                 -&gt;32.77% (116,695,040B) 0x4B51C3D: fdb_run_network (fdb_c.cpp:161)\n\u2502 14740 | | |                                   -&gt;32.77% (116,695,040B) 0xC055C0: runFdbNetwork (fdb_access.c:154)\n\u2502 14741 | | |                                     -&gt;32.77% (116,695,040B) 0x625A608: start_thread (pthread_create.c:477)\n\u2502 14742 | | |                                       -&gt;32.77% (116,695,040B) 0x76CC132: clone (clone.S:95)\n</code></pre>\n<p>It\u2019s confusing that why a client global network consuming so much memory. Seems this network-thread<br>\nis scheduling client-requests normally, but why not releasing the allocated memory.</p>\n<p>So any one who could take a simple look?</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 3,
        "updated_at": "2022-10-13T08:42:35.331Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 13,
        "reads": 22,
        "readers_count": 21,
        "score": 64.4,
        "yours": false,
        "topic_id": 3590,
        "topic_slug": "memory-leak-when-use-c-api-normaly",
        "display_username": "Zhang Hui Gui",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 1134,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/memory-leak-when-use-c-api-normaly/3590/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 11850,
        "name": "",
        "username": "andrew.noyes",
        "avatar_template": "/user_avatar/forums.foundationdb.org/andrew.noyes/{size}/443_2.png",
        "created_at": "2022-10-14T17:51:22.685Z",
        "cooked": "<p>That call site is allocating memory to store incoming network messages to be processed. It\u2019s possible that something could be keeping it alive unexpectedly long. Is it possible that you\u2019re not calling e.g. <code>fdb_transaction_destroy</code> on your transactions? Not calling <code>fdb_future_destroy</code> on futures returned from reads within a transaction could also explain this.</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 3,
        "updated_at": "2022-10-14T17:51:22.685Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 17,
        "readers_count": 16,
        "score": 8.4,
        "yours": false,
        "topic_id": 3590,
        "topic_slug": "memory-leak-when-use-c-api-normaly",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": "",
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 14,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/memory-leak-when-use-c-api-normaly/3590/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 11855,
        "name": "Zhang Hui Gui",
        "username": "ZhangHuiGui",
        "avatar_template": "/user_avatar/forums.foundationdb.org/zhanghuigui/{size}/1377_2.png",
        "created_at": "2022-10-16T01:58:24.713Z",
        "cooked": "<p>Thanks for your reply. You\u2019re right, that\u2019s our problem when using C-API.</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 3,
        "updated_at": "2022-10-16T01:58:24.713Z",
        "reply_count": 0,
        "reply_to_post_number": 2,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 15,
        "readers_count": 14,
        "score": 3.0,
        "yours": false,
        "topic_id": 3590,
        "topic_slug": "memory-leak-when-use-c-api-normaly",
        "display_username": "Zhang Hui Gui",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 14,
          "username": "andrew.noyes",
          "name": "",
          "avatar_template": "/user_avatar/forums.foundationdb.org/andrew.noyes/{size}/443_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 1134,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/memory-leak-when-use-c-api-normaly/3590/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      11846,
      11850,
      11855
    ]
  },
  "timeline_lookup": [
    [
      1,
      1105
    ],
    [
      2,
      1103
    ],
    [
      3,
      1102
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "Memory leak when use C API normaly",
  "id": 3590,
  "title": "Memory leak when use C API normaly",
  "posts_count": 3,
  "created_at": "2022-10-13T08:42:35.256Z",
  "views": 376,
  "reply_count": 1,
  "like_count": 0,
  "last_posted_at": "2022-10-16T01:58:24.713Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "memory-leak-when-use-c-api-normaly",
  "category_id": 7,
  "word_count": 709,
  "deleted_at": null,
  "user_id": 1134,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_3590",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 3,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 2,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "Small memory leak when using C API",
      "id": 3053,
      "title": "Small memory leak when using C API",
      "slug": "small-memory-leak-when-using-c-api",
      "posts_count": 1,
      "reply_count": 0,
      "highest_post_number": 1,
      "image_url": null,
      "created_at": "2021-12-04T00:25:44.345Z",
      "last_posted_at": "2021-12-04T00:25:44.420Z",
      "bumped": true,
      "bumped_at": "2021-12-04T00:25:44.420Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 541,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest single",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 1044,
            "username": "tudor",
            "name": "Tudor Bosman",
            "avatar_template": "/user_avatar/forums.foundationdb.org/tudor/{size}/1253_2.png",
            "trust_level": 1
          }
        }
      ]
    },
    {
      "fancy_title": "Memory leak in C API?",
      "id": 554,
      "title": "Memory leak in C API?",
      "slug": "memory-leak-in-c-api",
      "posts_count": 5,
      "reply_count": 1,
      "highest_post_number": 5,
      "image_url": null,
      "created_at": "2018-07-09T10:54:23.376Z",
      "last_posted_at": "2018-07-10T12:55:14.679Z",
      "bumped": true,
      "bumped_at": "2018-07-10T12:55:14.679Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 2,
      "views": 1120,
      "category_id": 5,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 319,
            "username": "kirilltitov",
            "name": "Kirill Titov",
            "avatar_template": "/user_avatar/forums.foundationdb.org/kirilltitov/{size}/328_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 7,
            "username": "SteavedHams",
            "name": "Steve Atherton",
            "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Memory leak in client profiling code",
      "id": 2108,
      "title": "Memory leak in client profiling code",
      "slug": "memory-leak-in-client-profiling-code",
      "posts_count": 5,
      "reply_count": 3,
      "highest_post_number": 5,
      "image_url": null,
      "created_at": "2020-05-07T20:05:59.143Z",
      "last_posted_at": "2020-05-08T23:21:40.526Z",
      "bumped": true,
      "bumped_at": "2020-05-08T23:21:40.526Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 726,
      "category_id": 8,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 173,
            "username": "jkominek",
            "name": "Jay Kominek",
            "avatar_template": "/user_avatar/forums.foundationdb.org/jkominek/{size}/140_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 14,
            "username": "andrew.noyes",
            "name": "",
            "avatar_template": "/user_avatar/forums.foundationdb.org/andrew.noyes/{size}/443_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Fdb C client library memory allocations",
      "id": 1199,
      "title": "Fdb C client library memory allocations",
      "slug": "fdb-c-client-library-memory-allocations",
      "posts_count": 10,
      "reply_count": 5,
      "highest_post_number": 10,
      "image_url": null,
      "created_at": "2019-03-06T03:07:33.409Z",
      "last_posted_at": "2019-03-14T00:14:17.371Z",
      "bumped": true,
      "bumped_at": "2019-03-14T00:14:17.371Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 1392,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 38,
            "username": "panghy",
            "name": "Clement Pang",
            "avatar_template": "/user_avatar/forums.foundationdb.org/panghy/{size}/19_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 337,
            "username": "mengxu",
            "name": "Meng Xu",
            "avatar_template": "/user_avatar/forums.foundationdb.org/mengxu/{size}/893_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Memory leak in C client-lib - when a timeout() is set on transaction options?",
      "id": 1710,
      "title": "Memory leak in C client-lib - when a timeout() is set on transaction options?",
      "slug": "memory-leak-in-c-client-lib-when-a-timeout-is-set-on-transaction-options",
      "posts_count": 7,
      "reply_count": 3,
      "highest_post_number": 7,
      "image_url": "https://global.discourse-cdn.com/foundationdb/original/1X/b55b0e80a4a533be00e26d30756cb9b860ad76b1.png",
      "created_at": "2019-11-01T07:02:02.599Z",
      "last_posted_at": "2019-11-09T04:04:11.942Z",
      "bumped": true,
      "bumped_at": "2019-11-09T10:56:45.389Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 865,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 1134,
        "username": "ZhangHuiGui",
        "name": "Zhang Hui Gui",
        "avatar_template": "/user_avatar/forums.foundationdb.org/zhanghuigui/{size}/1377_2.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 14,
        "username": "andrew.noyes",
        "name": "",
        "avatar_template": "/user_avatar/forums.foundationdb.org/andrew.noyes/{size}/443_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      }
    ],
    "created_by": {
      "id": 1134,
      "username": "ZhangHuiGui",
      "name": "Zhang Hui Gui",
      "avatar_template": "/user_avatar/forums.foundationdb.org/zhanghuigui/{size}/1377_2.png"
    },
    "last_poster": {
      "id": 1134,
      "username": "ZhangHuiGui",
      "name": "Zhang Hui Gui",
      "avatar_template": "/user_avatar/forums.foundationdb.org/zhanghuigui/{size}/1377_2.png"
    }
  },
  "bookmarks": []
}