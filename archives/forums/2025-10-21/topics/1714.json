{
  "post_stream": {
    "posts": [
      {
        "id": 5453,
        "name": "Rishabh",
        "username": "rishabh",
        "avatar_template": "/user_avatar/forums.foundationdb.org/rishabh/{size}/540_2.png",
        "created_at": "2019-11-05T09:48:09.139Z",
        "cooked": "<p>Documentation of tuple layer allows users to define <a href=\"https://github.com/apple/foundationdb/blob/master/design/tuple.md#user-type-codes\" rel=\"nofollow noopener\">User type codes</a>, using which one can extend tuple layer to encode/decode user defined classes.</p>\n<p>To utilize this, one way is to</p>\n<ol>\n<li>check-in foundationdb tuple layer code in application codebase</li>\n<li>add serialization logic of user defined class in <a href=\"https://github.com/apple/foundationdb/blob/5b8229160cb468c40de619f69a01879d7f34677c/bindings/java/src/main/com/apple/foundationdb/tuple/TupleUtil.java#L269\" rel=\"nofollow noopener\">encode</a> method</li>\n<li>add de-seariaization logic of user defined class in <a href=\"https://github.com/apple/foundationdb/blob/5b8229160cb468c40de619f69a01879d7f34677c/bindings/java/src/main/com/apple/foundationdb/tuple/TupleUtil.java#L428\" rel=\"nofollow noopener\">decode</a> method</li>\n</ol>\n<p>Is this the right way of extending tuple layer with user defined types?</p>\n<p>Or, is there some way to \u201cregister\u201d user defined types (with serialization logic) in tuple layer on startup, which can then be used on runtime?<br>\nThis will avoid checking-in tuple layer code in application codebase, which means lesser maintenance and easy dependency upgrades.</p>\n<p>Note: I am not not adding any <em>Tuple::*_CODE</em> in <a href=\"https://github.com/apple/foundationdb/blob/4f6054a3e6ff9321de3ff26b39b6151ada83e725/bindings/flow/Tuple.cpp#L31\" rel=\"nofollow noopener\">Tuple.cpp</a> here.</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 4,
        "updated_at": "2019-11-05T09:54:22.956Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 39,
        "reads": 19,
        "readers_count": 18,
        "score": 198.8,
        "yours": false,
        "topic_id": 1714,
        "topic_slug": "registering-new-user-defined-typecodes-in-tuple-layer",
        "display_username": "Rishabh",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/apple/foundationdb/blob/master/design/tuple.md#user-type-codes",
            "internal": false,
            "reflection": false,
            "title": "foundationdb/tuple.md at master \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 6
          },
          {
            "url": "https://github.com/apple/foundationdb/blob/5b8229160cb468c40de619f69a01879d7f34677c/bindings/java/src/main/com/apple/foundationdb/tuple/TupleUtil.java#L269",
            "internal": false,
            "reflection": false,
            "title": "foundationdb/TupleUtil.java at 5b8229160cb468c40de619f69a01879d7f34677c \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 3
          },
          {
            "url": "https://github.com/apple/foundationdb/blob/5b8229160cb468c40de619f69a01879d7f34677c/bindings/java/src/main/com/apple/foundationdb/tuple/TupleUtil.java#L428",
            "internal": false,
            "reflection": false,
            "title": "foundationdb/TupleUtil.java at 5b8229160cb468c40de619f69a01879d7f34677c \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 2
          },
          {
            "url": "https://github.com/apple/foundationdb/blob/4f6054a3e6ff9321de3ff26b39b6151ada83e725/bindings/flow/Tuple.cpp#L31",
            "internal": false,
            "reflection": false,
            "title": "foundationdb/Tuple.cpp at 4f6054a3e6ff9321de3ff26b39b6151ada83e725 \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 1
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 545,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/registering-new-user-defined-typecodes-in-tuple-layer/1714/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 5458,
        "name": "Alec Grieser",
        "username": "alloc",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "created_at": "2019-11-05T20:35:50.808Z",
        "cooked": "<p>I\u2019ve given this some amount of thought in the past, and I think this more or less summarizes the option.</p>\n<p>As it is currently, checking in the FDB tuple code and then hacking it up oneself is the only way of doing this. (Perhaps <a class=\"mention\" href=\"/u/krzysfr\">@KrzysFR</a> will remember doing something along those lines back in the day.) And then one will have to do essentially what you laid out: add a custom serializer for the type and a custom deserializer.</p>\n<p>However, I think a registry interface is something that could and perhaps should be added if it is decided that this is a feature worth having. (At the moment, then, the type codes are essentially aspirational.)</p>\n<p>I think you want in that registry is a way of adding custom encode and decode methods for a given type and type code. Unfortunately, the particulars would need to be very language specific. The API would probably be something like, \u201cimplement an interface and then add an instance of that interface to a registry\u201d. What exactly that interface looks like would require a little bit of thought, but it would definitely include an encode method (that takes an object of the given type and returns a byte string or writes to the end of an existing byte buffer), a decode method (that takes a byte string or an offset to some byte buffer and then produces an object and specifies the next offset), possibly an \u201cencoded size\u201d method (that takes an object and tells you how long to make the object, which is used by the Java bindings and could be used by other objects), and possibly a \u201cget type code\u201d or \u201cget type\u201d methods (used to insert the item into the registry in the right place, or possibly the \u201cregister\u201d method takes both an implementation of the interface, a type code, and a type; alternatively, the implementation could have \u201ccan encode\u201d and \u201ccan decode\u201d methods that take the type code and the object, and then the \u201cright one\u201d is selected from all the encoders/decoders (note that this is the most flexible, but it does not allow you to determine ahead of time if there are multiple of these tuple encoder objects over the same types/type codes)).</p>\n<p>But if this were to be added, some of these design decisions should be decided on (as there are a couple of forks above, somewhat implicitly). I\u2019d also be somewhat concerned about API stability of this feature, as we\u2019ve updated some of the internals of how encoding and decoding works (often for efficiency reasons). But that\u2019s the high level overview of the thoughts I\u2019ve had so far.</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 4,
        "updated_at": "2019-11-05T20:35:50.808Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 18,
        "readers_count": 17,
        "score": 8.6,
        "yours": false,
        "topic_id": 1714,
        "topic_slug": "registering-new-user-defined-typecodes-in-tuple-layer",
        "display_username": "Alec Grieser",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 8,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/registering-new-user-defined-typecodes-in-tuple-layer/1714/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 5465,
        "name": "Rishabh",
        "username": "rishabh",
        "avatar_template": "/user_avatar/forums.foundationdb.org/rishabh/{size}/540_2.png",
        "created_at": "2019-11-06T08:52:43.919Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"alloc\" data-post=\"2\" data-topic=\"1714\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/alloc/48/9_2.png\" class=\"avatar\"> alloc:</div>\n<blockquote>\n<p>hacking it up oneself is the only way of doing this.</p>\n</blockquote>\n</aside>\n<p>Thanks, I have started hacking it already.</p>\n<aside class=\"quote no-group\" data-username=\"alloc\" data-post=\"2\" data-topic=\"1714\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/alloc/48/9_2.png\" class=\"avatar\"> alloc:</div>\n<blockquote>\n<p>I think you want in that registry is a way of adding custom encode and decode methods for a given type and type code.</p>\n</blockquote>\n</aside>\n<p>Yes</p>\n<aside class=\"quote no-group\" data-username=\"alloc\" data-post=\"2\" data-topic=\"1714\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/alloc/48/9_2.png\" class=\"avatar\"> alloc:</div>\n<blockquote>\n<p>But if this were to be added, some of these design decisions should be decided</p>\n</blockquote>\n</aside>\n<p>Thanks for the detailed design considerations.</p>\n<p>If you think its worth it, I am more than happy to create a github issue for this with link of your post. I will track that issue and move my codebase to utilize such API as and when available.</p>\n<p>For now, I will hack it.</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 4,
        "updated_at": "2019-11-06T08:52:43.919Z",
        "reply_count": 0,
        "reply_to_post_number": 2,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 17,
        "readers_count": 16,
        "score": 3.4,
        "yours": false,
        "topic_id": 1714,
        "topic_slug": "registering-new-user-defined-typecodes-in-tuple-layer",
        "display_username": "Rishabh",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 545,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/registering-new-user-defined-typecodes-in-tuple-layer/1714/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 5486,
        "name": "Christophe Chevalier",
        "username": "KrzysFR",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "created_at": "2019-11-07T07:06:37.824Z",
        "cooked": "<p>I implemented support for user defined types in the tuple layer of the .NET binding, but never really used it, probably because I\u2019m using a statically typed languages where the caller is providing the exact type to deserialize, while in dynamic typed languages, the implementation of the tuple layer usually creates the types by itself.</p>\n<p>By that I mean that I will probably call <code>TuPack.Decode&lt;int, long, double, string, SomeEnum&gt;(...)</code> giving the exact type I want. This allows me to also define an interface <code>ITupleSerializable</code> on custom types, or use dependency injection to inject deserializers for custom types. C# now also has better support for tuples and type deconstruction than in the early days, which would make this even easier.</p>\n<p>In practice, I\u2019ve never liked custom types that much, because they pollute the types themselves with custom serialization methods (what about if they also need to serialize to JSON, XML, or some other library), and also ties them to my particlar tuple implementation (there could be other libraries).</p>\n<p>This also pollutes the application setup, and can be difficult when composing multiple components together (either collision on the type id, or need to call multiple \u201cinit\u201d methods that have to hook their serializers).</p>\n<p>And finally, this makes it impossible for tools or applications written in other languages to decode the content of the keys making it difficult to diagnose.</p>\n<p>For simple custom types (composed of a few fields with basic types), I would prefer using embedded tuples.</p>\n<p>For complex types I\u2019d probably use a custom binary encoding anyway, which would be more compact than the tuple encoding.</p>\n<p><em>Note that this is from the perspective of static languages. Things are probably dramatically different for dynamic languages. An example of that is the different approach taken to serialize versionstamps in tuples.</em></p>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 4,
        "updated_at": "2019-11-07T07:06:37.824Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 16,
        "readers_count": 15,
        "score": 3.2,
        "yours": false,
        "topic_id": 1714,
        "topic_slug": "registering-new-user-defined-typecodes-in-tuple-layer",
        "display_username": "Christophe Chevalier",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 53,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/registering-new-user-defined-typecodes-in-tuple-layer/1714/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      5453,
      5458,
      5465,
      5486
    ]
  },
  "timeline_lookup": [
    [
      1,
      2178
    ],
    [
      2,
      2177
    ],
    [
      4,
      2176
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "Registering new user defined typecodes in tuple layer",
  "id": 1714,
  "title": "Registering new user defined typecodes in tuple layer",
  "posts_count": 4,
  "created_at": "2019-11-05T09:48:09.079Z",
  "views": 663,
  "reply_count": 1,
  "like_count": 0,
  "last_posted_at": "2019-11-07T07:06:37.824Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "registering-new-user-defined-typecodes-in-tuple-layer",
  "category_id": 5,
  "word_count": 1076,
  "deleted_at": null,
  "user_id": 545,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_1714",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 4,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 3,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "Where is the c tuple layer?",
      "id": 1119,
      "title": "Where is the c tuple layer?",
      "slug": "where-is-the-c-tuple-layer",
      "posts_count": 2,
      "reply_count": 0,
      "highest_post_number": 2,
      "image_url": null,
      "created_at": "2019-02-07T13:17:54.614Z",
      "last_posted_at": "2019-02-07T16:52:22.290Z",
      "bumped": true,
      "bumped_at": "2019-02-07T16:52:22.290Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 1154,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 77,
            "username": "Meai",
            "name": "Meai",
            "avatar_template": "/user_avatar/forums.foundationdb.org/meai/{size}/500_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Request for feedback: tuple encoding bug",
      "id": 936,
      "title": "Request for feedback: tuple encoding bug",
      "slug": "request-for-feedback-tuple-encoding-bug",
      "posts_count": 13,
      "reply_count": 8,
      "highest_post_number": 13,
      "image_url": null,
      "created_at": "2018-12-04T23:57:04.793Z",
      "last_posted_at": "2021-01-24T11:53:42.053Z",
      "bumped": true,
      "bumped_at": "2021-01-24T11:53:42.053Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 982,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 41,
            "username": "amirouche",
            "name": "Amirouche",
            "avatar_template": "/user_avatar/forums.foundationdb.org/amirouche/{size}/1911_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 120,
            "username": "josephg",
            "name": "Seph Gentle",
            "avatar_template": "/user_avatar/forums.foundationdb.org/josephg/{size}/84_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Rust Client API 0.2.0",
      "id": 386,
      "title": "Rust Client API 0.2.0",
      "slug": "rust-client-api-0-2-0",
      "posts_count": 7,
      "reply_count": 4,
      "highest_post_number": 7,
      "image_url": null,
      "created_at": "2018-05-09T13:57:29.898Z",
      "last_posted_at": "2018-07-11T18:44:03.478Z",
      "bumped": true,
      "bumped_at": "2018-07-11T18:44:03.478Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [
        "bindings"
      ],
      "tags_descriptions": {},
      "like_count": 3,
      "views": 1358,
      "category_id": 5,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 226,
            "username": "bluejekyll",
            "name": "Benjamin Fry",
            "avatar_template": "/user_avatar/forums.foundationdb.org/bluejekyll/{size}/195_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 41,
            "username": "amirouche",
            "name": "Amirouche",
            "avatar_template": "/user_avatar/forums.foundationdb.org/amirouche/{size}/1911_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Using the same keys and values across different languages",
      "id": 2523,
      "title": "Using the same keys and values across different languages",
      "slug": "using-the-same-keys-and-values-across-different-languages",
      "posts_count": 7,
      "reply_count": 5,
      "highest_post_number": 7,
      "image_url": null,
      "created_at": "2021-01-21T20:47:58.796Z",
      "last_posted_at": "2021-01-24T11:40:17.940Z",
      "bumped": true,
      "bumped_at": "2021-01-24T11:40:17.940Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 3,
      "views": 521,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 551,
            "username": "falsandtru",
            "name": null,
            "avatar_template": "/user_avatar/forums.foundationdb.org/falsandtru/{size}/546_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 14,
            "username": "andrew.noyes",
            "name": "",
            "avatar_template": "/user_avatar/forums.foundationdb.org/andrew.noyes/{size}/443_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 120,
            "username": "josephg",
            "name": "Seph Gentle",
            "avatar_template": "/user_avatar/forums.foundationdb.org/josephg/{size}/84_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "FoundationDB client for Scala",
      "id": 707,
      "title": "FoundationDB client for Scala",
      "slug": "foundationdb-client-for-scala",
      "posts_count": 3,
      "reply_count": 0,
      "highest_post_number": 3,
      "image_url": null,
      "created_at": "2018-09-15T21:09:19.813Z",
      "last_posted_at": "2019-10-21T13:07:29.342Z",
      "bumped": true,
      "bumped_at": "2019-10-21T13:07:29.342Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [
        "bindings"
      ],
      "tags_descriptions": {},
      "like_count": 10,
      "views": 1387,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 373,
            "username": "pwliwanow",
            "name": "",
            "avatar_template": "/user_avatar/forums.foundationdb.org/pwliwanow/{size}/771_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 668,
            "username": "ngbinh",
            "name": "Binh Nguyen",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ngbinh/{size}/694_2.png",
            "trust_level": 1
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 545,
        "username": "rishabh",
        "name": "Rishabh",
        "avatar_template": "/user_avatar/forums.foundationdb.org/rishabh/{size}/540_2.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      },
      {
        "id": 8,
        "username": "alloc",
        "name": "Alec Grieser",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      },
      {
        "id": 53,
        "username": "KrzysFR",
        "name": "Christophe Chevalier",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      }
    ],
    "created_by": {
      "id": 545,
      "username": "rishabh",
      "name": "Rishabh",
      "avatar_template": "/user_avatar/forums.foundationdb.org/rishabh/{size}/540_2.png"
    },
    "last_poster": {
      "id": 53,
      "username": "KrzysFR",
      "name": "Christophe Chevalier",
      "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png"
    },
    "links": [
      {
        "url": "https://github.com/apple/foundationdb/blob/master/design/tuple.md#user-type-codes",
        "title": "foundationdb/tuple.md at master \u00b7 apple/foundationdb \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 6,
        "user_id": 545,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://github.com/apple/foundationdb/blob/5b8229160cb468c40de619f69a01879d7f34677c/bindings/java/src/main/com/apple/foundationdb/tuple/TupleUtil.java#L269",
        "title": "foundationdb/TupleUtil.java at 5b8229160cb468c40de619f69a01879d7f34677c \u00b7 apple/foundationdb \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 3,
        "user_id": 545,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://github.com/apple/foundationdb/blob/5b8229160cb468c40de619f69a01879d7f34677c/bindings/java/src/main/com/apple/foundationdb/tuple/TupleUtil.java#L428",
        "title": "foundationdb/TupleUtil.java at 5b8229160cb468c40de619f69a01879d7f34677c \u00b7 apple/foundationdb \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 2,
        "user_id": 545,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://github.com/apple/foundationdb/blob/4f6054a3e6ff9321de3ff26b39b6151ada83e725/bindings/flow/Tuple.cpp#L31",
        "title": "foundationdb/Tuple.cpp at 4f6054a3e6ff9321de3ff26b39b6151ada83e725 \u00b7 apple/foundationdb \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 1,
        "user_id": 545,
        "domain": "github.com",
        "root_domain": "github.com"
      }
    ]
  },
  "bookmarks": []
}