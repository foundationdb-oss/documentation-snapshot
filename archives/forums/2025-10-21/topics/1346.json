{
  "post_stream": {
    "posts": [
      {
        "id": 4055,
        "name": "Paul J  Davis",
        "username": "davisp",
        "avatar_template": "/user_avatar/forums.foundationdb.org/davisp/{size}/570_2.png",
        "created_at": "2019-05-03T20:34:29.772Z",
        "cooked": "<p>Hiya,</p>\n<p>I\u2019ve been working on writing some prototype code for a CouchDB layer have finally gotten far enough to start analyzing various requests at the transaction tracing level. I\u2019ve come across a somewhat curious behavior that I\u2019m having trouble understanding based on my reading of the commit protocols in FoundationDB.</p>\n<p>The following gantt chart shows seven total transactions. The first transaction is a single doc write. The second transaction is a two document write. Then there are five write transactions spawned in parallel that each write five documents.</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://global.discourse-cdn.com/foundationdb/original/1X/cd4148da17fe747ccfd45b2b1d4d36efedb0bf4c.png\" title=\"gantt.png\" rel=\"nofollow noopener\"><img src=\"https://global.discourse-cdn.com/foundationdb/optimized/1X/cd4148da17fe747ccfd45b2b1d4d36efedb0bf4c_2_500x500.png\" alt=\"gantt\" width=\"500\" height=\"500\" srcset=\"https://global.discourse-cdn.com/foundationdb/optimized/1X/cd4148da17fe747ccfd45b2b1d4d36efedb0bf4c_2_500x500.png, https://global.discourse-cdn.com/foundationdb/optimized/1X/cd4148da17fe747ccfd45b2b1d4d36efedb0bf4c_2_750x750.png 1.5x, https://global.discourse-cdn.com/foundationdb/optimized/1X/cd4148da17fe747ccfd45b2b1d4d36efedb0bf4c_2_1000x1000.png 2x\" data-small-upload=\"https://global.discourse-cdn.com/foundationdb/optimized/1X/cd4148da17fe747ccfd45b2b1d4d36efedb0bf4c_2_10x10.png\"><div class=\"meta\">\n<svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use xlink:href=\"#far-image\"></use></svg><span class=\"filename\">gantt.png</span><span class=\"informations\">2000\u00d72000 241 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use xlink:href=\"#discourse-expand\"></use></svg>\n</div></a></div></p>\n<p>My question has to do with the way that the commits are ending at different times. With five document writes across five parallel transactions I\u2019m seeing each commit ending about 1-2ms after the previous. Tweaking that test to write fifty documents (i.e., 250 total) across five transactions extends that smear to something along the lines of 5-10ms between commit finish times.</p>\n<p>I\u2019m not particularly concerned about the absolute values on timing here as this is just a trace against a local dev server. What I\u2019m finding curious though is that according to the versionstamps that are written as part of the parallel transactions I am getting multiple transactions into a single batch. My understanding is that proxies will batch transactions which are then submitted to resolvers and eventually the transaction logs. Given that, I would have expected to see any transactions that were part of the same batch to have a response from the proxy at roughly the same time rather than what appears to have been some sort of serialization of each commit.</p>\n<p>Granted it\u2019s also conceivable that even though transactions move through the system in a batch the transaction logs end up making each transaction durable individually which could explain what I\u2019m seeing. But based on my shallow understanding of the process it was surprising enough I figured I\u2019d ask for help understanding whatever I\u2019m missing.</p>\n<p>Thanks!</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2019-05-03T20:34:51.383Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 132,
        "reads": 49,
        "readers_count": 48,
        "score": 669.8,
        "yours": false,
        "topic_id": 1346,
        "topic_slug": "question-on-parallel-commit-latencies",
        "display_username": "Paul J  Davis",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://global.discourse-cdn.com/foundationdb/original/1X/cd4148da17fe747ccfd45b2b1d4d36efedb0bf4c.png",
            "internal": false,
            "reflection": false,
            "title": "cd4148da17fe747ccfd45b2b1d4d36efedb0bf4c.png",
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 576,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/question-on-parallel-commit-latencies/1346/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 4058,
        "name": "Jingyu Zhou",
        "username": "jzhou",
        "avatar_template": "/user_avatar/forums.foundationdb.org/jzhou/{size}/445_2.png",
        "created_at": "2019-05-03T23:18:11.427Z",
        "cooked": "<p>I am not sure what is the \u201ccommit time\u201d on your figure. Is it the timestamp the client side sees the commit outcome? If so, I might have an explanation to what happened \u2013 it is because the outcome from a batch is sent back in order:</p>\n<aside class=\"onebox githubblob\">\n  <header class=\"source\">\n      <a href=\"https://github.com/apple/foundationdb/blob/99373b0acbc98f9cd87008552571a145fbd4f1cb/fdbserver/MasterProxyServer.actor.cpp#L942-L960\" target=\"_blank\" rel=\"nofollow noopener\">github.com</a>\n  </header>\n  <article class=\"onebox-body\">\n    <h4><a href=\"https://github.com/apple/foundationdb/blob/99373b0acbc98f9cd87008552571a145fbd4f1cb/fdbserver/MasterProxyServer.actor.cpp#L942-L960\" target=\"_blank\" rel=\"nofollow noopener\">apple/foundationdb/blob/99373b0acbc98f9cd87008552571a145fbd4f1cb/fdbserver/MasterProxyServer.actor.cpp#L942-L960</a></h4>\n<pre class=\"onebox\"><code class=\"lang-cpp\"><ol class=\"start lines\" start=\"942\" style=\"counter-reset: li-counter 941 ;\">\n<li>\tdouble endTime = timer();</li>\n<li>\tfor (int t = 0; t &lt; trs.size(); t++) {</li>\n<li>\t\tif (committed[t] == ConflictBatch::TransactionCommitted &amp;&amp; (!locked || trs[t].isLockAware())) {</li>\n<li>\t\t\tASSERT_WE_THINK(commitVersion != invalidVersion);</li>\n<li>\t\t\ttrs[t].reply.send(CommitID(commitVersion, t, metadataVersionAfter));</li>\n<li>\t\t}</li>\n<li>\t\telse if (committed[t] == ConflictBatch::TransactionTooOld) {</li>\n<li>\t\t\ttrs[t].reply.sendError(transaction_too_old());</li>\n<li>\t\t}</li>\n<li>\t\telse {</li>\n<li>\t\t\ttrs[t].reply.sendError(not_committed());</li>\n<li>\t\t}</li>\n<li>\n</li>\n<li>\t\t// TODO: filter if pipelined with large commit</li>\n<li>\t\tif(self-&gt;latencyBandConfig.present()) {</li>\n<li>\t\t\tbool filter = maxTransactionBytes &gt; self-&gt;latencyBandConfig.get().commitConfig.maxCommitBytes.orDefault(std::numeric_limits&lt;int&gt;::max());</li>\n<li>\t\t\tself-&gt;stats.commitLatencyBands.addMeasurement(endTime - trs[t].requestTime, filter);</li>\n<li>\t\t}</li>\n<li>\t}</li>\n</ol></code></pre>\n\n\n  </article>\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>But it seems these timestamps are milliseconds apart, which is quite a large interval. So my interpretation can be wrong.</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2019-05-03T23:18:11.427Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 47,
        "readers_count": 46,
        "score": 14.4,
        "yours": false,
        "topic_id": 1346,
        "topic_slug": "question-on-parallel-commit-latencies",
        "display_username": "Jingyu Zhou",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/apple/foundationdb/blob/99373b0acbc98f9cd87008552571a145fbd4f1cb/fdbserver/MasterProxyServer.actor.cpp#L942-L960",
            "internal": false,
            "reflection": false,
            "title": "foundationdb/MasterProxyServer.actor.cpp at 99373b0acbc98f9cd87008552571a145fbd4f1cb \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": true,
        "admin": true,
        "staff": true,
        "user_id": 454,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/question-on-parallel-commit-latencies/1346/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 4059,
        "name": "Paul J  Davis",
        "username": "davisp",
        "avatar_template": "/user_avatar/forums.foundationdb.org/davisp/{size}/570_2.png",
        "created_at": "2019-05-03T23:45:02.648Z",
        "cooked": "<p>Thanks for the quick reply, Jingyu!</p>\n<p>The script that generates those graphs is here:</p>\n<aside class=\"onebox githubgist\">\n  <header class=\"source\">\n      <a href=\"https://gist.github.com/davisp/310e9d2569daec9d706043ca7b1c6a3e\" target=\"_blank\" rel=\"nofollow noopener\">gist.github.com</a>\n  </header>\n  <article class=\"onebox-body\">\n    <h4><a href=\"https://gist.github.com/davisp/310e9d2569daec9d706043ca7b1c6a3e\" target=\"_blank\" rel=\"nofollow noopener\">https://gist.github.com/davisp/310e9d2569daec9d706043ca7b1c6a3e</a></h4>\n<h5>fdb-gantt.py</h5>\n<pre><code class=\"Python\">#!/usr/bin/env python3\n\nimport datetime as dt\nimport os\nimport sys\nimport xml.dom.minidom\n\nimport fdb.tuple\n\nimport matplotlib.pyplot as plt</code></pre>\nThis file has been truncated. <a href=\"https://gist.github.com/davisp/310e9d2569daec9d706043ca7b1c6a3e\" target=\"_blank\" rel=\"nofollow noopener\">show original</a>\n\n<p>\n</p>\n\n  </article>\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>The widths of all those bars in the gantt chart are the <code>Latency</code> reported in the <code>trace-*.xml</code> files generated using the <code>FDB_NETWORK_OPTION_TRACE_ENABLE</code> and <code>FDB_TR_OPTION_TRANSACTION_LOGGING_ENABLE</code> options.</p>\n<p>And I agree, I\u2019d expect at least some variation on reported times but was surprised to see the multi-millisecond differences as well.</p>\n<p>Thanks for the code link though! I\u2019ll use that as another jumping point to start off learning more parts of the code base. I\u2019ve not yet got a super clear picture of where all of the important bits in the code are so its been a bit of a slog grep\u2019ing through the codebase trying to figure out where various things are.</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2019-05-03T23:45:02.648Z",
        "reply_count": 0,
        "reply_to_post_number": 2,
        "quote_count": 0,
        "incoming_link_count": 2,
        "reads": 47,
        "readers_count": 46,
        "score": 19.4,
        "yours": false,
        "topic_id": 1346,
        "topic_slug": "question-on-parallel-commit-latencies",
        "display_username": "Paul J  Davis",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://gist.github.com/davisp/310e9d2569daec9d706043ca7b1c6a3e",
            "internal": false,
            "reflection": false,
            "title": "fdb-gantt.py \u00b7 GitHub",
            "clicks": 6
          }
        ],
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 454,
          "username": "jzhou",
          "name": "Jingyu Zhou",
          "avatar_template": "/user_avatar/forums.foundationdb.org/jzhou/{size}/445_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 576,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/question-on-parallel-commit-latencies/1346/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 4061,
        "name": "Alex Miller",
        "username": "alexmiller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "created_at": "2019-05-03T23:52:23.695Z",
        "cooked": "<p>Your commit latency for a single document update is 25ms, which seems large for just a single write?  What sort of cluster are you running this test against?</p>\n<p>I\u2019d be really suspicious that some priority issue is what\u2019s causing this for you.  Either many roles packed into one process causing each <code>send()</code> to involve switching to some other task, or local contention causing the transaction end time to be recorded artificially late.  That said, I suppose we don\u2019t have a test that measures the smear of reported transaction end times in batches, so it\u2019s possible that there could be something actually weird here.</p>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2019-05-03T23:52:23.695Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 43,
        "readers_count": 42,
        "score": 13.6,
        "yours": false,
        "topic_id": 1346,
        "topic_slug": "question-on-parallel-commit-latencies",
        "display_username": "Alex Miller",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 13,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/question-on-parallel-commit-latencies/1346/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 4075,
        "name": "Paul J  Davis",
        "username": "davisp",
        "avatar_template": "/user_avatar/forums.foundationdb.org/davisp/{size}/570_2.png",
        "created_at": "2019-05-07T17:37:22.557Z",
        "cooked": "<p>Thanks Alex,</p>\n<p>This is just a local single fdbserver process on OS X. I was only looking at traces to double check that my code was doing what I intended when I noticed the odd behavior. I was just surprised because I was expecting batches to return similar-ish commit times for anything in a single batch so was just trying to figure out where my mental model was wrong there.</p>\n<p>Also for those document writes, its <code>2 + 4 * $num_docs</code> total writes per transaction. The writing on the chart is fairly tiny to read there. Though still low enough I wasn\u2019t thinking that it was a factor.</p>\n<p>I am aware that there were concerns about OS X performance though I couldn\u2019t find anything in the forums as to why so I could totally believe this to just be a weird effect of the dev environment I\u2019m using. I\u2019m not at all concerned about the absolute values here, just that the commits were spread out even when they ended up in the same batch.</p>\n<p>Thanks!</p>",
        "post_number": 5,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2019-05-07T17:38:04.777Z",
        "reply_count": 0,
        "reply_to_post_number": 4,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 44,
        "readers_count": 43,
        "score": 13.6,
        "yours": false,
        "topic_id": 1346,
        "topic_slug": "question-on-parallel-commit-latencies",
        "display_username": "Paul J  Davis",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 13,
          "username": "alexmiller",
          "name": "Alex Miller",
          "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 576,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/question-on-parallel-commit-latencies/1346/5",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 4076,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2019-05-07T21:38:30.819Z",
        "cooked": "<p>All the transactions from a single batch (i.e. with the same commit version) should be responded to at roughly the same time by the proxy. Jingyu posted the loop that does this, and my expectation is that it wouldn\u2019t take very long for this loop to send replies to everyone.</p>\n<p>On the client side, <a href=\"https://github.com/apple/foundationdb/blob/bf378952cb560f92272f13a2b3fa3ac8d00588dc/fdbclient/NativeAPI.actor.cpp#L2621\" rel=\"nofollow noopener\">the latency is logged</a> as soon as the client starts processing the reply. As long as one reply is being processed, however, subsequent ones will not be. I believe the response to this request will at the very least propagate all the way back up to your language binding, and depending on how you\u2019ve written your client it could also include some of your client code as well. If you aren\u2019t yourself running anything on the network thread in reaction to the commit completing, though, I wouldn\u2019t expect this to take a particularly long time.</p>\n<p>Another possibility that Alex alluded to is that your workload could be starving the client for brief intervals in between when it processes one commit response and when it starts processing the next. Is there any other activity going on with your client? It might be worth checking the <code>ProcessMetrics</code> client trace event to see if <code>MainThreadCPUSeconds</code> is large relative to elapsed, if the <code>NetworkMetrics</code> trace event has large values for <code>S2Pri1</code> (an indicator for whether the event loop is ever taking a long time to flush), or whether you have any <code>SlowTask</code> trace events of relevant durations, meaning a single task runs for a while without yielding. The <code>SlowTask</code> events are sampled based on their duration, so depending on how long your test is, the absence of them may not be strong evidence of anything, but the presence of them could be interesting.</p>",
        "post_number": 6,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2019-05-07T21:38:30.819Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 42,
        "readers_count": 41,
        "score": 8.2,
        "yours": false,
        "topic_id": 1346,
        "topic_slug": "question-on-parallel-commit-latencies",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/apple/foundationdb/blob/bf378952cb560f92272f13a2b3fa3ac8d00588dc/fdbclient/NativeAPI.actor.cpp#L2621",
            "internal": false,
            "reflection": false,
            "title": "foundationdb/NativeAPI.actor.cpp at bf378952cb560f92272f13a2b3fa3ac8d00588dc \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 11
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/question-on-parallel-commit-latencies/1346/6",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 4213,
        "name": "Paul J  Davis",
        "username": "davisp",
        "avatar_template": "/user_avatar/forums.foundationdb.org/davisp/{size}/570_2.png",
        "created_at": "2019-05-29T23:17:33.913Z",
        "cooked": "<p>I finally managed to find some time to gather some more data on this issue.</p>\n<aside class=\"onebox githubgist\">\n  <header class=\"source\">\n      <a href=\"https://gist.github.com/davisp/1b9c75beae2e4b42be967cdc12e33b02\" target=\"_blank\" rel=\"nofollow noopener\">gist.github.com</a>\n  </header>\n  <article class=\"onebox-body\">\n    <h4><a href=\"https://gist.github.com/davisp/1b9c75beae2e4b42be967cdc12e33b02\" target=\"_blank\" rel=\"nofollow noopener\">https://gist.github.com/davisp/1b9c75beae2e4b42be967cdc12e33b02</a></h4>\n<h5>01-spam.py</h5>\n<pre><code class=\"Python\">import fdb\nimport time\n\nfdb.api_version(610)\n#fdb.options.set_trace_enable(\"/tmp/traces\")\ndb = fdb.open()\n\n\nTX_COUNT = 50\nWRITE_COUNT = 20</code></pre>\nThis file has been truncated. <a href=\"https://gist.github.com/davisp/1b9c75beae2e4b42be967cdc12e33b02\" target=\"_blank\" rel=\"nofollow noopener\">show original</a>\n<h5>02-gantt.png</h5>\n<pre><code class=\"\">\ufffdPNG\n\n   \nIHDR  \ufffd  P   \u04beV\ufffd   sBIT|d\ufffd   \tpHYs  a  a\ufffd?\ufffdi   9tEXtSoftware matplotlib version 3.0.3, http://matplotlib.org/\ufffd\ufffd\ufffd    IDATx\ufffd\ufffd\ufffdA\n  \ufffd\ufffd\ufffd\u007f\u03c7Hh\ufffd53       |n\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd       \ufffd\ufffd      p\u063b\ufffdX\ufffd\ufffd\ufffd\u007f\ufffd\ufffds.p\ufffdr\n/\ufffd]`W0%@\ufffd\ufffdg\t\ufffd\ufffd\ufffd8\ufffd\ufffdb%\ufffdhaL\u037e0\ufffd&amp;\ufffdi#\ufffd*\ufffdl7\ufffd2[\ufffdtF\ufffd\ufffd\ufffd\ufffdZ:\ufffd\ufffd2\ufffd&amp;J\ufffd\\\ufffdB\ufffd\ufffd\ufffd\ufffdq\ufffd\ufffd^\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdc\ufffd\u07ef\ufffd\ufffd\ufffd:\ufffd;\ufffd\ufffd\ufffdz\ufffd!\ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd(\ufffd       \ufffd       \ufffd$gu\ufffd\ufffd\u04eb\ufffd\ufffd5\ufffd\ufffd\ufffd?\u04f7o\ufffd\n\ufffd\ufffd^     \u0405\ufffd\ufffdb\ufffdx\u335c\u007f\ufffd\ufffd)+\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd?\ufffd\ufffdA\ufffdu\ufffd2     \ufffd\ufffdE^z\ufffd\ufffd\ufffd\ufffdt\ufffd2\ufffd\u007f:\ufffd\u05f7o\ufffd$\u024b/\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdy\ufffd\ufffds\ufffd\ufffd\ufffd)4YYY\ufffdS\ufffd\ufffd\ua678nYYYYYYY\ufffd\ufffd\ufffds\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u029e\ufffdlW\ufffd-[z\ufffdW\ufffd^2dH[\u007f \ufffd\ufffd@\ufffd\ufffd\ufffd\u0776\ufffd\ufffd\ufffd2\ufffd\ufffd\ufffd%e[[[\ufffd?\ufffd\ufffd?\ufffd\ufffd\ufffd&lt;\ufffd7bYYY\ufffdR\ufffd\ufffd\ub595\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd&gt;\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdv\ufffd\u0732\ufffdg{\ufffd\ufffd$\ufffd\n\ufffdQ\ufffd\ufffd\ufffd       \ufffd\u007f\ufffd       \ufffd\ufffd      pFz\ufffd\ufffd\ufffds\ufffd\ufffd\ufffdN\ufffdu\ufffd\ufffd=\u077au\ufffd\ufffdWg&gt;:      \ufffda\ufffd|\ufffd\ufffd\ufffd\u07bd;\ufffdb\ufffd\ufffd\ufffdB!555\ufffd\u04e7\ufffd\ufffd28\ufffd)\ufffd     \ufffd\ufffd\ufffd\ufffdog\ufffd\ufffd\ufffd\ufffd\u077bw\ufffd\ufffd\ufffdS(\u069d/\ufffd\u0677o_v\ufffd\u079d/\ufffd\ufffdNt(\ufffd      \ufffd G\ufffdM\ufffdXLuuuz\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u06b5+G\ufffdU\ufffdC\t\u02baz      @\ufffd\ufffd{\ufffd\ufffd\u025e\ufffdO\ufffd       Q\ufffd      @:       $Q\ufffd     \ufffd\ufffdX,\ufffd\ufffd9\ufffd\ufffd\ufffd\ufffd\ufffd       '\ufffd{\ufffd\ufffd)\n\u0677o_\ufffd\ufffd\ufffdS(\u069d/\ufffd\u0677o_\n\ufffdB\ufffdw\ufffd\ufffdE\ufffd\ufffd3\ufffd      \ufffd \u077auKMMMv\ufffd\u079d]\ufffdvu:\ufffdP(\ufffd\ufffd\ufffd&amp;\u077au\ufffd`g8:      \ufffda\ufffd\ufffd\ufffd/\ufffd0G\ufffd\ufffd\ufffd|\ufffd\ufffd\u0755\ufffdp\n\ufffd      p\ufffd\u05ad\ufffd\ufffd\ufffdge]\ufffd        \ufffd\ufffd@\ufffd       Q\ufffd      @:       $Q\ufffd      @:       $Q\ufffd      @:       $Q\ufffd      @:       $Q\ufffd      @:       $Q\ufffd      @:       $Q\ufffd      @:       $Q\ufffd      @:       $I\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd?\ufffd\ufffd^}K\ufffd\ufffd\ufffdNKzfw\n\ufffd\ufffd\ufffd\ufffd~\u05f8\ufffd\ufffd     \ufffd\ufffd\ufffd\ufffd       :       $Q\ufffd      @:\ufffd555\ufffd&lt;yrW/      (\ufffd\ufffdSv\ufffd\ufffd\ufffd466\ufffd\ufffd+\ufffdLuuu\ufffdw\uf7aa\ufffd\ufffd\ufffd7..\u0336m\ufffdN\ufffd\ufffd[\ufffdn\ufffd=\ufffd\u0713]\ufffdv\ufffd;~\ufffd\n7\ufffdP(d\ufffd\u05ad\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u05a6\ufffd\ufffd*\ufffd:\ufffd5       .\ntN\u024e;2v\ufffd\ufffd\u031b7/\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd;\ufffd\ufffd\u0514o~\ufffd\ufffdK\ufffdj\u056a\ufffd1\"\ufffd\ufffd\ufffd?N\ufffd\ufffd[\ufffdn\u037d\ufffd\ufffd\u06e1@\ufffd={v\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd_\ufffd\ufffd\ufffd\u0675kW&gt;\ufffd\ufffd\u03e5W\ufffd^\ufffd4\ufffd{\ufffd}\ufffd\ufffd\ufffd\ufffd\uc4b9     \ufffdSsVW/\ufffd3\u03e1C\ufffdr\ufffd5\ufffdd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u007f\ufffdi\u04e6us\ufffd\ufffd\ufffd|\ufffd\ufffd\ufffdM\ufffdPx_\ufffd2eJ\n\ufffd\ufffdk\ufffdf\u0672e\ufffd\u0463G\ufffd1\ufffd\ufffd\ufffdce\ufffd\ufffd\ufffd7\ufffdH\u07fe}Oz|yy\ufffd\ufffd67      \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\\\ufffd2\u06f6m\u02c2:-\u03d3\ufffdg\u03deY\ufffdhQ\ufffd?\ufffd\ufffdv\ufffd8\ufffd\ufffdf\u0630a)//Ouuu&gt;\ufffd\ufffd\ufffdg\u01cemc\ufffd\ufffd\ufffdr\ufffd-I\ufffdI\ufffd&amp;\ufffdP(\ufffdP(\ufffd\ufffd\ufffd!eeeihh\ufffd\ufffd\ufffd\ufffd\ufffd\u88cfv\ufffd\ufffd\ufffd\ufffd%\ufffd\u05ef\ufffd\u0211#3n\u0738v\ufffd6n\u0718\ufffd\ufffd\ufffd:\ufffd\ufffd\ufffdK\u03de=3z\ufffd\ufffd455u\ufffd\u01b1\ufffd?\ufffd\ufffd\ufffdm\ufffd\u01ce\ufffd\ufffd,^\ufffd8]tQz\ufffd\ue773\ufffd&gt;;\ufffdF\ufffd\ufffd\u05ff\ufffd\ufffdN\ufffd\ufffd\ufffd\u05af_\ufffd\t&amp;\ufffd\ufffd\ufffd\"}\ufffd\ufffd\u0267&gt;\ufffd\ufffd&lt;\ufffd\ufffdc\ufffd]\ufffds\ufffd=\ufffd\ufffd~\ufffd\ufffd\ufffd\u06f7o\ufffd\ufffd\ufffd\ufffd\u04e7\ufffdW^\ufffd\ufffdg      \ufffd7v\ufffdS\ufffdu\ufffd\ufffd%I\ufffd\u0319SR\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd=\ufffdf\ufffd\u0288#\ufffdg\u03de466f\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd!C\ufffd\ufffd\ufffd\ufffd.{\ufffd\ufffdISSS\ufffd\ufffd&gt;&lt;I2t\ufffd\ufffd$\ufffd-\ufffd\u0712o}\ufffd[innN}}}\ufffd9~\ufffd\ufffd\u0421Cv\ufffd\ufffdX\ufffd\"\ufffd\ufffd\ufffd\ufffde\ufffd]\ufffd\ufffd\ufffd;\ufffd{\ufffd\ufffd\u018d\ufffd\ufffd/\u007f9;w\ufffd\ufffd}\ufffd\ufffd\ufffdn\ufffd\ufffd]\ufffdr\ufffdUW\ufffd\ufffdo\ufffd\n7\u0710\ufffd&amp;I\ufffd\u039d\ufffd5k\u05a4\ufffd\ufffd!&amp;L\ufffd\u0463G\ufffd\u05ff\ufffd5[\ufffdl9\ufffd\ufffd\ufffd\ufffd~\ufffd\ufffdo\ufffd=\u00c7\u03d2%K\ufffd\ufffd\u069a\ufffd\ufffd\ufffdL\ufffd:5&gt;\ufffd`f\u035a\ufffdn\ufffdK/\ufffd\ufffdI\ufffd&amp;\ufffd\ufffd\ufffd&gt;\ufffd_\u007f}\ufffdy\ufffd\ufffd\ufffdG?\u029bo\ufffd\ufffd\n6\ufffd\ufffd\ufffd      NL\ufffd\ufffd\ufffd\ufffd    IDATN\ufffd\ufffd\uda1f\udfe4\ufffd\ufffd2\ufffd\ufffd\ufffd\ud3bf\ufffd\ufffd\ufffdy\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdh{\ufffd\ufffd\u014b\ufffdc\u01ce&lt;\ufffd\ufffdS=zt\u06d8\ufffd\ufffd\ufffd\ufffd5*K\ufffd,\ufffd\ufffd\u056bs\ufffd%\ufffdd\u0084\tijj\ufffd\ufffdW_\ufffd\ufffd'\ufffd\ufffdfmmm&amp;M\ufffd\ufffd\ufffd7f\u03de=9\ufffd\ufffd\ufffd\ufffd577\ufffdG\ufffd\ufffd1cF\u06f1\u077bw\ufffd_\ufffdjf\u0318\ufffd5k\u05b4\ufffd\ufffdW\ufffd\ufffdy\ufffd\ufffde\u0672e\ufffd;wn\ufffd\ufffdvn\ufffd\ufffd\ufffdinnNCCC\ufffd\ufffd~\ufffd\ufffdL\ufffd:\ufffd]\ufffd\ufffd\u0799\ufffd\ufffd\ufffdg\ufffd\u0085\ufffd\ufffd\ufffd&gt;\ufffd\ufffd\ufffd\ufffdwm\ufffd\ufffd\ufffd\ufffd\ufffd[3z\ufffd\ufffd\ufffdy\u7769\ufffd\ufffdOeee[\ufffd^\ufffd\ufffd\ufffd\ufffdSWW\ufffd\ufffdZMMM\ufffd\ufffd\ufffd\ufffd\ufffda\u00c6u:\ufffd[o\ufffd\ufffd\ufffd\ufffdz\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd$I\ufffd\ufffd\ufffd\u0152\ufffd],s\ufffdT\ufffd\ufffdmmmm\ufffd\ufffdT\ufffd\ufffd\ufffdgn\ufffd+\u7595\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd=\ufffd\u066e\ufffd[VVVVVVV\ufffdtg\ufffdrn\ufffd&amp;&amp;</code></pre>\nThis file has been truncated. <a href=\"https://gist.github.com/davisp/1b9c75beae2e4b42be967cdc12e33b02\" target=\"_blank\" rel=\"nofollow noopener\">show original</a>\n<h5>03-flame.svg</h5>\n<pre><code class=\"SVG\">&lt;?xml version=\"1.0\" standalone=\"no\"?&gt;\n&lt;!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\"&gt;\n&lt;svg version=\"1.1\" width=\"1200\" height=\"2054\" onload=\"init(evt)\" viewBox=\"0 0 1200 2054\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"&gt;\n&lt;!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. --&gt;\n&lt;!-- NOTES:  --&gt;\n&lt;defs&gt;\n\t&lt;linearGradient id=\"background\" y1=\"0\" y2=\"1\" x1=\"0\" x2=\"0\" &gt;\n\t\t&lt;stop stop-color=\"#eeeeee\" offset=\"5%\" /&gt;\n\t\t&lt;stop stop-color=\"#eeeeb0\" offset=\"95%\" /&gt;\n\t&lt;/linearGradient&gt;</code></pre>\nThis file has been truncated. <a href=\"https://gist.github.com/davisp/1b9c75beae2e4b42be967cdc12e33b02\" target=\"_blank\" rel=\"nofollow noopener\">show original</a>\n\n<p>\n  There are more than three files. <a href=\"https://gist.github.com/davisp/1b9c75beae2e4b42be967cdc12e33b02\" target=\"_blank\" rel=\"nofollow noopener\">show original</a>\n</p>\n\n  </article>\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>That gist contains a simple python script and a few images showing before and after applying a diff. The flame graphs were all generated at 100,000 Hz sampling for roughly 10s while that script sat in a loop. The gantt charts are just a single iteration of the loop.</p>\n<p>The first flame chart shows that nearly 40% of CPU time was spent working on just logging the commit messages. That observation lead me to commenting out the logging of the read and write conflict ranges along with the mutations. With that diff I generated the second gantt and flame charts.</p>\n<p>Without the logging it\u2019s clear that the commits are now processed in batches nearly simultaneously as I was originally expecting. However, I\u2019m now a bit more curious as there still appears to be some odd structure to the recorded latencies.</p>\n<p>My current hypothesis is that there\u2019s some high-ish priority task in the network thread that runs periodically that takes on the order of 0.5ms (on this particular Linux VM on my laptop). So the amount of work that can be done must fit within that time window. With the commit logging disabled we can now fit a bunch of commits into a single slot before being interrupted to service something higher priority.</p>\n<p>Judging from the two flame graphs epoll_wait looks to be the obvious candidate. Its been a long time since I\u2019ve read a lot of benchmarking on various event loops, but epoll_wait doesn\u2019t seem all that surprising.</p>\n<p>Does that make sense to anyone else?</p>",
        "post_number": 7,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2019-05-29T23:17:33.913Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 36,
        "readers_count": 35,
        "score": 12.0,
        "yours": false,
        "topic_id": 1346,
        "topic_slug": "question-on-parallel-commit-latencies",
        "display_username": "Paul J  Davis",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://gist.github.com/davisp/1b9c75beae2e4b42be967cdc12e33b02",
            "internal": false,
            "reflection": false,
            "title": "Data for commit latency diagnosis \u00b7 GitHub",
            "clicks": 4
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 576,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/question-on-parallel-commit-latencies/1346/7",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 4228,
        "name": "Paul J  Davis",
        "username": "davisp",
        "avatar_template": "/user_avatar/forums.foundationdb.org/davisp/{size}/570_2.png",
        "created_at": "2019-05-30T20:32:48.590Z",
        "cooked": "<p>After reading more code today I think I\u2019ve generally figured this out. If I understand correctly, the general structure of the main run loop in <code>Net2::run</code> looks like this:</p>\n<ol>\n<li>Execute <code>runFunc</code> if set which deals with async file io</li>\n<li>Calculate a sleep time depending on whether tasks are ready</li>\n<li>Run <code>reactor.sleepAndReact</code>\n<ul>\n<li>If sleep time is 0 becuase tasks are waiting we end up calling epoll_wait with a timeout of <code>0</code>\n</li>\n<li>Else, set a timer to wake us up after sleep time and epoll_wait for up to five minutes</li>\n</ul>\n</li>\n<li>Dequeue completed tasks</li>\n<li>Handle tasks for up to <code>TSC_YIELD_TIME</code> CPU cycles</li>\n<li>Maybe log a slow task if one was found</li>\n</ol>\n<p>Originally I was thinking that maybe something was being enqueued at a higher priority but it turns out that the run loop is actually structured to ensure that IO is processed every <code>TSC_YIELD_TIME</code> CPU cycles which is pretty cool.</p>\n<p>The other interesting thing is that this behavior is triggered due to the trace logging itself. So while a somewhat interesting investigation it shouldn\u2019t be an issue in production since we\u2019re not going to be tracing every request like I was doing during development.</p>",
        "post_number": 8,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2019-05-30T20:33:05.487Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 2,
        "reads": 34,
        "readers_count": 33,
        "score": 36.8,
        "yours": false,
        "topic_id": 1346,
        "topic_slug": "question-on-parallel-commit-latencies",
        "display_username": "Paul J  Davis",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 576,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/question-on-parallel-commit-latencies/1346/8",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 4245,
        "name": "Paul J  Davis",
        "username": "davisp",
        "avatar_template": "/user_avatar/forums.foundationdb.org/davisp/{size}/570_2.png",
        "created_at": "2019-05-31T19:51:53.366Z",
        "cooked": "<p>I ran into a bit of a performance gotchya related to this. Just setting a transaction debug identifier is enough to cause this behavior in production. I was under the mistaken impression that the trace enable network option would prevent them from being generated at all.</p>\n<p>I hadn\u2019t read through the code for this yet but my general idea was to always set the transaction id and then just toggle logging on and off when we wanted to capture. Now that I\u2019ve read more that looks to be 100% backwards. We\u2019ll want to always enable network tracing and then just tag particular transactions to be logged when needed.</p>",
        "post_number": 9,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2019-05-31T19:51:53.366Z",
        "reply_count": 0,
        "reply_to_post_number": 8,
        "quote_count": 0,
        "incoming_link_count": 11,
        "reads": 33,
        "readers_count": 32,
        "score": 61.6,
        "yours": false,
        "topic_id": 1346,
        "topic_slug": "question-on-parallel-commit-latencies",
        "display_username": "Paul J  Davis",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 576,
          "username": "davisp",
          "name": "Paul J  Davis",
          "avatar_template": "/user_avatar/forums.foundationdb.org/davisp/{size}/570_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 576,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/question-on-parallel-commit-latencies/1346/9",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      4055,
      4058,
      4059,
      4061,
      4075,
      4076,
      4213,
      4228,
      4245
    ]
  },
  "timeline_lookup": [
    [
      1,
      2363
    ],
    [
      5,
      2359
    ],
    [
      7,
      2337
    ],
    [
      8,
      2336
    ],
    [
      9,
      2335
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "Question on parallel commit latencies",
  "id": 1346,
  "title": "Question on parallel commit latencies",
  "posts_count": 9,
  "created_at": "2019-05-03T20:34:29.622Z",
  "views": 1616,
  "reply_count": 3,
  "like_count": 1,
  "last_posted_at": "2019-05-31T19:51:53.366Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "question-on-parallel-commit-latencies",
  "category_id": 7,
  "word_count": 1741,
  "deleted_at": null,
  "user_id": 576,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": "https://global.discourse-cdn.com/foundationdb/optimized/1X/cd4148da17fe747ccfd45b2b1d4d36efedb0bf4c_2_1024x1024.png",
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_1346",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 9,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 4,
  "show_read_indicator": false,
  "thumbnails": [
    {
      "max_width": null,
      "max_height": null,
      "width": 2000,
      "height": 2000,
      "url": "https://global.discourse-cdn.com/foundationdb/original/1X/cd4148da17fe747ccfd45b2b1d4d36efedb0bf4c.png"
    },
    {
      "max_width": 1024,
      "max_height": 1024,
      "width": 1024,
      "height": 1024,
      "url": "https://global.discourse-cdn.com/foundationdb/optimized/1X/cd4148da17fe747ccfd45b2b1d4d36efedb0bf4c_2_1024x1024.png"
    }
  ],
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "Technical overview of the database",
      "id": 135,
      "title": "Technical overview of the database",
      "slug": "technical-overview-of-the-database",
      "posts_count": 27,
      "reply_count": 15,
      "highest_post_number": 27,
      "image_url": null,
      "created_at": "2018-04-20T15:30:31.788Z",
      "last_posted_at": "2019-01-11T23:25:47.462Z",
      "bumped": true,
      "bumped_at": "2019-01-11T23:25:47.462Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 64,
      "views": 12958,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 96,
            "username": "idiot",
            "name": "",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/i/f04885/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 22,
            "username": "dave",
            "name": "David Scherer",
            "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 443,
            "username": "junius",
            "name": "junius",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/j/f08c70/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 54,
            "username": "Evan",
            "name": "Evan Tschannen",
            "avatar_template": "/user_avatar/forums.foundationdb.org/evan/{size}/104_2.png",
            "moderator": true,
            "trust_level": 1
          }
        }
      ]
    },
    {
      "fancy_title": "A few design-pattern + check-my-understanding questions",
      "id": 1153,
      "title": "A few design-pattern + check-my-understanding questions",
      "slug": "a-few-design-pattern-check-my-understanding-questions",
      "posts_count": 10,
      "reply_count": 6,
      "highest_post_number": 10,
      "image_url": null,
      "created_at": "2019-02-19T15:18:58.329Z",
      "last_posted_at": "2019-02-21T19:51:53.686Z",
      "bumped": true,
      "bumped_at": "2019-02-21T19:51:53.686Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 2273,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 519,
            "username": "JamesThompson",
            "name": "James Thompson",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/j/c67d28/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 173,
            "username": "jkominek",
            "name": "Jay Kominek",
            "avatar_template": "/user_avatar/forums.foundationdb.org/jkominek/{size}/140_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "High rate of transaction retries with error code 1009 (Request for future version)",
      "id": 1715,
      "title": "High rate of transaction retries with error code 1009 (Request for future version)",
      "slug": "high-rate-of-transaction-retries-with-error-code-1009-request-for-future-version",
      "posts_count": 40,
      "reply_count": 12,
      "highest_post_number": 41,
      "image_url": "https://global.discourse-cdn.com/foundationdb/optimized/1X/e6c4d4687de20f3c4dc13128e9c17631f370788f_2_1024x181.png",
      "created_at": "2019-11-05T12:13:50.883Z",
      "last_posted_at": "2020-04-30T06:36:21.616Z",
      "bumped": true,
      "bumped_at": "2020-04-30T07:15:53.411Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [
        "performance"
      ],
      "tags_descriptions": {},
      "like_count": 5,
      "views": 5148,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 539,
            "username": "aikoven",
            "name": "Daniel Lytkin",
            "avatar_template": "/user_avatar/forums.foundationdb.org/aikoven/{size}/535_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 260,
            "username": "jared2501",
            "name": "Jared2501",
            "avatar_template": "/user_avatar/forums.foundationdb.org/jared2501/{size}/266_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Relax consistency guarantees",
      "id": 1560,
      "title": "Relax consistency guarantees",
      "slug": "relax-consistency-guarantees",
      "posts_count": 18,
      "reply_count": 14,
      "highest_post_number": 19,
      "image_url": null,
      "created_at": "2019-08-05T00:31:11.823Z",
      "last_posted_at": "2019-10-30T15:35:37.702Z",
      "bumped": true,
      "bumped_at": "2019-10-30T15:35:37.702Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 2278,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 542,
            "username": "jonahwest",
            "name": "",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/j/90db22/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 14,
            "username": "andrew.noyes",
            "name": "",
            "avatar_template": "/user_avatar/forums.foundationdb.org/andrew.noyes/{size}/443_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 15,
            "username": "markus.pilman",
            "name": "Markus Pilman",
            "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "How to scale foundation db reads",
      "id": 1108,
      "title": "How to scale foundation db reads",
      "slug": "how-to-scale-foundation-db-reads",
      "posts_count": 21,
      "reply_count": 13,
      "highest_post_number": 21,
      "image_url": null,
      "created_at": "2019-02-02T12:39:23.370Z",
      "last_posted_at": "2019-03-18T16:32:32.430Z",
      "bumped": true,
      "bumped_at": "2019-03-18T16:32:32.430Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 7,
      "views": 6504,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 504,
            "username": "preslavle",
            "name": "Preslav Le",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/p/9de0a6/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 337,
            "username": "mengxu",
            "name": "Meng Xu",
            "avatar_template": "/user_avatar/forums.foundationdb.org/mengxu/{size}/893_2.png",
            "trust_level": 2
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 576,
        "username": "davisp",
        "name": "Paul J  Davis",
        "avatar_template": "/user_avatar/forums.foundationdb.org/davisp/{size}/570_2.png",
        "post_count": 6,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 12,
        "username": "ajbeamon",
        "name": "A.J. Beamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "admin": true,
        "trust_level": 4
      },
      {
        "id": 13,
        "username": "alexmiller",
        "name": "Alex Miller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      },
      {
        "id": 454,
        "username": "jzhou",
        "name": "Jingyu Zhou",
        "avatar_template": "/user_avatar/forums.foundationdb.org/jzhou/{size}/445_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "admin": true,
        "moderator": true,
        "trust_level": 2
      }
    ],
    "created_by": {
      "id": 576,
      "username": "davisp",
      "name": "Paul J  Davis",
      "avatar_template": "/user_avatar/forums.foundationdb.org/davisp/{size}/570_2.png"
    },
    "last_poster": {
      "id": 576,
      "username": "davisp",
      "name": "Paul J  Davis",
      "avatar_template": "/user_avatar/forums.foundationdb.org/davisp/{size}/570_2.png"
    },
    "links": [
      {
        "url": "https://github.com/apple/foundationdb/blob/bf378952cb560f92272f13a2b3fa3ac8d00588dc/fdbclient/NativeAPI.actor.cpp#L2621",
        "title": "foundationdb/NativeAPI.actor.cpp at bf378952cb560f92272f13a2b3fa3ac8d00588dc \u00b7 apple/foundationdb \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 11,
        "user_id": 12,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://gist.github.com/davisp/310e9d2569daec9d706043ca7b1c6a3e",
        "title": "fdb-gantt.py \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 6,
        "user_id": 576,
        "domain": "gist.github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://gist.github.com/davisp/1b9c75beae2e4b42be967cdc12e33b02",
        "title": "Data for commit latency diagnosis \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 4,
        "user_id": 576,
        "domain": "gist.github.com",
        "root_domain": "github.com"
      }
    ]
  },
  "bookmarks": []
}