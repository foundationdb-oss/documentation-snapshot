{
  "post_stream": {
    "posts": [
      {
        "id": 5113,
        "name": "",
        "username": "pH14",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ph14/{size}/92_2.png",
        "created_at": "2019-09-20T11:57:48.642Z",
        "cooked": "<p>If I understand versionstamps correctly, they are 12 bytes (Java): the first 8 being the transaction version, next two being batch order if FDB determined multiple transactions could be committed under the same version, and the final two bytes being an optional client-assigned order.</p>\n<p>Since many systems use 8-byte <code>long</code> values as ids, I\u2019d like to be able to piggyback off of versionstamps to generate an increasing long-sequence without extra coordination/reads, but truncating 10\u2013&gt;8 bytes won\u2019t be safe if the commit was batched together with another.</p>\n<p>Maybe I\u2019m wholly barking up the wrong tree, but one option I was wondering about is applying the hidden <code>first_in_batch</code> transaction option to all commits being used to generate 8-byte ids, since I\u2019m imagining two <code>first_in_batch</code> transactions cannot be coalesced. This way, all normal transactions proceed just fine, and id-generating ones are forced to get a 00 batch order. Or maybe I have no idea how this option works <img src=\"https://emoji.discourse-cdn.com/twitter/smile.png?v=9\" title=\":smile:\" class=\"emoji\" alt=\":smile:\"></p>\n<p>Any other approaches to consider? Something like the high-contention allocator wouldn\u2019t match my exact use case, since the sequence needs to be increasing.</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 8,
        "updated_at": "2019-09-20T11:57:48.642Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 179,
        "reads": 40,
        "readers_count": 39,
        "score": 905.0,
        "yours": false,
        "topic_id": 1640,
        "topic_slug": "possible-to-create-a-unique-increasing-8-byte-sequence-with-versionstamps",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 113,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/possible-to-create-a-unique-increasing-8-byte-sequence-with-versionstamps/1640/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 5123,
        "name": "gaurav",
        "username": "gaurav",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
        "created_at": "2019-09-21T03:37:42.843Z",
        "cooked": "<p><code>first_in_batch</code> is an interesting suggestion; I will be curious what the core team thinks about it.</p>\n<p>How frequent are Id generating transactions, and what is cost of a conflict amongst those? One very simple approach could to maintain a single <code>next_id</code> row and <code>read-use-increment-write</code> it in the same transaction that needs this id generated.<br>\nObvious drawback is that id generating operations will be serialized on this row and may cause conflicts.</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 8,
        "updated_at": "2019-09-21T07:00:05.222Z",
        "reply_count": 3,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 39,
        "readers_count": 38,
        "score": 27.8,
        "yours": false,
        "topic_id": 1640,
        "topic_slug": "possible-to-create-a-unique-increasing-8-byte-sequence-with-versionstamps",
        "display_username": "gaurav",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 166,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/possible-to-create-a-unique-increasing-8-byte-sequence-with-versionstamps/1640/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 5126,
        "name": "Alex Miller",
        "username": "alexmiller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "created_at": "2019-09-21T05:32:50.902Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"gaurav\" data-post=\"2\" data-topic=\"1640\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/g/b487fb/48.png\" class=\"avatar\"> gaurav:</div>\n<blockquote>\n<p><code>first_in_batch</code> is an interesting suggestion; I will be curious what the core team thinks about it.</p>\n</blockquote>\n</aside>\n<p>Ah, I was hoping you\u2019d show up, as you\u2019ve probably thought more about clever ways to use versionstamps than I.  My first reply was the same question you asked anyway, as I think that determines what an acceptable solution will be. <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n<p>I thought <a class=\"mention\" href=\"/u/lihtnes\">@lihtnes</a> <a href=\"https://github.com/apple/foundationdb/pull/1246#discussion_r277082089\">tried using FIRST_IN_BATCH</a> while implementing snapshot backup, and found it didn\u2019t work the way he expected.  Reading <a href=\"https://github.com/apple/foundationdb/blob/6d74af93d38585f809ce10e76237023646c9680c/fdbrpc/batcher.actor.h#L91\">the code for it</a>, it looks like any FIRST_IN_BATCH transaction just causes the current set of batched transactions to be sealed, and a new batch to be created.  So I\u2019d think that this would work, but I\u2019d feel way more comfortable adding this invariant check to a test workload and grinding simulation on it for a while before telling you it\u2019s safe.  If you use it too much, it would definitely mess with your throughput/latency.</p>\n<p>FWIW, there\u2019s <a href=\"https://github.com/apple/foundationdb/blob/e76f64e7bbf0ee8a82a1bd17d2b87dd652bcd041/fdbserver/storageserver.actor.cpp#L3710\">only one use</a> of <code>FIRST_IN_BATCH</code>, which appears to be to fix an issue where if a storage server changes its tag mid transaction batch, then any mutation before the tag change would be sent to the wrong storage server.  It appears to only exist to serve this one workaround, and that\u2019s why it\u2019s a hidden option.</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 8,
        "updated_at": "2019-09-21T05:32:50.902Z",
        "reply_count": 0,
        "reply_to_post_number": 2,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 35,
        "readers_count": 34,
        "score": 7.0,
        "yours": false,
        "topic_id": 1640,
        "topic_slug": "possible-to-create-a-unique-increasing-8-byte-sequence-with-versionstamps",
        "display_username": "Alex Miller",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/apple/foundationdb/pull/1246#discussion_r277082089",
            "internal": false,
            "reflection": false,
            "clicks": 5
          },
          {
            "url": "https://github.com/apple/foundationdb/blob/e76f64e7bbf0ee8a82a1bd17d2b87dd652bcd041/fdbserver/storageserver.actor.cpp#L3710",
            "internal": false,
            "reflection": false,
            "title": "foundationdb/storageserver.actor.cpp at e76f64e7bbf0ee8a82a1bd17d2b87dd652bcd041 \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 4
          },
          {
            "url": "https://github.com/apple/foundationdb/blob/6d74af93d38585f809ce10e76237023646c9680c/fdbrpc/batcher.actor.h#L91",
            "internal": false,
            "reflection": false,
            "title": "foundationdb/batcher.actor.h at 6d74af93d38585f809ce10e76237023646c9680c \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 2
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 13,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/possible-to-create-a-unique-increasing-8-byte-sequence-with-versionstamps/1640/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 5134,
        "name": "Alec Grieser",
        "username": "alloc",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "created_at": "2019-09-23T16:34:14.657Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"gaurav\" data-post=\"2\" data-topic=\"1640\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/g/b487fb/48.png\" class=\"avatar\"> gaurav:</div>\n<blockquote>\n<p>How frequent are Id generating transactions, and what is cost of a conflict amongst those? One very simple approach could to maintain a single <code>next_id</code> row and <code>read-use-increment-write</code> it in the same transaction that needs this id generated.</p>\n</blockquote>\n</aside>\n<p>There are some strategies that can be adapted to allow for \u201cmedium concurrency\u201d. For example, if you read the counter at snapshot isolation level, add a random value between 1 and <em>n</em>, and then write the value back using the <code>MAX</code> atomic op. Then guaranteeing uniqueness is a matter of setting appropriate conflict ranges or read/write/modifying an appropriate key. Then the probability of a conflict can be adjusted by choosing different values for <em>n</em>.</p>\n<p>Though this may not work depending on the exact semantics of \u201cneeds to be increasing\u201d in the original question.</p>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 8,
        "updated_at": "2019-09-23T16:34:14.657Z",
        "reply_count": 0,
        "reply_to_post_number": 2,
        "quote_count": 1,
        "incoming_link_count": 2,
        "reads": 30,
        "readers_count": 29,
        "score": 16.0,
        "yours": false,
        "topic_id": 1640,
        "topic_slug": "possible-to-create-a-unique-increasing-8-byte-sequence-with-versionstamps",
        "display_username": "Alec Grieser",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 8,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/possible-to-create-a-unique-increasing-8-byte-sequence-with-versionstamps/1640/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 5147,
        "name": "",
        "username": "pH14",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ph14/{size}/92_2.png",
        "created_at": "2019-09-24T11:36:36.728Z",
        "cooked": "<p>For a little context, I\u2019ve been poking at the <code>fdb-zk</code> layer, and one of the things Zookeeper proper does is assign an increasing global transaction id to writes, where it increments by 1 each time. One place ZK uses this property is for happens-before/after queries, e.g. client asks server: give me all updates to this set of ZNodes &gt; last_seen_txn_id</p>\n<p>Moving things over to FDB, I was initially hoping to use versionstamps to get a global write ordering without additional coordination, but I misunderstood the layout (mistook the 2x byte batch order for the 2x byte optional user version), and am now realizing this could assign non-unique ids after truncating down to a <code>long</code> when batch order != 0.</p>\n<aside class=\"quote no-group\" data-username=\"gaurav\" data-post=\"2\" data-topic=\"1640\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/g/b487fb/48.png\" class=\"avatar\"> gaurav:</div>\n<blockquote>\n<p>How frequent are Id generating transactions, and what is cost of a conflict amongst those? One very simple approach could to maintain a single <code>next_id</code> row and <code>read-use-increment-write</code> it in the same transaction that needs this id generated.<br>\nObvious drawback is that id generating operations will be serialized on this row and may cause conflicts.</p>\n</blockquote>\n</aside>\n<p>This id generation mode will be valuable to have for 1:1 test compatibility with ZK\u2019s own test suite (which assume the increment-by-1 strategy), but as you mention, will probably cause too many conflicts. For this scenario, any ZNode create/update/delete will require a unique id, so then we\u2019d have set a pretty low upper-bound on write throughput.</p>",
        "post_number": 5,
        "post_type": 1,
        "posts_count": 8,
        "updated_at": "2019-09-24T11:36:36.728Z",
        "reply_count": 2,
        "reply_to_post_number": null,
        "quote_count": 1,
        "incoming_link_count": 1,
        "reads": 30,
        "readers_count": 29,
        "score": 21.0,
        "yours": false,
        "topic_id": 1640,
        "topic_slug": "possible-to-create-a-unique-increasing-8-byte-sequence-with-versionstamps",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 113,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/possible-to-create-a-unique-increasing-8-byte-sequence-with-versionstamps/1640/5",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 5148,
        "name": "Ryan Worl",
        "username": "ryanworl",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png",
        "created_at": "2019-09-24T12:03:37.616Z",
        "cooked": "<p>Is there a reason why you wouldn\u2019t want to elect a leader to process all requests? That would resolve the contention issue.</p>",
        "post_number": 6,
        "post_type": 1,
        "posts_count": 8,
        "updated_at": "2019-09-24T12:03:37.616Z",
        "reply_count": 0,
        "reply_to_post_number": 5,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 29,
        "readers_count": 28,
        "score": 10.8,
        "yours": false,
        "topic_id": 1640,
        "topic_slug": "possible-to-create-a-unique-increasing-8-byte-sequence-with-versionstamps",
        "display_username": "Ryan Worl",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 113,
          "username": "pH14",
          "name": "",
          "avatar_template": "/user_avatar/forums.foundationdb.org/ph14/{size}/92_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 81,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/possible-to-create-a-unique-increasing-8-byte-sequence-with-versionstamps/1640/6",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 5152,
        "name": "gaurav",
        "username": "gaurav",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
        "created_at": "2019-09-24T15:52:04.569Z",
        "cooked": "<p>There is a \u201chack\u201d that comes to mind that will let you map 10-byte version-stamp to 8-byte unique value, but this scheme will be valid only for 3,258 days(~9 years), from the moment of first use in a layer instance:</p>\n<p>At the time of layer setup, record the current 8-byte commit version value - call it <code>I</code>.</p>\n<p>In every ID generating transaction:</p>\n<ul>\n<li><code>VS = &lt;8B commit version(CV) + 2B Batch Id (BI)&gt;</code></li>\n<li>\n<code>D = CV - I</code> (8-byte) . (D will be equally unique as CV)</li>\n<li>\n<code>ID = (D &lt;&lt; 16) | BI</code>  (D + BI will be equally unique as CV + BI)</li>\n</ul>\n<p>This scheme will work till 6 LSB of the delta (<code>D</code>) are exhausted (upper 2 bytes out of 8 are erased). Under default settings, FDB changes version roughly every 1 micro-sec, so this scheme will survive for 2^48 microseconds.</p>",
        "post_number": 7,
        "post_type": 1,
        "posts_count": 8,
        "updated_at": "2019-09-24T16:05:59.629Z",
        "reply_count": 0,
        "reply_to_post_number": 5,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 29,
        "readers_count": 28,
        "score": 20.8,
        "yours": false,
        "topic_id": 1640,
        "topic_slug": "possible-to-create-a-unique-increasing-8-byte-sequence-with-versionstamps",
        "display_username": "gaurav",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 3,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 113,
          "username": "pH14",
          "name": "",
          "avatar_template": "/user_avatar/forums.foundationdb.org/ph14/{size}/92_2.png"
        },
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 166,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/possible-to-create-a-unique-increasing-8-byte-sequence-with-versionstamps/1640/7",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 5179,
        "name": "Senthil Ramamoorthy",
        "username": "lihtnes",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/l/848f3c/{size}.png",
        "created_at": "2019-09-27T20:52:15.412Z",
        "cooked": "<blockquote>\n<p>I thought <a class=\"mention\" href=\"/u/lihtnes\">@lihtnes</a> <a href=\"https://github.com/apple/foundationdb/pull/1246#discussion_r277082089\" rel=\"noopener nofollow ugc\">tried using FIRST_IN_BATCH </a> while implementing snapshot backup, and found it didn\u2019t work the way he expected.</p>\n</blockquote>\n<p>FIRST_IN_BATCH does work based on my limited testing.</p>\n<p>Please see the last comment in the above thread. It was not suitable/work for the exec op case in snapshot project, because the snapshot implementation in TLog parsed only the first mutation and if there were multiple exec op mutations in the same transaction then it was not processing the other exec ops. Hope that clarifies.</p>",
        "post_number": 8,
        "post_type": 1,
        "posts_count": 8,
        "updated_at": "2019-09-27T20:52:15.412Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 27,
        "readers_count": 26,
        "score": 5.4,
        "yours": false,
        "topic_id": 1640,
        "topic_slug": "possible-to-create-a-unique-increasing-8-byte-sequence-with-versionstamps",
        "display_username": "Senthil Ramamoorthy",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/apple/foundationdb/pull/1246#discussion_r277082089",
            "internal": false,
            "reflection": false,
            "clicks": 2
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 417,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/possible-to-create-a-unique-increasing-8-byte-sequence-with-versionstamps/1640/8",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      5113,
      5123,
      5126,
      5134,
      5147,
      5148,
      5152,
      5179
    ]
  },
  "timeline_lookup": [
    [
      1,
      2223
    ],
    [
      4,
      2220
    ],
    [
      5,
      2219
    ],
    [
      8,
      2216
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "Possible to create a unique/increasing 8-byte sequence with versionstamps?",
  "id": 1640,
  "title": "Possible to create a unique/increasing 8-byte sequence with versionstamps?",
  "posts_count": 8,
  "created_at": "2019-09-20T11:57:48.578Z",
  "views": 901,
  "reply_count": 4,
  "like_count": 1,
  "last_posted_at": "2019-09-27T20:52:15.412Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "possible-to-create-a-unique-increasing-8-byte-sequence-with-versionstamps",
  "category_id": 7,
  "word_count": 1178,
  "deleted_at": null,
  "user_id": 113,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_1640",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 8,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 6,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "What is the most efficient way to generate version stamps in FDB",
      "id": 2062,
      "title": "What is the most efficient way to generate version stamps in FDB",
      "slug": "what-is-the-most-efficient-way-to-generate-version-stamps-in-fdb",
      "posts_count": 19,
      "reply_count": 13,
      "highest_post_number": 19,
      "image_url": null,
      "created_at": "2020-04-13T23:10:51.841Z",
      "last_posted_at": "2020-07-26T16:46:50.841Z",
      "bumped": true,
      "bumped_at": "2020-07-26T16:46:50.841Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 5,
      "views": 2324,
      "category_id": 9,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 15,
            "username": "markus.pilman",
            "name": "Markus Pilman",
            "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 454,
            "username": "jzhou",
            "name": "Jingyu Zhou",
            "avatar_template": "/user_avatar/forums.foundationdb.org/jzhou/{size}/445_2.png",
            "admin": true,
            "moderator": true,
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "VersionStamp vs CommittedVersion",
      "id": 600,
      "title": "VersionStamp vs CommittedVersion",
      "slug": "versionstamp-vs-committedversion",
      "posts_count": 7,
      "reply_count": 3,
      "highest_post_number": 7,
      "image_url": null,
      "created_at": "2018-07-30T06:50:38.826Z",
      "last_posted_at": "2018-09-17T19:43:14.827Z",
      "bumped": true,
      "bumped_at": "2018-09-17T19:43:14.827Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 3,
      "views": 3916,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 41,
            "username": "amirouche",
            "name": "Amirouche",
            "avatar_template": "/user_avatar/forums.foundationdb.org/amirouche/{size}/1911_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Can Foundation DB / Record Layer support a sequence?",
      "id": 2775,
      "title": "Can Foundation DB / Record Layer support a sequence?",
      "slug": "can-foundation-db-record-layer-support-a-sequence",
      "posts_count": 4,
      "reply_count": 2,
      "highest_post_number": 4,
      "image_url": null,
      "created_at": "2021-07-04T13:44:11.076Z",
      "last_posted_at": "2021-07-06T16:28:36.039Z",
      "bumped": true,
      "bumped_at": "2021-07-06T16:28:36.039Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 3,
      "views": 883,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 939,
            "username": "nirarkin",
            "name": "Nir Arkin",
            "avatar_template": "/user_avatar/forums.foundationdb.org/nirarkin/{size}/1096_2.png",
            "trust_level": 0
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 534,
            "username": "PierreZ",
            "name": "Pierre Zemb",
            "avatar_template": "/user_avatar/forums.foundationdb.org/pierrez/{size}/866_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "How to minimize transaction conflicts on atomic operations?",
      "id": 1051,
      "title": "How to minimize transaction conflicts on atomic operations?",
      "slug": "how-to-minimize-transaction-conflicts-on-atomic-operations",
      "posts_count": 8,
      "reply_count": 4,
      "highest_post_number": 8,
      "image_url": null,
      "created_at": "2019-01-24T15:30:28.527Z",
      "last_posted_at": "2019-01-25T16:01:20.698Z",
      "bumped": true,
      "bumped_at": "2019-01-25T16:01:20.698Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 5,
      "views": 2181,
      "category_id": 9,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 323,
            "username": "WolfDan",
            "name": "Wolf Dan",
            "avatar_template": "/user_avatar/forums.foundationdb.org/wolfdan/{size}/806_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 81,
            "username": "ryanworl",
            "name": "Ryan Worl",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png",
            "trust_level": 3
          }
        }
      ]
    },
    {
      "fancy_title": "Generating sortable unique ID(primary key) across the cluster in an entity-relationship model",
      "id": 3789,
      "title": "Generating sortable unique ID(primary key) across the cluster in an entity-relationship model",
      "slug": "generating-sortable-unique-id-primary-key-across-the-cluster-in-an-entity-relationship-model",
      "posts_count": 6,
      "reply_count": 2,
      "highest_post_number": 6,
      "image_url": null,
      "created_at": "2023-02-08T14:53:26.610Z",
      "last_posted_at": "2023-02-09T20:58:44.631Z",
      "bumped": true,
      "bumped_at": "2023-02-09T20:58:44.631Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 654,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 1212,
            "username": "Apache",
            "name": "Apache",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/a/2acd7d/{size}.png",
            "trust_level": 0
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 15,
            "username": "markus.pilman",
            "name": "Markus Pilman",
            "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 946,
            "username": "rajivr",
            "name": "Rajiv M Ranganath",
            "avatar_template": "/user_avatar/forums.foundationdb.org/rajivr/{size}/1100_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 164,
            "username": "Imperatorx",
            "name": "",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/i/d2c977/{size}.png",
            "trust_level": 2
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 113,
        "username": "pH14",
        "name": "",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ph14/{size}/92_2.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 166,
        "username": "gaurav",
        "name": "gaurav",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 3
      },
      {
        "id": 8,
        "username": "alloc",
        "name": "Alec Grieser",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      },
      {
        "id": 13,
        "username": "alexmiller",
        "name": "Alex Miller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      },
      {
        "id": 81,
        "username": "ryanworl",
        "name": "Ryan Worl",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 3
      },
      {
        "id": 417,
        "username": "lihtnes",
        "name": "Senthil Ramamoorthy",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/l/848f3c/{size}.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      }
    ],
    "created_by": {
      "id": 113,
      "username": "pH14",
      "name": "",
      "avatar_template": "/user_avatar/forums.foundationdb.org/ph14/{size}/92_2.png"
    },
    "last_poster": {
      "id": 417,
      "username": "lihtnes",
      "name": "Senthil Ramamoorthy",
      "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/l/848f3c/{size}.png"
    },
    "links": [
      {
        "url": "https://github.com/apple/foundationdb/pull/1246#discussion_r277082089",
        "title": null,
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 7,
        "user_id": 13,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://github.com/apple/foundationdb/blob/e76f64e7bbf0ee8a82a1bd17d2b87dd652bcd041/fdbserver/storageserver.actor.cpp#L3710",
        "title": "foundationdb/storageserver.actor.cpp at e76f64e7bbf0ee8a82a1bd17d2b87dd652bcd041 \u00b7 apple/foundationdb \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 4,
        "user_id": 13,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://github.com/apple/foundationdb/blob/6d74af93d38585f809ce10e76237023646c9680c/fdbrpc/batcher.actor.h#L91",
        "title": "foundationdb/batcher.actor.h at 6d74af93d38585f809ce10e76237023646c9680c \u00b7 apple/foundationdb \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 2,
        "user_id": 13,
        "domain": "github.com",
        "root_domain": "github.com"
      }
    ]
  },
  "bookmarks": []
}