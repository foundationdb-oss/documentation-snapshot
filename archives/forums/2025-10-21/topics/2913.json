{
  "post_stream": {
    "posts": [
      {
        "id": 10020,
        "name": "Hieu Nguyen",
        "username": "ntrhieu89",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ntrhieu89/{size}/587_2.png",
        "created_at": "2021-09-28T06:26:34.724Z",
        "cooked": "<p>I have a question regarding concurrent read and write transactions in FoundationDB in terms of conflict checking.</p>\n<p>In this example, I have two transactions: a read transaction, T1, performs a scan on a key range, and another write transaction, T2,  which changes the keys within this key range, interleaves while the read transaction T1 is pending (not committed yet).</p>\n<p>I expect FDB to provide linearizability, meaning that after the write transaction T2 commits, the read transaction T1 should be determined to have conflict and thus gets aborted by the Resolver, because T1 reads the key range that covers the keys that have been inserted/updated by T2. However, when I ran the experiment to perform these two concurrent transactions, I found that the read transaction can read all old keys (meaning the keys with the version before the write transaction T2 starts) and then commit without triggering the FDB to raise error/exception.</p>\n<p>Am I missing something? My understanding of the transaction conflict is for transactions T1 and T2, if T1 reads some key ranges with a commit version V1, and T2 has committed and updated some overlapped key ranges with a higher commit version V2, then T1 should be aborted.</p>\n<p>The timeline to show T1 and T2 start and end transactions, and the involved key ranges, are shown in the diagram below:</p>\n<pre><code class=\"lang-auto\">T1\t\t\t\t\t\tT2\nstart\t\t\t\t\nscan some first keys \nof range [0x00, 0xff]\n\n\t\t\t\t\t\tstart\n\t\t\t\t\t\tadd new keys within range [0x00, 0xff]\n\t\t\t\t\t\tcommit\t\t\t\n\nscan the remaining keys\ncommit\n</code></pre>\n<p>Below is the full source code of my sample program. FDB version is 6.2.27, and FDB java client version is 6.22.</p>\n<pre><code class=\"lang-auto\">import com.apple.foundationdb.Database;\nimport com.apple.foundationdb.FDB;\nimport com.apple.foundationdb.KeyValue;\nimport com.apple.foundationdb.StreamingMode;\nimport com.apple.foundationdb.Transaction;\n\nimport java.nio.charset.StandardCharsets;\nimport java.util.Iterator;\nimport java.util.concurrent.ExecutionException;\n\npublic class SampleConcurrentFDBTx {\n   private static final int NUM_KEYS_TO_INSERT = 1000;\n   private static final int NUM_KEYS_TO_READ_BEFORE_WRITE = 10;\n\n   public static void main(String[] args) throws ExecutionException, InterruptedException {\n       FDB fdb = FDB.selectAPIVersion(620);\n       Database db = fdb.open(\"/usr/local/etc/foundationdb/fdb.cluster\");\n\n       // clear the database\n       clear(db);\n\n       // To prepare the tests by inserting some keys\n       Transaction tx = db.createTransaction();\n       for (int i = 0; i &lt; NUM_KEYS_TO_INSERT; i++) {\n           byte[] key = (\"key\" + i).getBytes(StandardCharsets.UTF_8);\n           byte[] val = (\"val\" + i).getBytes(StandardCharsets.UTF_8);\n           tx.set(key, val);\n       }\n       tx.commit().get();\n\n       // Start the read transaction T1 and read some keys first \n       // in the range of [0x00, 0xFF]\n       Transaction readTx = db.createTransaction();\n       System.out.println(\"Read tx start at \" + readTx.getReadVersion().get() +\n               \" with read version \" + readTx.getReadVersion().get());\n\n       KeySelector begin = new KeySelector(new byte[] { (byte) 0x00 }, true, 0);\n       KeySelector end = new KeySelector(new byte[] { (byte) 0xff }, true, 0);\n       Iterator&lt;KeyValue&gt; iter = readTx.getRange(begin, end, 0, false, StreamingMode.SMALL).iterator();\n       for (int i = 0; i &lt; NUM_KEYS_TO_READ_BEFORE_WRITE; ++i) {\n           KeyValue keyValue = iter.next();\n           System.out.println(String.format(\"Key: %s, value: %s\", new String(keyValue.getKey()),\n                   new String(keyValue.getValue())));\n       }\n       System.out.println(\"Read tx completed reading some keys.\");\n\n       // Now start the write transaction to add new key-value pairs and then commit\n       Transaction writeTx = db.createTransaction();\n       System.out.println(\"Write tx starts at \" + System.currentTimeMillis() +\n               \" with read version \" + tx.getReadVersion().get());\n       for (int i = 0; i &lt; NUM_KEYS_TO_INSERT; i++) {\n           byte[] key = (\"key\" + i + \"abc\").getBytes(StandardCharsets.UTF_8);\n           byte[] val = (\"val\" + i + \"abc\").getBytes(StandardCharsets.UTF_8);\n           writeTx.set(key, val);\n       }\n       writeTx.commit().get();\n       System.out.println(\"Write tx committed at \" + System.currentTimeMillis());\n\n       // Back to the read transaction to read remain key-value pairs and commit\n       System.out.println(\"Read tx resumes read keys at \" + System.currentTimeMillis());\n       while (iter.hasNext()) {\n           KeyValue keyValue = iter.next();\n           System.out.println(String.format(\"Key: %s, value: %s\", new String(keyValue.getKey()),\n                   new String(keyValue.getValue())));\n       }\n       readTx.commit().get();\n       System.out.println(\"Read tx committed at \" + System.currentTimeMillis());\n\n       // The code below could be uncommented to re-scan to verify that the write transaction did commit successfully\n\n//        System.out.println(\"Re-scan the database\");\n//        readTx = db.createTransaction();\n//        iter = readTx.getRange(begin, end, 0, false, StreamingMode.SMALL).iterator();\n//        while (iter.hasNext()) {\n//            KeyValue keyValue = iter.next();\n//            System.out.println(String.format(\"Key: %s, value: %s\", new String(keyValue.getKey()),\n//                    new String(keyValue.getValue())));\n//        }\n//        readTx.commit().get();\n   }\n\n   private static void clear(Database db) throws ExecutionException, InterruptedException {\n       byte[] begin = new byte[] { (byte) 0x00 };\n       byte[] end = new byte[] { (byte) 0xFF };\n       Transaction tx = db.createTransaction();\n       tx.clear(begin, end);\n       tx.commit().get();\n   }\n}\n</code></pre>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2021-09-28T06:26:34.724Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 1038,
        "reads": 71,
        "readers_count": 70,
        "score": 5204.2,
        "yours": false,
        "topic_id": 2913,
        "topic_slug": "questions-regarding-fdb-transaction-conflict-on-two-concurrent-transactions",
        "display_username": "Hieu Nguyen",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://forums.foundationdb.org/t/can-i-achieve-linearizable-read-in-the-following-way/3540/3",
            "internal": true,
            "reflection": true,
            "title": "Can I achieve linearizable read in the following way?",
            "clicks": 1
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 550,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/questions-regarding-fdb-transaction-conflict-on-two-concurrent-transactions/2913/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 10022,
        "name": "Alex Miller",
        "username": "alexmiller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "created_at": "2021-09-28T11:12:47.312Z",
        "cooked": "<p>Read-only transactions have a no-op commit.  This is mentioned in the Developer\u2019s Guide:</p>\n<blockquote>\n<p>In particular, the reads in a transaction take place from an instantaneous snapshot of the database. From the perspective of the transaction this snapshot is not modified by the writes of other, concurrent transactions. When the read-write transaction is ready to be committed (read-only transactions don\u2019t get committed and therefore never conflict), the FoundationDB cluster checks that it does not conflict with any previously committed transaction (i.e. that no value read by a transaction has been modified by another transaction since the read occurred) and, if it does conflict, rejects it. Rejected conflicting transactions are usually retried by the client. Accepted transactions are written to disk on multiple cluster nodes and then reported accepted to the client.</p>\n</blockquote>\n<p>Linearizability is about \u201coperations\u201d following a real-time ordering, and when applied to a transactional database, the \u201coperation\u201d is a transaction.  To be linearizable, there must be a single point at which the transaction atomically committed between its start and end.  The schedule that you\u2019ve shown does indeed satisfy this requirement: T1 starts before T2, and thus T1 can be ordered before T2 without breaking linearizability.</p>\n<p>(If you really need a read-only transaction to have its reads re-validated upon commit, my personal cheap hack is to add a write conflict range over some key your clients will never touch.)</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2021-09-28T11:12:47.312Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 18,
        "reads": 63,
        "readers_count": 62,
        "score": 102.6,
        "yours": false,
        "topic_id": 2913,
        "topic_slug": "questions-regarding-fdb-transaction-conflict-on-two-concurrent-transactions",
        "display_username": "Alex Miller",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 13,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/questions-regarding-fdb-transaction-conflict-on-two-concurrent-transactions/2913/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 10029,
        "name": "Hieu Nguyen",
        "username": "ntrhieu89",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ntrhieu89/{size}/587_2.png",
        "created_at": "2021-09-28T17:47:58.326Z",
        "cooked": "<p>As you described, a read-only transaction becomes a snapshot read (<a href=\"https://en.wikipedia.org/wiki/Snapshot_isolation\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Snapshot isolation - Wikipedia</a>) since it reads a snapshot of the database, and conflict checking does not happen. Is it true?</p>\n<p>I don\u2019t explicitly specify my transaction to be read-only. Does the client library detect that the transaction contains no write and then consider it as read-only transaction?</p>\n<p>I tried doing artificial writes in the transaction T1 (in the example) as you suggested and when committing T1, it can detect the conflict. To confirm, is it because the conflict checking happens this time and detects that the range T1 reads ([0x00, 0xff]) conflicts with new keys inserted by T2, as the new keys fall into this range?</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2021-09-28T17:50:30.921Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 3,
        "reads": 54,
        "readers_count": 53,
        "score": 30.8,
        "yours": false,
        "topic_id": 2913,
        "topic_slug": "questions-regarding-fdb-transaction-conflict-on-two-concurrent-transactions",
        "display_username": "Hieu Nguyen",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://en.wikipedia.org/wiki/Snapshot_isolation",
            "internal": false,
            "reflection": false,
            "title": "Snapshot isolation - Wikipedia",
            "clicks": 1
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 550,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/questions-regarding-fdb-transaction-conflict-on-two-concurrent-transactions/2913/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 10030,
        "name": "Alex Miller",
        "username": "alexmiller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "created_at": "2021-09-29T01:53:49.622Z",
        "cooked": "<p>All reads in FoundationDB are of a snapshot of the database.</p>\n<p>The FDB client considers a transaction to be read only if it has no writes and it has no write conflict ranges.  Some client bindings have different classes for <code>Transaction</code> vs <code>ReadOnlyTransaction</code>.  This distinction doesn\u2019t exist in C API, it\u2019s just for programmer convenience in some bindings to have a transaction type that can\u2019t be used for writes.</p>\n<p>And you are correct.  Once you add the write to T1, it causes commit() to send a commit RPC to FDB, and FDB correctly identifies that a previously accepted write (from T2) causes a read-write conflict, and thus T1 aborts.</p>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2021-09-29T01:53:49.622Z",
        "reply_count": 0,
        "reply_to_post_number": 3,
        "quote_count": 0,
        "incoming_link_count": 5,
        "reads": 53,
        "readers_count": 52,
        "score": 35.6,
        "yours": false,
        "topic_id": 2913,
        "topic_slug": "questions-regarding-fdb-transaction-conflict-on-two-concurrent-transactions",
        "display_username": "Alex Miller",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 550,
          "username": "ntrhieu89",
          "name": "Hieu Nguyen",
          "avatar_template": "/user_avatar/forums.foundationdb.org/ntrhieu89/{size}/587_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 13,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/questions-regarding-fdb-transaction-conflict-on-two-concurrent-transactions/2913/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 10050,
        "name": "Hieu Nguyen",
        "username": "ntrhieu89",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ntrhieu89/{size}/587_2.png",
        "created_at": "2021-10-01T23:00:42.244Z",
        "cooked": "<p>What I really care about is the default transaction that provides strict serializability. The snap-shot read-based transaction is not the real issue that we tried to raise with you.</p>\n<p>In the FDB architecture document (link: <a href=\"https://apple.github.io/foundationdb/developer-guide.html#snapshot-reads\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Developer Guide \u2014 FoundationDB 7.1</a>), session \u201cConflict ranges\u201d, it says that \u201cBy default, FoundationDB transactions guarantee strict serializability\u201d. If a transaction is not specified further, in order to provide strict serializability, I believe FDB should check for conflict even if the transaction only has read operations. This generic transaction is different from a snapshot read as documented in the link.</p>\n<p>Actually, a statement is specified in the document that:</p>\n<blockquote>\n<p>\u2026if a concurrent transaction happens to insert a new key anywhere in the range, our transaction will conflict with it and fail (resulting in a retry) because seeing the other transaction\u2019s write would change the result of the range read</p>\n</blockquote>\n<p>This is the behavior I expected to happen in my example that involves the default transaction that should provide the strict serializability guarantee, but I did not see it and that is the reason that I posted the question to the forum. The read transaction in my example is very similar to the transaction written in Python (copied from the link above):</p>\n<pre><code class=\"lang-auto\">\n@fdb.transactional\ndef remove_one(tr, range):\n    all_kv = tr[range]\n    key, value = random.choice(list(all_kv))\n    del tr[key]\n    return value\n</code></pre>\n<p>except that it does not have the delete operation of \u201cdel tr [key]\u201d. I believe that following the FDB\u2019s strict serializability guarantee, having this delete operation or not should not change the statement. That is, this <code>remove_one()</code> will have conflict and abort, due to the other write transaction that touches any key in the \u201call_kv\u201d range.</p>\n<p>In summary, based on the fact that a default transaction should provide strict serializability checking, I would expect my test code with Java bindings, which does not involve a snap-shot read transaction, to raise transaction conflict and thus abort, without having to artificially add dummy writes or write conflit range to trigger conflict checkings. Could you help provide further clarification?</p>",
        "post_number": 5,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2021-10-01T23:01:59.681Z",
        "reply_count": 2,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 7,
        "reads": 53,
        "readers_count": 52,
        "score": 55.6,
        "yours": false,
        "topic_id": 2913,
        "topic_slug": "questions-regarding-fdb-transaction-conflict-on-two-concurrent-transactions",
        "display_username": "Hieu Nguyen",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://apple.github.io/foundationdb/developer-guide.html#snapshot-reads",
            "internal": false,
            "reflection": false,
            "title": "Developer Guide \u2014 FoundationDB 6.3",
            "clicks": 16
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 550,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/questions-regarding-fdb-transaction-conflict-on-two-concurrent-transactions/2913/5",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 10051,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2021-10-02T15:00:17.615Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"ntrhieu89\" data-post=\"5\" data-topic=\"2913\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/ntrhieu89/48/587_2.png\" class=\"avatar\"> ntrhieu89:</div>\n<blockquote>\n<p>What I really care about is the default transaction that provides strict serializability. The snap-shot read-based transaction is not the real issue that we tried to raise with you.</p>\n</blockquote>\n</aside>\n<p>He was not referring to the snapshot read option, but rather the fact that every transaction, including with the default behavior, performs reads on a snapshot of the database. In other words, it does all of its reads at a single consistent version that is obtained when the transaction is started. No writes  that happen after that version (such as from concurrent transactions) will change the result of any of your reads. You will only see data that has been committed prior to starting your transaction.</p>\n<p>At commit time, we need to make sure that the result is consistent with some strict ordering of the simultaneous transactions. In this case, the results of your operations are exactly the same as if the read-only T1 was ordered completely before the read-write T2 (T2 does not affect any of T1\u2019s reads), so there is no conflict. Because T1 made no writes, we can in essence assign it a commit version equal to its read version without invalidating any reads that come later.</p>\n<p>If T1 wrote a key and T2 modified T1\u2019s read set, then this is no longer guaranteed to be true. It can\u2019t be assumed to have a commit version equal to the read version, and it would be ordered after T2, assuming T2 committed first. The modifications to the read set of T1 mean that it cannot be ordered after, so it is a conflict.</p>",
        "post_number": 6,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2021-10-04T03:56:33.126Z",
        "reply_count": 0,
        "reply_to_post_number": 5,
        "quote_count": 1,
        "incoming_link_count": 12,
        "reads": 48,
        "readers_count": 47,
        "score": 69.6,
        "yours": false,
        "topic_id": 2913,
        "topic_slug": "questions-regarding-fdb-transaction-conflict-on-two-concurrent-transactions",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/questions-regarding-fdb-transaction-conflict-on-two-concurrent-transactions/2913/6",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 10059,
        "name": "Alex Miller",
        "username": "alexmiller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "created_at": "2021-10-05T18:25:19.790Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"ntrhieu89\" data-post=\"5\" data-topic=\"2913\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/ntrhieu89/48/587_2.png\" class=\"avatar\"> ntrhieu89:</div>\n<blockquote>\n<p>This is the behavior I expected to happen in my example that involves the default transaction that should provide the strict serializability guarantee, but I did not see it and that is the reason that I posted the question to the forum.</p>\n</blockquote>\n</aside>\n<p>Just to emphasize again: what you\u2019re seeing is indeed strict serializability.  FDB does not promise that a transaction is serialized as of a version that existed between the start and end of <code>commit()</code>, as you\u2019re expected.  FDB promises that a transaction is serialized as of a version that existed between the start of <code>getReadVersion()</code> and the end of <code>commit()</code>.  This means that the current behavior you\u2019re seeing is still linearizable.</p>\n<p>If you wish for read-only transactions to always fetch a new version to commit at upon <code>commit()</code> being called, then I\u2019d suggest adding a meaningless write conflict range to all of your transactions, and understand that those read-only transactions will now be significantly more expensive to FDB.</p>",
        "post_number": 7,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2021-10-05T18:25:19.790Z",
        "reply_count": 0,
        "reply_to_post_number": 5,
        "quote_count": 1,
        "incoming_link_count": 20,
        "reads": 42,
        "readers_count": 41,
        "score": 108.4,
        "yours": false,
        "topic_id": 2913,
        "topic_slug": "questions-regarding-fdb-transaction-conflict-on-two-concurrent-transactions",
        "display_username": "Alex Miller",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 13,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/questions-regarding-fdb-transaction-conflict-on-two-concurrent-transactions/2913/7",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 10174,
        "name": "Hieu Nguyen",
        "username": "ntrhieu89",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ntrhieu89/{size}/587_2.png",
        "created_at": "2021-10-26T16:42:45.565Z",
        "cooked": "<p>Thanks for the further clarification. Based on what you explained, does the following description correctly capture what we have discussed so far:</p>\n<ul>\n<li>\n<p>In the current implementation of FoundationDB, for a transaction T that is declared as read-write default transaction, if T includes only read operations but no write operations, then T will be always treated as a read-only transaction that reads the version obtained via GetReadVersion() at the beginning of the transaction. T will not be checked by the Resolver as specified by Algorithm 1 described on Page 5 of the FDB paper <a href=\"https://www.foundationdb.org/files/fdb-paper.pdf\" rel=\"noopener nofollow ugc\">https://www.foundationdb.org/files/fdb-paper.pdf</a>. As a result, T will always be committed.</p>\n</li>\n<li>\n<p>Furthermore, if the application really wants to ensure that this read-write default transaction with read-only operations, to be checked by the Resolver, to make sure that more recent committed writes do not happen to any of the read-involved key ranges in T, then we have to introduce \u201ca meaningless write conflict range\u201d  to T.</p>\n</li>\n</ul>",
        "post_number": 8,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2021-10-26T16:42:45.565Z",
        "reply_count": 2,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 4,
        "reads": 38,
        "readers_count": 37,
        "score": 37.6,
        "yours": false,
        "topic_id": 2913,
        "topic_slug": "questions-regarding-fdb-transaction-conflict-on-two-concurrent-transactions",
        "display_username": "Hieu Nguyen",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://www.foundationdb.org/files/fdb-paper.pdf",
            "internal": false,
            "reflection": false,
            "clicks": 8
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 550,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/questions-regarding-fdb-transaction-conflict-on-two-concurrent-transactions/2913/8",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 10175,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2021-10-26T21:01:52.888Z",
        "cooked": "<p>That sounds right to me. To make it a little more precise, for case 1 I would say T would not fail to commit, as it\u2019s common for read-only transactions that you would not actually commit it.</p>\n<p>Another way you could frame these two options would be that they are giving you different choices for the serialization order of your read-only transactions. In case 1, your transaction is being sequenced as if it happened at the read version, in case 2 it is being sequenced as if it happened at the commit version. If it\u2019s important that your read occur at the commit version (i.e. after anything that has already committed at your transaction\u2019s commit time), then you would need to use option 2.</p>",
        "post_number": 9,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2021-10-26T21:01:52.888Z",
        "reply_count": 0,
        "reply_to_post_number": 8,
        "quote_count": 0,
        "incoming_link_count": 5,
        "reads": 39,
        "readers_count": 38,
        "score": 62.8,
        "yours": false,
        "topic_id": 2913,
        "topic_slug": "questions-regarding-fdb-transaction-conflict-on-two-concurrent-transactions",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 550,
          "username": "ntrhieu89",
          "name": "Hieu Nguyen",
          "avatar_template": "/user_avatar/forums.foundationdb.org/ntrhieu89/{size}/587_2.png"
        },
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 2
          }
        ],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/questions-regarding-fdb-transaction-conflict-on-two-concurrent-transactions/2913/9",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 10178,
        "name": "Alex Miller",
        "username": "alexmiller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "created_at": "2021-10-28T08:17:02.264Z",
        "cooked": "<p>Hm\u2026 I\u2019ll agree that the resolver algorithm is somewhat misleading there for this case.</p>\n<p>This overall behavior is described in the paper though in 2.4.1:</p>\n<blockquote>\n<p>In addition to the above read-write transactions, FDB also supports read-only transactions and snapshot reads. A read-only transaction in FDB is both serializable (happens at the read version) and performant (thanks to the MVCC), and the client can commit these transactions locally without contacting the database. This is particularly important because the majority of transactions are read-only. Snapshot reads in FDB selectively relax the isolation property of a transaction by reducing conflicts, i.e., concurrent writes will not conflict with snapshot reads.</p>\n</blockquote>\n<p>In retrospect, we maybe should have chose another name for \u201csnapshot reads\u201d.  Although that is the name used in the FDB documentation, it\u2019s probably misleading when people think MVCC snapshot.</p>",
        "post_number": 10,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2021-10-28T09:15:32.773Z",
        "reply_count": 0,
        "reply_to_post_number": 8,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 35,
        "readers_count": 34,
        "score": 27.0,
        "yours": false,
        "topic_id": 2913,
        "topic_slug": "questions-regarding-fdb-transaction-conflict-on-two-concurrent-transactions",
        "display_username": "Alex Miller",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 550,
          "username": "ntrhieu89",
          "name": "Hieu Nguyen",
          "avatar_template": "/user_avatar/forums.foundationdb.org/ntrhieu89/{size}/587_2.png"
        },
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 13,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/questions-regarding-fdb-transaction-conflict-on-two-concurrent-transactions/2913/10",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      10020,
      10022,
      10029,
      10030,
      10050,
      10051,
      10059,
      10174,
      10175,
      10178
    ]
  },
  "timeline_lookup": [
    [
      1,
      1485
    ],
    [
      2,
      1484
    ],
    [
      5,
      1481
    ],
    [
      6,
      1480
    ],
    [
      7,
      1477
    ],
    [
      8,
      1456
    ],
    [
      10,
      1455
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "Questions regarding FDB transaction conflict on two concurrent transactions",
  "id": 2913,
  "title": "Questions regarding FDB transaction conflict on two concurrent transactions",
  "posts_count": 10,
  "created_at": "2021-09-28T06:26:34.642Z",
  "views": 2185,
  "reply_count": 5,
  "like_count": 3,
  "last_posted_at": "2021-10-28T08:17:02.264Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "questions-regarding-fdb-transaction-conflict-on-two-concurrent-transactions",
  "category_id": 7,
  "word_count": 2449,
  "deleted_at": null,
  "user_id": 550,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_2913",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 10,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 3,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "Optimizing a single large transaction ( 10,000 keys)",
      "id": 1961,
      "title": "Optimizing a single large transaction ( 10,000 keys)",
      "slug": "optimizing-a-single-large-transaction-10-000-keys",
      "posts_count": 12,
      "reply_count": 10,
      "highest_post_number": 12,
      "image_url": null,
      "created_at": "2020-02-17T13:36:55.355Z",
      "last_posted_at": "2020-02-24T11:30:42.854Z",
      "bumped": true,
      "bumped_at": "2020-02-24T11:30:42.854Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [
        "performance"
      ],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 2373,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 645,
            "username": "subramaniamr",
            "name": "Subramaniam R",
            "avatar_template": "/user_avatar/forums.foundationdb.org/subramaniamr/{size}/658_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        }
      ]
    },
    {
      "fancy_title": "A few design-pattern + check-my-understanding questions",
      "id": 1153,
      "title": "A few design-pattern + check-my-understanding questions",
      "slug": "a-few-design-pattern-check-my-understanding-questions",
      "posts_count": 10,
      "reply_count": 6,
      "highest_post_number": 10,
      "image_url": null,
      "created_at": "2019-02-19T15:18:58.329Z",
      "last_posted_at": "2019-02-21T19:51:53.686Z",
      "bumped": true,
      "bumped_at": "2019-02-21T19:51:53.686Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 2273,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 519,
            "username": "JamesThompson",
            "name": "James Thompson",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/j/c67d28/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 173,
            "username": "jkominek",
            "name": "Jay Kominek",
            "avatar_template": "/user_avatar/forums.foundationdb.org/jkominek/{size}/140_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "A precise test oracle for FoundationDB simulation workloads",
      "id": 289,
      "title": "A precise test oracle for FoundationDB simulation workloads",
      "slug": "a-precise-test-oracle-for-foundationdb-simulation-workloads",
      "posts_count": 11,
      "reply_count": 7,
      "highest_post_number": 11,
      "image_url": null,
      "created_at": "2018-04-27T14:04:16.394Z",
      "last_posted_at": "2018-04-30T00:17:47.601Z",
      "bumped": true,
      "bumped_at": "2018-04-30T00:20:48.970Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 1249,
      "category_id": 8,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 22,
            "username": "dave",
            "name": "David Scherer",
            "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 54,
            "username": "Evan",
            "name": "Evan Tschannen",
            "avatar_template": "/user_avatar/forums.foundationdb.org/evan/{size}/104_2.png",
            "moderator": true,
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Can I achieve linearizable read in the following way?",
      "id": 3540,
      "title": "Can I achieve linearizable read in the following way?",
      "slug": "can-i-achieve-linearizable-read-in-the-following-way",
      "posts_count": 6,
      "reply_count": 4,
      "highest_post_number": 6,
      "image_url": "https://global.discourse-cdn.com/foundationdb/optimized/2X/d/d7b1e124884a4f7d500d4464209890494803d51c_2_1024x206.png",
      "created_at": "2022-09-06T11:20:50.680Z",
      "last_posted_at": "2022-09-09T18:33:13.418Z",
      "bumped": true,
      "bumped_at": "2022-09-09T18:46:44.745Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 621,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 1150,
            "username": "zk-kiger",
            "name": "zk_kiger",
            "avatar_template": "/user_avatar/forums.foundationdb.org/zk-kiger/{size}/1408_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 14,
            "username": "andrew.noyes",
            "name": "",
            "avatar_template": "/user_avatar/forums.foundationdb.org/andrew.noyes/{size}/443_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Why Read Version is necessary for read-write transactions?",
      "id": 2386,
      "title": "Why Read Version is necessary for read-write transactions?",
      "slug": "why-read-version-is-necessary-for-read-write-transactions",
      "posts_count": 13,
      "reply_count": 10,
      "highest_post_number": 13,
      "image_url": null,
      "created_at": "2020-10-12T05:42:44.091Z",
      "last_posted_at": "2020-10-13T04:04:47.663Z",
      "bumped": true,
      "bumped_at": "2020-10-13T04:04:47.663Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 2050,
      "category_id": 8,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 805,
            "username": "roohitavaf",
            "name": "Mohammad Roohitavaf",
            "avatar_template": "/user_avatar/forums.foundationdb.org/roohitavaf/{size}/1026_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 13,
        "username": "alexmiller",
        "name": "Alex Miller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "post_count": 4,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      },
      {
        "id": 550,
        "username": "ntrhieu89",
        "name": "Hieu Nguyen",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ntrhieu89/{size}/587_2.png",
        "post_count": 4,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 12,
        "username": "ajbeamon",
        "name": "A.J. Beamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "admin": true,
        "trust_level": 4
      }
    ],
    "created_by": {
      "id": 550,
      "username": "ntrhieu89",
      "name": "Hieu Nguyen",
      "avatar_template": "/user_avatar/forums.foundationdb.org/ntrhieu89/{size}/587_2.png"
    },
    "last_poster": {
      "id": 13,
      "username": "alexmiller",
      "name": "Alex Miller",
      "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png"
    },
    "links": [
      {
        "url": "https://apple.github.io/foundationdb/developer-guide.html#snapshot-reads",
        "title": "Developer Guide \u2014 FoundationDB 6.3",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 16,
        "user_id": 550,
        "domain": "apple.github.io",
        "root_domain": "apple.github.io"
      },
      {
        "url": "https://www.foundationdb.org/files/fdb-paper.pdf",
        "title": null,
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 8,
        "user_id": 550,
        "domain": "www.foundationdb.org",
        "root_domain": "foundationdb.org"
      },
      {
        "url": "https://en.wikipedia.org/wiki/Snapshot_isolation",
        "title": "Snapshot isolation - Wikipedia",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 1,
        "user_id": 550,
        "domain": "en.wikipedia.org",
        "root_domain": "wikipedia.org"
      },
      {
        "url": "https://forums.foundationdb.org/t/can-i-achieve-linearizable-read-in-the-following-way/3540/3",
        "title": "Can I achieve linearizable read in the following way?",
        "internal": true,
        "attachment": false,
        "reflection": true,
        "clicks": 1,
        "user_id": 1150,
        "domain": "forums.foundationdb.org",
        "root_domain": "foundationdb.org"
      }
    ]
  },
  "bookmarks": []
}