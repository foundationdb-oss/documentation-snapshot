{
  "post_stream": {
    "posts": [
      {
        "id": 6760,
        "name": "",
        "username": "tuk",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/t/b5ac83/{size}.png",
        "created_at": "2020-04-20T14:55:39.340Z",
        "cooked": "<p>I have a 3 Node foundationdb test cluster running fdb 6.2.11 where I am observing fdbserver occasionally going Out Of Memory.</p>\n<p>The backtrace during the crash looks likes below from <code>10.196.76.47</code></p>\n<pre><code class=\"lang-auto\">TraceEvent::backtrace(std::string const&amp;) at ??:?\n (inlined by) std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) at /opt/rh/devtoolset-8/root/usr/include/c++/8/bits/basic_string.tcc:613\n (inlined by) std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, char const*) at /opt/rh/devtoolset-8/root/usr/include/c++/8/bits/basic_string.h:5958\n (inlined by) TraceEvent::backtrace(std::string const&amp;) at /opt/foundation/foundationdb/flow/Trace.cpp:938\nTraceEvent::~TraceEvent() at ??:?\n (inlined by) std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string() at /opt/rh/devtoolset-8/root/usr/include/c++/8/bits/basic_string.h:3631\n (inlined by) TraceEvent::~TraceEvent() at /opt/foundation/foundationdb/flow/Trace.cpp:947\ncriticalError at /opt/foundation/foundationdb/flow/Platform.cpp:2512\nplatform::outOfMemory() at /opt/foundation/foundationdb/flow/Platform.cpp:2501\noperator new(unsigned long) at ??:?\nArenaBlock::addUsed(int) at /opt/foundation/foundationdb/./flow/FastRef.h:75\n (inlined by) ArenaBlock::allocate(Reference&lt;ArenaBlock&gt;&amp;, int) at /opt/foundation/foundationdb/./flow/Arena.h:216\n (inlined by) operator new[](unsigned long, Arena&amp;) at /opt/foundation/foundationdb/./flow/Arena.h:337\nVectorRef&lt;unsigned char, (VecSerStrategy)0&gt;::reallocate(Arena&amp;, int) at /opt/foundation/foundationdb/./flow/flow.h:529\n (inlined by) VectorRef&lt;unsigned char, (VecSerStrategy)0&gt;::reserve(Arena&amp;, int) at /opt/foundation/foundationdb/./flow/Arena.h:1036\n (inlined by) commitMessages(TLogData*, Reference&lt;LogData&gt;, long, std::vector&lt;TagsAndMessage, std::allocator&lt;TagsAndMessage&gt; &gt; const&amp;) at /opt/foundation/foundationdb/fdbserver/TLogServer.actor.cpp:1091\nReference&lt;LogData&gt;::~Reference() at /opt/foundation/foundationdb/./flow/flow.h:529\n (inlined by) commitMessages(TLogData*, Reference&lt;LogData&gt;, long, Arena, StringRef) at /opt/foundation/foundationdb/fdbserver/TLogServer.actor.cpp:1171\nReference&lt;LogData&gt;::~Reference() at /opt/foundation/foundationdb/./flow/flow.h:529\n (inlined by) a_body1cont5 at /opt/foundation/foundationdb/fdbserver/TLogServer.actor.cpp:1766\n (inlined by) a_body1cont3break1 at /opt/foundation/foundationdb/.objs/fdbserver/TLogServer.actor.g.cpp:8330\n (inlined by) a_body1cont3loopBody1 at /opt/foundation/foundationdb/.objs/fdbserver/TLogServer.actor.g.cpp:8301\na_body1cont3loopHead1 at /opt/foundation/foundationdb/./flow/flow.h:529\n (inlined by) a_body1cont3 at /opt/foundation/foundationdb/.objs/fdbserver/TLogServer.actor.g.cpp:8159\n (inlined by) a_body1cont1 at /opt/foundation/foundationdb/.objs/fdbserver/TLogServer.actor.g.cpp:8109\na_body1when1 at /opt/foundation/foundationdb/./flow/flow.h:529\n (inlined by) a_body1 at /opt/foundation/foundationdb/.objs/fdbserver/TLogServer.actor.g.cpp:8066\n (inlined by) TLogCommitActor at /opt/foundation/foundationdb/.objs/fdbserver/TLogServer.actor.g.cpp:8494\n (inlined by) tLogCommit(TLogData* const&amp;, TLogCommitRequest const&amp;, Reference&lt;LogData&gt; const&amp;, PromiseStream&lt;Void&gt; const&amp;) at /opt/foundation/foundationdb/fdbserver/TLogServer.actor.cpp:1722\n(anonymous namespace)::ServeTLogInterfaceActorState&lt;(anonymous namespace)::ServeTLogInterfaceActor&gt;::a_body1loopBody1when4(TLogCommitRequest const&amp;, int) at /opt/foundation/foundationdb/./flow/flow.h:529\nReplyPromise&lt;TLogCommitReply&gt;::~ReplyPromise() at /opt/foundation/foundationdb/./flow/flow.h:529\n (inlined by) TLogCommitRequest::~TLogCommitRequest() at /opt/foundation/foundationdb/./fdbserver/TLogInterface.h:232\n (inlined by) fire at /opt/foundation/foundationdb/./flow/flow.h:1008\nvoid NotifiedQueue&lt;TLogCommitRequest&gt;::send&lt;TLogCommitRequest&gt;(TLogCommitRequest&amp;&amp;) at /opt/boost_1_67_0/boost/variant/detail/forced_return.hpp:31\n (inlined by) NetNotifiedQueue&lt;TLogCommitRequest&gt;::receive(ArenaObjectReader&amp;) at /opt/foundation/foundationdb/./fdbrpc/fdbrpc.h:253\nReference&lt;ArenaBlock&gt;::~Reference() at /opt/foundation/foundationdb/./flow/flow.h:529\n (inlined by) Arena::~Arena() at /opt/foundation/foundationdb/./flow/Arena.h:92\n (inlined by) ArenaObjectReader::~ArenaObjectReader() at /opt/foundation/foundationdb/./flow/ObjectSerializer.h:117\n (inlined by) a_body1cont1 at /opt/foundation/foundationdb/fdbrpc/FlowTransport.actor.cpp:651\nActorCallback&lt;(anonymous namespace)::DeliverActor, 0, Void&gt;::fire(Void const&amp;) at /opt/foundation/foundationdb/./flow/flow.h:529\nvoid SAV&lt;Void&gt;::send&lt;Void&gt;(Void&amp;&amp;) at /opt/boost_1_67_0/boost/variant/detail/forced_return.hpp:31\nPromise&lt;Void&gt;::~Promise() at /opt/foundation/foundationdb/flow/TDMetric.actor.h:1269\n (inlined by) N2::PromiseTask::~PromiseTask() at /opt/foundation/foundationdb/flow/Net2.actor.cpp:475\n (inlined by) N2::PromiseTask::operator()() at /opt/foundation/foundationdb/flow/Net2.actor.cpp:482\n (inlined by) N2::Net2::run() at /opt/foundation/foundationdb/flow/Net2.actor.cpp:657\nmain at /opt/rh/devtoolset-8/root/usr/include/c++/8/bits/basic_string.h:3346\n</code></pre>\n<p>The trace files of the fdbserver from 10.196.76.47 is <a href=\"https://gist.githubusercontent.com/dmannaarkin/74c02a2756085f62ce64f8250a2a3fd9/raw/71807cbb35981f041ce666d60af85db4719cb177/trace.10.196.76.47.4500.1586858813.rNKik3.1.46.xml\" rel=\"nofollow noopener\">here</a>.<br>\nCluster Details is like below</p>\n<pre><code class=\"lang-auto\">Using cluster file `/etc/foundationdb/fdb.cluster'.\n\nConfiguration:\n  Redundancy mode        - double\n  Storage engine         - ssd-2\n  Coordinators           - 3\n  Desired Proxies        - 1\n  Desired Logs           - 2\n\nCluster:\n  FoundationDB processes - 6\n  Zones                  - 3\n  Machines               - 3\n  Memory availability    - 7.5 GB per process on machine with least available\n  Retransmissions rate   - 1 Hz\n  Fault Tolerance        - 1 machine\n  Server time            - 04/20/20 14:53:54\n\nData:\n  Replication health     - Healthy\n  Moving data            - 0.000 GB\n  Sum of key-value sizes - 448.312 GB\n  Disk space used        - 1.594 TB\n\nOperating space:\n  Storage server         - 469.4 GB free on most full server\n  Log server             - 333.7 GB free on most full server\n\nWorkload:\n  Read rate              - 1861 Hz\n  Write rate             - 578 Hz\n  Transactions started   - 778 Hz\n  Transactions committed - 94 Hz\n  Conflict rate          - 0 Hz\n\nBackup and DR:\n  Running backups        - 0\n  Running DRs            - 0\n\nProcess performance details:\n  10.196.76.47:4500      ( 26% cpu; 14% machine; 0.062 Gbps; 29% disk IO; 6.9 GB / 11.0 GB RAM  )\n  10.196.76.47:4501      (  1% cpu; 14% machine; 0.062 Gbps; 29% disk IO; 0.2 GB / 11.0 GB RAM  )\n  10.196.76.49:4500      ( 14% cpu; 15% machine; 0.067 Gbps; 22% disk IO; 6.8 GB / 7.5 GB RAM  )\n  10.196.76.49:4501      ( 16% cpu; 15% machine; 0.067 Gbps; 18% disk IO; 0.4 GB / 7.5 GB RAM  )\n  10.196.76.56:4500      ( 31% cpu; 18% machine; 0.065 Gbps; 39% disk IO; 6.8 GB / 10.4 GB RAM  )\n  10.196.76.56:4501      (  2% cpu; 18% machine; 0.065 Gbps; 44% disk IO; 0.2 GB / 10.4 GB RAM  )\n\nCoordination servers:\n  10.196.76.47:4500  (reachable)\n  10.196.76.49:4501  (reachable)\n  10.196.76.56:4500  (reachable)\n\nClient time: 04/20/20 14:53:54\n</code></pre>\n<p>Just before the crash, I am observing few Slow Tasks like below</p>\n<pre><code class=\"lang-auto\">&lt;Event Severity=\"30\" Time=\"1587096940.191483\" Type=\"SlowTask\" ID=\"0000000000000000\" TaskID=\"20000\" MClocks=\"530.525\" Duration=\"0.241148\" SampleRate=\"1\" NumYields=\"0\" Machine=\"10.196.76.47:4500\" LogGroup=\"default\" Roles=\"CD,SS,TL\" /&gt;\n&lt;Event Severity=\"30\" Time=\"1587097227.580954\" Type=\"SlowTask\" ID=\"0000000000000000\" TaskID=\"20000\" MClocks=\"514.249\" Duration=\"0.23375\" SampleRate=\"1\" NumYields=\"0\" Machine=\"10.196.76.47:4500\" LogGroup=\"default\" Roles=\"CD,SS,TL\" /&gt;\n&lt;Event Severity=\"30\" Time=\"1587097279.286559\" Type=\"SlowTask\" ID=\"0000000000000000\" TaskID=\"20000\" MClocks=\"882.94\" Duration=\"0.401337\" SampleRate=\"1\" NumYields=\"2\" Machine=\"10.196.76.47:4500\" LogGroup=\"default\" Roles=\"CD,SS,TL\" /&gt;\n</code></pre>\n<p>I am observing the similar crash in <code>10.196.76.49</code> server also. The trace file is <a href=\"https://gist.githubusercontent.com/dmannaarkin/de7a871190b8e892c3d7b0ccfb5740b4/raw/e66861522cbe4a4ee0f845492181505a6c8a1978/trace.10.196.76.49.4500.1587060349.uHpGMu.0.6.xml\" rel=\"nofollow noopener\">here</a>.</p>\n<p>Can someone help me understand the backtrace above and what could be happening here?</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2020-04-20T14:55:39.340Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 59,
        "reads": 42,
        "readers_count": 41,
        "score": 303.4,
        "yours": false,
        "topic_id": 2080,
        "topic_slug": "foundationdb-6-2-fdbserver-going-out-of-memory",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://gist.githubusercontent.com/dmannaarkin/74c02a2756085f62ce64f8250a2a3fd9/raw/71807cbb35981f041ce666d60af85db4719cb177/trace.10.196.76.47.4500.1586858813.rNKik3.1.46.xml",
            "internal": false,
            "reflection": false,
            "clicks": 2
          },
          {
            "url": "https://gist.githubusercontent.com/dmannaarkin/de7a871190b8e892c3d7b0ccfb5740b4/raw/e66861522cbe4a4ee0f845492181505a6c8a1978/trace.10.196.76.49.4500.1587060349.uHpGMu.0.6.xml",
            "internal": false,
            "reflection": false,
            "clicks": 2
          },
          {
            "url": "https://forums.foundationdb.org/t/how-fdb-react-to-too-many-connected-client/3480/3",
            "internal": true,
            "reflection": true,
            "title": "How FDB react to too many connected client",
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 714,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/foundationdb-6-2-fdbserver-going-out-of-memory/2080/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 6780,
        "name": "Alex Miller",
        "username": "alexmiller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "created_at": "2020-04-20T20:30:15.797Z",
        "cooked": "<p>At higher load, our default settings assume that each role has 8GB of memory, because generally by the time that people are running full load against a cluster, it\u2019s not a small/dev cluster.  Maybe we should re-evaluate those default settings, but this is basically either that you need to give your processes more memory (and set <code>--memory</code> correspondingly), or run more processes so that you can separate your Transaction Log and Storage Server processes.</p>\n<p>Alternatively, It\u2019s odd that your :4500 processes are all using ~6.8GB of RAM, and your :4501 process are nearly unused.  Do you know why that is?  How are these process configured?  Having the load spread across processes more might also fix this issue.</p>\n<p>For the SlowTask, do you see any Net2SlowTaskTrace lines?  Those would have backtraces, telling you what the slow task actually was.</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2020-04-20T20:33:59.766Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 39,
        "readers_count": 38,
        "score": 7.8,
        "yours": false,
        "topic_id": 2080,
        "topic_slug": "foundationdb-6-2-fdbserver-going-out-of-memory",
        "display_username": "Alex Miller",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 13,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/foundationdb-6-2-fdbserver-going-out-of-memory/2080/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6787,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2020-04-20T20:53:25.799Z",
        "cooked": "<p>Looking at your trace file, it appears that at the start of that file the process was already using nearly 8GB.  The <code>MemoryMetrics</code> event, which reports memory from some of the known memory pools, is able to account for about 6GB of that, although it\u2019s hard to tell more precisely where that has gone without some of the traces from earlier logs.</p>\n<p>Are you by any changing doing any reverse range reads in your workload? There\u2019s a known memory issue with those that is fixed in newer releases (try 6.2.19). There are also a couple other places that can build up memory if you saturate the cluster in certain ways, some of which have been fixed in newer releases. Is your workload ever saturating?</p>\n<p>Increasing the memory available could certainly help if the amount of memory needed is bounded, but if we need to look more into it, then one option to do so is to look at a couple trace events <code>GetMagazineSample</code> and <code>HugeArenaSample</code>. It\u2019s useful to look at these events being logged as the memory is growing, so it would probably need to cover a time prior to the trace log that you posted. Each includes a backtrace of the allocation that can be symbolicated if you have the debug symbols (which I think at the moment aren\u2019t published, so it requires doing a build or submitting a trace file to us, etc.).</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2020-04-20T20:53:25.799Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 5,
        "reads": 39,
        "readers_count": 38,
        "score": 32.8,
        "yours": false,
        "topic_id": 2080,
        "topic_slug": "foundationdb-6-2-fdbserver-going-out-of-memory",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/foundationdb-6-2-fdbserver-going-out-of-memory/2080/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6790,
        "name": "",
        "username": "tuk",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/t/b5ac83/{size}.png",
        "created_at": "2020-04-21T05:39:45.769Z",
        "cooked": "<p>Thanks <a class=\"mention\" href=\"/u/alexmiller\">@alexmiller</a> and <a class=\"mention\" href=\"/u/ajbeamon\">@ajbeamon</a> for replying.</p>\n<p><a class=\"mention\" href=\"/u/alexmiller\">@alexmiller</a></p>\n<blockquote>\n<p>Alternatively, It\u2019s odd that your :4500 processes are all using ~6.8GB of RAM, and your :4501 process are nearly unused. Do you know why that is? How are these process configured?</p>\n</blockquote>\n<p>4501 is configured as stateless.</p>\n<pre><code class=\"lang-auto\">[fdbserver.4500]\n\n[fdbserver.4501]\nclass = stateless\n</code></pre>\n<blockquote>\n<p>For the <code>SlowTask</code>, do you see any <code>Net2SlowTaskTrace</code> lines? Those would have backtraces, telling you what the slow task actually was.</p>\n</blockquote>\n<p>Yes, I see <code>Net2SlowTask</code>. Traces look like below.</p>\n<pre><code class=\"lang-auto\">?? ??:0\n?? ??:0\nio_submit at /opt/rh/devtoolset-8/root/usr/include/c++/8/bits/stl_vector.h:827\n (inlined by) AsyncFileKAIO::launch() at /opt/foundation/foundationdb/fdbrpc/AsyncFileKAIO.actor.h:394\nN2::Net2::run() at /opt/foundation/foundationdb/flow/TDMetric.actor.h:1269\nmain at /opt/rh/devtoolset-8/root/usr/include/c++/8/bits/basic_string.h:3346\n?? ??:0\n_start at ??:?\n</code></pre>\n<p>Any pointers on when io_submit can become slow? Is it waiting on some other synchronous operations? I have placed the trace file <a href=\"https://gist.github.com/dmannaarkin/32e9240131ddc621cb5d75277fb8524f/raw/62cf7932afb4ad1d82bb29168b74fe3fa7f3cf20/trace.10.196.76.47.4500.1587097598.2yzt8f.0.1.xml\" rel=\"noopener nofollow ugc\">here</a>.</p>\n<p><a class=\"mention\" href=\"/u/ajbeamon\">@ajbeamon</a></p>\n<blockquote>\n<p>Is your workload ever saturating?</p>\n</blockquote>\n<p>Our workload is not ever saturating.</p>\n<blockquote>\n<p>Increasing the memory available could certainly help if the amount of memory needed is bounded, but if we need to look more into it, then one option to do so is to look at a couple trace events  <code>GetMagazineSample</code>  and  <code>HugeArenaSample</code> . It\u2019s useful to look at these events being logged as the memory is growing</p>\n</blockquote>\n<p>Traces with <code>GetMagazineSample</code> looks like below-</p>\n<pre><code class=\"lang-auto\">TraceEvent::backtrace(std::string const&amp;) at ??:?\n (inlined by) std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) at /opt/rh/devtoolset-8/root/usr/include/c++/8/bits/basic_string.tcc:613\n (inlined by) std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, char const*) at /opt/rh/devtoolset-8/root/usr/include/c++/8/bits/basic_string.h:5958\n (inlined by) TraceEvent::backtrace(std::string const&amp;) at /opt/foundation/foundationdb/flow/Trace.cpp:938\nstd::string::_M_rep() const at /opt/rh/devtoolset-8/root/usr/include/c++/8/bits/basic_string.h:3313\n (inlined by) std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string() at /opt/rh/devtoolset-8/root/usr/include/c++/8/bits/basic_string.h:3631\n (inlined by) FastAllocator&lt;256&gt;::getMagazine() at /opt/foundation/foundationdb/flow/FastAlloc.cpp:449\nFastAllocator&lt;256&gt;::allocate() at /opt/foundation/foundationdb/flow/FastAlloc.cpp:272\nFuture&lt;TLogPeekReply&gt; sendCanceler&lt;TLogPeekReply&gt;(ReplyPromise&lt;TLogPeekReply&gt; const&amp;, ReliablePacket* const&amp;, Endpoint const&amp;) at ??:?\n (inlined by) SendCancelerActorState at /opt/foundation/foundationdb/fdbrpc/genericactors.actor.h:202\n (inlined by) SendCancelerActor at /opt/foundation/foundationdb/fdbrpc/genericactors.actor.g.h:2714\n (inlined by) Future&lt;TLogPeekReply&gt; sendCanceler&lt;TLogPeekReply&gt;(ReplyPromise&lt;TLogPeekReply&gt; const&amp;, ReliablePacket* const&amp;, Endpoint const&amp;) at /opt/foundation/foundationdb/fdbrpc/genericactors.actor.h:202\nFuture&lt;decltype (((((getReplyPromise((fake&lt;TLogPeekRequest&gt;)())).getFuture)()).getValue)())&gt; RequestStream&lt;TLogPeekRequest&gt;::getReply&lt;TLogPeekRequest&gt;(TLogPeekRequest const&amp;) const at ??:?\n (inlined by) Future&lt;decltype (((((getReplyPromise((fake&lt;TLogPeekRequest&gt;)())).getFuture)()).getValue)())&gt; RequestStream&lt;TLogPeekRequest&gt;::getReply&lt;TLogPeekRequest&gt;(TLogPeekRequest const&amp;) const at /opt/foundation/foundationdb/./fdbrpc/fdbrpc.h:286\n(anonymous namespace)::ServerPeekGetMoreActorState&lt;(anonymous namespace)::ServerPeekGetMoreActor&gt;::a_body1cont1loopBody1(int) at /opt/foundation/foundationdb/./flow/flow.h:529\na_body1cont1loopHead1 at /opt/foundation/foundationdb/./flow/flow.h:529\n (inlined by) a_body1cont1 at /opt/foundation/foundationdb/.objs/fdbserver/LogSystemPeekCursor.actor.g.cpp:689\n (inlined by) a_body1 at /opt/foundation/foundationdb/.objs/fdbserver/LogSystemPeekCursor.actor.g.cpp:664\n (inlined by) ServerPeekGetMoreActor at /opt/foundation/foundationdb/.objs/fdbserver/LogSystemPeekCursor.actor.g.cpp:934\n (inlined by) serverPeekGetMore(ILogSystem::ServerPeekCursor* const&amp;, TaskPriority const&amp;) at /opt/foundation/foundationdb/fdbserver/LogSystemPeekCursor.actor.cpp:209\nILogSystem::ServerPeekCursor::getMore(TaskPriority) at /opt/foundation/foundationdb/./flow/flow.h:529\nFuture&lt;Void&gt;::Future(Future&lt;Void&gt; const&amp;) at /opt/foundation/foundationdb/./flow/serialize.h:748\n (inlined by) StrictFuture&lt;Void&gt;::StrictFuture(Future&lt;Void&gt; const&amp;) at /opt/foundation/foundationdb/./flow/flow.h:765\n (inlined by) a_body1cont3loopBody1 at /opt/foundation/foundationdb/fdbserver/storageserver.actor.cpp:2588\na_body1cont3loopHead1 at /opt/foundation/foundationdb/./flow/serialize.h:748\n (inlined by) a_body1cont3 at /opt/foundation/foundationdb/.objs/fdbserver/storageserver.actor.g.cpp:8075\n (inlined by) a_body1cont2break1 at /opt/foundation/foundationdb/.objs/fdbserver/storageserver.actor.g.cpp:8111\n (inlined by) a_body1cont2loopBody1 at /opt/foundation/foundationdb/.objs/fdbserver/storageserver.actor.g.cpp:8092\na_body1cont2loopHead1 at /opt/foundation/foundationdb/./flow/serialize.h:748\n (inlined by) a_body1cont2 at /opt/foundation/foundationdb/.objs/fdbserver/storageserver.actor.g.cpp:7966\n (inlined by) a_body1break1 at /opt/foundation/foundationdb/.objs/fdbserver/storageserver.actor.g.cpp:8014\n (inlined by) a_body1loopBody1 at /opt/foundation/foundationdb/.objs/fdbserver/storageserver.actor.g.cpp:7983\na_body1loopHead1 at /opt/foundation/foundationdb/./flow/serialize.h:748\n (inlined by) a_body1 at /opt/foundation/foundationdb/.objs/fdbserver/storageserver.actor.g.cpp:7891\n (inlined by) UpdateActor at /opt/foundation/foundationdb/.objs/fdbserver/storageserver.actor.g.cpp:9167\n (inlined by) update(StorageServer* const&amp;, bool* const&amp;) at /opt/foundation/foundationdb/fdbserver/storageserver.actor.cpp:2561\na_body1loopBody1when11 at /opt/foundation/foundationdb/./flow/serialize.h:748\n (inlined by) a_callback_fire at /opt/foundation/foundationdb/.objs/fdbserver/storageserver.actor.g.cpp:13589\n (inlined by) fire at /opt/foundation/foundationdb/./flow/flow.h:998\nSAV&lt;Void&gt;::finishSendAndDelPromiseRef() at /opt/foundation/foundationdb/./flow/flow.h:478\n(anonymous namespace)::UpdateActorState&lt;(anonymous namespace)::UpdateActor&gt;::a_body1cont9loopBody1(int) at /opt/foundation/foundationdb/./flow/serialize.h:748\na_body1cont9loopHead1 at /opt/foundation/foundationdb/./flow/serialize.h:748\n (inlined by) a_body1cont9 at /opt/foundation/foundationdb/.objs/fdbserver/storageserver.actor.g.cpp:8574\n (inlined by) a_body1cont7break1 at /opt/foundation/foundationdb/.objs/fdbserver/storageserver.actor.g.cpp:8607\n (inlined by) a_body1cont7loopBody1 at /opt/foundation/foundationdb/.objs/fdbserver/storageserver.actor.g.cpp:8591\n (inlined by) a_body1cont7loopHead1 at /opt/foundation/foundationdb/.objs/fdbserver/storageserver.actor.g.cpp:8581\n (inlined by) a_body1cont7 at /opt/foundation/foundationdb/.objs/fdbserver/storageserver.actor.g.cpp:8387\n (inlined by) a_body1cont5break1 at /opt/foundation/foundationdb/.objs/fdbserver/storageserver.actor.g.cpp:8500\n (inlined by) a_body1cont5loopBody1cont1 at /opt/foundation/foundationdb/.objs/fdbserver/storageserver.actor.g.cpp:8516\na_body1cont5loopBody1when1 at /opt/foundation/foundationdb/./flow/serialize.h:748\n (inlined by) a_body1cont5loopBody1 at /opt/foundation/foundationdb/.objs/fdbserver/storageserver.actor.g.cpp:8488\na_body1cont5loopHead1 at /opt/foundation/foundationdb/./flow/serialize.h:748\n (inlined by) a_body1cont5 at /opt/foundation/foundationdb/.objs/fdbserver/storageserver.actor.g.cpp:8310\na_body1cont4when1 at /opt/foundation/foundationdb/./flow/serialize.h:748\n (inlined by) a_body1cont4 at /opt/foundation/foundationdb/.objs/fdbserver/storageserver.actor.g.cpp:8192\n (inlined by) a_body1cont3break1 at /opt/foundation/foundationdb/.objs/fdbserver/storageserver.actor.g.cpp:8227\n (inlined by) a_body1cont3loopBody1cont1 at /opt/foundation/foundationdb/.objs/fdbserver/storageserver.actor.g.cpp:8243\n (inlined by) a_body1cont3loopBody1when1 at /opt/foundation/foundationdb/.objs/fdbserver/storageserver.actor.g.cpp:8251\n (inlined by) a_callback_fire at /opt/foundation/foundationdb/.objs/fdbserver/storageserver.actor.g.cpp:8265\n (inlined by) fire at /opt/foundation/foundationdb/./flow/flow.h:998\nSAV&lt;Void&gt;::finishSendAndDelPromiseRef() at /opt/foundation/foundationdb/./flow/flow.h:478\n(anonymous namespace)::ServerPeekGetMoreActorState&lt;(anonymous namespace)::ServerPeekGetMoreActor&gt;::a_body1cont1loopBody1when1(TLogPeekReply const&amp;, int) [clone .isra.930] at /opt/foundation/foundationdb/./flow/flow.h:529\nReference&lt;ArenaBlock&gt;::~Reference() at /opt/foundation/foundationdb/./flow/flow.h:529\n (inlined by) Arena::~Arena() at /opt/foundation/foundationdb/./flow/Arena.h:92\n (inlined by) TLogPeekReply::~TLogPeekReply() at /opt/foundation/foundationdb/./fdbserver/TLogInterface.h:149\n (inlined by) fire at /opt/foundation/foundationdb/./flow/flow.h:998\nSAV&lt;TLogPeekReply&gt;::finishSendAndDelPromiseRef() at /opt/foundation/foundationdb/./flow/flow.h:529\n (inlined by) a_body1cont2 at /opt/foundation/foundationdb/flow/genericactors.actor.g.h:11349\n (inlined by) a_body1when1 at /opt/foundation/foundationdb/flow/genericactors.actor.g.h:11356\n (inlined by) a_callback_fire at /opt/foundation/foundationdb/flow/genericactors.actor.g.h:11370\n (inlined by) fire at /opt/foundation/foundationdb/./flow/flow.h:998\nSAV&lt;TLogPeekReply&gt;::finishSendAndDelPromiseRef() at /opt/foundation/foundationdb/./flow/flow.h:529\n (inlined by) a_body1cont2 at /opt/foundation/foundationdb/fdbrpc/genericactors.actor.g.h:2648\n (inlined by) a_body1when1 at /opt/foundation/foundationdb/fdbrpc/genericactors.actor.g.h:2655\n (inlined by) a_callback_fire at /opt/foundation/foundationdb/fdbrpc/genericactors.actor.g.h:2669\n (inlined by) fire at /opt/foundation/foundationdb/./flow/flow.h:998\nSAV&lt;TLogPeekReply&gt;::finishSendAndDelPromiseRef() at /opt/boost_1_67_0/boost/variant/detail/forced_return.hpp:31\n (inlined by) void SAV&lt;TLogPeekReply&gt;::sendAndDelPromiseRef&lt;TLogPeekReply&amp;&gt;(TLogPeekReply&amp;) at /opt/foundation/foundationdb/./flow/flow.h:472\n (inlined by) NetSAV&lt;TLogPeekReply&gt;::receive(ArenaObjectReader&amp;) at /opt/foundation/foundationdb/./fdbrpc/fdbrpc.h:111\nReference&lt;ArenaBlock&gt;::~Reference() at /opt/foundation/foundationdb/./flow/flow.h:529\n (inlined by) Arena::~Arena() at /opt/foundation/foundationdb/./flow/Arena.h:92\n (inlined by) ArenaObjectReader::~ArenaObjectReader() at /opt/foundation/foundationdb/./flow/ObjectSerializer.h:117\n (inlined by) a_body1cont1 at /opt/foundation/foundationdb/fdbrpc/FlowTransport.actor.cpp:651\nActorCallback&lt;(anonymous namespace)::DeliverActor, 0, Void&gt;::fire(Void const&amp;) at /opt/foundation/foundationdb/./flow/flow.h:529\nvoid SAV&lt;Void&gt;::send&lt;Void&gt;(Void&amp;&amp;) at /opt/boost_1_67_0/boost/variant/detail/forced_return.hpp:31\nPromise&lt;Void&gt;::~Promise() at /opt/foundation/foundationdb/flow/TDMetric.actor.h:1269\n (inlined by) N2::PromiseTask::~PromiseTask() at /opt/foundation/foundationdb/flow/Net2.actor.cpp:475\n (inlined by) N2::PromiseTask::operator()() at /opt/foundation/foundationdb/flow/Net2.actor.cpp:482\n (inlined by) N2::Net2::run() at /opt/foundation/foundationdb/flow/Net2.actor.cpp:657\nmain at /opt/rh/devtoolset-8/root/usr/include/c++/8/bits/basic_string.h:3346\n?? ??\n</code></pre>\n<p>Traces with <code>HugeArenaSample</code></p>\n<pre><code class=\"lang-auto\"> (inlined by) std::map&lt;std::string, std::pair&lt;int, int&gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::pair&lt;int, int&gt; &gt; &gt; &gt;::lower_bound(std::string const&amp;) at /opt/rh/devtoolset-8/root/usr/include/c++/8/bits/stl_map.h:1240\n (inlined by) std::map&lt;std::string, std::pair&lt;int, int&gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::pair&lt;int, int&gt; &gt; &gt; &gt;::operator[](std::string&amp;&amp;) at /opt/rh/devtoolset-8/root/usr/include/c++/8/bits/stl_map.h:515\n (inlined by) hugeArenaSample(int) at /opt/foundation/foundationdb/flow/FastAlloc.cpp:92\nstd::__atomic_base&lt;long&gt;::fetch_add(long, std::memory_order) at /opt/foundation/foundationdb/./flow/Arena.h:262\n (inlined by) ArenaBlock::create(int, Reference&lt;ArenaBlock&gt;&amp;) at /opt/foundation/foundationdb/./flow/Arena.h:262\nArenaBlock::addUsed(int) at /opt/foundation/foundationdb/./flow/FastRef.h:75\n (inlined by) ArenaBlock::allocate(Reference&lt;ArenaBlock&gt;&amp;, int) at /opt/foundation/foundationdb/./flow/Arena.h:216\n (inlined by) operator new[](unsigned long, Arena&amp;) at /opt/foundation/foundationdb/./flow/Arena.h:337\nVectorRef&lt;KeyValueRef, (VecSerStrategy)0&gt;::reallocate(Arena&amp;, int) at /opt/foundation/foundationdb/./flow/flow.h:529\n (inlined by) VectorRef&lt;KeyValueRef, (VecSerStrategy)0&gt;::push_back(Arena&amp;, KeyValueRef const&amp;) at /opt/foundation/foundationdb/./flow/Arena.h:985\n (inlined by) RawCursor::getRange(KeyRangeRef, int, int) at /opt/foundation/foundationdb/fdbserver/KeyValueStoreSQLite.actor.cpp:1105\nKeyValueStoreSQLite::Reader::action(KeyValueStoreSQLite::Reader::ReadRangeAction&amp;) at /opt/foundation/foundationdb/./flow/flow.h:529\n (inlined by) TypedAction&lt;KeyValueStoreSQLite::Reader, KeyValueStoreSQLite::Reader::ReadRangeAction&gt;::operator()(IThreadPoolReceiver*) at /opt/foundation/foundationdb/./flow/IThreadPool.h:74\nyield(TaskPriority) at /opt/foundation/foundationdb/./flow/flow.h:1018\n (inlined by) WorkPool&lt;Coroutine, ThreadUnsafeSpinLock, true&gt;::Worker::run() at /opt/foundation/foundationdb/fdbserver/CoroFlow.actor.cpp:151\nCoroutine::wrapRun() at /opt/foundation/foundationdb/./flow/flow.h:629\n (inlined by) Coroutine::entry(void*) at /opt/foundation/foundationdb/fdbserver/CoroFlow.actor.cpp:89\nCoro_StartWithArg at /opt/foundation/foundationdb/fdbrpc/libcoroutine/Coro.c:277\n?? ??\n</code></pre>\n<p>It is the same <a href=\"https://gist.github.com/dmannaarkin/32e9240131ddc621cb5d75277fb8524f/raw/62cf7932afb4ad1d82bb29168b74fe3fa7f3cf20/trace.10.196.76.47.4500.1587097598.2yzt8f.0.1.xml\" rel=\"noopener nofollow ugc\">trace file</a> which I posted above in this reply.</p>\n<p>I will be upgrading this cluster to the latest 6.2.19 end of this week. Before that, I am trying to do understand this a bit more what is making the cluster land up in this situation.</p>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2020-04-21T13:31:21.724Z",
        "reply_count": 2,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 39,
        "readers_count": 38,
        "score": 17.8,
        "yours": false,
        "topic_id": 2080,
        "topic_slug": "foundationdb-6-2-fdbserver-going-out-of-memory",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://gist.github.com/dmannaarkin/32e9240131ddc621cb5d75277fb8524f/raw/62cf7932afb4ad1d82bb29168b74fe3fa7f3cf20/trace.10.196.76.47.4500.1587097598.2yzt8f.0.1.xml",
            "internal": false,
            "reflection": false,
            "clicks": 1
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 714,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/foundationdb-6-2-fdbserver-going-out-of-memory/2080/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6793,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2020-04-21T13:59:15.473Z",
        "cooked": "<p>I did see these samples in the trace file, but because the memory used at the start of this file is already very large, I don\u2019t know that we can determine much from them. What we\u2019d really want is to have samples from when the memory is really growing so we could see where it\u2019s all gone. For that, we\u2019d need earlier trace files in the run that show change in memory between the first and last <code>ProcessMetrics</code> events.</p>",
        "post_number": 5,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2020-04-21T13:59:15.473Z",
        "reply_count": 1,
        "reply_to_post_number": 4,
        "quote_count": 0,
        "incoming_link_count": 2,
        "reads": 33,
        "readers_count": 32,
        "score": 21.6,
        "yours": false,
        "topic_id": 2080,
        "topic_slug": "foundationdb-6-2-fdbserver-going-out-of-memory",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 714,
          "username": "tuk",
          "name": "",
          "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/t/b5ac83/{size}.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/foundationdb-6-2-fdbserver-going-out-of-memory/2080/5",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6794,
        "name": "",
        "username": "tuk",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/t/b5ac83/{size}.png",
        "created_at": "2020-04-21T19:00:41.176Z",
        "cooked": "<p><a class=\"mention\" href=\"/u/ajbeamon\">@ajbeamon</a> - This is a <a href=\"https://gist.github.com/dmannaarkin/e0d533873e923b40254ac2e14e48d8ec\" rel=\"nofollow noopener\">trace</a> file from 10.196.76.47 where I can see the memory jumped from ~2.5 GB to ~ 6.44 GB .</p>\n<p>This is a <a href=\"https://gist.githubusercontent.com/dmannaarkin/fb4c3737b9a9b3136dbe96a9ef230125/raw/3e0cf0a996da063411313e31ce6554dd787a99e4/trace.10.196.76.49.4500.1587097268.p4D6SB.0.1.xml\" rel=\"nofollow noopener\">trace</a> file from another node, 10.196.76.49 in the same cluster which also went OutOfMemory , here the  memory went from ~1.9 GB to 7 GB.</p>",
        "post_number": 6,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2020-04-21T19:03:42.415Z",
        "reply_count": 1,
        "reply_to_post_number": 5,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 34,
        "readers_count": 33,
        "score": 11.8,
        "yours": false,
        "topic_id": 2080,
        "topic_slug": "foundationdb-6-2-fdbserver-going-out-of-memory",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://gist.github.com/dmannaarkin/e0d533873e923b40254ac2e14e48d8ec",
            "internal": false,
            "reflection": false,
            "title": "P1 Memory Increase \u00b7 GitHub",
            "clicks": 1
          },
          {
            "url": "https://gist.githubusercontent.com/dmannaarkin/fb4c3737b9a9b3136dbe96a9ef230125/raw/3e0cf0a996da063411313e31ce6554dd787a99e4/trace.10.196.76.49.4500.1587097268.p4D6SB.0.1.xml",
            "internal": false,
            "reflection": false,
            "clicks": 1
          }
        ],
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 12,
          "username": "ajbeamon",
          "name": "A.J. Beamon",
          "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 714,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/foundationdb-6-2-fdbserver-going-out-of-memory/2080/6",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6802,
        "name": "Alex Miller",
        "username": "alexmiller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "created_at": "2020-04-22T03:22:38.313Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"tuk\" data-post=\"4\" data-topic=\"2080\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/t/b5ac83/48.png\" class=\"avatar\"> tuk:</div>\n<blockquote>\n<p>Any pointers on when io_submit can become slow? Is it waiting on some other synchronous operations? I have placed the trace file <a href=\"https://gist.github.com/dmannaarkin/32e9240131ddc621cb5d75277fb8524f/raw/62cf7932afb4ad1d82bb29168b74fe3fa7f3cf20/trace.10.196.76.47.4500.1587097598.2yzt8f.0.1.xml\">here</a>.</p>\n</blockquote>\n</aside>\n<p><code>io_submit()</code> is KAIO, which is the Linux Kernel\u2019s async IO support.  If <code>io_submit()</code> is blocking for 250ms-400ms for you.  That would indicate that there\u2019s something very strange going on between FDB and your hardware.  What version of Linux are you running?  What filesystem?  Which Distro?  What environment are you running FDB in?  (Bare metal? Cloud?  Which cloud?)</p>\n<p>I think we\u2019ve previously seen <code>io_submit()</code> start to have a bit of noticeable latency during high IO workloads, but I don\u2019t recall seeing anything to this degree.  You could also try running with <code>--knob_disable_posix_kernel_aio=1</code> to use a threadpool for async IO instead.</p>",
        "post_number": 7,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2020-04-22T03:23:02.077Z",
        "reply_count": 0,
        "reply_to_post_number": 4,
        "quote_count": 1,
        "incoming_link_count": 5,
        "reads": 36,
        "readers_count": 35,
        "score": 32.2,
        "yours": false,
        "topic_id": 2080,
        "topic_slug": "foundationdb-6-2-fdbserver-going-out-of-memory",
        "display_username": "Alex Miller",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 13,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/foundationdb-6-2-fdbserver-going-out-of-memory/2080/7",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6815,
        "name": "",
        "username": "tuk",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/t/b5ac83/{size}.png",
        "created_at": "2020-04-22T19:22:37.769Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"tuk\" data-post=\"6\" data-topic=\"2080\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/t/b5ac83/48.png\" class=\"avatar\"> tuk:</div>\n<blockquote>\n<p>This is a <a href=\"https://gist.github.com/dmannaarkin/e0d533873e923b40254ac2e14e48d8ec\" rel=\"noopener nofollow ugc\">trace</a> file from 10.196.76.47 where I can see the memory jumped from ~2.5 GB to ~ 6.44 GB .</p>\n<p>This is a <a href=\"https://gist.githubusercontent.com/dmannaarkin/fb4c3737b9a9b3136dbe96a9ef230125/raw/3e0cf0a996da063411313e31ce6554dd787a99e4/trace.10.196.76.49.4500.1587097268.p4D6SB.0.1.xml\" rel=\"noopener nofollow ugc\">trace </a> file from another node, 10.196.76.49 in the same cluster which also went OutOfMemory , here the memory went from ~1.9 GB to 7 GB.</p>\n</blockquote>\n</aside>\n<p><a class=\"mention\" href=\"/u/ajbeamon\">@ajbeamon</a> - Looking at the <code>GetMagazineSample</code> trace from 10.196.76.47 when the memory jumped from ~2.44 GB to ~6.8 GB. The below backtraces to be more common during this period.</p>\n<pre><code class=\"lang-auto\">TraceEvent::backtrace(std::string const&amp;) at ??:?\n (inlined by) std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) at /opt/rh/devtoolset-8/root/usr/include/c++/8/bits/basic_string.tcc:613\n (inlined by) std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, char const*) at /opt/rh/devtoolset-8/root/usr/include/c++/8/bits/basic_string.h:5958\n (inlined by) TraceEvent::backtrace(std::string const&amp;) at /opt/foundation/foundationdb/flow/Trace.cpp:938\nstd::string::_M_rep() const at /opt/rh/devtoolset-8/root/usr/include/c++/8/bits/basic_string.h:3313\n (inlined by) std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string() at /opt/rh/devtoolset-8/root/usr/include/c++/8/bits/basic_string.h:3631\n (inlined by) FastAllocator&lt;64&gt;::getMagazine() at /opt/foundation/foundationdb/flow/FastAlloc.cpp:449\nFastAllocator&lt;64&gt;::allocate() at /opt/foundation/foundationdb/flow/FastAlloc.cpp:272\nIndexedSet&lt;Standalone&lt;StringRef&gt;, long&gt;::Node::Node&lt;StringRef&amp;, int&gt;(StringRef&amp;, int&amp;&amp;, IndexedSet&lt;Standalone&lt;StringRef&gt;, long&gt;::Node*) at /opt/foundation/foundationdb/./flow/serialize.h:748\n (inlined by) IndexedSet&lt;Standalone&lt;StringRef&gt;, long&gt;::iterator IndexedSet&lt;Standalone&lt;StringRef&gt;, long&gt;::insert&lt;StringRef&amp;, int&gt;(StringRef&amp;, int&amp;&amp;, bool) at /opt/foundation/foundationdb/./flow/IndexedSet.h:635\n(anonymous namespace)::ApplyByteSampleResultActorState&lt;(anonymous namespace)::ApplyByteSampleResultActor&gt;::a_body1loopBody1cont1(Standalone&lt;VectorRef&lt;KeyValueRef, (VecSerStrategy)0&gt; &gt; const&amp;, int) at /opt/foundation/foundationdb/./flow/serialize.h:748\nReference&lt;ArenaBlock&gt;::~Reference() at /opt/foundation/foundationdb/./flow/serialize.h:748\n (inlined by) Arena::~Arena() at /opt/foundation/foundationdb/./flow/Arena.h:92\n (inlined by) Standalone&lt;VectorRef&lt;KeyValueRef, (VecSerStrategy)0&gt; &gt;::~Standalone() at /opt/foundation/foundationdb/./flow/Arena.h:479\n (inlined by) fire at /opt/foundation/foundationdb/./flow/flow.h:998\nvoid SAV&lt;Standalone&lt;VectorRef&lt;KeyValueRef, (VecSerStrategy)0&gt; &gt; &gt;::send&lt;Standalone&lt;VectorRef&lt;KeyValueRef, (VecSerStrategy)0&gt; &gt;&amp;&gt;(Standalone&lt;VectorRef&lt;KeyValueRef, (VecSerStrategy)0&gt; &gt;&amp;) at /opt/foundation/foundationdb/./flow/flow.h:529\n (inlined by) void Promise&lt;Standalone&lt;VectorRef&lt;KeyValueRef, (VecSerStrategy)0&gt; &gt; &gt;::send&lt;Standalone&lt;VectorRef&lt;KeyValueRef, (VecSerStrategy)0&gt; &gt;&amp;&gt;(Standalone&lt;VectorRef&lt;KeyValueRef, (VecSerStrategy)0&gt; &gt;&amp;) const at /opt/foundation/foundationdb/./flow/flow.h:778\n (inlined by) a_body1cont1 at /opt/foundation/foundationdb/flow/genericactors.actor.h:1202\n (inlined by) a_body1when1 at /opt/foundation/foundationdb/flow/genericactors.actor.g.h:11733\n (inlined by) a_callback_fire at /opt/foundation/foundationdb/flow/genericactors.actor.g.h:11747\n (inlined by) fire at /opt/foundation/foundationdb/./flow/flow.h:998\nvoid SAV&lt;Void&gt;::send&lt;Void&gt;(Void&amp;&amp;) at /opt/boost_1_67_0/boost/variant/detail/forced_return.hpp:31\nPromise&lt;Void&gt;::~Promise() at /opt/foundation/foundationdb/flow/TDMetric.actor.h:1269\n (inlined by) N2::PromiseTask::~PromiseTask() at /opt/foundation/foundationdb/flow/Net2.actor.cpp:475\n (inlined by) N2::PromiseTask::operator()() at /opt/foundation/foundationdb/flow/Net2.actor.cpp:482\n (inlined by) N2::Net2::run() at /opt/foundation/foundationdb/flow/Net2.actor.cpp:657\nmain at /opt/rh/devtoolset-8/root/usr/include/c++/8/bits/basic_string.h:3346\n?? ??:0\n</code></pre>\n<p>I also see the below trace during this period which seems to be the fix you added in 6.2.19.</p>\n<pre><code class=\"lang-auto\">addr2line -e fdbserver.debug -p -C -f -i 0x194478f 0x190e413 0x190e651 0x186d545 0x1863dea 0x72b1c2 0x765327 0x76559a 0x7656f1 0x768701 0x768775 0x768858 0xb46cbf 0xb4ad97 0xa2ef82 0xa2c0f9 0x18500a6 0x7ff4a0c5f5d0\nTraceEvent::backtrace(std::string const&amp;) at ??:?\n (inlined by) std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) at /opt/rh/devtoolset-8/root/usr/include/c++/8/bits/basic_string.tcc:613\n (inlined by) std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, char const*) at /opt/rh/devtoolset-8/root/usr/include/c++/8/bits/basic_string.h:5958\n (inlined by) TraceEvent::backtrace(std::string const&amp;) at /opt/foundation/foundationdb/flow/Trace.cpp:938\nstd::string::_M_rep() const at /opt/rh/devtoolset-8/root/usr/include/c++/8/bits/basic_string.h:3313\n (inlined by) std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string() at /opt/rh/devtoolset-8/root/usr/include/c++/8/bits/basic_string.h:3631\n (inlined by) FastAllocator&lt;4096&gt;::getMagazine() at /opt/foundation/foundationdb/flow/FastAlloc.cpp:449\nFastAllocator&lt;4096&gt;::allocate() at /opt/foundation/foundationdb/flow/FastAlloc.cpp:272\nEvictablePageCache::allocate(EvictablePage*) at /opt/foundation/foundationdb/fdbrpc/AsyncFileCached.actor.h:76\n (inlined by) AFCPage::AFCPage(AsyncFileCached*, long) at /opt/foundation/foundationdb/fdbrpc/AsyncFileCached.actor.h:576\nAsyncFileCached::readZeroCopy(void**, int*, long) at /opt/foundation/foundationdb/./flow/FastAlloc.h:200\nasyncReadZeroCopy(sqlite3_file*, void**, int, long long, int*) at /opt/rh/devtoolset-8/root/usr/include/c++/8/bits/basic_string.h:3346\nreadDbPage at /opt/foundation/foundationdb/fdbserver/sqlite/sqlite3.amalgamation.c:31953\nsqlite3PagerAcquire at /opt/foundation/foundationdb/fdbserver/sqlite/sqlite3.amalgamation.c:34182\nbtreeGetPage at /opt/foundation/foundationdb/fdbserver/sqlite/btree.c:1567\ngetAndInitPage at /opt/foundation/foundationdb/fdbserver/sqlite/btree.c:1619\nmoveToChild at /opt/foundation/foundationdb/fdbserver/sqlite/btree.c:4188\nmoveToLeftmost at /opt/foundation/foundationdb/fdbserver/sqlite/btree.c:4349\nRawCursor::moveNext() at /opt/foundation/foundationdb/./flow/flow.h:529\n (inlined by) RawCursor::DefragmentingReader::advance() at /opt/foundation/foundationdb/fdbserver/KeyValueStoreSQLite.actor.cpp:945\n (inlined by) RawCursor::DefragmentingReader::peek() at /opt/foundation/foundationdb/fdbserver/KeyValueStoreSQLite.actor.cpp:957\n (inlined by) RawCursor::getRange(KeyRangeRef, int, int) at /opt/foundation/foundationdb/fdbserver/KeyValueStoreSQLite.actor.cpp:1094\nKeyValueStoreSQLite::Reader::action(KeyValueStoreSQLite::Reader::ReadRangeAction&amp;) at /opt/foundation/foundationdb/./flow/flow.h:529\n (inlined by) TypedAction&lt;KeyValueStoreSQLite::Reader, KeyValueStoreSQLite::Reader::ReadRangeAction&gt;::operator()(IThreadPoolReceiver*) at /opt/foundation/foundationdb/./flow/IThreadPool.h:74\nyield(TaskPriority) at /opt/foundation/foundationdb/./flow/flow.h:1018\n (inlined by) WorkPool&lt;Coroutine, ThreadUnsafeSpinLock, true&gt;::Worker::run() at /opt/foundation/foundationdb/fdbserver/CoroFlow.actor.cpp:151\nCoroutine::wrapRun() at /opt/foundation/foundationdb/./flow/flow.h:629\n (inlined by) Coroutine::entry(void*) at /opt/foundation/foundationdb/fdbserver/CoroFlow.actor.cpp:89\nCoro_StartWithArg at /opt/foundation/foundationdb/fdbrpc/libcoroutine/Coro.c:277\n?? ??:0\n</code></pre>\n<p>Are these pointing to the same issue or there is some other thing important which I am missing?</p>\n<blockquote>\n<p><code>io_submit()</code>  is KAIO, which is the Linux Kernel\u2019s async IO support. If  <code>io_submit()</code>  is blocking for 250ms-400ms for you. That would indicate that there\u2019s something very strange going on between FDB and your hardware. What version of Linux are you running? What filesystem? Which Distro? What environment are you running FDB in? (Bare metal? Cloud? Which cloud?)</p>\n</blockquote>\n<p><a class=\"mention\" href=\"/u/alexmiller\">@alexmiller</a> - Ubuntu 16.04.6 running on ESXi 6.5.</p>\n<p>From the <a href=\"https://gist.github.com/dmannaarkin/e0d533873e923b40254ac2e14e48d8ec\" rel=\"noopener nofollow ugc\">trace</a> file it seems <code>io_submit</code> started taking time when the process memory usage increased more than 5.3 GB. I don\u2019t see this when the memory usage of the process was less. Also the frequency of this event is less. Is there a possibility that <code>Net2SlowTaskTrace</code> (pointing to <code>io_submit</code> taking time) a side effect of the high memory usage on the process?</p>",
        "post_number": 8,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2020-04-22T19:22:37.769Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 34,
        "readers_count": 33,
        "score": 11.8,
        "yours": false,
        "topic_id": 2080,
        "topic_slug": "foundationdb-6-2-fdbserver-going-out-of-memory",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://gist.github.com/dmannaarkin/e0d533873e923b40254ac2e14e48d8ec",
            "internal": false,
            "reflection": false,
            "title": "P1 Memory Increase \u00b7 GitHub",
            "clicks": 0
          },
          {
            "url": "https://forums.foundationdb.org/t/fdb-server-or-coordinator-is-down-due-to-out-of-memory/2851",
            "internal": true,
            "reflection": true,
            "title": "FDB server or coordinator is down due to out of memory",
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 714,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/foundationdb-6-2-fdbserver-going-out-of-memory/2080/8",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6819,
        "name": "Alex Miller",
        "username": "alexmiller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "created_at": "2020-04-23T02:48:27.342Z",
        "cooked": "<p>Your cluster status says you have 7.5 GB per process on one host (so thus 15GB in total).  Is this accurate, or is there 7.5GB in total on that host?  If you\u2019re running the entire machine nearly out of memory, then I could easily see where the slow tasks and weird performance would be coming from.</p>\n<p>Otherwise, I\u2019ll need to ponder more\u2026</p>",
        "post_number": 9,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2020-04-23T02:48:27.342Z",
        "reply_count": 1,
        "reply_to_post_number": 8,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 30,
        "readers_count": 29,
        "score": 16.0,
        "yours": false,
        "topic_id": 2080,
        "topic_slug": "foundationdb-6-2-fdbserver-going-out-of-memory",
        "display_username": "Alex Miller",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 714,
          "username": "tuk",
          "name": "",
          "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/t/b5ac83/{size}.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 13,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/foundationdb-6-2-fdbserver-going-out-of-memory/2080/9",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6820,
        "name": "",
        "username": "tuk",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/t/b5ac83/{size}.png",
        "created_at": "2020-04-23T04:34:49.858Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"alexmiller\" data-post=\"9\" data-topic=\"2080\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/alexmiller/48/326_2.png\" class=\"avatar\"> alexmiller:</div>\n<blockquote>\n<p>Your cluster status says you have 7.5 GB per process on one host (so thus 15GB in total). Is this accurate, or is there 7.5GB in total on that host? If you\u2019re running the entire machine nearly out of memory, then I could easily see where the slow tasks and weird performance would be coming from.</p>\n</blockquote>\n</aside>\n<p>Yes it is per process. No the entire machine is not out of memory. Another thing the out of memory is happening only on the process running on port 4500.</p>",
        "post_number": 10,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2020-04-23T04:34:49.858Z",
        "reply_count": 0,
        "reply_to_post_number": 9,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 29,
        "readers_count": 28,
        "score": 5.8,
        "yours": false,
        "topic_id": 2080,
        "topic_slug": "foundationdb-6-2-fdbserver-going-out-of-memory",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 714,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/foundationdb-6-2-fdbserver-going-out-of-memory/2080/10",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      6760,
      6780,
      6787,
      6790,
      6793,
      6794,
      6802,
      6815,
      6819,
      6820
    ]
  },
  "timeline_lookup": [
    [
      1,
      2010
    ],
    [
      5,
      2009
    ],
    [
      8,
      2008
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "Foundationdb 6.2 - fdbserver going out of memory",
  "id": 2080,
  "title": "Foundationdb 6.2 - fdbserver going out of memory",
  "posts_count": 10,
  "created_at": "2020-04-20T14:55:39.274Z",
  "views": 1037,
  "reply_count": 5,
  "like_count": 0,
  "last_posted_at": "2020-04-23T04:34:49.858Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "foundationdb-6-2-fdbserver-going-out-of-memory",
  "category_id": 7,
  "word_count": 5190,
  "deleted_at": null,
  "user_id": 714,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_2080",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 10,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 3,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "FDB out of memory",
      "id": 3460,
      "title": "FDB out of memory",
      "slug": "fdb-out-of-memory",
      "posts_count": 6,
      "reply_count": 2,
      "highest_post_number": 6,
      "image_url": null,
      "created_at": "2022-07-20T03:12:58.094Z",
      "last_posted_at": "2022-07-22T12:33:26.077Z",
      "bumped": true,
      "bumped_at": "2022-07-22T12:54:40.104Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 962,
      "category_id": 17,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 1126,
            "username": "CodingSuen",
            "name": "CodingSuen",
            "avatar_template": "/user_avatar/forums.foundationdb.org/codingsuen/{size}/1367_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 454,
            "username": "jzhou",
            "name": "Jingyu Zhou",
            "avatar_template": "/user_avatar/forums.foundationdb.org/jzhou/{size}/445_2.png",
            "admin": true,
            "moderator": true,
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 164,
            "username": "Imperatorx",
            "name": "",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/i/d2c977/{size}.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Large spikes in memory usage on storage processes, 6.0.18",
      "id": 2115,
      "title": "Large spikes in memory usage on storage processes, 6.0.18",
      "slug": "large-spikes-in-memory-usage-on-storage-processes-6-0-18",
      "posts_count": 3,
      "reply_count": 1,
      "highest_post_number": 3,
      "image_url": "https://global.discourse-cdn.com/foundationdb/optimized/1X/4c7f8a022ee38e69df8abe772878aff823a76550_2_1024x320.png",
      "created_at": "2020-05-12T19:17:47.329Z",
      "last_posted_at": "2020-05-12T21:58:14.570Z",
      "bumped": true,
      "bumped_at": "2020-05-12T21:58:14.570Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 582,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 490,
            "username": "rjenkins",
            "name": "Ray Jenkins",
            "avatar_template": "/user_avatar/forums.foundationdb.org/rjenkins/{size}/487_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Continuous out-of-memory crashes in small cluster with modest read-only workload",
      "id": 864,
      "title": "Continuous out-of-memory crashes in small cluster with modest read-only workload",
      "slug": "continuous-out-of-memory-crashes-in-small-cluster-with-modest-read-only-workload",
      "posts_count": 10,
      "reply_count": 6,
      "highest_post_number": 10,
      "image_url": null,
      "created_at": "2018-11-12T18:15:45.539Z",
      "last_posted_at": "2018-11-13T22:03:20.420Z",
      "bumped": true,
      "bumped_at": "2018-11-13T22:03:20.420Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 1256,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 424,
            "username": "jwb",
            "name": "Jeff Baker",
            "avatar_template": "/user_avatar/forums.foundationdb.org/jwb/{size}/413_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 22,
            "username": "dave",
            "name": "David Scherer",
            "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
            "trust_level": 1
          }
        }
      ]
    },
    {
      "fancy_title": "Segmentation fault error and broken cluster",
      "id": 483,
      "title": "Segmentation fault error and broken cluster",
      "slug": "segmentation-fault-error-and-broken-cluster",
      "posts_count": 17,
      "reply_count": 12,
      "highest_post_number": 17,
      "image_url": null,
      "created_at": "2018-05-31T15:34:28.123Z",
      "last_posted_at": "2018-06-11T17:31:13.656Z",
      "bumped": true,
      "bumped_at": "2018-06-11T17:31:13.656Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 2,
      "views": 4331,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 211,
            "username": "brk0v",
            "name": "Viacheslav Biriukov",
            "avatar_template": "/user_avatar/forums.foundationdb.org/brk0v/{size}/173_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 156,
            "username": "spullara",
            "name": "Sam Pullara",
            "avatar_template": "/user_avatar/forums.foundationdb.org/spullara/{size}/125_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "&lsquo;ERROR: Out of memory&rsquo; crashed from fdbserver",
      "id": 3556,
      "title": "'ERROR: Out of memory' crashed from fdbserver",
      "slug": "error-out-of-memory-crashed-from-fdbserver",
      "posts_count": 4,
      "reply_count": 1,
      "highest_post_number": 4,
      "image_url": null,
      "created_at": "2022-09-21T17:45:03.267Z",
      "last_posted_at": "2022-09-28T06:50:59.544Z",
      "bumped": true,
      "bumped_at": "2022-09-28T06:50:59.544Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [
        "bindings",
        "performance"
      ],
      "tags_descriptions": {},
      "like_count": 3,
      "views": 519,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 1134,
            "username": "ZhangHuiGui",
            "name": "Zhang Hui Gui",
            "avatar_template": "/user_avatar/forums.foundationdb.org/zhanghuigui/{size}/1377_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 1133,
            "username": "redcuckoo",
            "name": "Yurii Momotenko",
            "avatar_template": "/user_avatar/forums.foundationdb.org/redcuckoo/{size}/1660_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 711,
            "username": "osamarin",
            "name": "Oleg Samarin",
            "avatar_template": "/user_avatar/forums.foundationdb.org/osamarin/{size}/905_2.png",
            "trust_level": 2
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 714,
        "username": "tuk",
        "name": "",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/t/b5ac83/{size}.png",
        "post_count": 5,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      },
      {
        "id": 13,
        "username": "alexmiller",
        "name": "Alex Miller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "post_count": 3,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      },
      {
        "id": 12,
        "username": "ajbeamon",
        "name": "A.J. Beamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "admin": true,
        "trust_level": 4
      }
    ],
    "created_by": {
      "id": 714,
      "username": "tuk",
      "name": "",
      "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/t/b5ac83/{size}.png"
    },
    "last_poster": {
      "id": 714,
      "username": "tuk",
      "name": "",
      "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/t/b5ac83/{size}.png"
    },
    "links": [
      {
        "url": "https://gist.githubusercontent.com/dmannaarkin/74c02a2756085f62ce64f8250a2a3fd9/raw/71807cbb35981f041ce666d60af85db4719cb177/trace.10.196.76.47.4500.1586858813.rNKik3.1.46.xml",
        "title": null,
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 2,
        "user_id": 714,
        "domain": "gist.githubusercontent.com",
        "root_domain": "gist.githubusercontent.com"
      },
      {
        "url": "https://gist.githubusercontent.com/dmannaarkin/de7a871190b8e892c3d7b0ccfb5740b4/raw/e66861522cbe4a4ee0f845492181505a6c8a1978/trace.10.196.76.49.4500.1587060349.uHpGMu.0.6.xml",
        "title": null,
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 2,
        "user_id": 714,
        "domain": "gist.githubusercontent.com",
        "root_domain": "gist.githubusercontent.com"
      },
      {
        "url": "https://gist.github.com/dmannaarkin/32e9240131ddc621cb5d75277fb8524f/raw/62cf7932afb4ad1d82bb29168b74fe3fa7f3cf20/trace.10.196.76.47.4500.1587097598.2yzt8f.0.1.xml",
        "title": null,
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 1,
        "user_id": 714,
        "domain": "gist.github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://gist.github.com/dmannaarkin/e0d533873e923b40254ac2e14e48d8ec",
        "title": "P1 Memory Increase \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 1,
        "user_id": 714,
        "domain": "gist.github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://gist.githubusercontent.com/dmannaarkin/fb4c3737b9a9b3136dbe96a9ef230125/raw/3e0cf0a996da063411313e31ce6554dd787a99e4/trace.10.196.76.49.4500.1587097268.p4D6SB.0.1.xml",
        "title": null,
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 1,
        "user_id": 714,
        "domain": "gist.githubusercontent.com",
        "root_domain": "gist.githubusercontent.com"
      }
    ]
  },
  "bookmarks": []
}