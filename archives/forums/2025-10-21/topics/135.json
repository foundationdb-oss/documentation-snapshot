{
  "post_stream": {
    "posts": [
      {
        "id": 208,
        "name": "",
        "username": "idiot",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/i/f04885/{size}.png",
        "created_at": "2018-04-20T15:30:31.871Z",
        "cooked": "<p><img src=\"https://emoji.discourse-cdn.com/twitter/wave.png?v=5\" title=\":wave:\" class=\"emoji\" alt=\":wave:\"></p>\n<p>Is it possible to find some more information about the database internals which goes deeper into how it works than the technical overview and if so, where?</p>\n<p>For example, the <a href=\"https://apple.github.io/foundationdb/transaction-processing.html\" rel=\"nofollow noopener\">transaction processing</a> page says that the database \u201cuses a sophisticated data-parallel and multithreaded algorithm to optimize conflict-checking\u201d but leaves the reader wondering what it actually means. Is it in any way similar to SSI? And, a bit off-topic but, does the database somehow rely on NTP servers?</p>\n<p>Then the <a href=\"https://apple.github.io/foundationdb/fault-tolerance.html\" rel=\"nofollow noopener\">fault tolerance</a> page talks about \u201cteams\u201d and how using them the \u201cchance of data unavailability is reduced to about 0.5%\u201d \u2026 But leaves the already buffled reader wondering again: what these teams actually are, how they work, and how the new probability of \u201c0.5%\u201d (is it really 0.005?) is calculated.</p>\n<p>TL;DR docs are great, but could they go deeper into the nitty-gritty?</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 27,
        "updated_at": "2018-04-20T15:40:10.438Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 2671,
        "reads": 319,
        "readers_count": 318,
        "score": 13569.8,
        "yours": false,
        "topic_id": 135,
        "topic_slug": "technical-overview-of-the-database",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 3,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://apple.github.io/foundationdb/transaction-processing.html",
            "internal": false,
            "reflection": false,
            "title": "Transaction Processing \u2014 FoundationDB 5.1",
            "clicks": 98
          },
          {
            "url": "https://apple.github.io/foundationdb/fault-tolerance.html",
            "internal": false,
            "reflection": false,
            "title": "Fault Tolerance \u2014 FoundationDB 5.1",
            "clicks": 85
          },
          {
            "url": "https://forums.foundationdb.org/t/design-document-of-internals-storage/92/4",
            "internal": true,
            "reflection": true,
            "title": "Design document of internals & storage?",
            "clicks": 19
          },
          {
            "url": "https://forums.foundationdb.org/t/papers-concepts-to-better-understand-foundationdb-architecture/1672/3",
            "internal": true,
            "reflection": true,
            "title": "Papers/concepts to better understand foundationdb architecture",
            "clicks": 5
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 4
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 96,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/technical-overview-of-the-database/135/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 209,
        "name": "",
        "username": "fire",
        "avatar_template": "/user_avatar/forums.foundationdb.org/fire/{size}/1480_2.png",
        "created_at": "2018-04-20T15:35:56.488Z",
        "cooked": "<p>I don\u2019t work on FDB, but <a href=\"https://news.ycombinator.com/item?id=16877586\" rel=\"nofollow noopener\">https://news.ycombinator.com/item?id=16877586</a> has a summary of the internals that may be more helpful than the documentation.</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 27,
        "updated_at": "2018-04-20T15:35:56.488Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 69,
        "reads": 318,
        "readers_count": 317,
        "score": 463.6,
        "yours": false,
        "topic_id": 135,
        "topic_slug": "technical-overview-of-the-database",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://news.ycombinator.com/item?id=16877586",
            "internal": false,
            "reflection": false,
            "title": "I hadn't heard of FoundationDB before, so I did some digging into the features: ... | Hacker News",
            "clicks": 545
          },
          {
            "url": "https://forums.foundationdb.org/t/about-transaction/442/2",
            "internal": true,
            "reflection": true,
            "title": "About transaction",
            "clicks": 3
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 4
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 63,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/technical-overview-of-the-database/135/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 226,
        "name": "Evan Tschannen",
        "username": "Evan",
        "avatar_template": "/user_avatar/forums.foundationdb.org/evan/{size}/104_2.png",
        "created_at": "2018-04-20T17:09:25.307Z",
        "cooked": "<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://global.discourse-cdn.com/foundationdb/original/1X/cf8c5fc2f9f5675055c05610bc495f5b760444e1.jpeg\" title=\"FoundationDB Architecture.005.jpeg\" rel=\"nofollow noopener\"><img src=\"https://global.discourse-cdn.com/foundationdb/optimized/1X/cf8c5fc2f9f5675055c05610bc495f5b760444e1_2_666x500.jpeg\" alt=\"005\" width=\"666\" height=\"500\" srcset=\"https://global.discourse-cdn.com/foundationdb/optimized/1X/cf8c5fc2f9f5675055c05610bc495f5b760444e1_2_666x500.jpeg, https://global.discourse-cdn.com/foundationdb/optimized/1X/cf8c5fc2f9f5675055c05610bc495f5b760444e1_2_999x750.jpeg 1.5x, https://global.discourse-cdn.com/foundationdb/original/1X/cf8c5fc2f9f5675055c05610bc495f5b760444e1.jpeg 2x\" data-small-upload=\"https://global.discourse-cdn.com/foundationdb/optimized/1X/cf8c5fc2f9f5675055c05610bc495f5b760444e1_2_10x10.png\"><div class=\"meta\">\n<svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use xlink:href=\"#far-image\"></use></svg><span class=\"filename\">FoundationDB Architecture.005.jpeg</span><span class=\"informations\">1024\u00d7768 320 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use xlink:href=\"#discourse-expand\"></use></svg>\n</div></a></div><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://global.discourse-cdn.com/foundationdb/original/1X/032af061abbd783549a8b4805e09f53e1cad2a83.jpeg\" title=\"FoundationDB Architecture.004.jpeg\" rel=\"nofollow noopener\"><img src=\"https://global.discourse-cdn.com/foundationdb/optimized/1X/032af061abbd783549a8b4805e09f53e1cad2a83_2_666x500.jpeg\" alt=\"004\" width=\"666\" height=\"500\" srcset=\"https://global.discourse-cdn.com/foundationdb/optimized/1X/032af061abbd783549a8b4805e09f53e1cad2a83_2_666x500.jpeg, https://global.discourse-cdn.com/foundationdb/optimized/1X/032af061abbd783549a8b4805e09f53e1cad2a83_2_999x750.jpeg 1.5x, https://global.discourse-cdn.com/foundationdb/original/1X/032af061abbd783549a8b4805e09f53e1cad2a83.jpeg 2x\" data-small-upload=\"https://global.discourse-cdn.com/foundationdb/optimized/1X/032af061abbd783549a8b4805e09f53e1cad2a83_2_10x10.png\"><div class=\"meta\">\n<svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use xlink:href=\"#far-image\"></use></svg><span class=\"filename\">FoundationDB Architecture.004.jpeg</span><span class=\"informations\">1024\u00d7768 325 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use xlink:href=\"#discourse-expand\"></use></svg>\n</div></a></div><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://global.discourse-cdn.com/foundationdb/original/1X/df2fa96cbdc35a482e2726a5f786be69dc5fc4a6.jpeg\" title=\"FoundationDB Architecture.006.jpeg\" rel=\"nofollow noopener\"><img src=\"https://global.discourse-cdn.com/foundationdb/optimized/1X/df2fa96cbdc35a482e2726a5f786be69dc5fc4a6_2_666x500.jpeg\" alt=\"006\" width=\"666\" height=\"500\" srcset=\"https://global.discourse-cdn.com/foundationdb/optimized/1X/df2fa96cbdc35a482e2726a5f786be69dc5fc4a6_2_666x500.jpeg, https://global.discourse-cdn.com/foundationdb/optimized/1X/df2fa96cbdc35a482e2726a5f786be69dc5fc4a6_2_999x750.jpeg 1.5x, https://global.discourse-cdn.com/foundationdb/original/1X/df2fa96cbdc35a482e2726a5f786be69dc5fc4a6.jpeg 2x\" data-small-upload=\"https://global.discourse-cdn.com/foundationdb/optimized/1X/df2fa96cbdc35a482e2726a5f786be69dc5fc4a6_2_10x10.png\"><div class=\"meta\">\n<svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use xlink:href=\"#far-image\"></use></svg><span class=\"filename\">FoundationDB Architecture.006.jpeg</span><span class=\"informations\">1024\u00d7768 343 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use xlink:href=\"#discourse-expand\"></use></svg>\n</div></a></div><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://global.discourse-cdn.com/foundationdb/original/1X/2ba462a1102390fbd0cca88c06d3cb25f485cde5.jpeg\" title=\"FoundationDB Architecture.003.jpeg\" rel=\"nofollow noopener\"><img src=\"https://global.discourse-cdn.com/foundationdb/optimized/1X/2ba462a1102390fbd0cca88c06d3cb25f485cde5_2_666x500.jpeg\" alt=\"003\" width=\"666\" height=\"500\" srcset=\"https://global.discourse-cdn.com/foundationdb/optimized/1X/2ba462a1102390fbd0cca88c06d3cb25f485cde5_2_666x500.jpeg, https://global.discourse-cdn.com/foundationdb/optimized/1X/2ba462a1102390fbd0cca88c06d3cb25f485cde5_2_999x750.jpeg 1.5x, https://global.discourse-cdn.com/foundationdb/original/1X/2ba462a1102390fbd0cca88c06d3cb25f485cde5.jpeg 2x\" data-small-upload=\"https://global.discourse-cdn.com/foundationdb/optimized/1X/2ba462a1102390fbd0cca88c06d3cb25f485cde5_2_10x10.png\"><div class=\"meta\">\n<svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use xlink:href=\"#far-image\"></use></svg><span class=\"filename\">FoundationDB Architecture.003.jpeg</span><span class=\"informations\">1024\u00d7768 316 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use xlink:href=\"#discourse-expand\"></use></svg>\n</div></a></div><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://global.discourse-cdn.com/foundationdb/original/1X/8a2f0e6b6ba9109aeb895a0f7f275cb251ecf488.jpeg\" title=\"FoundationDB Architecture.002.jpeg\" rel=\"nofollow noopener\"><img src=\"https://global.discourse-cdn.com/foundationdb/optimized/1X/8a2f0e6b6ba9109aeb895a0f7f275cb251ecf488_2_666x500.jpeg\" alt=\"002\" width=\"666\" height=\"500\" srcset=\"https://global.discourse-cdn.com/foundationdb/optimized/1X/8a2f0e6b6ba9109aeb895a0f7f275cb251ecf488_2_666x500.jpeg, https://global.discourse-cdn.com/foundationdb/optimized/1X/8a2f0e6b6ba9109aeb895a0f7f275cb251ecf488_2_999x750.jpeg 1.5x, https://global.discourse-cdn.com/foundationdb/original/1X/8a2f0e6b6ba9109aeb895a0f7f275cb251ecf488.jpeg 2x\" data-small-upload=\"https://global.discourse-cdn.com/foundationdb/optimized/1X/8a2f0e6b6ba9109aeb895a0f7f275cb251ecf488_2_10x10.png\"><div class=\"meta\">\n<svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use xlink:href=\"#far-image\"></use></svg><span class=\"filename\">FoundationDB Architecture.002.jpeg</span><span class=\"informations\">1024\u00d7768 414 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use xlink:href=\"#discourse-expand\"></use></svg>\n</div></a></div><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://global.discourse-cdn.com/foundationdb/original/1X/39ef9f39ff6a382818f9386aa4538be4f80a6fdc.jpeg\" title=\"FoundationDB Architecture.007.jpeg\" rel=\"nofollow noopener\"><img src=\"https://global.discourse-cdn.com/foundationdb/optimized/1X/39ef9f39ff6a382818f9386aa4538be4f80a6fdc_2_666x500.jpeg\" alt=\"007\" width=\"666\" height=\"500\" srcset=\"https://global.discourse-cdn.com/foundationdb/optimized/1X/39ef9f39ff6a382818f9386aa4538be4f80a6fdc_2_666x500.jpeg, https://global.discourse-cdn.com/foundationdb/optimized/1X/39ef9f39ff6a382818f9386aa4538be4f80a6fdc_2_999x750.jpeg 1.5x, https://global.discourse-cdn.com/foundationdb/original/1X/39ef9f39ff6a382818f9386aa4538be4f80a6fdc.jpeg 2x\" data-small-upload=\"https://global.discourse-cdn.com/foundationdb/optimized/1X/39ef9f39ff6a382818f9386aa4538be4f80a6fdc_2_10x10.png\"><div class=\"meta\">\n<svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use xlink:href=\"#far-image\"></use></svg><span class=\"filename\">FoundationDB Architecture.007.jpeg</span><span class=\"informations\">1024\u00d7768 354 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use xlink:href=\"#discourse-expand\"></use></svg>\n</div></a></div></p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 27,
        "updated_at": "2018-04-20T17:09:25.307Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 412,
        "reads": 319,
        "readers_count": 318,
        "score": 2455.8,
        "yours": false,
        "topic_id": 135,
        "topic_slug": "technical-overview-of-the-database",
        "display_username": "Evan Tschannen",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://global.discourse-cdn.com/foundationdb/original/1X/8a2f0e6b6ba9109aeb895a0f7f275cb251ecf488.jpeg",
            "internal": false,
            "reflection": false,
            "title": "8a2f0e6b6ba9109aeb895a0f7f275cb251ecf488.jpeg",
            "clicks": 0
          },
          {
            "url": "https://global.discourse-cdn.com/foundationdb/original/1X/cf8c5fc2f9f5675055c05610bc495f5b760444e1.jpeg",
            "internal": false,
            "reflection": false,
            "title": "cf8c5fc2f9f5675055c05610bc495f5b760444e1.jpeg",
            "clicks": 0
          },
          {
            "url": "https://global.discourse-cdn.com/foundationdb/original/1X/032af061abbd783549a8b4805e09f53e1cad2a83.jpeg",
            "internal": false,
            "reflection": false,
            "title": "032af061abbd783549a8b4805e09f53e1cad2a83.jpeg",
            "clicks": 0
          },
          {
            "url": "https://global.discourse-cdn.com/foundationdb/original/1X/df2fa96cbdc35a482e2726a5f786be69dc5fc4a6.jpeg",
            "internal": false,
            "reflection": false,
            "title": "df2fa96cbdc35a482e2726a5f786be69dc5fc4a6.jpeg",
            "clicks": 0
          },
          {
            "url": "https://global.discourse-cdn.com/foundationdb/original/1X/2ba462a1102390fbd0cca88c06d3cb25f485cde5.jpeg",
            "internal": false,
            "reflection": false,
            "title": "2ba462a1102390fbd0cca88c06d3cb25f485cde5.jpeg",
            "clicks": 0
          },
          {
            "url": "https://global.discourse-cdn.com/foundationdb/original/1X/39ef9f39ff6a382818f9386aa4538be4f80a6fdc.jpeg",
            "internal": false,
            "reflection": false,
            "title": "39ef9f39ff6a382818f9386aa4538be4f80a6fdc.jpeg",
            "clicks": 0
          },
          {
            "url": "https://forums.foundationdb.org/t/understanding-inter-communication/745/10",
            "internal": true,
            "reflection": true,
            "title": "Understanding inter communication",
            "clicks": 17
          },
          {
            "url": "https://forums.foundationdb.org/t/bandwidth-consumption-from-one-fdb-client-to-fdbserver-process/407",
            "internal": true,
            "reflection": true,
            "title": "Bandwidth consumption from one fdb client to fdbserver process",
            "clicks": 15
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 21
          }
        ],
        "moderator": true,
        "admin": false,
        "staff": true,
        "user_id": 54,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/technical-overview-of-the-database/135/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 228,
        "name": "Evan Tschannen",
        "username": "Evan",
        "avatar_template": "/user_avatar/forums.foundationdb.org/evan/{size}/104_2.png",
        "created_at": "2018-04-20T17:13:18.836Z",
        "cooked": "<p>Besides diagrams I posted above, I added some documentation that just has not been built yet.</p>\n<aside class=\"onebox githubblob\">\n  <header class=\"source\">\n      <a href=\"https://github.com/apple/foundationdb/blob/master/documentation/sphinx/source/kv-architecture.rst\" target=\"_blank\" rel=\"nofollow noopener\">github.com</a>\n  </header>\n  <article class=\"onebox-body\">\n    <h4><a href=\"https://github.com/apple/foundationdb/blob/master/documentation/sphinx/source/kv-architecture.rst\" target=\"_blank\" rel=\"nofollow noopener\">apple/foundationdb/blob/master/documentation/sphinx/source/kv-architecture.rst</a></h4>\n<pre><code class=\"lang-rst\">#########################\nFoundationDB Architecture\n#########################\n\nCoordinators\n============\n\nAll clients and servers connect to a FoundationDB cluster with a cluster file, which contains the IP:PORT of the coordinators. Both the clients and servers use the coordinators to connect with the cluster controller. The servers will attempt to become the cluster controller if one does not exist, and register with the cluster controller once one has been elected. Clients use the cluster controller to keep an up-to-date list of proxies.\n\nCluster Controller\n==================\n\nThe cluster controller is a singleton elected by a majority of coordinators. It is the entry point for all processes in the cluster. It is responsible for determining when a process has failed, telling processes which roles they should become, and passing system information between all of the processes.\n\nMaster\n======\n\nThe master is responsible for coordinating the transition of the write sub-system from one generation to the next. The write sub-system includes the master, proxies, resolvers, and transaction logs. The three roles are treated as a unit, and if any of them fail, we will recruit a replacement for all three roles. The master provides the commit versions for batches of the mutations to the proxies, runs data distribution algorithm, and runs ratekeeper.\n\nProxies\n</code></pre>\n\n  This file has been truncated. <a href=\"https://github.com/apple/foundationdb/blob/master/documentation/sphinx/source/kv-architecture.rst\" target=\"_blank\" rel=\"nofollow noopener\">show original</a>\n\n  </article>\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n  <div style=\"clear: both\"></div>\n</aside>\n",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 27,
        "updated_at": "2018-04-20T17:13:18.836Z",
        "reply_count": 2,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 70,
        "reads": 287,
        "readers_count": 286,
        "score": 522.4,
        "yours": false,
        "topic_id": 135,
        "topic_slug": "technical-overview-of-the-database",
        "display_username": "Evan Tschannen",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/apple/foundationdb/blob/master/documentation/sphinx/source/kv-architecture.rst",
            "internal": false,
            "reflection": false,
            "title": "foundationdb/kv-architecture.rst at master \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 359
          },
          {
            "url": "https://forums.foundationdb.org/t/understanding-inter-communication/745/2",
            "internal": true,
            "reflection": true,
            "title": "Understanding inter communication",
            "clicks": 7
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 7
          }
        ],
        "moderator": true,
        "admin": false,
        "staff": true,
        "user_id": 54,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/technical-overview-of-the-database/135/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 251,
        "name": "David Scherer",
        "username": "dave",
        "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
        "created_at": "2018-04-20T20:36:26.937Z",
        "cooked": "<p>The calculation regarding teams is just: 450/(40 choose 4) = .0049. There are 40 choose 4 sets of 4 machines that could be failed. This will only lead to data loss if the set is one of the 450 teams of 4. Thus the probability above.</p>\n<p>More generally, teams are a compromise between the random distribution model, where losing more than the fault tolerance level machines essentially guarantees data loss, and the \u201creplica set\u201d model where each machine is part of a single replica set, the probability of having any data loss from a multiple failure is minimized, but even a single failure is very slow to recover from because only a small number of machines have data from the failed replica set.</p>\n<p>If Apple wanted to put my old architecture talk on YouTube I wouldn\u2019t mind, though it is probably a bit out of date now.</p>",
        "post_number": 5,
        "post_type": 1,
        "posts_count": 27,
        "updated_at": "2018-04-20T20:36:26.937Z",
        "reply_count": 0,
        "reply_to_post_number": 4,
        "quote_count": 0,
        "incoming_link_count": 23,
        "reads": 267,
        "readers_count": 266,
        "score": 228.4,
        "yours": false,
        "topic_id": 135,
        "topic_slug": "technical-overview-of-the-database",
        "display_username": "David Scherer",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 54,
          "username": "Evan",
          "name": "Evan Tschannen",
          "avatar_template": "/user_avatar/forums.foundationdb.org/evan/{size}/104_2.png"
        },
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 4
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 22,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/technical-overview-of-the-database/135/5",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 277,
        "name": "Alex Miller",
        "username": "alexmiller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "created_at": "2018-04-21T01:09:25.589Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"idiot\" data-post=\"1\" data-topic=\"135\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/i/f04885/48.png\" class=\"avatar\"> idiot:</div>\n<blockquote>\n<p>Then the fault tolerance  page talks about \u201cteams\u201d and how using them the \u201cchance of data unavailability is reduced to about 0.5%\u201d \u2026 But leaves the already buffled reader wondering again: what these teams actually are, how they work, and how the new probability of \u201c0.5%\u201d (is it really 0.005?) is calculated.</p>\n</blockquote>\n</aside>\n<p><a href=\"https://www.usenix.org/system/files/conference/atc13/atc13-cidon.pdf\">Copysets: Reducing the Frequency of Data Loss in Cloud Storage</a> presents the same overall idea, and would be worth the read for a deeper understanding.</p>",
        "post_number": 6,
        "post_type": 1,
        "posts_count": 27,
        "updated_at": "2018-04-21T01:09:25.589Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 1,
        "incoming_link_count": 14,
        "reads": 255,
        "readers_count": 254,
        "score": 211.0,
        "yours": false,
        "topic_id": 135,
        "topic_slug": "technical-overview-of-the-database",
        "display_username": "Alex Miller",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://www.usenix.org/system/files/conference/atc13/atc13-cidon.pdf",
            "internal": false,
            "reflection": false,
            "clicks": 89
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 6
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 13,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/technical-overview-of-the-database/135/6",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 302,
        "name": "",
        "username": "hypothere",
        "avatar_template": "/user_avatar/forums.foundationdb.org/hypothere/{size}/86_2.png",
        "created_at": "2018-04-21T09:32:07.897Z",
        "cooked": "<blockquote>\n<p>A transaction conflicts if it reads a key that has been written between the transaction\u2019s read version and commit version. The resolver does this by holding the last 5 seconds of committed writes in memory, and comparing a new transaction\u2019s reads against this set of commits.</p>\n</blockquote>\n<p>What happens when there are multiple resolvers handling the sharded key-space and keys involved in tx are found to be owned by multiple resolvers? How do resolvers agree on that decision?</p>",
        "post_number": 7,
        "post_type": 1,
        "posts_count": 27,
        "updated_at": "2018-04-21T09:32:07.897Z",
        "reply_count": 0,
        "reply_to_post_number": 4,
        "quote_count": 0,
        "incoming_link_count": 16,
        "reads": 248,
        "readers_count": 247,
        "score": 129.6,
        "yours": false,
        "topic_id": 135,
        "topic_slug": "technical-overview-of-the-database",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 54,
          "username": "Evan",
          "name": "Evan Tschannen",
          "avatar_template": "/user_avatar/forums.foundationdb.org/evan/{size}/104_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 75,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/technical-overview-of-the-database/135/7",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 325,
        "name": "Evan Tschannen",
        "username": "Evan",
        "avatar_template": "/user_avatar/forums.foundationdb.org/evan/{size}/104_2.png",
        "created_at": "2018-04-21T15:24:10.963Z",
        "cooked": "<p>The proxy will send each resolver their respective key ranges, if either resolver detects a conflict then the transaction is not committed.</p>\n<p>This has the flaw that if only one of the two resolvers detects a conflict, the other resolver will still think the transaction succeeded and may failure future transactions based on its write conflict ranges.</p>\n<p>In practice, a well designed workload will only have a very small percentage of conflicts, so this amplification will not effect performance.</p>\n<p>Because of this effect we generally only recommend increasing the number of resolvers if you are running into a performance bottleneck because of the resolver.</p>",
        "post_number": 8,
        "post_type": 1,
        "posts_count": 27,
        "updated_at": "2018-04-21T15:24:10.963Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 352,
        "reads": 246,
        "readers_count": 245,
        "score": 1834.2,
        "yours": false,
        "topic_id": 135,
        "topic_slug": "technical-overview-of-the-database",
        "display_username": "Evan Tschannen",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 2
          }
        ],
        "moderator": true,
        "admin": false,
        "staff": true,
        "user_id": 54,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/technical-overview-of-the-database/135/8",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 572,
        "name": "Tom Crayford",
        "username": "tcrayford",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/t/47e85d/{size}.png",
        "created_at": "2018-04-25T13:04:55.697Z",
        "cooked": "<p>Hi,</p>\n<p>I have a query about the above workflow and it\u2019s failure tolerance. Looking at the transaction commit flow (and I\u2019ve dug through the code a bit too to check this), it looks like transaction commit doesn\u2019t increment the version number through a paxos round, instead just relying on the master/tlogs to coordinate the version number. That seems to offer a notable performance improvement of course, but I\u2019m wondering how it handles failure.</p>\n<p>The query I have is - isn\u2019t this unsafe? If a master, an associated proxy and a set of tlog servers gets partitioned by something that causes them to \u201chang\u201d (as apposed to losing network connectivity), is it possible that when they recover a client could commit a write through this \u201cold\u201d set, and not the newly elected set of master/tlogs (which the coordinators would handle re-recruiting), thereby breaking ACID?</p>\n<p>I assume this case is very much handled! But I\u2019m not sure I understand how it\u2019s handled, and I\u2019d love to understand better.</p>",
        "post_number": 9,
        "post_type": 1,
        "posts_count": 27,
        "updated_at": "2018-04-25T13:04:55.697Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 10,
        "reads": 227,
        "readers_count": 226,
        "score": 110.4,
        "yours": false,
        "topic_id": 135,
        "topic_slug": "technical-overview-of-the-database",
        "display_username": "Tom Crayford",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 179,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/technical-overview-of-the-database/135/9",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 576,
        "name": "David Scherer",
        "username": "dave",
        "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
        "created_at": "2018-04-25T14:12:24.344Z",
        "cooked": "<p>The short version is that any later replication epoch (as ordered by full consensus on the coordinated state) must recover from, and lock against further writes from this epoch through, a quorum of logs guaranteed to overlap with any quorum of logs that can complete a commit in this epoch. So any commit to the \u201cold\u201d transaction subsystem will be unable to complete, and any logs that do accept it will already have been removed permanently from the official chain of custody of version history.</p>\n<p><a href=\"https://news.ycombinator.com/item?id=16879033\" rel=\"nofollow noopener\">This comment on HN</a>, though answering a slightly different objection, gives some insight into how the happy case synchronous replication and consensus work together to provide ACID.</p>",
        "post_number": 10,
        "post_type": 1,
        "posts_count": 27,
        "updated_at": "2018-04-25T14:12:24.344Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 15,
        "reads": 214,
        "readers_count": 213,
        "score": 137.8,
        "yours": false,
        "topic_id": 135,
        "topic_slug": "technical-overview-of-the-database",
        "display_username": "David Scherer",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://news.ycombinator.com/item?id=16879033",
            "internal": false,
            "reflection": false,
            "title": "FoundationDB stores 2N+1 copies of some \"coordination state\" and does a consensu... | Hacker News",
            "clicks": 60
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 22,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/technical-overview-of-the-database/135/10",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 581,
        "name": "Tom Crayford",
        "username": "tcrayford",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/t/47e85d/{size}.png",
        "created_at": "2018-04-25T15:14:09.354Z",
        "cooked": "<p>Ah, that\u2019s great! Thanks. I had missed \u201cthe new set of tlogs has to quorum overlap with the old one\u201d.</p>\n<p>I\u2019m still not 100% clear on how this works fully. What I\u2019m imagining is a worked example talking through what happens in the bad case:</p>\n<p>t0: cluster is running normally, latest version is <code>0</code>, epoch is <code>0</code><br>\nt1: proxy A, master B, and tlogs C, D, E become partitioned from the coordinators (F,G,H)<br>\nt2: client X starts a new transaction (T1) on proxy A<br>\nt3: coordinators (F,G,H) elect a new master (J) and set of tlogs (K, L, M). There\u2019s another proxy already running (N)<br>\nt4: client Y starts a new transaction (T2) on proxy N, getting the read version from master J<br>\nt5: client X commits their transaction (using master B)<br>\nt6: client Y commits their transaction (using master J)<br>\nt7: now state is diverged</p>\n<p>From my understanding, I think that <code>t3</code> is prevented - the coordinators <em>can\u2019t</em> elect a new set of tlogs, because there\u2019s no overlap with a quorum of tlogs from the previous set. So client X can still commit it\u2019s transaction, but Y wouldn\u2019t be able to (assuming it\u2019s on the \u201ccoordinators\u201d side of the partition).</p>\n<p>Is that accurate?</p>\n<p>I think this means that the master and tlogs can always make progress even if they can\u2019t talk to the coordinators. Is that correct too? I assume at some point maybe they fail after not being able to talk to the coordinators, but haven\u2019t seen that obviously in the code yet (but it\u2019s a big and daunting codebase).</p>",
        "post_number": 11,
        "post_type": 1,
        "posts_count": 27,
        "updated_at": "2018-04-25T15:14:09.354Z",
        "reply_count": 2,
        "reply_to_post_number": 10,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 212,
        "readers_count": 211,
        "score": 97.4,
        "yours": false,
        "topic_id": 135,
        "topic_slug": "technical-overview-of-the-database",
        "display_username": "Tom Crayford",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 22,
          "username": "dave",
          "name": "David Scherer",
          "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png"
        },
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 3
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 179,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/technical-overview-of-the-database/135/11",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 583,
        "name": "David Scherer",
        "username": "dave",
        "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
        "created_at": "2018-04-25T15:50:03.649Z",
        "cooked": "<p>You are on the right track.  Recovery won\u2019t even try to write new tlogs into the coordinated state until it\u2019s successfully locked the old ones.  And yes, if all coordinators are partitioned away you might still be able to commit transactions for a while, though I don\u2019t think the system offers any particular guarantees about this.</p>\n<p>The recovery process starts <a href=\"https://github.com/apple/foundationdb/blob/b7ec741f5fdc74c0f5dbe1e38c01aed95bee2a9b/fdbserver/masterserver.actor.cpp#L1077\" rel=\"nofollow noopener\">here</a>.  The following comment from that function might be illuminating, though it looks to be a little out of date in its references to names in the source:</p>\n<pre><code>// Multiple masters prevent conflicts between themselves via CoordinatedState (self-&gt;cstate)\n//  1. If SetMaster succeeds, then by CS's contract, these \"new\" Tlogs are the immediate\n//     successors of the \"old\" ones we are replacing\n//  2. logSystem-&gt;recoverAndEndEpoch ensured that a co-quorum of the \"old\" tLogs were stopped at\n//     versions &lt;= self-&gt;lastEpochEnd, so no versions &gt; self-&gt;lastEpochEnd could be (fully) committed to them.\n//  3. No other master will attempt to commit anything to our \"new\" Tlogs\n//     because it didn't recruit them\n//  4. Therefore, no full commit can come between self-&gt;lastEpochEnd and the first commit\n//     we made to the new Tlogs (self-&gt;recoveryTransactionVersion), and only our own semi-commits can come between our\n//     first commit and the next new TLogs</code></pre>",
        "post_number": 12,
        "post_type": 1,
        "posts_count": 27,
        "updated_at": "2018-04-25T15:50:03.649Z",
        "reply_count": 0,
        "reply_to_post_number": 11,
        "quote_count": 0,
        "incoming_link_count": 7,
        "reads": 210,
        "readers_count": 209,
        "score": 107.0,
        "yours": false,
        "topic_id": 135,
        "topic_slug": "technical-overview-of-the-database",
        "display_username": "David Scherer",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/apple/foundationdb/blob/b7ec741f5fdc74c0f5dbe1e38c01aed95bee2a9b/fdbserver/masterserver.actor.cpp#L1077",
            "internal": false,
            "reflection": false,
            "title": "foundationdb/masterserver.actor.cpp at b7ec741f5fdc74c0f5dbe1e38c01aed95bee2a9b \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 25
          }
        ],
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 179,
          "username": "tcrayford",
          "name": "Tom Crayford",
          "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/t/47e85d/{size}.png"
        },
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 2
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 22,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/technical-overview-of-the-database/135/12",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 591,
        "name": "Alex Miller",
        "username": "alexmiller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "created_at": "2018-04-25T21:43:13.070Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"tcrayford\" data-post=\"11\" data-topic=\"135\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/t/47e85d/48.png\" class=\"avatar\"> tcrayford:</div>\n<blockquote>\n<p>new set of tlogs has to quorum overlap with the old one</p>\n</blockquote>\n</aside>\n<p>Just to be pedantically clear: you must lock a set of old tlogs such that it overlaps with any quorum of old tlogs that could be used to commit before starting a new set of tlogs.  The new tlogs and old tlogs have no quorum interactions.</p>",
        "post_number": 13,
        "post_type": 1,
        "posts_count": 27,
        "updated_at": "2018-04-25T21:43:13.070Z",
        "reply_count": 0,
        "reply_to_post_number": 11,
        "quote_count": 1,
        "incoming_link_count": 5,
        "reads": 204,
        "readers_count": 203,
        "score": 80.8,
        "yours": false,
        "topic_id": 135,
        "topic_slug": "technical-overview-of-the-database",
        "display_username": "Alex Miller",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://forums.foundationdb.org/t/is-there-more-detailed-design-documents/274/2",
            "internal": true,
            "reflection": true,
            "title": "Is there more detailed design documents?",
            "clicks": 12
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 13,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/technical-overview-of-the-database/135/13",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 2763,
        "name": "junius",
        "username": "junius",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/j/f08c70/{size}.png",
        "created_at": "2018-12-01T06:40:57.146Z",
        "cooked": "<p>Has some questions about the resolvers. Assume keys are sharded among resolvers. The previous comment says that the resolver holds the last 5 seconds of committed writes in memory. How do we ensure resolvers get updated once the transaction writes are persisted to the distributed logs?</p>\n<p>For example, transaction1 updates 2 keys, keyA and keyB. Assume there are 2 resolvers, and keyA owned by resolver1 and keyB owned by resolver2. Transaction1 passes the resolver check and gets persisted to the distributed logs. Transaction2 updates keyA and keyB again, and actually conflicts with transaction1. How do we ensure the resolver1 and resolver2 check transaction2 against the value that are committed by transaction1?</p>",
        "post_number": 14,
        "post_type": 1,
        "posts_count": 27,
        "updated_at": "2018-12-01T06:40:57.146Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 4,
        "reads": 141,
        "readers_count": 140,
        "score": 53.2,
        "yours": false,
        "topic_id": 135,
        "topic_slug": "technical-overview-of-the-database",
        "display_username": "junius",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 443,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/technical-overview-of-the-database/135/14",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 2765,
        "name": "junius",
        "username": "junius",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/j/f08c70/{size}.png",
        "created_at": "2018-12-01T07:20:04.295Z",
        "cooked": "<p>How does proxy persist the transaction to the distributed logs? Is there a leader in the logging subsystem? So proxy sends the transaction to leader. Or proxy directly writes to the log servers using like two-phase commit?</p>\n<p>How does proxy coordinate with each other? Following the same example above that both transaction1 and transaction2 update the same keyA and keyB. Is it possible that transaction1 is sent to proxy1, while transaction2 is sent to proxy2? Or both will be routed to the same proxy server?<br>\nFor the case that transaction1 sent to proxy1 and transaction2 to proxy2, assume proxy1 passes the resolver check and starts persisting to the logs. How do we ensure transaction2 on proxy2 wait till transaction1 completes, and then get rejected by the resolver?</p>",
        "post_number": 15,
        "post_type": 1,
        "posts_count": 27,
        "updated_at": "2018-12-01T07:20:04.295Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 141,
        "readers_count": 140,
        "score": 53.0,
        "yours": false,
        "topic_id": 135,
        "topic_slug": "technical-overview-of-the-database",
        "display_username": "junius",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 443,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/technical-overview-of-the-database/135/15",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 2767,
        "name": "gaurav",
        "username": "gaurav",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
        "created_at": "2018-12-01T11:28:16.405Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"junius\" data-post=\"14\" data-topic=\"135\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/j/f08c70/48.png\" class=\"avatar\"> junius:</div>\n<blockquote>\n<p>How do we ensure the resolver1 and resolver2 check transaction2 against the value that are committed by transaction1?</p>\n</blockquote>\n</aside>\n<p>I could be wrong about this, as my understanding is purely based on reading the descriptions in forums: if a resolver determines the transaction to <code>pass</code> the conflict-resolution checks (based on transaction 's read/write conflict ranges sent to it), it would just \u201cassume\u201d all of the transaction\u2019s <code>write-conflict</code> keys that were sent to it as committed (without any regards for whether the transaction eventually succeeded at proxy or not).</p>\n<p>I observe this based on the comment made <a href=\"https://forums.foundationdb.org/t/technical-overview-of-the-database/135/8\">here</a></p>",
        "post_number": 16,
        "post_type": 1,
        "posts_count": 27,
        "updated_at": "2018-12-01T11:28:16.405Z",
        "reply_count": 1,
        "reply_to_post_number": 14,
        "quote_count": 1,
        "incoming_link_count": 2,
        "reads": 130,
        "readers_count": 129,
        "score": 41.0,
        "yours": false,
        "topic_id": 135,
        "topic_slug": "technical-overview-of-the-database",
        "display_username": "gaurav",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 166,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/technical-overview-of-the-database/135/16",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 2768,
        "name": "gaurav",
        "username": "gaurav",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
        "created_at": "2018-12-01T11:57:48.464Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"junius\" data-post=\"15\" data-topic=\"135\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/j/f08c70/48.png\" class=\"avatar\"> junius:</div>\n<blockquote>\n<p>How does proxy persist the transaction to the distributed logs? Is there a leader in the logging subsystem? So proxy sends the transaction to leader. Or proxy directly writes to the log servers using like two-phase commit?</p>\n</blockquote>\n</aside>\n<p>Proxies send the transaction key-values to all the required tlogs and wait for all of those to acknowledge before responding back to the client.</p>\n<p>What I am not sure of is who keeps track of which key ranges are tracked by which tlogs? And what happens if some of the tlog servers fail to commit the transactions (sau one out of the two tlogs failed to commit the data)? How do storage servers ignore the data from tlogs that were able to commit it?</p>\n<aside class=\"quote no-group\" data-username=\"junius\" data-post=\"15\" data-topic=\"135\" data-full=\"true\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/j/f08c70/48.png\" class=\"avatar\"> junius:</div>\n<blockquote>\n<p>How does proxy coordinate with each other? Following the same example above that both transaction1 and transaction2 update the same keyA and keyB. Is it possible that transaction1 is sent to proxy1, while transaction2 is sent to proxy2? Or both will be routed to the same proxy server?<br>\nFor the case that transaction1 sent to proxy1 and transaction2 to proxy2, assume proxy1 passes the resolver check and starts persisting to the logs. How do we ensure transaction2 on proxy2 wait till transaction1 completes, and then get rejected by the resolver?</p>\n</blockquote>\n</aside>\n<p>Resolvers would serialize the transactions.</p>\n<p>Even if different proxies receive transactions <code>t1</code> and <code>t2</code> concurrently, operating on the same two keys, each proxy would contact a common resolver for a given key range. This would ensure that either only one of the transactions succeed and other is rejected - <em>if  <code>t1</code> (or <code>t2</code>), was able to get resolved by both resolvers before <code>t2</code> (or <code>t1</code>)</em>, or if in a case when <em><code>resolver1</code> resolved <code>keyA</code> from <code>t1</code> and <code>resolver2</code> resolved <code>keyB</code> from <code>t2</code>, concurrently</em> - then both these transactions should get rejected, when resolution is attempted on the second key from each transaction.</p>\n<p>But, please wait for someone from FDB team to verify, or correct my observations.</p>",
        "post_number": 17,
        "post_type": 1,
        "posts_count": 27,
        "updated_at": "2018-12-01T11:57:48.464Z",
        "reply_count": 1,
        "reply_to_post_number": 15,
        "quote_count": 1,
        "incoming_link_count": 2,
        "reads": 127,
        "readers_count": 126,
        "score": 40.4,
        "yours": false,
        "topic_id": 135,
        "topic_slug": "technical-overview-of-the-database",
        "display_username": "gaurav",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 166,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/technical-overview-of-the-database/135/17",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 2770,
        "name": "junius",
        "username": "junius",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/j/f08c70/{size}.png",
        "created_at": "2018-12-01T17:44:10.171Z",
        "cooked": "<p>Thanks for the reply! If the resolver assumes the transactions as committed, the resolver would cache the results in-memory. Assume transaction1 is handled by client1. If the proxy crashes before the transaction is persisted to the distributed logs, client1 could retry the transaction. The resolver would be able to pass as it sees the same transaction id (time)?<br>\nIf client1 also crashes, transaction1 will never get persisted to the distributed logs. And resolver will make wrong decision as it assumes transaction1 is committed. So it is possible that some decisions are wrong in the 5s window?</p>",
        "post_number": 18,
        "post_type": 1,
        "posts_count": 27,
        "updated_at": "2018-12-01T17:44:10.171Z",
        "reply_count": 1,
        "reply_to_post_number": 16,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 116,
        "readers_count": 115,
        "score": 33.2,
        "yours": false,
        "topic_id": 135,
        "topic_slug": "technical-overview-of-the-database",
        "display_username": "junius",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 166,
          "username": "gaurav",
          "name": "gaurav",
          "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 443,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/technical-overview-of-the-database/135/18",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 2773,
        "name": "Alex Miller",
        "username": "alexmiller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "created_at": "2018-12-01T20:45:46.543Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"gaurav\" data-post=\"17\" data-topic=\"135\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/g/b487fb/48.png\" class=\"avatar\"> gaurav:</div>\n<blockquote>\n<p>What I am not sure of is who keeps track of which key ranges are tracked by which tlogs?</p>\n</blockquote>\n</aside>\n<p>The messages that are sent from the proxy to the transaction logs are a list of (tags, mutation), where a \u2018tag\u2019 is a short identifier for a particular storage server.  Each storage server is assigned one transaction log as the place that it can receive all the data that it requires, and then additional copies of the data, those required to fulfill the requested replication factor, are spread randomly across the other transaction logs as a form of load balancing.</p>\n<aside class=\"quote no-group\" data-username=\"gaurav\" data-post=\"17\" data-topic=\"135\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/g/b487fb/48.png\" class=\"avatar\"> gaurav:</div>\n<blockquote>\n<p>And what happens if some of the tlog servers fail to commit the transactions (sau one out of the two tlogs failed to commit the data)? How do storage servers ignore the data from tlogs that were able to commit it?</p>\n</blockquote>\n</aside>\n<p>For a tlog to fail to commit, it would need to crash, or throw an io_error would would lead to tlog death as well.  If a transaction log dies, then the entire transaction subsystem gets destroyed and replaced.</p>\n<aside class=\"quote no-group\" data-username=\"gaurav\" data-post=\"17\" data-topic=\"135\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/g/b487fb/48.png\" class=\"avatar\"> gaurav:</div>\n<blockquote>\n<p>Resolvers would serialize the transactions.</p>\n</blockquote>\n</aside>\n<p>The transactions are serialized via the commit timestamp received from the master, and resolvers use that timestamp to know which message from different proxies to process first.  But the major part here is the resolver logic, which was correct.</p>\n<aside class=\"quote no-group\" data-username=\"junius\" data-post=\"18\" data-topic=\"135\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/j/f08c70/48.png\" class=\"avatar\"> junius:</div>\n<blockquote>\n<p>If the proxy crashes before the transaction is persisted to the distributed logs, client1 could retry the transaction. The resolver would be able to pass as it sees the same transaction id (time)?</p>\n</blockquote>\n</aside>\n<p>A client would have received <code>commit_result_unknown</code>, and then retried the transaction.  It\u2019s completely permissible for FDB to commit both the first attempt, and the second retry, as <code>commit_result_unknown</code> means exactly that, your commit may or may not have happened.  This is why it\u2019s strongly recommended that transactions should be idempotent, so that they handle <code>commit_result_unknown</code> correctly.</p>\n<aside class=\"quote no-group\" data-username=\"junius\" data-post=\"18\" data-topic=\"135\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/j/f08c70/48.png\" class=\"avatar\"> junius:</div>\n<blockquote>\n<p>And resolver will make wrong decision as it assumes transaction1 is committed.</p>\n</blockquote>\n</aside>\n<p>In the case of any failures in {proxy, resolver, tlog}, the entire subsystem is torn down and recreated.  Resolvers don\u2019t have any durable state, so after a transaction log fails, they won\u2019t know anything about conflicts in the re-recovered state.  Recoveries also \u201cfast forward\u201d time by 90s, which would kill any in-progress client transactions as well.</p>",
        "post_number": 19,
        "post_type": 1,
        "posts_count": 27,
        "updated_at": "2018-12-01T20:45:46.543Z",
        "reply_count": 1,
        "reply_to_post_number": 17,
        "quote_count": 2,
        "incoming_link_count": 4,
        "reads": 131,
        "readers_count": 130,
        "score": 81.2,
        "yours": false,
        "topic_id": 135,
        "topic_slug": "technical-overview-of-the-database",
        "display_username": "Alex Miller",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 2
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 13,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/technical-overview-of-the-database/135/19",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 2774,
        "name": "junius",
        "username": "junius",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/j/f08c70/{size}.png",
        "created_at": "2018-12-01T22:25:19.678Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"alexmiller\" data-post=\"19\" data-topic=\"135\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/alexmiller/48/326_2.png\" class=\"avatar\"> alexmiller:</div>\n<blockquote>\n<p>In the case of any failures in {proxy, resolver, tlog}, the entire subsystem is torn down and recreated. Resolvers don\u2019t have any durable state, so after a transaction log fails, they won\u2019t know anything about conflicts in the re-recovered state. Recoveries also \u201cfast forward\u201d time by 90s, which would kill any in-progress client transactions as well.</p>\n</blockquote>\n</aside>\n<p>Thanks Alex! So in case of any failure happens at any proxy or resolver, the entire transaction processing subsystem will be restarted. Resolvers will need to load the last 5s transactions from the transaction logging subsystem. All writes will have to wait till the transaction processing subsystem comes back.</p>\n<p>How does the resolver load the last transactions from the logging system? One key would be logged to multiple nodes such as 3 to tolerate the single node/disk failure. For example, the logging system has 6 nodes. key1 is written to n1, n2 and n3. Proxy will directly send the writes to these 3 nodes? If the write succeeds at n1 and fails to reach n2 and n3 (such as network timeout), the transaction subsystem will be restarted as proxy fails to persist the write. Will the logging subsystem be restarted? If not, how does resolver know whether it should load key1 change at n1? Is there a primary node for one key?</p>",
        "post_number": 20,
        "post_type": 1,
        "posts_count": 27,
        "updated_at": "2018-12-01T22:25:19.678Z",
        "reply_count": 1,
        "reply_to_post_number": 19,
        "quote_count": 1,
        "incoming_link_count": 2,
        "reads": 120,
        "readers_count": 119,
        "score": 38.8,
        "yours": false,
        "topic_id": 135,
        "topic_slug": "technical-overview-of-the-database",
        "display_username": "junius",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 443,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/technical-overview-of-the-database/135/20",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      208,
      209,
      226,
      228,
      251,
      277,
      302,
      325,
      572,
      576,
      581,
      583,
      591,
      2763,
      2765,
      2767,
      2768,
      2770,
      2773,
      2774,
      2775,
      2776,
      2777,
      2778,
      2779,
      2780,
      2996
    ]
  },
  "timeline_lookup": [
    [
      1,
      2741
    ],
    [
      8,
      2740
    ],
    [
      9,
      2736
    ],
    [
      14,
      2517
    ],
    [
      16,
      2516
    ],
    [
      26,
      2515
    ],
    [
      27,
      2475
    ]
  ],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "Technical overview of the database",
  "id": 135,
  "title": "Technical overview of the database",
  "posts_count": 27,
  "created_at": "2018-04-20T15:30:31.788Z",
  "views": 12958,
  "reply_count": 15,
  "like_count": 64,
  "last_posted_at": "2019-01-11T23:25:47.462Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "technical-overview-of-the-database",
  "category_id": 7,
  "word_count": 3881,
  "deleted_at": null,
  "user_id": 96,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_135",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 27,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 9,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": null,
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 443,
        "username": "junius",
        "name": "junius",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/j/f08c70/{size}.png",
        "post_count": 6,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 13,
        "username": "alexmiller",
        "name": "Alex Miller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "post_count": 5,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      },
      {
        "id": 54,
        "username": "Evan",
        "name": "Evan Tschannen",
        "avatar_template": "/user_avatar/forums.foundationdb.org/evan/{size}/104_2.png",
        "post_count": 4,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "moderator": true,
        "trust_level": 1
      },
      {
        "id": 166,
        "username": "gaurav",
        "name": "gaurav",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
        "post_count": 4,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 3
      },
      {
        "id": 22,
        "username": "dave",
        "name": "David Scherer",
        "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
        "post_count": 3,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 179,
        "username": "tcrayford",
        "name": "Tom Crayford",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/t/47e85d/{size}.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 63,
        "username": "fire",
        "name": "",
        "avatar_template": "/user_avatar/forums.foundationdb.org/fire/{size}/1480_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 96,
        "username": "idiot",
        "name": "",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/i/f04885/{size}.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 75,
        "username": "hypothere",
        "name": "",
        "avatar_template": "/user_avatar/forums.foundationdb.org/hypothere/{size}/86_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      }
    ],
    "created_by": {
      "id": 96,
      "username": "idiot",
      "name": "",
      "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/i/f04885/{size}.png"
    },
    "last_poster": {
      "id": 54,
      "username": "Evan",
      "name": "Evan Tschannen",
      "avatar_template": "/user_avatar/forums.foundationdb.org/evan/{size}/104_2.png"
    },
    "links": [
      {
        "url": "https://news.ycombinator.com/item?id=16877586",
        "title": "I hadn't heard of FoundationDB before, so I did some digging into the features: ... | Hacker News",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 545,
        "user_id": 63,
        "domain": "news.ycombinator.com",
        "root_domain": "ycombinator.com"
      },
      {
        "url": "https://github.com/apple/foundationdb/blob/master/documentation/sphinx/source/kv-architecture.rst",
        "title": "foundationdb/kv-architecture.rst at master \u00b7 apple/foundationdb \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 359,
        "user_id": 54,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://apple.github.io/foundationdb/transaction-processing.html",
        "title": "Transaction Processing \u2014 FoundationDB 5.1",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 98,
        "user_id": 96,
        "domain": "apple.github.io",
        "root_domain": "apple.github.io"
      },
      {
        "url": "https://www.usenix.org/system/files/conference/atc13/atc13-cidon.pdf",
        "title": null,
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 89,
        "user_id": 13,
        "domain": "www.usenix.org",
        "root_domain": "usenix.org"
      },
      {
        "url": "https://apple.github.io/foundationdb/fault-tolerance.html",
        "title": "Fault Tolerance \u2014 FoundationDB 5.1",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 85,
        "user_id": 96,
        "domain": "apple.github.io",
        "root_domain": "apple.github.io"
      },
      {
        "url": "https://news.ycombinator.com/item?id=16879033",
        "title": "FoundationDB stores 2N+1 copies of some \"coordination state\" and does a consensu... | Hacker News",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 60,
        "user_id": 22,
        "domain": "news.ycombinator.com",
        "root_domain": "ycombinator.com"
      },
      {
        "url": "https://github.com/apple/foundationdb/blob/b7ec741f5fdc74c0f5dbe1e38c01aed95bee2a9b/fdbserver/masterserver.actor.cpp#L1077",
        "title": "foundationdb/masterserver.actor.cpp at b7ec741f5fdc74c0f5dbe1e38c01aed95bee2a9b \u00b7 apple/foundationdb \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 25,
        "user_id": 22,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://forums.foundationdb.org/t/design-document-of-internals-storage/92/4",
        "title": "Design document of internals & storage?",
        "internal": true,
        "attachment": false,
        "reflection": true,
        "clicks": 19,
        "user_id": 54,
        "domain": "forums.foundationdb.org",
        "root_domain": "foundationdb.org"
      },
      {
        "url": "https://forums.foundationdb.org/t/understanding-inter-communication/745/10",
        "title": "Understanding inter communication",
        "internal": true,
        "attachment": false,
        "reflection": true,
        "clicks": 17,
        "user_id": 384,
        "domain": "forums.foundationdb.org",
        "root_domain": "foundationdb.org"
      },
      {
        "url": "https://forums.foundationdb.org/t/bandwidth-consumption-from-one-fdb-client-to-fdbserver-process/407",
        "title": "Bandwidth consumption from one fdb client to fdbserver process",
        "internal": true,
        "attachment": false,
        "reflection": true,
        "clicks": 15,
        "user_id": 243,
        "domain": "forums.foundationdb.org",
        "root_domain": "foundationdb.org"
      },
      {
        "url": "https://forums.foundationdb.org/t/is-there-more-detailed-design-documents/274/2",
        "title": "Is there more detailed design documents?",
        "internal": true,
        "attachment": false,
        "reflection": true,
        "clicks": 12,
        "user_id": 54,
        "domain": "forums.foundationdb.org",
        "root_domain": "foundationdb.org"
      },
      {
        "url": "https://forums.foundationdb.org/t/understanding-inter-communication/745/2",
        "title": "Understanding inter communication",
        "internal": true,
        "attachment": false,
        "reflection": true,
        "clicks": 7,
        "user_id": 13,
        "domain": "forums.foundationdb.org",
        "root_domain": "foundationdb.org"
      },
      {
        "url": "https://forums.foundationdb.org/t/papers-concepts-to-better-understand-foundationdb-architecture/1672/3",
        "title": "Papers/concepts to better understand foundationdb architecture",
        "internal": true,
        "attachment": false,
        "reflection": true,
        "clicks": 5,
        "user_id": 13,
        "domain": "forums.foundationdb.org",
        "root_domain": "foundationdb.org"
      },
      {
        "url": "https://forums.foundationdb.org/t/about-transaction/442/2",
        "title": "About transaction",
        "internal": true,
        "attachment": false,
        "reflection": true,
        "clicks": 3,
        "user_id": 13,
        "domain": "forums.foundationdb.org",
        "root_domain": "foundationdb.org"
      }
    ]
  },
  "bookmarks": []
}