{
  "post_stream": {
    "posts": [
      {
        "id": 1743,
        "name": "gaurav",
        "username": "gaurav",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
        "created_at": "2018-07-28T16:12:29.837Z",
        "cooked": "<p>Hi,</p>\n<p>Is the pattern followed by the code snippet below a valid one? (it could be that there are better ways to achieve same result, but right now, I am trying to validate this pattern).</p>\n<p>Here, it is ensured that the calls on underlying C client library are called inline in <code>function body</code>. Just that the <code>function</code> does not wait for those read futures to be complete.</p>\n<p>What I am not sure is that the underlying C library\u2019s will either <code>(a)</code> block commit call till all these read futures are ready or <code>(b)</code> if it will go ahead with commit call and set the read futures later (probably does not make sense) or <code>(c)</code> it will throw exception if there are pending read operations when commit is called.</p>\n<pre><code class=\"lang-auto\">db.run(tx -&gt; {\n    final CompletableFuture&lt;byte[]&gt; f1 = tx.get(new Tuple().add(\"a\").pack());\n    final CompletableFuture&lt;byte[]&gt; f2 = tx.get(new Tuple().add(\"b\").pack());\n    final CompletableFuture&lt;byte[]&gt; f3 = tx.get(new Tuple().add(\"c\").pack());\n    // ... may be even try to read more values based on above result / or perform some set().\n    return CompletableFuture.allOf(f1, f2, f3);\n}).join();\n</code></pre>\n<p>\u2013<br>\nthanks,<br>\ngaurav</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 6,
        "updated_at": "2018-07-28T16:12:53.916Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 89,
        "reads": 20,
        "readers_count": 19,
        "score": 454.0,
        "yours": false,
        "topic_id": 598,
        "topic_slug": "java-validity-of-tx-get-futures-not-waiting-to-complete-before-tx-commit-being-called",
        "display_username": "gaurav",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 166,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/java-validity-of-tx-get-futures-not-waiting-to-complete-before-tx-commit-being-called/598/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 1746,
        "name": "Clement Pang",
        "username": "panghy",
        "avatar_template": "/user_avatar/forums.foundationdb.org/panghy/{size}/19_2.png",
        "created_at": "2018-07-29T17:12:08.786Z",
        "cooked": "<p>It is valid to commit the transaction before the read returns, the reads will all have the same read version (the first read will trigger getting that) and hence you will get the proper snapshot isolation (side topic, for reads to be linearizable, having the read version is critical). Of course with this you can\u2019t do anything with the results that were read (in the same transaction) if you have already committed the transaction. If the read took a long time (to reach the proper servers for instance), it could throw a past version since the read version is already beyond 5 seconds ago.</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 6,
        "updated_at": "2018-07-29T17:12:08.786Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 20,
        "readers_count": 19,
        "score": 19.0,
        "yours": false,
        "topic_id": 598,
        "topic_slug": "java-validity-of-tx-get-futures-not-waiting-to-complete-before-tx-commit-being-called",
        "display_username": "Clement Pang",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": "",
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 38,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/java-validity-of-tx-get-futures-not-waiting-to-complete-before-tx-commit-being-called/598/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 1747,
        "name": "gaurav",
        "username": "gaurav",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
        "created_at": "2018-07-30T02:58:22.459Z",
        "cooked": "<p>Thanks Clement! I have a few more questions (as I had almost convinced myself that above pattern has to be illegal).</p>\n<ul>\n<li>What if the transaction is closed and committed before the reads have completed by the client library? Would\u2019n\u2019t the C library free up resources of transaction on close(), thereby making it problematic for earlier read() calls to complete?</li>\n<li>What if there were conflicts on server with the reads issued in the transaction? Since the transaction commit() is responsible for conflict checking, once that call is completed, there will be no further conflict checks on reads issued via committed transaction. (Note: reads are not made on snapshot() of db and hence stronger consistency conflict check rules should be applied).</li>\n</ul>\n<p>I am thinking of a following history of events:<br>\n\u2013 tx1.create()<br>\n\u2013 tx2.create()<br>\n\u2013 future(tx1.read(a))<br>\n\u2013 future(tx1.read(b)) (this call is not even sent to server yet by client thread)<br>\n\u2013 a = tx1.read(a) (future completed)<br>\n\u2013 tx1.commit()<br>\n\u2013 tx2.write(b)<br>\n\u2013 tx2.commit()<br>\n\u2013 b = tx1.read(b)  (call gets launched and completed)</p>\n<p>Thanks for hinting the snapshot direction - it is interesting to ask the original question assuming that reads() were issued on snapshot of database.</p>\n<p><strong>PS:</strong> Is there a help section that can explain the precise semantics of what constitutes a conflict in FDB? I am basing above questions from this text from Dev Guide where it says that if any value read during a transaction is modified by any other transaction committed before this one does, it will be considered as a conflict.</p>\n<blockquote>\n<p><a href=\"https://apple.github.io/foundationdb/developer-guide.html#transaction-basics\" class=\"inline-onebox\">Developer Guide \u2014 FoundationDB 7.1</a><br>\nWhen the transaction is ready to be committed, the FoundationDB cluster checks that it does not conflict with any previously committed transaction (i.e. that no value read by a transaction has been modified by another transaction since the read occurred) and, if it does conflict, rejects it.</p>\n</blockquote>\n<p>\u2013<br>\nthanks,<br>\ngaurav</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 6,
        "updated_at": "2018-07-30T02:58:22.459Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 20,
        "readers_count": 19,
        "score": 9.0,
        "yours": false,
        "topic_id": 598,
        "topic_slug": "java-validity-of-tx-get-futures-not-waiting-to-complete-before-tx-commit-being-called",
        "display_username": "gaurav",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://apple.github.io/foundationdb/developer-guide.html#transaction-basics",
            "internal": false,
            "reflection": false,
            "title": "Developer Guide \u2014 FoundationDB 5.2",
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 166,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/java-validity-of-tx-get-futures-not-waiting-to-complete-before-tx-commit-being-called/598/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 1766,
        "name": "Alex Miller",
        "username": "alexmiller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "created_at": "2018-08-01T02:07:14.400Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"gaurav\" data-post=\"3\" data-topic=\"598\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/g/b487fb/48.png\" class=\"avatar\"> gaurav:</div>\n<blockquote>\n<ul>\n<li>What if there were conflicts on server with the reads issued in the transaction? Since the transaction commit() is responsible for conflict checking, once that call is completed, there will be no further conflict checks on reads issued via committed transaction. (Note: reads are not made on snapshot() of db and hence stronger consistency conflict check rules should be applied).</li>\n</ul>\n</blockquote>\n</aside>\n<p>Note that read-only transactions are serialized as of the read version, and not when commit is called.  Unless you add a write conflict range to your transaction, calling commit() will be a no-op.  The <code>.snapshot()</code> method gives you a way to do reads such that they don\u2019t add read conflict ranges.</p>\n<aside class=\"quote no-group\" data-username=\"gaurav\" data-post=\"3\" data-topic=\"598\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/g/b487fb/48.png\" class=\"avatar\"> gaurav:</div>\n<blockquote>\n<p><strong>PS:</strong> Is there a help section that can explain the precise semantics of what constitutes a conflict in FDB?</p>\n</blockquote>\n</aside>\n<p>That pretty much is it.  Each transaction has a read conflict set and a write conflict set.  Transactions can commit if there haven\u2019t been any writes to the database between their read version and commit version that intersect with their read set.  If they commit, then their write conflict set is remembered for future batches of transactions that might conflict with the now-committed transaction.</p>\n<p>There\u2019s nothing special about the way FDB handles this than other databases, so reading other sources works equally well.  I found <a href=\"http://www.cs.rpi.edu/~sibel/csci4380/spring2018/course_notes/transactions_concurrency.html\">these notes</a> from Rensselaer Polytechnic Institute to be moderately easy to follow.  For a formal treatment of the topic, I\u2019d suggest <em>Database Systems: The Complete Book</em> by Garcia-Molina, Ullman, and Widom, Chapter 18.  If you prefer watching a lecture, then I\u2019d recommend Andy Pavlo\u2019s <a href=\"https://www.youtube.com/watch?v=xpQ9fQWa14c&amp;list=PLSE8ODhjZXjYutVzTeAds8xUt1rcmyT7x&amp;index=19\">CMU Database Systems - 19 Timestamp Ordering Concurrency Control</a>.</p>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 6,
        "updated_at": "2018-08-01T02:07:14.400Z",
        "reply_count": 0,
        "reply_to_post_number": 3,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 18,
        "readers_count": 17,
        "score": 18.6,
        "yours": false,
        "topic_id": 598,
        "topic_slug": "java-validity-of-tx-get-futures-not-waiting-to-complete-before-tx-commit-being-called",
        "display_username": "Alex Miller",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://www.youtube.com/watch?v=xpQ9fQWa14c&list=PLSE8ODhjZXjYutVzTeAds8xUt1rcmyT7x&index=19",
            "internal": false,
            "reflection": false,
            "title": "YouTube",
            "clicks": 1
          },
          {
            "url": "http://www.cs.rpi.edu/~sibel/csci4380/spring2018/course_notes/transactions_concurrency.html",
            "internal": false,
            "reflection": false,
            "title": "Transaction Management - Concurrency \u2014 CSCI 4380 Database Systems 1 documentation",
            "clicks": 1
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 13,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/java-validity-of-tx-get-futures-not-waiting-to-complete-before-tx-commit-being-called/598/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 1771,
        "name": "gaurav",
        "username": "gaurav",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
        "created_at": "2018-08-01T09:39:41.147Z",
        "cooked": "<p>Thank you Alex. Appreciate the clarifications and further pointers!</p>",
        "post_number": 5,
        "post_type": 1,
        "posts_count": 6,
        "updated_at": "2018-08-01T09:39:41.147Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 18,
        "readers_count": 17,
        "score": 3.6,
        "yours": false,
        "topic_id": 598,
        "topic_slug": "java-validity-of-tx-get-futures-not-waiting-to-complete-before-tx-commit-being-called",
        "display_username": "gaurav",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 166,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/java-validity-of-tx-get-futures-not-waiting-to-complete-before-tx-commit-being-called/598/5",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 1858,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2018-08-09T16:55:29.882Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"gaurav\" data-post=\"1\" data-topic=\"598\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/g/b487fb/48.png\" class=\"avatar\"> gaurav:</div>\n<blockquote>\n<p>What I am not sure is that the underlying C library\u2019s will either <code>(a)</code> block commit call till all these read futures are ready or <code>(b)</code> if it will go ahead with commit call and set the read futures later (probably does not make sense) or <code>(c)</code> it will throw exception if there are pending read operations when commit is called.</p>\n</blockquote>\n</aside>\n<p>I believe it\u2019s the case that the commit call will block until the reads all complete.</p>",
        "post_number": 6,
        "post_type": 1,
        "posts_count": 6,
        "updated_at": "2018-08-09T16:55:29.882Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 18,
        "readers_count": 17,
        "score": 18.6,
        "yours": false,
        "topic_id": 598,
        "topic_slug": "java-validity-of-tx-get-futures-not-waiting-to-complete-before-tx-commit-being-called",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/java-validity-of-tx-get-futures-not-waiting-to-complete-before-tx-commit-being-called/598/6",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      1743,
      1746,
      1747,
      1766,
      1771,
      1858
    ]
  },
  "timeline_lookup": [
    [
      1,
      2642
    ],
    [
      2,
      2641
    ],
    [
      4,
      2639
    ],
    [
      6,
      2630
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "[Java] Validity of `tx.get()` futures not waiting to complete before `tx.commit()` being called",
  "id": 598,
  "title": "[Java] Validity of `tx.get()` futures not waiting to complete before `tx.commit()` being called",
  "posts_count": 6,
  "created_at": "2018-07-28T16:12:29.768Z",
  "views": 708,
  "reply_count": 1,
  "like_count": 3,
  "last_posted_at": "2018-08-09T16:55:29.882Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "java-validity-of-tx-get-futures-not-waiting-to-complete-before-tx-commit-being-called",
  "category_id": 7,
  "word_count": 1021,
  "deleted_at": null,
  "user_id": 166,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_598",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 6,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 4,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "Read-only transactions",
      "id": 3412,
      "title": "Read-only transactions",
      "slug": "read-only-transactions",
      "posts_count": 5,
      "reply_count": 1,
      "highest_post_number": 5,
      "image_url": null,
      "created_at": "2022-06-30T16:32:48.057Z",
      "last_posted_at": "2022-07-03T01:46:03.779Z",
      "bumped": true,
      "bumped_at": "2022-07-03T01:46:03.779Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 2,
      "views": 776,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 419,
            "username": "doublemax",
            "name": "",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/d/8e7dd6/{size}.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 164,
            "username": "Imperatorx",
            "name": "",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/i/d2c977/{size}.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 15,
            "username": "markus.pilman",
            "name": "Markus Pilman",
            "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
            "admin": true,
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Questions regarding FDB transaction conflict on two concurrent transactions",
      "id": 2913,
      "title": "Questions regarding FDB transaction conflict on two concurrent transactions",
      "slug": "questions-regarding-fdb-transaction-conflict-on-two-concurrent-transactions",
      "posts_count": 10,
      "reply_count": 5,
      "highest_post_number": 10,
      "image_url": null,
      "created_at": "2021-09-28T06:26:34.642Z",
      "last_posted_at": "2021-10-28T08:17:02.264Z",
      "bumped": true,
      "bumped_at": "2021-10-28T09:13:59.130Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 3,
      "views": 2185,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 550,
            "username": "ntrhieu89",
            "name": "Hieu Nguyen",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ntrhieu89/{size}/587_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Read-only operations on FDBTransaction vs ReadSnapshot",
      "id": 616,
      "title": "Read-only operations on FDBTransaction vs ReadSnapshot",
      "slug": "read-only-operations-on-fdbtransaction-vs-readsnapshot",
      "posts_count": 2,
      "reply_count": 0,
      "highest_post_number": 2,
      "image_url": null,
      "created_at": "2018-08-08T04:10:24.449Z",
      "last_posted_at": "2018-08-08T16:36:57.441Z",
      "bumped": true,
      "bumped_at": "2018-08-08T16:36:57.441Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 2,
      "views": 687,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Java API Future patterns",
      "id": 596,
      "title": "Java API Future patterns",
      "slug": "java-api-future-patterns",
      "posts_count": 3,
      "reply_count": 0,
      "highest_post_number": 3,
      "image_url": null,
      "created_at": "2018-07-27T17:42:24.016Z",
      "last_posted_at": "2018-07-28T15:55:46.319Z",
      "bumped": true,
      "bumped_at": "2018-07-28T15:55:46.319Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 700,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "FDBDataBase Usage from Java API",
      "id": 593,
      "title": "FDBDataBase Usage from Java API",
      "slug": "fdbdatabase-usage-from-java-api",
      "posts_count": 10,
      "reply_count": 4,
      "highest_post_number": 10,
      "image_url": null,
      "created_at": "2018-07-27T12:53:36.150Z",
      "last_posted_at": "2019-02-26T21:36:05.940Z",
      "bumped": true,
      "bumped_at": "2019-02-26T21:36:05.940Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 1698,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 517,
            "username": "janderland",
            "name": "Jon Anderson",
            "avatar_template": "/user_avatar/forums.foundationdb.org/janderland/{size}/517_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 166,
        "username": "gaurav",
        "name": "gaurav",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
        "post_count": 3,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 3
      },
      {
        "id": 12,
        "username": "ajbeamon",
        "name": "A.J. Beamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "admin": true,
        "trust_level": 4
      },
      {
        "id": 13,
        "username": "alexmiller",
        "name": "Alex Miller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      },
      {
        "id": 38,
        "username": "panghy",
        "name": "Clement Pang",
        "avatar_template": "/user_avatar/forums.foundationdb.org/panghy/{size}/19_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      }
    ],
    "created_by": {
      "id": 166,
      "username": "gaurav",
      "name": "gaurav",
      "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png"
    },
    "last_poster": {
      "id": 12,
      "username": "ajbeamon",
      "name": "A.J. Beamon",
      "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png"
    },
    "links": [
      {
        "url": "https://www.youtube.com/watch?v=xpQ9fQWa14c&list=PLSE8ODhjZXjYutVzTeAds8xUt1rcmyT7x&index=19",
        "title": "YouTube",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 1,
        "user_id": 13,
        "domain": "www.youtube.com",
        "root_domain": "youtube.com"
      },
      {
        "url": "http://www.cs.rpi.edu/~sibel/csci4380/spring2018/course_notes/transactions_concurrency.html",
        "title": "Transaction Management - Concurrency \u2014 CSCI 4380 Database Systems 1 documentation",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 1,
        "user_id": 13,
        "domain": "www.cs.rpi.edu",
        "root_domain": "rpi.edu"
      }
    ]
  },
  "bookmarks": []
}