{
  "post_stream": {
    "posts": [
      {
        "id": 3978,
        "name": "",
        "username": "andrew.noyes",
        "avatar_template": "/user_avatar/forums.foundationdb.org/andrew.noyes/{size}/443_2.png",
        "created_at": "2019-04-18T17:25:44.074Z",
        "cooked": "<p>(This is mostly just out of curiousity)</p>\n<p>Suppose I want read-write transactions lasting longer than 5 seconds. This could in theory be done in a layer by maintaining an index from version to write conflict range in a special subspace. A transaction would get an initial read version r0, perform reads at this version, and then have a long think about things (maybe it\u2019s a user deciding what to do). To commit the transaction you could get a second read version r1, accumulate the write conflict range from r0 to r1 by reading the index at r1, manually check if the accumulated write conflict range intersects your read conflict range, and if not submit the transaction with read version r1 and the union of all reads performed at r0 and r1 as your read conflict range. If the index at r0 has been purged by some background cleaner job you have to abort the transaction. Basically you check for read-write conflicts from r0 to r1 manually in a layer, and then the resolver checks for read-write conflicts after r1.</p>\n<p>A couple questions:</p>\n<ol>\n<li>Does this seem sound? I <em>think</em> it still achieves serializability but maybe I\u2019m missing something.</li>\n<li>It would be useful to read your transaction\u2019s read conflict range and write conflict range before committing. It would be possible to keep track of this manually but the native api is already keeping track of it so it\u2019d be nice to just reuse that. Maybe there could be \\xff\\xff keys for this.</li>\n</ol>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2019-04-18T17:25:44.074Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 587,
        "reads": 90,
        "readers_count": 89,
        "score": 2953.0,
        "yours": false,
        "topic_id": 1318,
        "topic_slug": "layer-for-read-write-transactions-lasting-longer-than-5-seconds",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://forums.foundationdb.org/t/queries-on-foundation-db-usage-patterns/2330",
            "internal": true,
            "reflection": true,
            "title": "Queries on foundation db usage patterns",
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": "",
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 14,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/layer-for-read-write-transactions-lasting-longer-than-5-seconds/1318/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 3979,
        "name": "Markus Pilman",
        "username": "markus.pilman",
        "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
        "created_at": "2019-04-18T18:00:31.127Z",
        "cooked": "<p>Of course this would work - you are basically just proposing to materialize conflicts. The main problems you would run into:</p>\n<ol>\n<li>Abort-rate could be quite high if there\u2019s enough contention. Your transaction could conflict on your version-index as many transactions will potentially have the same read-version. You could make this better to have an index like (version, randomUID) -&gt; write-set.</li>\n<li>If your transactions run for a very long time, this index would become rather large - therefore your range-query could potentially time-out. So there would be clearly a limit on how long you can have a transaction running.</li>\n<li>Garbage-collection: when do you delete entries from this index? This is basically a distributed systems problem. How do you know when you can truncate at version x? How do you handle client failures? The easiest solution here would be to only allow transactions to run for y second (and you can configure your y).</li>\n</ol>\n<p>The overhead you would introduce would be quite high. Alternatively you could simply set some knobs and increase the 5 second limit (while this is not tested there are no conceptual reasons why you wouldn\u2019t be able to do this). This would be much cheaper.</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2019-04-18T18:00:31.127Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 9,
        "reads": 86,
        "readers_count": 85,
        "score": 67.2,
        "yours": false,
        "topic_id": 1318,
        "topic_slug": "layer-for-read-write-transactions-lasting-longer-than-5-seconds",
        "display_username": "Markus Pilman",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 15,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/layer-for-read-write-transactions-lasting-longer-than-5-seconds/1318/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3980,
        "name": "",
        "username": "andrew.noyes",
        "avatar_template": "/user_avatar/forums.foundationdb.org/andrew.noyes/{size}/443_2.png",
        "created_at": "2019-04-18T18:32:51.121Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"markus.pilman\" data-post=\"2\" data-topic=\"1318\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/markus.pilman/48/379_2.png\" class=\"avatar\"> markus.pilman:</div>\n<blockquote>\n<p>Abort-rate could be quite high if there\u2019s enough contention. Your transaction could conflict on your version-index as many transactions will potentially have the same read-version. You could make this better to have an index like (version, randomUID) -&gt; write-set.</p>\n</blockquote>\n</aside>\n<p>The index here would be <code>commit version -&gt; write-set</code>. For each range read from r0 to r1, any subsequent writes to the index are going to have a key &gt; r1. I don\u2019t think there are issues with contention on this index.</p>\n<aside class=\"quote no-group\" data-username=\"markus.pilman\" data-post=\"2\" data-topic=\"1318\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/markus.pilman/48/379_2.png\" class=\"avatar\"> markus.pilman:</div>\n<blockquote>\n<p>If your transactions run for a very long time, this index would become rather large - therefore your range-query could potentially time-out. So there would be clearly a limit on how long you can have a transaction running.</p>\n</blockquote>\n</aside>\n<p>This is definitely an issue. The other interesting part is how to actually perform the accumulate-write-ranges-and-check-intersection computation efficiently if the index is large.</p>\n<aside class=\"quote no-group\" data-username=\"markus.pilman\" data-post=\"2\" data-topic=\"1318\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/markus.pilman/48/379_2.png\" class=\"avatar\"> markus.pilman:</div>\n<blockquote>\n<p>Garbage-collection: when do you delete entries from this index? This is basically a distributed systems problem. How do you know when you can truncate at version x? How do you handle client failures? The easiest solution here would be to only allow transactions to run for y second (and you can configure your y).</p>\n</blockquote>\n</aside>\n<p>Yup. But no matter what policy you use for purging old versions from the index, as long as you can read r0 when you try to commit you\u2019re safe serializability-wise.</p>\n<p>Edit:</p>\n<aside class=\"quote no-group\" data-username=\"markus.pilman\" data-post=\"2\" data-topic=\"1318\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/markus.pilman/48/379_2.png\" class=\"avatar\"> markus.pilman:</div>\n<blockquote>\n<p>The overhead you would introduce would be quite high. Alternatively you could simply set some knobs and increase the 5 second limit (while this is not tested there are no conceptual reasons why you wouldn\u2019t be able to do this). This would be much cheaper.</p>\n</blockquote>\n</aside>\n<p>That\u2019s true. I guess resolver memory might be a limit here. Also if we\u2019re using the resolver then a recovery would abort all in-flight transactions, where-as with the commit version \u2192 write conflict range index in-flight transactions can span a recovery.</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2019-04-18T18:39:23.932Z",
        "reply_count": 2,
        "reply_to_post_number": 2,
        "quote_count": 1,
        "incoming_link_count": 9,
        "reads": 79,
        "readers_count": 78,
        "score": 70.8,
        "yours": false,
        "topic_id": 1318,
        "topic_slug": "layer-for-read-write-transactions-lasting-longer-than-5-seconds",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": "",
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 14,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/layer-for-read-write-transactions-lasting-longer-than-5-seconds/1318/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3981,
        "name": "Markus Pilman",
        "username": "markus.pilman",
        "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
        "created_at": "2019-04-18T18:39:14.828Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"andrew.noyes\" data-post=\"3\" data-topic=\"1318\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/andrew.noyes/48/443_2.png\" class=\"avatar\"> andrew.noyes:</div>\n<blockquote>\n<p>The index here would be <code>commit version -&gt; write-set</code> .</p>\n</blockquote>\n</aside>\n<p>How do you write this index? You don\u2019t know your own commit version until you committed\u2026 Also if you have batches of 1000 transactions all of them would try to write into the same key\u2026</p>\n<p>I think what you are trying to do is a more expensive variant of:</p>\n<ol>\n<li>make resolvers store much more data so they can verify transactions over a very long period of time (by for example using a disk based storage)</li>\n<li>whenever a client receives a <code>past_version</code> exception from a storage get a new read version and retry in the same transaction.</li>\n<li>as an optimization you could always get the max-version of every read and if one is larger than your initial read-version you can abort as you already know that you will conflict.</li>\n<li>at commit time send your initial read-version to the proxy and let the resolver figure this out for you.</li>\n</ol>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2019-04-18T18:40:31.814Z",
        "reply_count": 1,
        "reply_to_post_number": 3,
        "quote_count": 1,
        "incoming_link_count": 3,
        "reads": 70,
        "readers_count": 69,
        "score": 34.0,
        "yours": false,
        "topic_id": 1318,
        "topic_slug": "layer-for-read-write-transactions-lasting-longer-than-5-seconds",
        "display_username": "Markus Pilman",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 15,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/layer-for-read-write-transactions-lasting-longer-than-5-seconds/1318/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3982,
        "name": "",
        "username": "andrew.noyes",
        "avatar_template": "/user_avatar/forums.foundationdb.org/andrew.noyes/{size}/443_2.png",
        "created_at": "2019-04-18T18:54:26.897Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"markus.pilman\" data-post=\"4\" data-topic=\"1318\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/markus.pilman/48/379_2.png\" class=\"avatar\"> markus.pilman:</div>\n<blockquote>\n<p>How do you write this index? You don\u2019t know your own commit version until you committed\u2026 Also if you have batches of 1000 transactions all of them would try to write into the same key</p>\n</blockquote>\n</aside>\n<p><a href=\"https://apple.github.io/foundationdb/api-python.html#fdb.tuple.Versionstamp\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Python API \u2014 FoundationDB 7.1</a> explains how to handle these issues.</p>\n<aside class=\"quote no-group\" data-username=\"markus.pilman\" data-post=\"4\" data-topic=\"1318\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/markus.pilman/48/379_2.png\" class=\"avatar\"> markus.pilman:</div>\n<blockquote>\n<p>make resolvers store much more data so they can verify transactions over a very long period of time (by for example using a disk based storage)</p>\n</blockquote>\n</aside>\n<p>That would mean resolvers are no longer a stateless role, or that in-flight transactions don\u2019t survive recoveries. Either way it\u2019d be a non-trivial foundationdb core change, so not available to users currently.</p>\n<p>From <a href=\"https://apple.github.io/foundationdb/known-limitations.html#long-running-transactions\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Known Limitations \u2014 FoundationDB 7.1</a>,</p>\n<blockquote>\n<p>If an application wants long transactions because of an external process in the loop, it can perform optimistic validation itself at a higher layer</p>\n</blockquote>\n<p>So I guess \u2018optimistic validation at a higher layer\u2019 is the current best practice here. I\u2019m just wondering how to actually do that.</p>",
        "post_number": 5,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2019-04-18T18:54:26.897Z",
        "reply_count": 1,
        "reply_to_post_number": 4,
        "quote_count": 1,
        "incoming_link_count": 6,
        "reads": 63,
        "readers_count": 62,
        "score": 47.6,
        "yours": false,
        "topic_id": 1318,
        "topic_slug": "layer-for-read-write-transactions-lasting-longer-than-5-seconds",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://apple.github.io/foundationdb/known-limitations.html#long-running-transactions",
            "internal": false,
            "reflection": false,
            "title": "Known Limitations \u2014 FoundationDB 6.0",
            "clicks": 9
          },
          {
            "url": "https://apple.github.io/foundationdb/api-python.html#fdb.tuple.Versionstamp",
            "internal": false,
            "reflection": false,
            "title": "Python API \u2014 FoundationDB 6.0",
            "clicks": 6
          }
        ],
        "read": true,
        "user_title": "",
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 14,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/layer-for-read-write-transactions-lasting-longer-than-5-seconds/1318/5",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3983,
        "name": "Alex Miller",
        "username": "alexmiller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "created_at": "2019-04-18T19:01:13.075Z",
        "cooked": "<p>If we assume a perfect and scaleable implementation of changefeeds, I suppose one could potentially try to subscribe to read keys to monitor them for writes that would cause conflicts later.</p>\n<p>If you wanted to be really fancy, you\u2019d then do something like <a href=\"https://arxiv.org/abs/1603.00542\" rel=\"nofollow noopener\">Repairing Conflicts among MVCC Transactions</a> to be able to fix your transaction and advance its read version rather than abort.</p>",
        "post_number": 6,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2019-04-18T19:01:13.075Z",
        "reply_count": 0,
        "reply_to_post_number": 3,
        "quote_count": 0,
        "incoming_link_count": 2,
        "reads": 59,
        "readers_count": 58,
        "score": 21.8,
        "yours": false,
        "topic_id": 1318,
        "topic_slug": "layer-for-read-write-transactions-lasting-longer-than-5-seconds",
        "display_username": "Alex Miller",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://arxiv.org/abs/1603.00542",
            "internal": false,
            "reflection": false,
            "title": "[1603.00542] Repairing Conflicts among MVCC Transactions",
            "clicks": 10
          }
        ],
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 14,
          "username": "andrew.noyes",
          "name": "",
          "avatar_template": "/user_avatar/forums.foundationdb.org/andrew.noyes/{size}/443_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 13,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/layer-for-read-write-transactions-lasting-longer-than-5-seconds/1318/6",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3984,
        "name": "Markus Pilman",
        "username": "markus.pilman",
        "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
        "created_at": "2019-04-18T19:04:31.247Z",
        "cooked": "<aside class=\"quote no-group quote-modified\" data-username=\"andrew.noyes\" data-post=\"5\" data-topic=\"1318\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/andrew.noyes/48/443_2.png\" class=\"avatar\"> andrew.noyes:</div>\n<blockquote>\n<p><a href=\"https://apple.github.io/foundationdb/api-python.html#fdb.tuple.Versionstamp\" class=\"inline-onebox\">Python API \u2014 FoundationDB 7.1</a> explains how to handle these issues.</p>\n</blockquote>\n</aside>\n<p>Ah I forgot about this feature. But my second point still remains - you would need something like a tuple of version and UID to make sure you don\u2019t conflict on this key.</p>\n<aside class=\"quote no-group\" data-username=\"andrew.noyes\" data-post=\"5\" data-topic=\"1318\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/andrew.noyes/48/443_2.png\" class=\"avatar\"> andrew.noyes:</div>\n<blockquote>\n<p>That would mean resolvers are no longer a stateless role, or that in-flight transactions don\u2019t survive recoveries. Either way it\u2019d be a non-trivial foundationdb core change, so not available to users currently.</p>\n</blockquote>\n</aside>\n<p>I don\u2019t think in-flight transactions can ever survive recoveries. I also don\u2019t believe that this would be a very important features as recoveries are relatively uncommon.</p>\n<aside class=\"quote no-group\" data-username=\"andrew.noyes\" data-post=\"5\" data-topic=\"1318\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/andrew.noyes/48/443_2.png\" class=\"avatar\"> andrew.noyes:</div>\n<blockquote>\n<p>So I guess \u2018optimistic validation at a higher layer\u2019 is the current best practice here. I\u2019m just wondering how to actually do that.</p>\n</blockquote>\n</aside>\n<p>I don\u2019t know <img src=\"https://emoji.discourse-cdn.com/twitter/wink.png?v=12\" title=\":wink:\" class=\"emoji\" alt=\":wink:\" loading=\"lazy\" width=\"20\" height=\"20\"> maybe we should request some documentation from the people who wrote this?</p>",
        "post_number": 7,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2019-04-18T19:04:31.247Z",
        "reply_count": 1,
        "reply_to_post_number": 5,
        "quote_count": 1,
        "incoming_link_count": 3,
        "reads": 61,
        "readers_count": 60,
        "score": 32.2,
        "yours": false,
        "topic_id": 1318,
        "topic_slug": "layer-for-read-write-transactions-lasting-longer-than-5-seconds",
        "display_username": "Markus Pilman",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 15,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/layer-for-read-write-transactions-lasting-longer-than-5-seconds/1318/7",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3988,
        "name": "Alec Grieser",
        "username": "alloc",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "created_at": "2019-04-19T00:02:57.328Z",
        "cooked": "<p>I think you could actually get away without storing any additional data persistently at all if you did the following:</p>\n<ol>\n<li>Keep track of all read conflicts (maybe adding them to an <code>\\xff\\xff</code> key range to read them back from the client). Any mutations are stored in a separate data structure.</li>\n<li>Every, let\u2019s say, 3 seconds, you issue an empty \u201ccommit\u201d against FDB that validates all of the read ranges haven\u2019t changed yet. (At present, one will need to include a dummy write conflict range in the transaction to have the transaction actually get committed. Or one could imagine adding a fairly trivial <code>commit_read_only</code> option.)</li>\n<li>You resume your transaction at a read version that is equal to the commit version of the above transaction (uh, or commit version minus 1, actually) and add in all read conflict ranges from the previous transaction.</li>\n<li>When you\u2019re ready to commit, apply all of the mutations at once.</li>\n</ol>\n<p>I think you would need to either implement RYW yourself here or make your \u201cseparate data structure for storing mutations\u201d a different FDB transaction or something.</p>\n<p>I, um, don\u2019t think this is necessarily a good idea. For one, one creates a lot of resolver traffic sending read conflict ranges back and forth, and I think there are a lot of subtle things to get wrong.</p>\n<p>I also suspect that the abort rate would be higher than desired not because of conflicts with the version history range but just because longer transactions, as they do more work, are more likely to touch more keys and therefore touch a key that changes later.</p>\n<p>I think for long running transactions like this what you\u2019d really want would be able to do would be to acquire locks and just use pessimistic concurrency control. I think this could also be accomplished with a layer, but I think you\u2019d then have to worry about the cost of persisting locks to FDB, which could be high if you\u2019re doing a lot of them.</p>",
        "post_number": 8,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2019-04-19T00:02:57.328Z",
        "reply_count": 0,
        "reply_to_post_number": 7,
        "quote_count": 0,
        "incoming_link_count": 5,
        "reads": 65,
        "readers_count": 64,
        "score": 38.0,
        "yours": false,
        "topic_id": 1318,
        "topic_slug": "layer-for-read-write-transactions-lasting-longer-than-5-seconds",
        "display_username": "Alec Grieser",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 15,
          "username": "markus.pilman",
          "name": "Markus Pilman",
          "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 8,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/layer-for-read-write-transactions-lasting-longer-than-5-seconds/1318/8",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 4003,
        "name": "Markus Pilman",
        "username": "markus.pilman",
        "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
        "created_at": "2019-04-21T03:42:05.249Z",
        "cooked": "<p>I think you are right, what you\u2019re proposing sounds correct to me.</p>\n<p>In practice most long-running transactions are read-only, so I don\u2019t think you would want to have pessimistic concurrency control for those. What we really need for this to work is a versioned storage (like Redwood V2).</p>",
        "post_number": 9,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2019-04-21T03:42:05.249Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 59,
        "readers_count": 58,
        "score": 11.8,
        "yours": false,
        "topic_id": 1318,
        "topic_slug": "layer-for-read-write-transactions-lasting-longer-than-5-seconds",
        "display_username": "Markus Pilman",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 15,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/layer-for-read-write-transactions-lasting-longer-than-5-seconds/1318/9",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 5532,
        "name": "Alex Miller",
        "username": "alexmiller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "created_at": "2019-11-12T22:43:02.952Z",
        "cooked": "<p>I was thinking about this again, and I think there\u2019s a far easier to implement way of doing this?  One could just refresh the read version of the long-running transaction, at the cost of making a resolver do much more work over time:</p>\n<ol>\n<li>Every ~1s, create a new transaction<br>\na) Set the new transaction to have the same read version as the ongoing transaction<br>\nb) Copy <em>only</em> the read conflicts from the ongoing transaction to the new transaction</li>\n<li>Commit this new transaction.<br>\na) If this new transaction commits, then that means none of the read values were changed.  Update the read version of the ongoing transaction to the commit version of the new transaction.<br>\nb) If the new transaction aborted, abort the ongoing transaction.</li>\n<li>Repeat until the long-running transaction is committed.</li>\n</ol>\n<p>It\u2019s not quite this simple, because there\u2019s some complications here about what to do when a <code>get()</code> is concurrently issued while the transaction to refresh the long-running transaction\u2019s read version is running, but this seems like less overhead than maintaining an index of concurrency control in the database.</p>",
        "post_number": 10,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2019-11-12T22:43:02.952Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 8,
        "reads": 49,
        "readers_count": 48,
        "score": 64.8,
        "yours": false,
        "topic_id": 1318,
        "topic_slug": "layer-for-read-write-transactions-lasting-longer-than-5-seconds",
        "display_username": "Alex Miller",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://forums.foundationdb.org/t/transactions-without-mutations/3977/2",
            "internal": true,
            "reflection": true,
            "title": "Transactions without mutations",
            "clicks": 4
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 13,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/layer-for-read-write-transactions-lasting-longer-than-5-seconds/1318/10",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      3978,
      3979,
      3980,
      3981,
      3982,
      3983,
      3984,
      3988,
      4003,
      5532
    ]
  },
  "timeline_lookup": [
    [
      1,
      2378
    ],
    [
      9,
      2376
    ],
    [
      10,
      2170
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "Layer for read-write transactions lasting longer than 5 seconds",
  "id": 1318,
  "title": "Layer for read-write transactions lasting longer than 5 seconds",
  "posts_count": 10,
  "created_at": "2019-04-18T17:25:43.958Z",
  "views": 2043,
  "reply_count": 6,
  "like_count": 1,
  "last_posted_at": "2019-11-12T22:43:02.952Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "layer-for-read-write-transactions-lasting-longer-than-5-seconds",
  "category_id": 5,
  "word_count": 2024,
  "deleted_at": null,
  "user_id": 14,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_1318",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 10,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 4,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "Optimizing a single large transaction ( 10,000 keys)",
      "id": 1961,
      "title": "Optimizing a single large transaction ( 10,000 keys)",
      "slug": "optimizing-a-single-large-transaction-10-000-keys",
      "posts_count": 12,
      "reply_count": 10,
      "highest_post_number": 12,
      "image_url": null,
      "created_at": "2020-02-17T13:36:55.355Z",
      "last_posted_at": "2020-02-24T11:30:42.854Z",
      "bumped": true,
      "bumped_at": "2020-02-24T11:30:42.854Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [
        "performance"
      ],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 2373,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 645,
            "username": "subramaniamr",
            "name": "Subramaniam R",
            "avatar_template": "/user_avatar/forums.foundationdb.org/subramaniamr/{size}/658_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        }
      ]
    },
    {
      "fancy_title": "Why Read Version is necessary for read-write transactions?",
      "id": 2386,
      "title": "Why Read Version is necessary for read-write transactions?",
      "slug": "why-read-version-is-necessary-for-read-write-transactions",
      "posts_count": 13,
      "reply_count": 10,
      "highest_post_number": 13,
      "image_url": null,
      "created_at": "2020-10-12T05:42:44.091Z",
      "last_posted_at": "2020-10-13T04:04:47.663Z",
      "bumped": true,
      "bumped_at": "2020-10-13T04:04:47.663Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 2050,
      "category_id": 8,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 805,
            "username": "roohitavaf",
            "name": "Mohammad Roohitavaf",
            "avatar_template": "/user_avatar/forums.foundationdb.org/roohitavaf/{size}/1026_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Questions regarding FDB transaction conflict on two concurrent transactions",
      "id": 2913,
      "title": "Questions regarding FDB transaction conflict on two concurrent transactions",
      "slug": "questions-regarding-fdb-transaction-conflict-on-two-concurrent-transactions",
      "posts_count": 10,
      "reply_count": 5,
      "highest_post_number": 10,
      "image_url": null,
      "created_at": "2021-09-28T06:26:34.642Z",
      "last_posted_at": "2021-10-28T08:17:02.264Z",
      "bumped": true,
      "bumped_at": "2021-10-28T09:13:59.130Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 3,
      "views": 2185,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 550,
            "username": "ntrhieu89",
            "name": "Hieu Nguyen",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ntrhieu89/{size}/587_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Relax consistency guarantees",
      "id": 1560,
      "title": "Relax consistency guarantees",
      "slug": "relax-consistency-guarantees",
      "posts_count": 18,
      "reply_count": 14,
      "highest_post_number": 19,
      "image_url": null,
      "created_at": "2019-08-05T00:31:11.823Z",
      "last_posted_at": "2019-10-30T15:35:37.702Z",
      "bumped": true,
      "bumped_at": "2019-10-30T15:35:37.702Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 2278,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 542,
            "username": "jonahwest",
            "name": "",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/j/90db22/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 14,
            "username": "andrew.noyes",
            "name": "",
            "avatar_template": "/user_avatar/forums.foundationdb.org/andrew.noyes/{size}/443_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 15,
            "username": "markus.pilman",
            "name": "Markus Pilman",
            "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "A few design-pattern + check-my-understanding questions",
      "id": 1153,
      "title": "A few design-pattern + check-my-understanding questions",
      "slug": "a-few-design-pattern-check-my-understanding-questions",
      "posts_count": 10,
      "reply_count": 6,
      "highest_post_number": 10,
      "image_url": null,
      "created_at": "2019-02-19T15:18:58.329Z",
      "last_posted_at": "2019-02-21T19:51:53.686Z",
      "bumped": true,
      "bumped_at": "2019-02-21T19:51:53.686Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 2273,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 519,
            "username": "JamesThompson",
            "name": "James Thompson",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/j/c67d28/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 173,
            "username": "jkominek",
            "name": "Jay Kominek",
            "avatar_template": "/user_avatar/forums.foundationdb.org/jkominek/{size}/140_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 15,
        "username": "markus.pilman",
        "name": "Markus Pilman",
        "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
        "post_count": 4,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "admin": true,
        "trust_level": 4
      },
      {
        "id": 14,
        "username": "andrew.noyes",
        "name": "",
        "avatar_template": "/user_avatar/forums.foundationdb.org/andrew.noyes/{size}/443_2.png",
        "post_count": 3,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      },
      {
        "id": 13,
        "username": "alexmiller",
        "name": "Alex Miller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      },
      {
        "id": 8,
        "username": "alloc",
        "name": "Alec Grieser",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      }
    ],
    "created_by": {
      "id": 14,
      "username": "andrew.noyes",
      "name": "",
      "avatar_template": "/user_avatar/forums.foundationdb.org/andrew.noyes/{size}/443_2.png"
    },
    "last_poster": {
      "id": 13,
      "username": "alexmiller",
      "name": "Alex Miller",
      "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png"
    },
    "links": [
      {
        "url": "https://arxiv.org/abs/1603.00542",
        "title": "[1603.00542] Repairing Conflicts among MVCC Transactions",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 10,
        "user_id": 13,
        "domain": "arxiv.org",
        "root_domain": "arxiv.org"
      },
      {
        "url": "https://apple.github.io/foundationdb/known-limitations.html#long-running-transactions",
        "title": "Known Limitations \u2014 FoundationDB 6.0",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 9,
        "user_id": 14,
        "domain": "apple.github.io",
        "root_domain": "apple.github.io"
      },
      {
        "url": "https://apple.github.io/foundationdb/api-python.html#fdb.tuple.Versionstamp",
        "title": "Python API \u2014 FoundationDB 6.0",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 6,
        "user_id": 14,
        "domain": "apple.github.io",
        "root_domain": "apple.github.io"
      },
      {
        "url": "https://forums.foundationdb.org/t/transactions-without-mutations/3977/2",
        "title": "Transactions without mutations",
        "internal": true,
        "attachment": false,
        "reflection": true,
        "clicks": 4,
        "user_id": 13,
        "domain": "forums.foundationdb.org",
        "root_domain": "foundationdb.org"
      }
    ]
  },
  "bookmarks": []
}