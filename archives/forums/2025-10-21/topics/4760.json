{
  "post_stream": {
    "posts": [
      {
        "id": 14654,
        "name": "Dan Meyers",
        "username": "danm",
        "avatar_template": "/user_avatar/forums.foundationdb.org/danm/{size}/1393_2.png",
        "created_at": "2025-01-10T13:16:54.909Z",
        "cooked": "<p>Our engineers have just deployed a data pattern that we\u2019ve not seen before, where they create a very large amount of new data in FDB on a periodic basis, and then clean up old versions of that data. It takes a comparatively long time to build a stable view of the data, and handling mutations to the \u2018live\u2019 dataset is complex and error prone, so they build a completely new dataset under a new prefix each (day, week, whatever), adjust a single key which tells the rest of the system which copy to use once it\u2019s stable, and then delete the entire prefix of the old version.</p>\n<p>What we are seeing, when this feature is turned on, is our disk usage just constantly increasing even though they are supposedly deleting old prefixes. My investigations of this led me to <a href=\"https://forums.foundationdb.org/t/data-retention-after-deleting-a-key-range-using-ssd-engine/2190/6\" class=\"inline-onebox\">Data retention after deleting a key range using SSD engine - #6 by gaurav</a>, where I found out that neither <code>ssd-2</code> (what we were using until a few months ago) or <code>ssd-redwood-1</code> (what we are using now, on FDB 7.3) clean up old data on disk by default. The data is retained in the on-disk B+Tree, and only actually compacted/deleted when the tree is completely rebuilt as part of the process being excluded.</p>\n<p>Based on that, enabling <code>perpetual_storage_wiggle=1 storage_migration_type=gradual</code> should help with our erroneous data retention issues, as to my understanding (including when we enabled it for our <code>ssd-2</code> \u2192 <code>ssd-redwood-1</code> migration) is that it effectively excludes a storage process at a time, allows it to empty and completely wipe it\u2019s disk, and then re-includes it to migrate data back via normal rebalancing. As the data is migrated away from the process (and the same or other data later migrated back to it) it is compacted.</p>\n<p>The problem is that this means we have to maintain a very high overhead of \u2018available\u2019 disk. In our <code>dev</code> clusters in particular, we don\u2019t need high performance but we <em>do</em> have quite a lot of data. So we only have 2 storage processes, each on their own EC2 instance, per replication boundary (we\u2019re running in <code>three_data_hall</code> mode, and our replication boundary is the AWS AZ). That means that each process needs to maintain &gt;50% free disk space to be able to hold the entirety of the data from the <em>other</em> process when it is wiggled.</p>\n<p>I\u2019m also not clear on what would happen to the temporarily-moved data after the wiggle was complete. If process A is wiggled, and all it\u2019s data is migrated to process B such that process B is now, say, 80% full on disk, then process A wipes it\u2019s on-disk copies and is re-included so that the K/V data is redistributed between both processes again, will process B remain at 80% disk usage because it hasn\u2019t been completely excluded? So with only 2 storage processes per replication boundary we\u2019re effectively just bouncing that very high usage between them as they are wiggled? Do we need to move to a pattern of more horizontal scaling where we have more processes in a replication boundary such that when one is wiggled the data from it is distributed between the others?</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2025-01-10T13:16:54.909Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 42,
        "reads": 21,
        "readers_count": 20,
        "score": 219.2,
        "yours": false,
        "topic_id": 4760,
        "topic_slug": "is-it-possible-to-enable-perpetual-storage-wiggle-at-the-shard-level-instead-of-the-process-level",
        "display_username": "Dan Meyers",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://forums.foundationdb.org/t/data-retention-after-deleting-a-key-range-using-ssd-engine/2190/6",
            "internal": true,
            "reflection": false,
            "title": "Data retention after deleting a key range using SSD engine",
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 1142,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/is-it-possible-to-enable-perpetual-storage-wiggle-at-the-shard-level-instead-of-the-process-level/4760/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 14655,
        "name": "Dan Meyers",
        "username": "danm",
        "avatar_template": "/user_avatar/forums.foundationdb.org/danm/{size}/1393_2.png",
        "created_at": "2025-01-10T16:34:46.728Z",
        "cooked": "<p>In <a href=\"https://forums.foundationdb.org/t/redwood-perpetuum-moving-data-between-storage-servers/3624/8\" class=\"inline-onebox\">Redwood: perpetuum moving data between storage servers - #8 by SteavedHams</a> <a class=\"mention\" href=\"/u/steavedhams\">@SteavedHams</a> does say that</p>\n<blockquote>\n<p>These decisions make sense in the context of a production FDB cluster with dedicated data volumes, as giving space back to the filesystem is unnecessary (it will be reused within Redwood) and FDB Data Distribution will move/balance key ranges around between Storage Servers which will effectively remove BTree slack and keep logical space usage roughly balanced.</p>\n</blockquote>\n<p>But surely that\u2019s only true when the data being moved/rebalanced sits in the same place in the BTree? If FDB detects a \u2018hot range\u2019 or similar and decides to split it into 2 shards, one of which it moves to another storage process, then it\u2019s quite unlikely that anything else will move <em>onto</em> this process and take up the same \u2018space\u2019 in the tree?</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2025-01-10T16:34:46.728Z",
        "reply_count": 2,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 21,
        "readers_count": 20,
        "score": 19.2,
        "yours": false,
        "topic_id": 4760,
        "topic_slug": "is-it-possible-to-enable-perpetual-storage-wiggle-at-the-shard-level-instead-of-the-process-level",
        "display_username": "Dan Meyers",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://forums.foundationdb.org/t/redwood-perpetuum-moving-data-between-storage-servers/3624/8",
            "internal": true,
            "reflection": false,
            "title": "Redwood: perpetuum moving data between storage servers",
            "clicks": 3
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 1142,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/is-it-possible-to-enable-perpetual-storage-wiggle-at-the-shard-level-instead-of-the-process-level/4760/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 14656,
        "name": "Dan Meyers",
        "username": "danm",
        "avatar_template": "/user_avatar/forums.foundationdb.org/danm/{size}/1393_2.png",
        "created_at": "2025-01-10T16:37:05.908Z",
        "cooked": "<p>Aah, from <a href=\"https://forums.foundationdb.org/t/maximum-file-size-on-ext4/4420/3\" class=\"inline-onebox\">Maximum file size on ext4 - #3 by SteavedHams</a></p>\n<blockquote>\n<p>One reason for this is that FDB shuffles data around a good bit in response to writes, and any time the cluster relocates a data range from one Redwood instance to another it is effectively \u201ccompacted\u201d as the destination will have a condensed low-slack (or even <em>negative</em> slack) subtree of that data and the source will delete the subtree completely which frees all of its blocks.</p>\n</blockquote>\n<p>So if a shard is moved the entire subtree moves, so disk space <em>can</em> be (and is) reclaimed on the origin process?</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2025-01-10T16:37:05.908Z",
        "reply_count": 0,
        "reply_to_post_number": 2,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 20,
        "readers_count": 19,
        "score": 4.0,
        "yours": false,
        "topic_id": 4760,
        "topic_slug": "is-it-possible-to-enable-perpetual-storage-wiggle-at-the-shard-level-instead-of-the-process-level",
        "display_username": "Dan Meyers",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://forums.foundationdb.org/t/maximum-file-size-on-ext4/4420/3",
            "internal": true,
            "reflection": false,
            "title": "Maximum file size on ext4",
            "clicks": 1
          }
        ],
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 1142,
          "username": "danm",
          "name": "Dan Meyers",
          "avatar_template": "/user_avatar/forums.foundationdb.org/danm/{size}/1393_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 1142,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/is-it-possible-to-enable-perpetual-storage-wiggle-at-the-shard-level-instead-of-the-process-level/4760/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 14657,
        "name": "",
        "username": "Imperatorx",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/i/d2c977/{size}.png",
        "created_at": "2025-01-10T16:37:45.605Z",
        "cooked": "<p>I can\u2019t answer the wiggle part, but we were facing a <a href=\"https://forums.foundationdb.org/t/continous-growth-of-redwood-disk-usage-with-no-client-connected-possible-bug/3659\">similar issue</a>, (workload that continously inserts new data, but removes old data at the tail) that turned out to be related how redwood handles page slack on page splits.</p>\n<aside class=\"quote no-group\" data-username=\"danm\" data-post=\"1\" data-topic=\"4760\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/danm/48/1393_2.png\" class=\"avatar\"> danm:</div>\n<blockquote>\n<p>The data is retained in the on-disk B+Tree, and only actually compacted/deleted when the tree is completely rebuilt as part of the process being excluded.</p>\n</blockquote>\n</aside>\n<p>This is true, but when you wipe the data, the deleted pages should be immediately available to store new data, even though they are not returned to the OS.</p>\n<p>You can validate this by opening up the trace logs from a storage server and look for <code>StorageMetrics</code> events, where <code>KvstoreBytesFree</code> will be smaller than <code>KvstoreBytesAvailable</code>. I think this is also exposed in <code>status json</code> for the processes.</p>\n<p>It is easiest to validate when there is a log and and a storage role on the same disk, the size avilable for the log will reflect the OS free space, but the size available for the storage will include the deleted (now free) pages.</p>\n<p>My understanding is that if you have 100GB of old data, add 100GB of new data, then your OS will report 200GB used data, when you delete the old set, this won\u2019t change. But when you insert the next batch, it should be able to use the free pages, and disk usage should not grow too much beyond 200GB</p>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2025-01-10T16:37:45.605Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 1,
        "incoming_link_count": 1,
        "reads": 19,
        "readers_count": 18,
        "score": 28.8,
        "yours": false,
        "topic_id": 4760,
        "topic_slug": "is-it-possible-to-enable-perpetual-storage-wiggle-at-the-shard-level-instead-of-the-process-level",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://forums.foundationdb.org/t/continous-growth-of-redwood-disk-usage-with-no-client-connected-possible-bug/3659",
            "internal": true,
            "reflection": false,
            "title": "Continous growth of Redwood disk usage with no client connected, possible bug?",
            "clicks": 9
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 164,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/is-it-possible-to-enable-perpetual-storage-wiggle-at-the-shard-level-instead-of-the-process-level/4760/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 14658,
        "name": "Dan Meyers",
        "username": "danm",
        "avatar_template": "/user_avatar/forums.foundationdb.org/danm/{size}/1393_2.png",
        "created_at": "2025-01-10T17:08:49.065Z",
        "cooked": "<p>Wow. That is a <em>very</em> useful thread. I have a lot of stats to go and fetch and several knobs to try tweaking based on the output. Thanks very much!</p>",
        "post_number": 5,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2025-01-10T17:08:49.065Z",
        "reply_count": 0,
        "reply_to_post_number": 4,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 17,
        "readers_count": 16,
        "score": 3.4,
        "yours": false,
        "topic_id": 4760,
        "topic_slug": "is-it-possible-to-enable-perpetual-storage-wiggle-at-the-shard-level-instead-of-the-process-level",
        "display_username": "Dan Meyers",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 164,
          "username": "Imperatorx",
          "name": "",
          "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/i/d2c977/{size}.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 1142,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/is-it-possible-to-enable-perpetual-storage-wiggle-at-the-shard-level-instead-of-the-process-level/4760/5",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 14662,
        "name": "Steve Atherton",
        "username": "SteavedHams",
        "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png",
        "created_at": "2025-01-12T05:13:19.402Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"danm\" data-post=\"2\" data-topic=\"4760\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/danm/48/1393_2.png\" class=\"avatar\"> danm:</div>\n<blockquote>\n<p>But surely that\u2019s only true when the data being moved/rebalanced sits in the same place in the BTree?</p>\n</blockquote>\n</aside>\n<p>No, this is not the case.  I\u2019m not sure what your mental model of a BTree is but there is no design I am familiar with where freed nodes are restricted to only containing data within the range of values which they previously stored.</p>\n<p>A BTree is a collection of nodes which link together in a tree topology such that there is a Root node which links to child nodes which in turn link to more child nodes until a Leaf node is reached after H links where H is the height (or number of levels) of the tree.  A particular node\u2019s location in the tree is based on which node links to it, and the node links are arranged such that there is a total ordering of records and only 1 valid location for any particular record.</p>\n<p>In Redwood, removal of a large data range means unlinking its subtree equivalent and placing the blocks which held the nodes of that subtree onto a free block queue which is popped from when space for a node is needed such as when the BTree grows.</p>\n<p>As a concrete example, if you delete 1GB of records between keys A and B, your data file will not shrink but the space those records used will exist on an internal free list.  If you then insert 1GB of records between keys X and Y, it will reuse the previously freed space so your data file will not need to grow.</p>\n<p>The reason the data file does not shrink when it contains a lot of free space is that the free space is generally located throughout the file (aka \u201cfragmented\u201d) so there is no <em>cheap</em> way to truncate the file as first the free space must be consolidated to the end of the file.</p>",
        "post_number": 6,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2025-01-12T05:13:19.402Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 1,
        "incoming_link_count": 1,
        "reads": 17,
        "readers_count": 16,
        "score": 58.4,
        "yours": false,
        "topic_id": 4760,
        "topic_slug": "is-it-possible-to-enable-perpetual-storage-wiggle-at-the-shard-level-instead-of-the-process-level",
        "display_username": "Steve Atherton",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": "",
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 3
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 7,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/is-it-possible-to-enable-perpetual-storage-wiggle-at-the-shard-level-instead-of-the-process-level/4760/6",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 14671,
        "name": "Dan Meyers",
        "username": "danm",
        "avatar_template": "/user_avatar/forums.foundationdb.org/danm/{size}/1393_2.png",
        "created_at": "2025-01-17T17:21:58.458Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"SteavedHams\" data-post=\"6\" data-topic=\"4760\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/steavedhams/48/18_2.png\" class=\"avatar\"> SteavedHams:</div>\n<blockquote>\n<p>I\u2019m not sure what your mental model of a BTree is</p>\n</blockquote>\n</aside>\n<p>I think the answer to that is simply \u201can incorrect one\u201d, or at least \u201cone with some serious understanding gaps about the underlying implementation\u201d <img src=\"https://emoji.discourse-cdn.com/twitter/wink.png?v=12\" title=\":wink:\" class=\"emoji\" alt=\":wink:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n<p>I was thinking that for speed of reads across ranges the data was actually being structured on disk so that information in \u2018close\u2019 nodes of the tree was also close on disk. I realise now that\u2019s complete rubbish. It <em>might</em> have given some read performance improvement on spinning rust, but would have necessitated moving a lot more data whenever the tree needed to expand, so would have been horrendous for writes. And it wouldn\u2019t give any improvement on solid-state. So I was just\u2026 very, very wrong.</p>\n<p>Anyway, thank you for your clarification. We <em>might</em> have an issue with too much slack, I still have to confirm that, but it\u2019s likely that the new service is just writing a lot more data than we expected from prior calculations.</p>",
        "post_number": 7,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2025-01-17T17:21:58.458Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 13,
        "readers_count": 12,
        "score": 7.6,
        "yours": false,
        "topic_id": 4760,
        "topic_slug": "is-it-possible-to-enable-perpetual-storage-wiggle-at-the-shard-level-instead-of-the-process-level",
        "display_username": "Dan Meyers",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 1142,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/is-it-possible-to-enable-perpetual-storage-wiggle-at-the-shard-level-instead-of-the-process-level/4760/7",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 14674,
        "name": "Steve Atherton",
        "username": "SteavedHams",
        "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png",
        "created_at": "2025-01-17T19:11:06.139Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"danm\" data-post=\"7\" data-topic=\"4760\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/danm/48/1393_2.png\" class=\"avatar\"> danm:</div>\n<blockquote>\n<p>I think the answer to that is simply \u201can incorrect one\u201d,</p>\n</blockquote>\n</aside>\n<p>I was pretty sure of that part <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\">  I couldn\u2019t tell where the gap was so I figured I\u2019d just cover everything from scratch.</p>\n<p>You are correct that it\u2019s impractically expensive to maintain block level record adjacency, and even if it were done the physical data locations inside an SSD would be quite different due to how flash storage works so it wouldn\u2019t necessarily help.</p>\n<p>FWIW, adjacent Leaf nodes in Redwood <em>can</em> tend to be adjacent in the data file under the right conditions.  When a Redwood instance is initially loaded with data via many batched chunks of sequential records (such as with FDB\u2019s normal data movement), the data file will grow as new ranges of records are added to the end so many of the Leaf nodes in those ranges will be adjacent.  Random edits will fragment this over time.  However, since block re-usage in Redwood is often in FIFO order it is possible that a write pattern of mostly inserts and clears of non-trivial batches of adjacent records would result in maintaining a significant amount of Leaf node adjacency within the data file.</p>\n<p>But why would this matter, given the second paragraph?  Redwood often reads or writes sibling Leaf nodes in parallel, so if those result in adjacent block requests on a block device then the linux kernel can merge them into a single IO request to the disk.  This yields a small overhead reduction, but more importantly if the block device is on a block service such as EBS then this merging reduces the number of IOPS which can save cost since IOPS is usually a billing dimension.</p>\n<p>You can measure this reduction by looking at the <code>Type=ProcessMetrics</code> trace log events, where <code>File[Writes|Reads]</code> is the number of logical IO operations done on the file for the <code>Elapsed</code> period and <code>Disk[Writes|Reads]</code> is the number of operations the OS has completed to the block device during that period.</p>",
        "post_number": 8,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2025-01-19T09:26:12.081Z",
        "reply_count": 0,
        "reply_to_post_number": 7,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 13,
        "readers_count": 12,
        "score": 17.6,
        "yours": false,
        "topic_id": 4760,
        "topic_slug": "is-it-possible-to-enable-perpetual-storage-wiggle-at-the-shard-level-instead-of-the-process-level",
        "display_username": "Steve Atherton",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": "",
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 7,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/is-it-possible-to-enable-perpetual-storage-wiggle-at-the-shard-level-instead-of-the-process-level/4760/8",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 14681,
        "name": "Dan Meyers",
        "username": "danm",
        "avatar_template": "/user_avatar/forums.foundationdb.org/danm/{size}/1393_2.png",
        "created_at": "2025-01-20T16:51:11.039Z",
        "cooked": "<p>Ooh, very interesting. Thank you!</p>\n<p>Yes, we had noticed as we went from 7.1 <code>ssd-2</code> \u2192 7.3 <code>ssd-2</code> that we could achieve noticeably higher performance (push more iops) from a single <code>fdbserver</code> process running the <code>storage</code> role, which we thought was related to the changes made to parallelise disk calls (? I\u2019m trying to remember what I read in the upgrade notes) rather than waiting for an individual fetch call to return before issuing the next one. My recollection is that the older system from 7.1 was very disk latency sensitive, which made it not-great with remote attached storage like EBS.</p>\n<p>When we then went from 7.3 <code>ssd-2</code> \u2192 7.3 <code>ssd-redwood-1</code> we saw a pretty massive drop in reported iops usage for the same level of performance, which was also really nice for potential future cost savings <img src=\"https://emoji.discourse-cdn.com/twitter/tada.png?v=12\" title=\":tada:\" class=\"emoji\" alt=\":tada:\" loading=\"lazy\" width=\"20\" height=\"20\">.</p>",
        "post_number": 9,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2025-01-20T16:55:56.277Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 2,
        "reads": 13,
        "readers_count": 12,
        "score": 17.6,
        "yours": false,
        "topic_id": 4760,
        "topic_slug": "is-it-possible-to-enable-perpetual-storage-wiggle-at-the-shard-level-instead-of-the-process-level",
        "display_username": "Dan Meyers",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 1142,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/is-it-possible-to-enable-perpetual-storage-wiggle-at-the-shard-level-instead-of-the-process-level/4760/9",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 14682,
        "name": "Steve Atherton",
        "username": "SteavedHams",
        "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png",
        "created_at": "2025-01-21T01:08:47.776Z",
        "cooked": "<p>The 7.1 to 7.3 change is likely due to the new streaming range read feature, which data movement in the cluster can use.  It eliminates the round trip latency between consecutive range read result chunks for large range reads by fetching the next several (up to 20 I think) chunks of the key range (1 or 2 MB each) on the server side in parallel, and then returns them without waiting for the client to request them.  This is a Storage Server feature so it works with any storage engine.  Beyond this, Redwood will further boost range read performance because it can parallelize the read ops of sibling BTree nodes <em>within</em> the different key range chunks read by the Storage Server whereas the <code>ssd-2</code> engine will do a serial traversal of the range.</p>",
        "post_number": 10,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2025-01-22T00:36:19.506Z",
        "reply_count": 0,
        "reply_to_post_number": 9,
        "quote_count": 0,
        "incoming_link_count": 3,
        "reads": 13,
        "readers_count": 12,
        "score": 47.6,
        "yours": false,
        "topic_id": 4760,
        "topic_slug": "is-it-possible-to-enable-perpetual-storage-wiggle-at-the-shard-level-instead-of-the-process-level",
        "display_username": "Steve Atherton",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": "",
        "reply_to_user": {
          "id": 1142,
          "username": "danm",
          "name": "Dan Meyers",
          "avatar_template": "/user_avatar/forums.foundationdb.org/danm/{size}/1393_2.png"
        },
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 2
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 7,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/is-it-possible-to-enable-perpetual-storage-wiggle-at-the-shard-level-instead-of-the-process-level/4760/10",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      14654,
      14655,
      14656,
      14657,
      14658,
      14662,
      14671,
      14674,
      14681,
      14682
    ]
  },
  "timeline_lookup": [
    [
      1,
      284
    ],
    [
      6,
      283
    ],
    [
      7,
      277
    ],
    [
      9,
      274
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "Is it possible to enable `perpetual_storage_wiggle` at the &lsquo;shard&rsquo; level instead of the &lsquo;process&rsquo; level?",
  "id": 4760,
  "title": "Is it possible to enable `perpetual_storage_wiggle` at the 'shard' level instead of the 'process' level?",
  "posts_count": 10,
  "created_at": "2025-01-10T13:16:54.850Z",
  "views": 149,
  "reply_count": 4,
  "like_count": 7,
  "last_posted_at": "2025-01-21T01:08:47.776Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "is-it-possible-to-enable-perpetual-storage-wiggle-at-the-shard-level-instead-of-the-process-level",
  "category_id": 7,
  "word_count": 2230,
  "deleted_at": null,
  "user_id": 1142,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_4760",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 10,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 3,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "Redwood: perpetuum moving data between storage servers",
      "id": 3624,
      "title": "Redwood: perpetuum moving data between storage servers",
      "slug": "redwood-perpetuum-moving-data-between-storage-servers",
      "posts_count": 8,
      "reply_count": 4,
      "highest_post_number": 8,
      "image_url": "https://global.discourse-cdn.com/foundationdb/optimized/2X/3/3e4cc1a27172740e9f813dacc184e598e46bbbd9_2_971x1024.png",
      "created_at": "2022-10-26T15:54:56.337Z",
      "last_posted_at": "2022-11-15T09:56:35.262Z",
      "bumped": true,
      "bumped_at": "2023-08-22T17:05:50.717Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 2,
      "views": 827,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 711,
            "username": "osamarin",
            "name": "Oleg Samarin",
            "avatar_template": "/user_avatar/forums.foundationdb.org/osamarin/{size}/905_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 15,
            "username": "markus.pilman",
            "name": "Markus Pilman",
            "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 7,
            "username": "SteavedHams",
            "name": "Steve Atherton",
            "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Data retention after deleting a key range using SSD engine",
      "id": 2190,
      "title": "Data retention after deleting a key range using SSD engine",
      "slug": "data-retention-after-deleting-a-key-range-using-ssd-engine",
      "posts_count": 9,
      "reply_count": 5,
      "highest_post_number": 9,
      "image_url": null,
      "created_at": "2020-06-18T16:06:24.766Z",
      "last_posted_at": "2020-06-22T12:07:30.047Z",
      "bumped": true,
      "bumped_at": "2020-06-22T12:07:30.047Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 4,
      "views": 1379,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 481,
            "username": "mikerhodes",
            "name": "Mike Rhodes",
            "avatar_template": "/user_avatar/forums.foundationdb.org/mikerhodes/{size}/480_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 714,
            "username": "tuk",
            "name": "",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/t/b5ac83/{size}.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 7,
            "username": "SteavedHams",
            "name": "Steve Atherton",
            "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        }
      ]
    },
    {
      "fancy_title": "FoundationDB cluster performance issue - Periods of high disk I/O and sustained high latency",
      "id": 2184,
      "title": "FoundationDB cluster performance issue - Periods of high disk I/O and sustained high latency",
      "slug": "foundationdb-cluster-performance-issue-periods-of-high-disk-i-o-and-sustained-high-latency",
      "posts_count": 22,
      "reply_count": 17,
      "highest_post_number": 22,
      "image_url": null,
      "created_at": "2020-06-15T15:45:43.650Z",
      "last_posted_at": "2020-07-06T06:50:56.594Z",
      "bumped": true,
      "bumped_at": "2020-07-06T06:50:56.594Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [
        "performance"
      ],
      "tags_descriptions": {},
      "like_count": 2,
      "views": 2571,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 779,
            "username": "imtdk",
            "name": null,
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/i/22d042/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 747,
            "username": "ashishgupta",
            "name": "Ashish Gupta",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/a/c67d28/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 7,
            "username": "SteavedHams",
            "name": "Steve Atherton",
            "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        }
      ]
    },
    {
      "fancy_title": "FDB cluster rebalance endless loop",
      "id": 3478,
      "title": "FDB cluster rebalance endless loop",
      "slug": "fdb-cluster-rebalance-endless-loop",
      "posts_count": 4,
      "reply_count": 2,
      "highest_post_number": 4,
      "image_url": "https://global.discourse-cdn.com/foundationdb/original/2X/d/d6335950a54d7f61d8705fbeecc611191c0d6ccc.png",
      "created_at": "2022-08-01T03:05:06.481Z",
      "last_posted_at": "2022-08-05T03:04:37.062Z",
      "bumped": true,
      "bumped_at": "2023-01-17T14:43:29.522Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 743,
      "category_id": 17,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 1126,
            "username": "CodingSuen",
            "name": "CodingSuen",
            "avatar_template": "/user_avatar/forums.foundationdb.org/codingsuen/{size}/1367_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Discussion thread for new storage engine ideas",
      "id": 101,
      "title": "Discussion thread for new storage engine ideas",
      "slug": "discussion-thread-for-new-storage-engine-ideas",
      "posts_count": 31,
      "reply_count": 16,
      "highest_post_number": 33,
      "image_url": null,
      "created_at": "2018-04-20T06:11:56.229Z",
      "last_posted_at": "2020-02-18T21:37:22.164Z",
      "bumped": true,
      "bumped_at": "2020-02-18T21:37:22.164Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 31,
      "views": 15718,
      "category_id": 5,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 68,
            "username": "daverosenthal",
            "name": "Dave Rosenthal",
            "avatar_template": "/user_avatar/forums.foundationdb.org/daverosenthal/{size}/51_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 257,
            "username": "cih.y2k",
            "name": "cih.y2k",
            "avatar_template": "/user_avatar/forums.foundationdb.org/cih.y2k/{size}/423_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 419,
            "username": "doublemax",
            "name": "",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/d/8e7dd6/{size}.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 1,
            "username": "davelester",
            "name": "Dave Lester",
            "avatar_template": "/user_avatar/forums.foundationdb.org/davelester/{size}/1927_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 1142,
        "username": "danm",
        "name": "Dan Meyers",
        "avatar_template": "/user_avatar/forums.foundationdb.org/danm/{size}/1393_2.png",
        "post_count": 6,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      },
      {
        "id": 7,
        "username": "SteavedHams",
        "name": "Steve Atherton",
        "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png",
        "post_count": 3,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      },
      {
        "id": 164,
        "username": "Imperatorx",
        "name": "",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/i/d2c977/{size}.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      }
    ],
    "created_by": {
      "id": 1142,
      "username": "danm",
      "name": "Dan Meyers",
      "avatar_template": "/user_avatar/forums.foundationdb.org/danm/{size}/1393_2.png"
    },
    "last_poster": {
      "id": 7,
      "username": "SteavedHams",
      "name": "Steve Atherton",
      "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png"
    },
    "links": [
      {
        "url": "https://forums.foundationdb.org/t/continous-growth-of-redwood-disk-usage-with-no-client-connected-possible-bug/3659",
        "title": "Continous growth of Redwood disk usage with no client connected, possible bug?",
        "internal": true,
        "attachment": false,
        "reflection": false,
        "clicks": 9,
        "user_id": 164,
        "domain": "forums.foundationdb.org",
        "root_domain": "foundationdb.org"
      },
      {
        "url": "https://forums.foundationdb.org/t/redwood-perpetuum-moving-data-between-storage-servers/3624/8",
        "title": "Redwood: perpetuum moving data between storage servers",
        "internal": true,
        "attachment": false,
        "reflection": false,
        "clicks": 3,
        "user_id": 1142,
        "domain": "forums.foundationdb.org",
        "root_domain": "foundationdb.org"
      },
      {
        "url": "https://forums.foundationdb.org/t/maximum-file-size-on-ext4/4420/3",
        "title": "Maximum file size on ext4",
        "internal": true,
        "attachment": false,
        "reflection": false,
        "clicks": 1,
        "user_id": 1142,
        "domain": "forums.foundationdb.org",
        "root_domain": "foundationdb.org"
      }
    ]
  },
  "bookmarks": []
}