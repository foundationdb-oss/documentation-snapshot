{
  "post_stream": {
    "posts": [
      {
        "id": 288,
        "name": "",
        "username": "pH14",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ph14/{size}/92_2.png",
        "created_at": "2018-04-21T05:03:54.773Z",
        "cooked": "<p>I\u2019m trying to better understand the FDB performance model relative to something like HBase / BigTable. With an HBase table, a lot of attention has to be paid to generating even / relevant region splits at table creation + hashing the row keys for good distribution + potentially salting heavily hit rowkey ranges, all in order to avoid hotspotting individual region servers. Do those same types of locality considerations carry over to FDB?</p>\n<p>Some questions that come to mind:</p>\n<ul>\n<li>\n<p>if there were a single key that\u2019s inundated with write requests, what kind of trouble could that cause overall? Does it degrade performance of the replicas that own that key, or could it push them over entirely? What does it mean for the rest of the cluster?</p>\n</li>\n<li>\n<p>same question as ^ for but a read request deluge \u2013 <a href=\"https://apple.github.io/foundationdb/known-limitations.html#limited-read-load-balancing\" rel=\"nofollow noopener\">https://apple.github.io/foundationdb/known-limitations.html#limited-read-load-balancing</a> suggests some small degree of load balancing, but how do the nodes degrade if the replicas aren\u2019t sufficient?</p>\n</li>\n<li>\n<p>if an application generates sequential keys but never needs range reads, is it worthwhile to hash the keys preemptively for even distribution? e.g. rather than storing <code>(subspace, sequential_key)</code>, instead store <code>(subspace, hash(sequential_key))</code> when the application only needs multi-gets.</p>\n</li>\n<li>\n<p>when FDB is shuffling data to rebalance, how does it choose which keys to shuffle? Does it do it on a per-key/subspace/some-other-boundary basis? <a href=\"https://apple.github.io/foundationdb/features.html#load-balancing\" rel=\"nofollow noopener\">https://apple.github.io/foundationdb/features.html#load-balancing</a> suggests some level of continuous movement, but it\u2019s not clear how those decisions are made.</p>\n</li>\n<li>\n<p>suppose there\u2019s a write-intensive application that\u2019s writes heavily to particular subspaces at a time. If / when does it become worthwhile to split those writes across multiple subspaces?</p>\n</li>\n</ul>\n<p>I\u2019m sure I\u2019ll have more questions as I continue to dig in\u2026 very excited to see FDB alive and well again <img src=\"https://emoji.discourse-cdn.com/twitter/sunny.png?v=5\" title=\":sunny:\" class=\"emoji\" alt=\":sunny:\"></p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2018-04-21T05:03:54.773Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 1909,
        "reads": 210,
        "readers_count": 209,
        "score": 9596.0,
        "yours": false,
        "topic_id": 168,
        "topic_slug": "keyspace-partitions-performance",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://apple.github.io/foundationdb/known-limitations.html#limited-read-load-balancing",
            "internal": false,
            "reflection": false,
            "title": "Known Limitations \u2014 FoundationDB 5.1",
            "clicks": 36
          },
          {
            "url": "https://apple.github.io/foundationdb/features.html#load-balancing",
            "internal": false,
            "reflection": false,
            "title": "Features \u2014 FoundationDB 5.1",
            "clicks": 31
          },
          {
            "url": "https://forums.foundationdb.org/t/data-distribution-and-rebalancing/2982",
            "internal": true,
            "reflection": true,
            "title": "Data distribution and rebalancing",
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 113,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/keyspace-partitions-performance/168/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 295,
        "name": "Evan Tschannen",
        "username": "Evan",
        "avatar_template": "/user_avatar/forums.foundationdb.org/evan/{size}/104_2.png",
        "created_at": "2018-04-21T07:28:29.590Z",
        "cooked": "<p>We automatically split shards that are receiving too much write bandwidth. We cannot split a single key into multiple shards, but the storage servers responsible for that hot key will give their other shard responsibility to different servers to balance the load.</p>\n<p>Read load balancing happens on the client. In triple replication every key is held by three different storage servers. The client keeps track of the latency for each of those servers and sends the request to the least loaded server (the actual algorithm is slightly different than what I just described, but accomplishes the same result). If one key is really hot, the storage servers that responsible for that key will get heavily loaded. Clients will know those servers are heavily loaded, so are read requests that has the option to avoid those servers will go somewhere else. In practice this does an amazing job of keeping all the servers utilized.</p>\n<p>There are definitely use cases where you may want to hash keys preemptively. In fact, our backup and DR work by storing a copy of the mutation log into the system keyspace. The key is the sequentially increasing version of the database, so to avoid overloading one team of storage servers with half the write bandwidth of the cluster we hash the version and put that in the key like you described. In our case we still want to do range reads, so we actually hash version/1e6, but the concept is the same.</p>\n<p>FDB attempts to divide the database in shards of roughly equal size (both in terms of bytes and write bandwidth). If it notices that one ranges of keys has too much data, it will split it into smaller ranges, and each range will get assigned to a new set of storage servers. For each range, the algorithm starts with 4 random candidate teams of storage servers, and then assigns the range to the one that has the least amount of data. This algorithm converges to an optimal distribution while avoiding the herding effects of always attempting to move data to the least loaded servers.</p>\n<p>Our data movement algorithm does not react instantly to changes in the workload. If all of your writes are directed at a new subspace every 30 seconds you will run into performance problems, and you should consider splitting the writes. If the writes are changing subspaces every hour it is probably okay.</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2018-04-21T07:28:29.590Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 69,
        "reads": 194,
        "readers_count": 193,
        "score": 418.8,
        "yours": false,
        "topic_id": 168,
        "topic_slug": "keyspace-partitions-performance",
        "display_username": "Evan Tschannen",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 2
          }
        ],
        "moderator": true,
        "admin": false,
        "staff": true,
        "user_id": 54,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/keyspace-partitions-performance/168/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 310,
        "name": "",
        "username": "pH14",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ph14/{size}/92_2.png",
        "created_at": "2018-04-21T13:32:10.771Z",
        "cooked": "<p>Ah thank you etschannen, that\u2019s enormously helpful!</p>\n<p>Few follow-ups\u2026</p>\n<aside class=\"quote no-group\" data-username=\"etschannen\" data-post=\"2\" data-topic=\"168\" data-full=\"true\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n etschannen:</div>\n<blockquote>\n<p>If one key is really hot, the storage servers that responsible for that key will get heavily loaded. Clients will know those servers are heavily loaded, so are read requests that has the option to avoid those servers will go somewhere else.</p>\n</blockquote>\n</aside>\n<p>This is really cool <img src=\"https://emoji.discourse-cdn.com/twitter/sunglasses.png?v=12\" title=\":sunglasses:\" class=\"emoji\" alt=\":sunglasses:\" loading=\"lazy\" width=\"20\" height=\"20\"> Which metrics are used client-side to determine how loaded a storage server is? What happens if this still isn\u2019t enough and one storage server is overloaded? Is there any active load shedding, or could it fail over?</p>\n<aside class=\"quote no-group\" data-username=\"etschannen\" data-post=\"2\" data-topic=\"168\" data-full=\"true\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n etschannen:</div>\n<blockquote>\n<p>FDB attempts to divide the database in shards of roughly equal size (both in terms of bytes and write bandwidth). If it notices that one ranges of keys has too much data, it will split it into smaller ranges, and each range will get assigned to a new set of storage servers. For each range, the algorithm starts with 4 random candidate teams of storage servers, and then assigns the range to the one that has the least amount of data. This algorithm converges to an optimal distribution while avoiding the herding effects of always attempting to move data to the least loaded servers.</p>\n</blockquote>\n</aside>\n<p>Is there an ideal shard size that FDB targets / how is the total number of shards determined? On each recalculation cycle, do all identified splits get redistributed / is there a limit to how much can shuffle at once?</p>\n<aside class=\"quote no-group\" data-username=\"etschannen\" data-post=\"2\" data-topic=\"168\" data-full=\"true\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n etschannen:</div>\n<blockquote>\n<p>This algorithm converges to an optimal distribution while avoiding the herding effects of always attempting to move data to the least loaded servers.</p>\n</blockquote>\n</aside>\n<p>Hmm how is an optimal distribution being defined here? If write bandwidth is factored into shard size it seems like that could vary significantly over time.</p>\n<aside class=\"quote no-group\" data-username=\"etschannen\" data-post=\"2\" data-topic=\"168\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n etschannen:</div>\n<blockquote>\n<p>The key is the sequentially increasing version of the database, so to avoid overloading one team of storage servers with half the write bandwidth of the cluster we hash the version and put that in the key like you described. In our case we still want to do range reads, so we actually hash version/1e6, but the concept is the same.</p>\n</blockquote>\n</aside>\n<p>OOC why divide by 1e6?</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2018-04-21T13:32:10.771Z",
        "reply_count": 1,
        "reply_to_post_number": 2,
        "quote_count": 1,
        "incoming_link_count": 36,
        "reads": 183,
        "readers_count": 182,
        "score": 221.6,
        "yours": false,
        "topic_id": 168,
        "topic_slug": "keyspace-partitions-performance",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 113,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/keyspace-partitions-performance/168/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 330,
        "name": "Bhaskar Muppana",
        "username": "mbhaskar",
        "avatar_template": "/user_avatar/forums.foundationdb.org/mbhaskar/{size}/277_2.png",
        "created_at": "2018-04-21T16:34:02.403Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"pH14\" data-post=\"3\" data-topic=\"168\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/ph14/48/92_2.png\" class=\"avatar\"> pH14:</div>\n<blockquote>\n<p>OOC why divide by 1e6?</p>\n</blockquote>\n</aside>\n<p>By prefixing <code>hash(version/1e6)</code> to the key instead of <code>hash(version)</code>, all versions in a range of 1 million would be mapped next to each other. So, this scheme spreads chunks of 1 million versions across shards but still every million versions are range readable. Actual key stored on database would be something like this <code>hash(version/1e6),version</code>.</p>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2018-04-21T16:34:02.403Z",
        "reply_count": 1,
        "reply_to_post_number": 3,
        "quote_count": 1,
        "incoming_link_count": 42,
        "reads": 157,
        "readers_count": 156,
        "score": 261.4,
        "yours": false,
        "topic_id": 168,
        "topic_slug": "keyspace-partitions-performance",
        "display_username": "Bhaskar Muppana",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://forums.foundationdb.org/t/fdb-7-0-roadmap/1660/3",
            "internal": true,
            "reflection": true,
            "title": "FDB 7.0 Roadmap",
            "clicks": 3
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 9,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/keyspace-partitions-performance/168/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 335,
        "name": "Evan Tschannen",
        "username": "Evan",
        "avatar_template": "/user_avatar/forums.foundationdb.org/evan/{size}/104_2.png",
        "created_at": "2018-04-21T17:26:22.627Z",
        "cooked": "<p>The actual algorithm the client uses is to attempt to keep an equal number of read requests outstanding to each storage server. In addition the client is allowed to send a read to multiple storage servers simultaneously 5% of the time. Basically the latency of the read requests themselves tells up which servers are too loaded. Here is a link to the source if you want to look at the details: <a href=\"https://github.com/apple/foundationdb/blob/master/fdbrpc/LoadBalance.actor.h\" rel=\"nofollow noopener\">https://github.com/apple/foundationdb/blob/master/fdbrpc/LoadBalance.actor.h</a></p>\n<p>If a storage server is still overloaded read latencies will continue to grow longer and longer. The storage server itself prioritizes answering read requests over getting more writes from the tlogs, so it will start to fall behind. This will be noticed by ratekeeper and we will slow down the rate at which we are giving out read versions to clients which will give the storage server room to catch back up.</p>\n<p>For large databases we target shards between 125MB and 500MB. We ramp up to that size based on the amount of data in the database, so that small databases still do some level of sharding. We are monitoring the sizes of each shards individually, and storage servers notify the data distribution algorithm once a shard size changes by more than 5% from the previous estimate. The storage servers use sampling to keep estimates of how much data is in each shard. We are asynchronously notified of these size changes, so there is no recalculation cycle, each shard is split or merged as we get new size estimates. We do limit the number of relocations that can happen simultaneously, basically there is a queue of split and merge requests and we process them depending on how busy the source shard is. There are a lot of details here, status reports how much data is queued for movement and how much data is currently in flight, which is one of the important things to monitor in an FoundationDB cluster.</p>\n<p>Write bandwidth is only taken into consideration for when to split shards, it is not accounted for when chosen a new destination team. This does mean if you have a workload that is re-writing existing keys it is possible to get unlucky and have multiple small but high bandwidth shards assigned to the same team.</p>\n<p>The database attempts to advance versions by 1 million versions per second, so this algorithm changes the prefix every second.</p>",
        "post_number": 5,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2018-04-21T17:26:22.627Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 12,
        "reads": 157,
        "readers_count": 156,
        "score": 111.4,
        "yours": false,
        "topic_id": 168,
        "topic_slug": "keyspace-partitions-performance",
        "display_username": "Evan Tschannen",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/apple/foundationdb/blob/master/fdbrpc/LoadBalance.actor.h",
            "internal": false,
            "reflection": false,
            "title": "foundationdb/LoadBalance.actor.h at master \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 58
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": true,
        "admin": false,
        "staff": true,
        "user_id": 54,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/keyspace-partitions-performance/168/5",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 356,
        "name": "",
        "username": "pH14",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ph14/{size}/92_2.png",
        "created_at": "2018-04-22T01:05:50.801Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"mbhaskar\" data-post=\"4\" data-topic=\"168\" data-full=\"true\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/mbhaskar/48/277_2.png\" class=\"avatar\"> mbhaskar:</div>\n<blockquote>\n<p>By prefixing <code>hash(version/1e6)</code> to the key instead of <code>hash(version)</code>, all versions in a range of 1 million would be mapped next to each other. So, this scheme spreads chunks of 1 million versions across shards but still every million versions are range readable. Actual key stored on database would be something like this <code>hash(version/1e6),version</code>.</p>\n</blockquote>\n</aside>\n<p>Aha, thank you. I think I first parsed it as <code>hash(version) / 1e6</code> which was confusing me.</p>\n<aside class=\"quote no-group\" data-username=\"Evan\" data-post=\"5\" data-topic=\"168\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/evan/48/104_2.png\" class=\"avatar\"> Evan:</div>\n<blockquote>\n<p>The database attempts to advance versions by 1 million versions per second, so this algorithm changes the prefix every second.</p>\n</blockquote>\n</aside>\n<p>Also good context! If it isn\u2019t already, this might be worth documenting.</p>\n<p>Thanks for the detailed summary of the rebalancing, super helpful information.</p>",
        "post_number": 6,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2018-04-22T01:05:50.801Z",
        "reply_count": 1,
        "reply_to_post_number": 4,
        "quote_count": 2,
        "incoming_link_count": 17,
        "reads": 144,
        "readers_count": 143,
        "score": 118.8,
        "yours": false,
        "topic_id": 168,
        "topic_slug": "keyspace-partitions-performance",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 113,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/keyspace-partitions-performance/168/6",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 364,
        "name": "Alec Grieser",
        "username": "alloc",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "created_at": "2018-04-22T02:56:50.175Z",
        "cooked": "<p>The million versions a second thing is controlled by the <code>VERSIONS_PER_SECOND</code> knob, specified in <a href=\"https://github.com/apple/foundationdb/blob/cd55021baf85ad127832d31bbd5877df8c53d96b/fdbserver/Knobs.cpp#L59\">Knobs.cpp</a>.</p>\n<p>Because it is a \u201cknob\u201d, you can actually change it by passing different flags to fdbserver processes. For example, you could pass <code>--knob_versions_per_second=100</code> to fdbserver on startup, and then it will only advance the commit version by 100 every second instead of 1,000,000. We regularly do stuff like this in simulation to test whether we really can change knobs.</p>\n<p>I also wanted to mention this because it is part of the internals of the database, so relying on its behavior as a kind of fuzzy clock (for example) could be dangerous, and it could theoretically change in a future release without a lot of warning (because it is outside the contract of the database). The only guarantee we do provide about versions is that it will monotonically increase with time, i.e., that after we have committed a version <code>v</code>, all transactions that begin after the commit time of <code>v</code> will be assigned a read version greater than or equal to <code>v</code>. This guarantees what we call causality and what many people call linearizability.</p>",
        "post_number": 7,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2018-04-22T02:56:50.175Z",
        "reply_count": 0,
        "reply_to_post_number": 6,
        "quote_count": 0,
        "incoming_link_count": 58,
        "reads": 138,
        "readers_count": 137,
        "score": 317.6,
        "yours": false,
        "topic_id": 168,
        "topic_slug": "keyspace-partitions-performance",
        "display_username": "Alec Grieser",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/apple/foundationdb/blob/cd55021baf85ad127832d31bbd5877df8c53d96b/fdbserver/Knobs.cpp#L59",
            "internal": false,
            "reflection": false,
            "title": "foundationdb/Knobs.cpp at cd55021baf85ad127832d31bbd5877df8c53d96b \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 17
          },
          {
            "url": "https://forums.foundationdb.org/t/sketching-out-a-partition-assignment-strategy/1492",
            "internal": true,
            "reflection": true,
            "title": "Sketching out a partition assignment strategy",
            "clicks": 7
          },
          {
            "url": "https://forums.foundationdb.org/t/locking-with-foundationdb/314",
            "internal": true,
            "reflection": true,
            "title": "Locking with FoundationDB",
            "clicks": 2
          }
        ],
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 113,
          "username": "pH14",
          "name": "",
          "avatar_template": "/user_avatar/forums.foundationdb.org/ph14/{size}/92_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 8,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/keyspace-partitions-performance/168/7",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 366,
        "name": "Evan Tschannen",
        "username": "Evan",
        "avatar_template": "/user_avatar/forums.foundationdb.org/evan/{size}/104_2.png",
        "created_at": "2018-04-22T03:25:40.679Z",
        "cooked": "<p>changing knobs can break the database!</p>\n<p>Setting the MAX_VERSIONS_IN_FLIGHT to be less than MAX_READ_TRANSACTION_LIFE_VERSIONS will break consistency.</p>\n<p>Changing VERSIONS_PER_SECOND without adjusting CORE_VERSIONSPERSECOND to the same value will break backup and DR.</p>\n<p>Changing it without adjusting MAX_READ_TRANSACTION_LIFE_VERSIONS and MAX_WRITE_TRANSACTION_LIFE_VERSIONS will cause the resolver or storage server to run out of memory respectively. Even if you got all of that right, a value of 100 is too low, and under load the master will be forced to give out more than 100 versions per second, making the 5 second transaction lifetime much less. When we buggify knobs in simulation we make sure to respect these hidden relationships between knobs.</p>\n<p>Alloc was not actually recommending you try this, just letting you know it was possible. I would not recommend changing knobs on production databases unless you really know the full implications of the change.</p>",
        "post_number": 8,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2018-04-22T03:26:55.996Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 12,
        "reads": 133,
        "readers_count": 132,
        "score": 91.6,
        "yours": false,
        "topic_id": 168,
        "topic_slug": "keyspace-partitions-performance",
        "display_username": "Evan Tschannen",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": true,
        "admin": false,
        "staff": true,
        "user_id": 54,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/keyspace-partitions-performance/168/8",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 367,
        "name": "Alec Grieser",
        "username": "alloc",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "created_at": "2018-04-22T03:29:31.049Z",
        "cooked": "<p>Oh, yeah.</p>\n<p>In any case, yeah, this wasn\u2019t a serious suggestion for a production use case. I just did it on a local fdbserver and watched the commit version go up way slower when repeatedly setting \u201cfoo\u201d to \u201cbar\u201d, which is about as comfortable as I\u2019d be playing with knobs without really thinking about what I was doing.</p>",
        "post_number": 9,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2018-04-22T03:29:31.049Z",
        "reply_count": 0,
        "reply_to_post_number": 8,
        "quote_count": 0,
        "incoming_link_count": 14,
        "reads": 133,
        "readers_count": 132,
        "score": 96.6,
        "yours": false,
        "topic_id": 168,
        "topic_slug": "keyspace-partitions-performance",
        "display_username": "Alec Grieser",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 54,
          "username": "Evan",
          "name": "Evan Tschannen",
          "avatar_template": "/user_avatar/forums.foundationdb.org/evan/{size}/104_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 8,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/keyspace-partitions-performance/168/9",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      288,
      295,
      310,
      330,
      335,
      356,
      364,
      366,
      367
    ]
  },
  "timeline_lookup": [
    [
      1,
      2741
    ],
    [
      3,
      2740
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "Keyspace partitions &amp; performance",
  "id": 168,
  "title": "Keyspace partitions & performance",
  "posts_count": 9,
  "created_at": "2018-04-21T05:03:54.670Z",
  "views": 5892,
  "reply_count": 5,
  "like_count": 5,
  "last_posted_at": "2018-04-22T03:29:31.049Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "keyspace-partitions-performance",
  "category_id": 7,
  "word_count": 2125,
  "deleted_at": null,
  "user_id": 113,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_168",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 9,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 4,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "Data distribution / Disk usage uneven: bifurcated at 2 tiers",
      "id": 2270,
      "title": "Data distribution / Disk usage uneven: bifurcated at 2 tiers",
      "slug": "data-distribution-disk-usage-uneven-bifurcated-at-2-tiers",
      "posts_count": 7,
      "reply_count": 3,
      "highest_post_number": 7,
      "image_url": null,
      "created_at": "2020-08-02T03:47:59.558Z",
      "last_posted_at": "2020-08-06T06:17:39.778Z",
      "bumped": true,
      "bumped_at": "2020-08-06T06:17:39.778Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 537,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 643,
            "username": "lehu",
            "name": "Leo Hu",
            "avatar_template": "/user_avatar/forums.foundationdb.org/lehu/{size}/995_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 741,
            "username": "sears",
            "name": "Russell Sears",
            "avatar_template": "/user_avatar/forums.foundationdb.org/sears/{size}/887_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 337,
            "username": "mengxu",
            "name": "Meng Xu",
            "avatar_template": "/user_avatar/forums.foundationdb.org/mengxu/{size}/893_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "As a table grows, is it automatically split into multiple tablets",
      "id": 212,
      "title": "As a table grows, is it automatically split into multiple tablets",
      "slug": "as-a-table-grows-is-it-automatically-split-into-multiple-tablets",
      "posts_count": 6,
      "reply_count": 2,
      "highest_post_number": 6,
      "image_url": null,
      "created_at": "2018-04-23T05:24:46.403Z",
      "last_posted_at": "2018-04-24T22:58:50.515Z",
      "bumped": true,
      "bumped_at": "2018-04-24T22:58:50.515Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 1753,
      "category_id": 8,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 146,
            "username": "bigdata86",
            "name": "Wangmeng",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/b/cdc98d/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 7,
            "username": "SteavedHams",
            "name": "Steve Atherton",
            "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 22,
            "username": "dave",
            "name": "David Scherer",
            "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 38,
            "username": "panghy",
            "name": "Clement Pang",
            "avatar_template": "/user_avatar/forums.foundationdb.org/panghy/{size}/19_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Uneven load distribution for different value types",
      "id": 489,
      "title": "Uneven load distribution for different value types",
      "slug": "uneven-load-distribution-for-different-value-types",
      "posts_count": 2,
      "reply_count": 0,
      "highest_post_number": 2,
      "image_url": null,
      "created_at": "2018-06-05T12:44:48.848Z",
      "last_posted_at": "2018-06-08T07:12:16.030Z",
      "bumped": true,
      "bumped_at": "2018-06-08T07:12:16.030Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 598,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 297,
            "username": "imukhin",
            "name": "Ivan Mukhin",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/i/b19c9b/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 54,
            "username": "Evan",
            "name": "Evan Tschannen",
            "avatar_template": "/user_avatar/forums.foundationdb.org/evan/{size}/104_2.png",
            "moderator": true,
            "trust_level": 1
          }
        }
      ]
    },
    {
      "fancy_title": "Sessions storage. Data modeling, sharding strategy",
      "id": 2426,
      "title": "Sessions storage. Data modeling, sharding strategy",
      "slug": "sessions-storage-data-modeling-sharding-strategy",
      "posts_count": 2,
      "reply_count": 0,
      "highest_post_number": 2,
      "image_url": null,
      "created_at": "2020-11-06T09:23:37.908Z",
      "last_posted_at": "2020-11-13T00:24:24.932Z",
      "bumped": true,
      "bumped_at": "2020-11-13T00:24:24.932Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [
        "performance"
      ],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 507,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 848,
            "username": "zzar",
            "name": "Lucas",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/z/ecb155/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 156,
            "username": "spullara",
            "name": "Sam Pullara",
            "avatar_template": "/user_avatar/forums.foundationdb.org/spullara/{size}/125_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "How to speed up balancing?",
      "id": 1565,
      "title": "How to speed up balancing?",
      "slug": "how-to-speed-up-balancing",
      "posts_count": 12,
      "reply_count": 7,
      "highest_post_number": 12,
      "image_url": null,
      "created_at": "2019-08-06T08:49:50.107Z",
      "last_posted_at": "2019-08-21T00:41:02.788Z",
      "bumped": true,
      "bumped_at": "2019-08-21T00:41:02.788Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [
        "performance"
      ],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 1541,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 629,
            "username": "Sraw",
            "name": "",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/a88e57/{size}.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 81,
            "username": "ryanworl",
            "name": "Ryan Worl",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 54,
        "username": "Evan",
        "name": "Evan Tschannen",
        "avatar_template": "/user_avatar/forums.foundationdb.org/evan/{size}/104_2.png",
        "post_count": 3,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "moderator": true,
        "trust_level": 1
      },
      {
        "id": 113,
        "username": "pH14",
        "name": "",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ph14/{size}/92_2.png",
        "post_count": 3,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 8,
        "username": "alloc",
        "name": "Alec Grieser",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      },
      {
        "id": 9,
        "username": "mbhaskar",
        "name": "Bhaskar Muppana",
        "avatar_template": "/user_avatar/forums.foundationdb.org/mbhaskar/{size}/277_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      }
    ],
    "created_by": {
      "id": 113,
      "username": "pH14",
      "name": "",
      "avatar_template": "/user_avatar/forums.foundationdb.org/ph14/{size}/92_2.png"
    },
    "last_poster": {
      "id": 8,
      "username": "alloc",
      "name": "Alec Grieser",
      "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png"
    },
    "links": [
      {
        "url": "https://github.com/apple/foundationdb/blob/master/fdbrpc/LoadBalance.actor.h",
        "title": "foundationdb/LoadBalance.actor.h at master \u00b7 apple/foundationdb \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 58,
        "user_id": 54,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://apple.github.io/foundationdb/known-limitations.html#limited-read-load-balancing",
        "title": "Known Limitations \u2014 FoundationDB 5.1",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 36,
        "user_id": 113,
        "domain": "apple.github.io",
        "root_domain": "apple.github.io"
      },
      {
        "url": "https://apple.github.io/foundationdb/features.html#load-balancing",
        "title": "Features \u2014 FoundationDB 5.1",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 31,
        "user_id": 113,
        "domain": "apple.github.io",
        "root_domain": "apple.github.io"
      },
      {
        "url": "https://github.com/apple/foundationdb/blob/cd55021baf85ad127832d31bbd5877df8c53d96b/fdbserver/Knobs.cpp#L59",
        "title": "foundationdb/Knobs.cpp at cd55021baf85ad127832d31bbd5877df8c53d96b \u00b7 apple/foundationdb \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 17,
        "user_id": 8,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://forums.foundationdb.org/t/sketching-out-a-partition-assignment-strategy/1492",
        "title": "Sketching out a partition assignment strategy",
        "internal": true,
        "attachment": false,
        "reflection": true,
        "clicks": 7,
        "user_id": 113,
        "domain": "forums.foundationdb.org",
        "root_domain": "foundationdb.org"
      },
      {
        "url": "https://forums.foundationdb.org/t/fdb-7-0-roadmap/1660/3",
        "title": "FDB 7.0 Roadmap",
        "internal": true,
        "attachment": false,
        "reflection": true,
        "clicks": 3,
        "user_id": 166,
        "domain": "forums.foundationdb.org",
        "root_domain": "foundationdb.org"
      },
      {
        "url": "https://forums.foundationdb.org/t/locking-with-foundationdb/314",
        "title": "Locking with FoundationDB",
        "internal": true,
        "attachment": false,
        "reflection": true,
        "clicks": 2,
        "user_id": 81,
        "domain": "forums.foundationdb.org",
        "root_domain": "foundationdb.org"
      }
    ]
  },
  "bookmarks": []
}