{
  "post_stream": {
    "posts": [
      {
        "id": 13459,
        "name": "Timcschmidt",
        "username": "timcschmidt",
        "avatar_template": "/user_avatar/forums.foundationdb.org/timcschmidt/{size}/1677_2.png",
        "created_at": "2023-11-09T00:21:20.541Z",
        "cooked": "<p>First of all, sorry for the basic question, but this was not clear to me from the documentation. If I have a top-level message/record with optional message fields (e.g. in a oneof)</p>\n<pre><code class=\"lang-auto\">message TopLevel {\n   &lt;other fields&gt;\n   message A {}\n   message B {}\n   message C {}\n   oneof subtype {\n     A a = n;\n     B b = n+1;\n     C c = n+2;\n   } \n}\n</code></pre>\n<p>and I wanted to support a Query like (e.g. in Java)</p>\n<pre><code class=\"lang-auto\">RecordQuery.newBuilder().\n        setRecordType(\"TopLevel\".\n        setFilter(\n            Query.and(\n                &lt;some condition on other fields&gt;,\n                Query.not(Query.field(\"a\").isNull())\n            )).build();\n</code></pre>\n<p>with a secondary index, would I merely create a value type index on the field like below?</p>\n<p><code>metadataBuilder.addIndex(\"TopLevel\", new Index(\"TopLevel$a\", field(\"a\"), IndexTypes.VALUE));</code></p>\n<p>I.e. is the proto bytestring U null indexed in this case?</p>\n<p>P.s. I noticed that there is an Index constructor that takes a valueExpression argument, but no documentation is provided.</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 3,
        "updated_at": "2023-11-09T01:25:02.050Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 22,
        "reads": 20,
        "readers_count": 19,
        "score": 119.0,
        "yours": false,
        "topic_id": 4213,
        "topic_slug": "secondary-index-on-the-presence-of-an-optional-message-field",
        "display_username": "Timcschmidt",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 1337,
        "hidden": false,
        "trust_level": 0,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/secondary-index-on-the-presence-of-an-optional-message-field/4213/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 13659,
        "name": "Clement Pang",
        "username": "panghy",
        "avatar_template": "/user_avatar/forums.foundationdb.org/panghy/{size}/19_2.png",
        "created_at": "2024-01-05T00:33:41.926Z",
        "cooked": "<p>tagging <a class=\"mention\" href=\"/u/alloc\">@alloc</a> for visibility, thanks!</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 3,
        "updated_at": "2024-01-05T00:33:41.926Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 2,
        "reads": 16,
        "readers_count": 15,
        "score": 18.2,
        "yours": false,
        "topic_id": 4213,
        "topic_slug": "secondary-index-on-the-presence-of-an-optional-message-field",
        "display_username": "Clement Pang",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": "",
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 38,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/secondary-index-on-the-presence-of-an-optional-message-field/4213/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 13660,
        "name": "Alec Grieser",
        "username": "alloc",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "created_at": "2024-01-05T11:18:57.417Z",
        "cooked": "<p>Oh, thanks. I missed this one the first time around.</p>\n<p>By default, missing <code>optional</code> fields are included as explicit <code>null</code>s in the index. This is to support the <code>.isNull()</code> predicate (that is, by including the <code>null</code>s, it lets it find all of the records where that field is not set).</p>\n<p>One other note: you may have more success with the query predicate <code>Query.field(\"a\").notNull()</code> instead of <code>Query.not(Query.field(\"a\").isNull())</code>. Those are logically equivalent, but the query planner may be able to handle the former a bit better than the latter, though I could be wrong (the normalization process may fix that for you, in which case they\u2019re the same). But if the query seems slow/doesn\u2019t use the index, making that change to the query may help.</p>\n<aside class=\"quote no-group\" data-username=\"timcschmidt\" data-post=\"1\" data-topic=\"4213\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/timcschmidt/48/1677_2.png\" class=\"avatar\"> timcschmidt:</div>\n<blockquote>\n<p>P.s. I noticed that there is an Index constructor that takes a valueExpression argument, but no documentation is provided.</p>\n</blockquote>\n</aside>\n<p>The \u201c<code>valueExpression</code>\u201d there refers to data that gets indexed, but only in the value portion of the key-value pairs that make up the index. That\u2019s where the name comes from, but from a semantics perspective, the best way to think of it is that the data in the <em>key</em> portion of the index expression (that is, not in the <code>valueExpression</code>) determines how the index data are sorted, and so only data in the key portion of the expression can be used to satisfy ordering expression. Additionally, predicates can also be satisfied by scanning relevant ranges of the index, but those optimizations can only be performed on elements in the key. You can still put predicates on fields in the value portion of the expression, but those will always be satisfied by scanning the index entry and then executing the predicate as residual filter on the index entry.</p>\n<p>The main reason you\u2019d put data into the <code>valueExpression</code> is to make the index cover additional columns and avoid looking up the base records. By default, the result of a query is always the full record, but if you use the <code>.setRequiredResults</code> option on the <code>RecordQuery</code>, the Record Layer can sometimes return partial results where only the fields found in the index are available, and the planner also guarantees that the fields in the required-results section are present. (It becomes an API misuse to reference another field, though this isn\u2019t really enforced by the returned <code>Message</code>, so it can be dangerous if you don\u2019t do something like martial the <code>Message</code> into a data type that makes it clear what is and isn\u2019t available.)</p>\n<p>I believe the use of separate <code>key</code> and <code>value</code> expressions in index constructors is currently deprecated, though you can still use a <code>KeyWithValueExpression</code> to achieve the same result. If you do something like:</p>\n<pre data-code-wrap=\"java\"><code class=\"lang-java\">Key.Expressions.keyWithValue(Key.Expressions.concatenateFields(\"foo\", \"bar\", \"baz\"), 2)\n</code></pre>\n<p>Then this can be used to construct an index sorted by the first two fields (<code>\"foo\"</code> and <code>\"bar\"</code>) with the remaining field (<code>\"baz\"</code>) in the value. So could then use this query to satisfy something like:</p>\n<pre data-code-wrap=\"java\"><code class=\"lang-java\">RecordQuery.newBuilder()\n    .setFilter(Query.field(\"foo\").equalsValue(\"a\"))\n    .setSort(Key.Expressions.field(\"bar\"))\n    .setRequiredResults(List.of(Key.Expressions.field(\"baz\"))\n    .build();\n</code></pre>\n<p>This will then get executed as a single covering index scan where the first column is set to <code>\"a\"</code>, and it will return records where only the <code>\"baz\"</code> field is guaranteed to be set.</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 3,
        "updated_at": "2024-01-05T11:20:49.800Z",
        "reply_count": 0,
        "reply_to_post_number": 2,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 16,
        "readers_count": 15,
        "score": 18.2,
        "yours": false,
        "topic_id": 4213,
        "topic_slug": "secondary-index-on-the-presence-of-an-optional-message-field",
        "display_username": "Alec Grieser",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 38,
          "username": "panghy",
          "name": "Clement Pang",
          "avatar_template": "/user_avatar/forums.foundationdb.org/panghy/{size}/19_2.png"
        },
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 8,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/secondary-index-on-the-presence-of-an-optional-message-field/4213/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      13459,
      13659,
      13660
    ]
  },
  "timeline_lookup": [
    [
      1,
      713
    ],
    [
      2,
      656
    ],
    [
      3,
      655
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "Secondary Index on the presence of an optional message field",
  "id": 4213,
  "title": "Secondary Index on the presence of an optional message field",
  "posts_count": 3,
  "created_at": "2023-11-09T00:21:20.477Z",
  "views": 247,
  "reply_count": 1,
  "like_count": 1,
  "last_posted_at": "2024-01-05T11:18:57.417Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "secondary-index-on-the-presence-of-an-optional-message-field",
  "category_id": 12,
  "word_count": 730,
  "deleted_at": null,
  "user_id": 1337,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_4213",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 3,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 3,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "RecordLayer: index only query",
      "id": 3425,
      "title": "RecordLayer: index only query",
      "slug": "recordlayer-index-only-query",
      "posts_count": 3,
      "reply_count": 1,
      "highest_post_number": 3,
      "image_url": null,
      "created_at": "2022-07-05T09:29:15.849Z",
      "last_posted_at": "2022-07-27T13:54:23.621Z",
      "bumped": true,
      "bumped_at": "2022-07-27T13:54:23.621Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 475,
      "category_id": 14,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 1131,
            "username": "mping-exo",
            "name": "Miguel Ping",
            "avatar_template": "/user_avatar/forums.foundationdb.org/mping-exo/{size}/1374_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Creating secondary index on data within a Map",
      "id": 1910,
      "title": "Creating secondary index on data within a Map",
      "slug": "creating-secondary-index-on-data-within-a-map",
      "posts_count": 4,
      "reply_count": 2,
      "highest_post_number": 4,
      "image_url": null,
      "created_at": "2020-01-27T01:16:00.108Z",
      "last_posted_at": "2020-01-27T21:21:25.792Z",
      "bumped": true,
      "bumped_at": "2020-01-27T21:21:25.792Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 1054,
      "category_id": 12,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 713,
            "username": "samitsawant",
            "name": "Samit Sawant",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/13edae/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Understanding text index on fdb record layer",
      "id": 1073,
      "title": "Understanding text index on fdb record layer",
      "slug": "understanding-text-index-on-fdb-record-layer",
      "posts_count": 3,
      "reply_count": 1,
      "highest_post_number": 3,
      "image_url": null,
      "created_at": "2019-01-27T02:39:23.416Z",
      "last_posted_at": "2019-01-30T00:25:55.440Z",
      "bumped": true,
      "bumped_at": "2019-01-30T00:25:55.440Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 8,
      "views": 3511,
      "category_id": 12,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 323,
            "username": "WolfDan",
            "name": "Wolf Dan",
            "avatar_template": "/user_avatar/forums.foundationdb.org/wolfdan/{size}/806_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Creating an index on a repeated nested field",
      "id": 1988,
      "title": "Creating an index on a repeated nested field",
      "slug": "creating-an-index-on-a-repeated-nested-field",
      "posts_count": 2,
      "reply_count": 0,
      "highest_post_number": 2,
      "image_url": null,
      "created_at": "2020-02-27T19:42:48.134Z",
      "last_posted_at": "2020-03-02T12:30:07.155Z",
      "bumped": true,
      "bumped_at": "2020-03-02T12:30:07.155Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 739,
      "category_id": 12,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 735,
            "username": "dmitrig01",
            "name": "Dmitri G",
            "avatar_template": "/user_avatar/forums.foundationdb.org/dmitrig01/{size}/791_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 34,
            "username": "scgray",
            "name": "Scott Gray",
            "avatar_template": "/user_avatar/forums.foundationdb.org/scgray/{size}/30_2.png",
            "trust_level": 1
          }
        }
      ]
    },
    {
      "fancy_title": "FunctionKeyExpression is not honored when evaluating the QueryPlan",
      "id": 1937,
      "title": "FunctionKeyExpression is not honored when evaluating the QueryPlan",
      "slug": "functionkeyexpression-is-not-honored-when-evaluating-the-queryplan",
      "posts_count": 9,
      "reply_count": 5,
      "highest_post_number": 9,
      "image_url": null,
      "created_at": "2020-02-11T14:48:22.721Z",
      "last_posted_at": "2020-03-04T06:45:04.928Z",
      "bumped": true,
      "bumped_at": "2020-03-04T06:45:04.928Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 960,
      "category_id": 12,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 712,
            "username": "rahul-nitkkr",
            "name": "Rahul Roy",
            "avatar_template": "/user_avatar/forums.foundationdb.org/rahul-nitkkr/{size}/754_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 34,
            "username": "scgray",
            "name": "Scott Gray",
            "avatar_template": "/user_avatar/forums.foundationdb.org/scgray/{size}/30_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 219,
            "username": "MMcM",
            "name": "Mike McMahon",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/m/d07c76/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 653,
            "username": "VibhutiD",
            "name": "Vibhuti Dembi",
            "avatar_template": "/user_avatar/forums.foundationdb.org/vibhutid/{size}/668_2.png",
            "trust_level": 1
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 8,
        "username": "alloc",
        "name": "Alec Grieser",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      },
      {
        "id": 38,
        "username": "panghy",
        "name": "Clement Pang",
        "avatar_template": "/user_avatar/forums.foundationdb.org/panghy/{size}/19_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      },
      {
        "id": 1337,
        "username": "timcschmidt",
        "name": "Timcschmidt",
        "avatar_template": "/user_avatar/forums.foundationdb.org/timcschmidt/{size}/1677_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 0
      }
    ],
    "created_by": {
      "id": 1337,
      "username": "timcschmidt",
      "name": "Timcschmidt",
      "avatar_template": "/user_avatar/forums.foundationdb.org/timcschmidt/{size}/1677_2.png"
    },
    "last_poster": {
      "id": 8,
      "username": "alloc",
      "name": "Alec Grieser",
      "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png"
    }
  },
  "bookmarks": []
}