{
  "post_stream": {
    "posts": [
      {
        "id": 3547,
        "name": "Evan Tschannen",
        "username": "Evan",
        "avatar_template": "/user_avatar/forums.foundationdb.org/evan/{size}/104_2.png",
        "created_at": "2019-03-02T02:24:25.713Z",
        "cooked": "<p>I am moving discussion from <a href=\"https://github.com/apple/foundationdb/pull/1213\" class=\"inline-onebox\">Added a metadata version key by etschannen \u00b7 Pull Request #1213 \u00b7 apple/foundationdb \u00b7 GitHub</a> over to the forums.</p>\n<p>A common pattern in layers is that there is a rarely changing schema that needs to be validated within each transaction. These reads of a small amount of data can be a burden on clusters, because the reads are concentrated on a very small section of key space.</p>\n<p>The PR adds a key to the system keyspace which has its value sent to the client with every read version. This means that clients can see the value of this key without communicating with storage servers.</p>\n<p><strong>Q1:</strong></p>\n<aside class=\"quote no-group\">\n<blockquote>\n<p>Does this mean that a  <code>get('\\xff/metadataVersion')</code>  is guaranteed to complete synchronously? or can it still block, like for example if the read version is not yet know by the transaction?</p>\n</blockquote>\n</aside>\n<p>If the read version is not known yet, it will block until the read version comes back from the proxy. If you already have a read version, it is guaranteed to be synchronous.</p>\n<p><strong>Q2:</strong></p>\n<aside class=\"quote no-group\">\n<blockquote>\n<p>There is only one key for the whole cluster, so does this mean that layers have to be conservative and not change the key too often?</p>\n</blockquote>\n</aside>\n<p>This should not be too big of a concern. Each change will cause every client to invalidate their cache, so if you have 1000 clients, changing it will cause 1000 reads to the location where metadata is stored.</p>\n<p><strong>Q3:</strong></p>\n<aside class=\"quote no-group\">\n<blockquote>\n<p>Could this metadata version key be used by the directory layer to signal important changes, for example when deleting or changing the prefix of a directory subspace? or is it not one of the indended uses of this feature?</p>\n</blockquote>\n</aside>\n<p>This is a plausible use case. <a class=\"mention\" href=\"/u/ajbeamon\">@ajbeamon</a> might know more about how easy it would be to implement.</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 11,
        "updated_at": "2019-03-02T02:26:00.881Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 590,
        "reads": 98,
        "readers_count": 97,
        "score": 3048.6,
        "yours": false,
        "topic_id": 1191,
        "topic_slug": "a-new-tool-for-managing-layer-metadata",
        "display_username": "Evan Tschannen",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/apple/foundationdb/pull/1213",
            "internal": false,
            "reflection": false,
            "title": "Added a metadata version key by etschannen \u00b7 Pull Request #1213 \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 73
          },
          {
            "url": "https://forums.foundationdb.org/t/how-much-does-overwriting-cost/1225/3",
            "internal": true,
            "reflection": true,
            "title": "How much does overwriting cost?",
            "clicks": 0
          },
          {
            "url": "https://forums.foundationdb.org/t/how-to-do-fencing-in-foundationdb/2237/2",
            "internal": true,
            "reflection": true,
            "title": "How to do fencing in FoundationDB",
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 3
          }
        ],
        "moderator": true,
        "admin": false,
        "staff": true,
        "user_id": 54,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/a-new-tool-for-managing-layer-metadata/1191/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 3548,
        "name": "Meng Xu",
        "username": "mengxu",
        "avatar_template": "/user_avatar/forums.foundationdb.org/mengxu/{size}/893_2.png",
        "created_at": "2019-03-02T06:55:42.213Z",
        "cooked": "<p>In the GitHub PR, I didn\u2019t quite get how this metadata key should be used to mitigate the hot key problem.</p>\n<aside class=\"quote no-group\">\n<blockquote>\n<blockquote>\n<p>The metadata version key \u201c\\xff/metadataVersion\u201d is a key intended to help layers deal with hot keys. The value of this key is sent to clients along with the read version from the proxy, so a client can read its value without communicating with a storage server.</p>\n</blockquote>\n</blockquote>\n</aside>\n<p>Can anyone (<a class=\"mention\" href=\"/u/alloc\">@alloc</a> <a class=\"mention\" href=\"/u/evan\">@Evan</a>  ) give a simple example to explain how this version key should be used?</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 11,
        "updated_at": "2019-03-02T06:55:42.213Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 4,
        "reads": 91,
        "readers_count": 90,
        "score": 38.2,
        "yours": false,
        "topic_id": 1191,
        "topic_slug": "a-new-tool-for-managing-layer-metadata",
        "display_username": "Meng Xu",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 337,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/a-new-tool-for-managing-layer-metadata/1191/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3549,
        "name": "Ryan Worl",
        "username": "ryanworl",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png",
        "created_at": "2019-03-02T13:21:12.497Z",
        "cooked": "<p>The shortest example I can think of is if you have a document store that can add and drop indexes at runtime.</p>\n<p>You need to maintain a list of which indexes are active, and one way is to read a key during every transaction that holds the list. That way any time an index is added or removed you will see it right away.</p>\n<p>If every transaction has to read a single key, you will eventually overload the storage servers with that key. It also taxes every transaction with some small amount of latency (although you could probably hide it by optimistically assuming the schema is valid and checking it yourself sometime during the transaction later). Note that you still need to manage the backfilling and deleting of indexes in the background, you\u2019ll just observe the state transitions thereof on all clients immediately.</p>\n<p>The alternative is to somehow cache the schema. The goal is to operate the cache such that any client only has either the current version or the previous version of the schema. If you can maintain that, you can use the online schema change protocol from F1. This is possible in FDB but takes some amount of code every layer that wants online schema changes has to write. A bug in this code is almost guaranteed to create inconsistencies in the data, such as index entries that point to nothing.</p>\n<p>This change sends a third type of version (other than read and commit), the \u201c\u2018metadata version\u201d of a transaction, back to the client when they begin a transaction. This lets clients cache the schema and invalidate it based on the metadata version being different than what they\u2019ve got cached.</p>\n<p>When a client detects a change, it can read the actual schema key and continue serving requests. This means only the transactions at that time need to read the actual schema key.</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 11,
        "updated_at": "2019-03-02T19:59:14.724Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 24,
        "reads": 85,
        "readers_count": 84,
        "score": 187.0,
        "yours": false,
        "topic_id": 1191,
        "topic_slug": "a-new-tool-for-managing-layer-metadata",
        "display_username": "Ryan Worl",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 3
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 81,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/a-new-tool-for-managing-layer-metadata/1191/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3551,
        "name": "Meng Xu",
        "username": "mengxu",
        "avatar_template": "/user_avatar/forums.foundationdb.org/mengxu/{size}/893_2.png",
        "created_at": "2019-03-03T04:48:18.680Z",
        "cooked": "<p>Thank you very much for the example!</p>\n<p>Now I got the idea. As a summary:</p>\n<p>To solve the hot keys, we can cache the keys in the layers (e.g., RecLayer or DocLayer).<br>\nTo keep the cached data consistent with the data in DB (storage servers), we need to invalidate the cache whenever the data is changed.<br>\nThe metadata key can be used as a mechanism to notify the layers/clients that their cached data may have changed, and they need to invalidate their cached data.</p>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 11,
        "updated_at": "2019-03-03T04:48:48.945Z",
        "reply_count": 0,
        "reply_to_post_number": 3,
        "quote_count": 0,
        "incoming_link_count": 3,
        "reads": 81,
        "readers_count": 80,
        "score": 31.2,
        "yours": false,
        "topic_id": 1191,
        "topic_slug": "a-new-tool-for-managing-layer-metadata",
        "display_username": "Meng Xu",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 81,
          "username": "ryanworl",
          "name": "Ryan Worl",
          "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 337,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/a-new-tool-for-managing-layer-metadata/1191/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3552,
        "name": "Christophe Chevalier",
        "username": "KrzysFR",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "created_at": "2019-03-03T16:24:57.035Z",
        "cooked": "<p>Will we also be able to set a watch on this key and be notified when it changes? (for monitoring tool, etc\u2026)</p>",
        "post_number": 5,
        "post_type": 1,
        "posts_count": 11,
        "updated_at": "2019-03-03T16:24:57.035Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 2,
        "reads": 78,
        "readers_count": 77,
        "score": 25.6,
        "yours": false,
        "topic_id": 1191,
        "topic_slug": "a-new-tool-for-managing-layer-metadata",
        "display_username": "Christophe Chevalier",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 53,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/a-new-tool-for-managing-layer-metadata/1191/5",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3560,
        "name": "Bhaskar Muppana",
        "username": "mbhaskar",
        "avatar_template": "/user_avatar/forums.foundationdb.org/mbhaskar/{size}/277_2.png",
        "created_at": "2019-03-04T15:54:49.081Z",
        "cooked": "<p><a class=\"mention\" href=\"/u/evan\">@Evan</a> considering this key is in system key space, do we need to set the option <code>ACCESS_SYSTEM_KEYS</code>, on the transactions reading or writing this key?  I hope that\u2019s not the case at least for read transactions, as that could be every transaction.</p>",
        "post_number": 6,
        "post_type": 1,
        "posts_count": 11,
        "updated_at": "2019-03-04T15:54:49.081Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 79,
        "readers_count": 78,
        "score": 20.8,
        "yours": false,
        "topic_id": 1191,
        "topic_slug": "a-new-tool-for-managing-layer-metadata",
        "display_username": "Bhaskar Muppana",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 9,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/a-new-tool-for-managing-layer-metadata/1191/6",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3561,
        "name": "Ryan Worl",
        "username": "ryanworl",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png",
        "created_at": "2019-03-04T16:02:54.709Z",
        "cooked": "<aside class=\"onebox githubblob\">\n  <header class=\"source\">\n      <a href=\"https://github.com/apple/foundationdb/blob/075fdef31a49d06d0e39cfa2714f33b1cfcac71e/fdbclient/ReadYourWrites.actor.cpp#L1225\" target=\"_blank\" rel=\"nofollow noopener\">github.com</a>\n  </header>\n  <article class=\"onebox-body\">\n    <h4><a href=\"https://github.com/apple/foundationdb/blob/075fdef31a49d06d0e39cfa2714f33b1cfcac71e/fdbclient/ReadYourWrites.actor.cpp#L1225\" target=\"_blank\" rel=\"nofollow noopener\">apple/foundationdb/blob/075fdef31a49d06d0e39cfa2714f33b1cfcac71e/fdbclient/ReadYourWrites.actor.cpp#L1225</a></h4>\n<pre class=\"onebox\"><code class=\"lang-cpp\"><ol class=\"start lines\" start=\"1215\" style=\"counter-reset: li-counter 1214 ;\">\n<li>\t\treturn Optional&lt;Value&gt;();</li>\n<li>\t}</li>\n<li>\n</li>\n<li>\tif(checkUsedDuringCommit()) {</li>\n<li>\t\treturn used_during_commit();</li>\n<li>\t}</li>\n<li>\n</li>\n<li>\tif( resetPromise.isSet() )</li>\n<li>\t\treturn resetPromise.getFuture().getError();</li>\n<li>\t</li>\n<li class=\"selected\">\tif(key &gt;= getMaxReadKey() &amp;&amp; (!tr.apiVersionAtLeast(610) || key != metadataVersionKey))</li>\n<li>\t\treturn key_outside_legal_range();</li>\n<li>\n</li>\n<li>\t//There are no keys in the database with size greater than KEY_SIZE_LIMIT</li>\n<li>\tif(key.size() &gt; (key.startsWith(systemKeys.begin) ? CLIENT_KNOBS-&gt;SYSTEM_KEY_SIZE_LIMIT : CLIENT_KNOBS-&gt;KEY_SIZE_LIMIT))</li>\n<li>\t\treturn Optional&lt;Value&gt;();</li>\n<li>\n</li>\n<li>\tFuture&lt; Optional&lt;Value&gt; &gt; result = RYWImpl::readWithConflictRange( this, RYWImpl::GetValueReq(key), snapshot );</li>\n<li>\treading.add( success( result ) );</li>\n<li>\treturn result;</li>\n<li>}</li>\n</ol></code></pre>\n\n\n  </article>\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>The key has been given special treatment in <code>NativeAPI</code> and <code>ReadYourWrites</code> (RyW being the relevant one here I think?)</p>",
        "post_number": 7,
        "post_type": 1,
        "posts_count": 11,
        "updated_at": "2019-03-04T16:02:54.709Z",
        "reply_count": 0,
        "reply_to_post_number": 6,
        "quote_count": 0,
        "incoming_link_count": 2,
        "reads": 79,
        "readers_count": 78,
        "score": 25.8,
        "yours": false,
        "topic_id": 1191,
        "topic_slug": "a-new-tool-for-managing-layer-metadata",
        "display_username": "Ryan Worl",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/apple/foundationdb/blob/075fdef31a49d06d0e39cfa2714f33b1cfcac71e/fdbclient/ReadYourWrites.actor.cpp#L1225",
            "internal": false,
            "reflection": false,
            "title": "foundationdb/ReadYourWrites.actor.cpp at 075fdef31a49d06d0e39cfa2714f33b1cfcac71e \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 1
          }
        ],
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 9,
          "username": "mbhaskar",
          "name": "Bhaskar Muppana",
          "avatar_template": "/user_avatar/forums.foundationdb.org/mbhaskar/{size}/277_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 81,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/a-new-tool-for-managing-layer-metadata/1191/7",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3572,
        "name": "Evan Tschannen",
        "username": "Evan",
        "avatar_template": "/user_avatar/forums.foundationdb.org/evan/{size}/104_2.png",
        "created_at": "2019-03-05T05:24:48.295Z",
        "cooked": "<p>As Ryan figured out, you do not need to call ACCESS_SYSTEM_KEYS to read or modify this key.</p>\n<p>I did not add support for watching this key efficiently, meaning if you watch the key, the watch will go to the database like any other watch. Is there an actual use case for using the watch API? In some sense the whole point of the key is to watch for changes in a transactional manor, and the watch API creates a future which is separated from the transaction that created it.</p>",
        "post_number": 8,
        "post_type": 1,
        "posts_count": 11,
        "updated_at": "2019-03-05T05:25:10.315Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 2,
        "reads": 75,
        "readers_count": 74,
        "score": 30.0,
        "yours": false,
        "topic_id": 1191,
        "topic_slug": "a-new-tool-for-managing-layer-metadata",
        "display_username": "Evan Tschannen",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": true,
        "admin": false,
        "staff": true,
        "user_id": 54,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/a-new-tool-for-managing-layer-metadata/1191/8",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3573,
        "name": "Christophe Chevalier",
        "username": "KrzysFR",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "created_at": "2019-03-05T08:37:17.438Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"Evan\" data-post=\"8\" data-topic=\"1191\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/evan/48/104_2.png\" class=\"avatar\"> Evan:</div>\n<blockquote>\n<p>Is there an actual use case for using the watch API?</p>\n</blockquote>\n</aside>\n<p>This would be for monitoring tools or data visualization tools that could be notified when the \u201cschema\u201d is changed and automatically refresh the page. Currently, you need to actively read the key to notice that it changed, which would require a monitoring tool to do polling.</p>\n<p>I don\u2019t think that this would be a problem if the watch would go to the database for this particular use case.</p>",
        "post_number": 9,
        "post_type": 1,
        "posts_count": 11,
        "updated_at": "2019-03-05T08:37:17.438Z",
        "reply_count": 0,
        "reply_to_post_number": 8,
        "quote_count": 1,
        "incoming_link_count": 4,
        "reads": 75,
        "readers_count": 74,
        "score": 35.0,
        "yours": false,
        "topic_id": 1191,
        "topic_slug": "a-new-tool-for-managing-layer-metadata",
        "display_username": "Christophe Chevalier",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 53,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/a-new-tool-for-managing-layer-metadata/1191/9",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3824,
        "name": "Adam Kocoloski",
        "username": "kocolosk",
        "avatar_template": "/user_avatar/forums.foundationdb.org/kocolosk/{size}/412_2.png",
        "created_at": "2019-04-03T20:09:21.908Z",
        "cooked": "<p>This looks like a cool enhancement. I\u2019m wondering if there\u2019s been any further discussion about Q3 (the use of <code>metadataVersion</code> by the DirectoryLayer). It feels like a very natural integration, and one that I think we could use to good effect to model databases in Apache CouchDB. /cc <a class=\"mention\" href=\"/u/ajbeamon\">@ajbeamon</a></p>",
        "post_number": 10,
        "post_type": 1,
        "posts_count": 11,
        "updated_at": "2019-04-03T20:09:21.908Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 3,
        "reads": 60,
        "readers_count": 59,
        "score": 32.0,
        "yours": false,
        "topic_id": 1191,
        "topic_slug": "a-new-tool-for-managing-layer-metadata",
        "display_username": "Adam Kocoloski",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 423,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/a-new-tool-for-managing-layer-metadata/1191/10",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3828,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2019-04-03T23:30:21.306Z",
        "cooked": "<p>I don\u2019t think it would be too hard to add support for it, though I\u2019m not sure yet exactly what the API for it should look like. I created an issue in GitHub to track it:</p>\n<aside class=\"onebox githubissue\">\n  <header class=\"source\">\n      <a href=\"https://github.com/apple/foundationdb/issues/1415\" target=\"_blank\" rel=\"nofollow noopener\">github.com/apple/foundationdb</a>\n  </header>\n  <article class=\"onebox-body\">\n    <a href=\"https://github.com/ajbeamon\" rel=\"nofollow noopener\">\n<img src=\"https://global.discourse-cdn.com/foundationdb/original/1X/94892af2b434926145791269c06d9216d6d58f19.png\" class=\"thumbnail onebox-avatar\" width=\"96\" height=\"96\">\n</a>\n\n<h4><a href=\"https://github.com/apple/foundationdb/issues/1415\" target=\"_blank\" rel=\"nofollow noopener\">Issue: Add support for the new metadata version functionality to the directory layer</a></h4>\n\n<div class=\"date\" style=\"margin-top:10px;\">\n\t<div class=\"user\" style=\"margin-top:10px;\">\n\topened by <a href=\"https://github.com/ajbeamon\" target=\"_blank\" rel=\"nofollow noopener\">ajbeamon</a>\n\ton <a href=\"https://github.com/apple/foundationdb/issues/1415\" target=\"_blank\" rel=\"nofollow noopener\">2019-04-03</a>\n\t</div>\n\t<div class=\"user\">\n\t</div>\n</div>\n\n<pre class=\"content\" style=\"white-space: pre-wrap;\">The new metadata version functionality introduced in 6.1 could be helpful in the directory layer for determining whether a cached open...</pre>\n\n<div class=\"labels\">\n</div>\n\n  </article>\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n  <div style=\"clear: both\"></div>\n</aside>\n",
        "post_number": 11,
        "post_type": 1,
        "posts_count": 11,
        "updated_at": "2019-04-03T23:30:21.306Z",
        "reply_count": 0,
        "reply_to_post_number": 10,
        "quote_count": 0,
        "incoming_link_count": 3,
        "reads": 58,
        "readers_count": 57,
        "score": 26.6,
        "yours": false,
        "topic_id": 1191,
        "topic_slug": "a-new-tool-for-managing-layer-metadata",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/apple/foundationdb/issues/1415",
            "internal": false,
            "reflection": false,
            "title": "Add support for the new metadata version functionality to the directory layer \u00b7 Issue #1415 \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 31
          },
          {
            "url": "https://github.com/ajbeamon",
            "internal": false,
            "reflection": false,
            "title": "ajbeamon (A.J. Beamon) \u00b7 GitHub",
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 423,
          "username": "kocolosk",
          "name": "Adam Kocoloski",
          "avatar_template": "/user_avatar/forums.foundationdb.org/kocolosk/{size}/412_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/a-new-tool-for-managing-layer-metadata/1191/11",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      3547,
      3548,
      3549,
      3551,
      3552,
      3560,
      3561,
      3572,
      3573,
      3824,
      3828
    ]
  },
  "timeline_lookup": [
    [
      1,
      2426
    ],
    [
      3,
      2425
    ],
    [
      5,
      2424
    ],
    [
      6,
      2423
    ],
    [
      10,
      2393
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "A new tool for managing layer metadata",
  "id": 1191,
  "title": "A new tool for managing layer metadata",
  "posts_count": 11,
  "created_at": "2019-03-02T02:24:25.605Z",
  "views": 2506,
  "reply_count": 4,
  "like_count": 6,
  "last_posted_at": "2019-04-03T23:30:21.306Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "a-new-tool-for-managing-layer-metadata",
  "category_id": 8,
  "word_count": 1154,
  "deleted_at": null,
  "user_id": 54,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_1191",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 11,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 7,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "Cannot commit transaction that reads the metadataVersion key after changing it",
      "id": 1833,
      "title": "Cannot commit transaction that reads the metadataVersion key after changing it",
      "slug": "cannot-commit-transaction-that-reads-the-metadataversion-key-after-changing-it",
      "posts_count": 7,
      "reply_count": 3,
      "highest_post_number": 7,
      "image_url": null,
      "created_at": "2019-12-11T22:52:33.816Z",
      "last_posted_at": "2019-12-13T13:23:15.818Z",
      "bumped": true,
      "bumped_at": "2019-12-13T14:11:35.389Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 1297,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Sharing the metadataVersionKey for multiple tenants",
      "id": 1659,
      "title": "Sharing the metadataVersionKey for multiple tenants",
      "slug": "sharing-the-metadataversionkey-for-multiple-tenants",
      "posts_count": 4,
      "reply_count": 2,
      "highest_post_number": 5,
      "image_url": null,
      "created_at": "2019-09-30T23:56:17.815Z",
      "last_posted_at": "2023-06-25T07:47:15.709Z",
      "bumped": true,
      "bumped_at": "2023-06-25T07:47:15.709Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 1201,
      "category_id": 9,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 14,
            "username": "andrew.noyes",
            "name": "",
            "avatar_template": "/user_avatar/forums.foundationdb.org/andrew.noyes/{size}/443_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 423,
            "username": "kocolosk",
            "name": "Adam Kocoloski",
            "avatar_template": "/user_avatar/forums.foundationdb.org/kocolosk/{size}/412_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 919,
            "username": "Rjerk",
            "name": "Rjerk",
            "avatar_template": "/user_avatar/forums.foundationdb.org/rjerk/{size}/1056_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Should mutations performed via fdbcli always update the \\xff/metadataVersion key?",
      "id": 2093,
      "title": "Should mutations performed via fdbcli always update the \\xff/metadataVersion key?",
      "slug": "should-mutations-performed-via-fdbcli-always-update-the-xff-metadataversion-key",
      "posts_count": 6,
      "reply_count": 2,
      "highest_post_number": 6,
      "image_url": null,
      "created_at": "2020-04-29T11:39:06.923Z",
      "last_posted_at": "2020-05-14T13:46:08.081Z",
      "bumped": true,
      "bumped_at": "2020-05-14T13:46:08.081Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 938,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 15,
            "username": "markus.pilman",
            "name": "Markus Pilman",
            "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
            "admin": true,
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "How to safely add a metadata caching &ldquo;layer&rdquo; on top of existing layers?",
      "id": 1809,
      "title": "How to safely add a metadata caching \"layer\" on top of existing layers?",
      "slug": "how-to-safely-add-a-metadata-caching-layer-on-top-of-existing-layers",
      "posts_count": 2,
      "reply_count": 0,
      "highest_post_number": 2,
      "image_url": "https://global.discourse-cdn.com/foundationdb/optimized/1X/ec81d4eb9908e4a288a66bde6b7efd3728805bef_2_1024x317.png",
      "created_at": "2019-12-04T18:52:44.332Z",
      "last_posted_at": "2019-12-12T19:05:17.074Z",
      "bumped": true,
      "bumped_at": "2019-12-12T19:05:17.074Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 1311,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest single",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Deferred value checks as an alternative to the metadataVersion key for caching in layers",
      "id": 2123,
      "title": "Deferred value checks as an alternative to the metadataVersion key for caching in layers",
      "slug": "deferred-value-checks-as-an-alternative-to-the-metadataversion-key-for-caching-in-layers",
      "posts_count": 3,
      "reply_count": 1,
      "highest_post_number": 3,
      "image_url": null,
      "created_at": "2020-05-14T13:44:27.861Z",
      "last_posted_at": "2020-05-26T14:32:11.872Z",
      "bumped": true,
      "bumped_at": "2020-05-26T17:43:34.902Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 849,
      "category_id": 5,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest single",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 54,
        "username": "Evan",
        "name": "Evan Tschannen",
        "avatar_template": "/user_avatar/forums.foundationdb.org/evan/{size}/104_2.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "moderator": true,
        "trust_level": 1
      },
      {
        "id": 53,
        "username": "KrzysFR",
        "name": "Christophe Chevalier",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      },
      {
        "id": 81,
        "username": "ryanworl",
        "name": "Ryan Worl",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 3
      },
      {
        "id": 337,
        "username": "mengxu",
        "name": "Meng Xu",
        "avatar_template": "/user_avatar/forums.foundationdb.org/mengxu/{size}/893_2.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      },
      {
        "id": 12,
        "username": "ajbeamon",
        "name": "A.J. Beamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "admin": true,
        "trust_level": 4
      },
      {
        "id": 423,
        "username": "kocolosk",
        "name": "Adam Kocoloski",
        "avatar_template": "/user_avatar/forums.foundationdb.org/kocolosk/{size}/412_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      },
      {
        "id": 9,
        "username": "mbhaskar",
        "name": "Bhaskar Muppana",
        "avatar_template": "/user_avatar/forums.foundationdb.org/mbhaskar/{size}/277_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      }
    ],
    "created_by": {
      "id": 54,
      "username": "Evan",
      "name": "Evan Tschannen",
      "avatar_template": "/user_avatar/forums.foundationdb.org/evan/{size}/104_2.png"
    },
    "last_poster": {
      "id": 12,
      "username": "ajbeamon",
      "name": "A.J. Beamon",
      "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png"
    },
    "links": [
      {
        "url": "https://github.com/apple/foundationdb/pull/1213",
        "title": "Added a metadata version key by etschannen \u00b7 Pull Request #1213 \u00b7 apple/foundationdb \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 73,
        "user_id": 54,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://github.com/apple/foundationdb/issues/1415",
        "title": "Add support for the new metadata version functionality to the directory layer \u00b7 Issue #1415 \u00b7 apple/foundationdb \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 31,
        "user_id": 12,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://github.com/apple/foundationdb/blob/075fdef31a49d06d0e39cfa2714f33b1cfcac71e/fdbclient/ReadYourWrites.actor.cpp#L1225",
        "title": "foundationdb/ReadYourWrites.actor.cpp at 075fdef31a49d06d0e39cfa2714f33b1cfcac71e \u00b7 apple/foundationdb \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 1,
        "user_id": 81,
        "domain": "github.com",
        "root_domain": "github.com"
      }
    ]
  },
  "bookmarks": []
}