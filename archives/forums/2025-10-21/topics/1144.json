{
  "post_stream": {
    "posts": [
      {
        "id": 3391,
        "name": "",
        "username": "Passion",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/p/9de0a6/{size}.png",
        "created_at": "2019-02-16T13:48:41.702Z",
        "cooked": "<p>Hello,</p>\n<p>Is there any plan to implement page compression (something like the transparent page compression in MySQL/InnoDB) in Redwood? It could be very desirable for many users. Of course, the compression ratio strongly depends on the page size, and one may have to rely on the hole-punching support of the underlying filesystem. Whether the typical page size in Redwood is too small (4kB?) to benefit from page compression? Thanks!</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2019-02-16T13:48:41.702Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 123,
        "reads": 60,
        "readers_count": 59,
        "score": 629.0,
        "yours": false,
        "topic_id": 1144,
        "topic_slug": "page-compression-in-redwood",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": "",
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 514,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/page-compression-in-redwood/1144/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 3393,
        "name": "Steve Atherton",
        "username": "SteavedHams",
        "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png",
        "created_at": "2019-02-16T15:16:50.064Z",
        "cooked": "<p>Keys in Redwood are prefix compressed.  No other form of compression is planned at this time.  Applications with large values can of course compress them client side.</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2019-02-16T15:16:50.064Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 60,
        "readers_count": 59,
        "score": 12.0,
        "yours": false,
        "topic_id": 1144,
        "topic_slug": "page-compression-in-redwood",
        "display_username": "Steve Atherton",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": "",
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 7,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/page-compression-in-redwood/1144/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3395,
        "name": "Steve Atherton",
        "username": "SteavedHams",
        "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png",
        "created_at": "2019-02-16T15:37:44.937Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"Passion\" data-post=\"1\" data-topic=\"1144\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/p/9de0a6/48.png\" class=\"avatar\"> Passion:</div>\n<blockquote>\n<p>Of course, the compression ratio strongly depends on the page size, and one may have to rely on the hole-punching support of the underlying filesystem.</p>\n</blockquote>\n</aside>\n<p>I\u2019m sorry but I don\u2019t quite follow.  Compression ratio is mostly going to depend on the compression type and the compressibility of the data.  How the compressed bytes are then stored in a file on disk is another matter.  Writing pages (compressed or not) as a whole number of blocks on a block boundary happens to be the most efficient way to read from and write to a disk, but if minimal space usage is the main goal then finer resolution could be used.  In other words, if a 4k uncompressed page becomes 2k compressed it could be colocated with all or part of another compressed block on disk so long as the pager knows how to find it by page number when asked.</p>\n<p>I\u2019m not sure what you are envisioning using hole punching for.  Using it to mark freed pages as unused is always good, but I\u2019m not sure how that relates to compression.  If you are thinking you can use it to erase or insert blocks in a file as pages change compressed size, consider that this will badly fragment the file\u2019s extents not to mention change the offset of every page location after an edit point.  Please let me know if I\u2019ve completely missed something.</p>\n<p>Also, one of the goals of the Redwood design is to have a well defined and separate Pager interface to allow for different pager designs.  (This interface actually exists already but its contract is not in final form or well documented).  Theoretically one could use this to implement a transparently compressing pager.</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2019-02-16T15:47:35.023Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 1,
        "incoming_link_count": 1,
        "reads": 62,
        "readers_count": 61,
        "score": 22.4,
        "yours": false,
        "topic_id": 1144,
        "topic_slug": "page-compression-in-redwood",
        "display_username": "Steve Atherton",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": "",
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 7,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/page-compression-in-redwood/1144/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3396,
        "name": "",
        "username": "Passion",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/p/9de0a6/{size}.png",
        "created_at": "2019-02-16T16:36:28.781Z",
        "cooked": "<p>Hi Steve,</p>\n<p>Sorry for not clarifying the above statement. In addition to compression type (e.g., lz4 vs. zlib) and data compressibility (e.g., text string vs. floating point number), the size of data chunk (e.g., 4kB vs. 16kB) to which compression is applied also plays an important role. This is because general-purpose compression algorithms (e.g., Snappy, lz4, zlib, and ZSTD) all use LZ search that tries to find repeated bytes in the to-be-compressed data chunk and accordingly use a pointer to replace those repeated bytes. In general, the larger the to-be-compressed data chunk is, the higher probability that we may find more repeated bytes and hence achieve a better compression ratio. My experience is that compression-over-16kB can achieve 10%~30% better compression ratio than compression-over-4kB.</p>\n<p>As you pointed out, aligning compressed data with storage sector boundary (e.g., 4kB) is always desirable (especially for storage engines using B-tree structure like InnoDB and Redwood). Taking the transparent page compression feature in InnoDB as one example, with the default 16kB page size, after applying compression to each 16kB page, InnoDB aligns the compressed page to the 4kB boundary (e.g., if we compress one 16kB page to 10kB, then the page is stored as 12kB, wasting 2kB). To simplify the data management, InnoDB relies on sparse file and hole punching support from the underlying filesystem to return the unused one or more 4kB physical sectors back to the filesystem. Because of the use of sparse file, we do not need to change the LBA allocation when the compression results change. Yes, it certainly creates fragmentation, which is nevertheless not a  big problem for modern SSDs.</p>\n<p>The 4kB-alignment requirement indeed could cause significant space waste or even make page compression unfeasible (e.g., InnoDB/Redwood with 4kB page size). One of the major selling points of LSM-tree (e.g., RocksDB) is that its compression is not subject to the 4kB-alignment constraint, hence MyRocks claims to achieve better compression efficiency than InnoDB. Certainly prefix key encoding also helps MyRocks to improve the compression efficiency.</p>\n<p>The Pager interface sounds interesting. Could you please point me to relevant documents or codes so that I could learn more about it? Thanks!</p>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2019-02-16T16:36:28.781Z",
        "reply_count": 2,
        "reply_to_post_number": 3,
        "quote_count": 0,
        "incoming_link_count": 6,
        "reads": 61,
        "readers_count": 60,
        "score": 52.2,
        "yours": false,
        "topic_id": 1144,
        "topic_slug": "page-compression-in-redwood",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": "",
        "reply_to_user": {
          "id": 7,
          "username": "SteavedHams",
          "name": "Steve Atherton",
          "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 514,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/page-compression-in-redwood/1144/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3399,
        "name": "Steve Atherton",
        "username": "SteavedHams",
        "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png",
        "created_at": "2019-02-17T05:01:43.049Z",
        "cooked": "<p>Conceptually, a Pager must be able to</p>\n<ul>\n<li>Write a Page by page ID at a given Version</li>\n<li>Read a Page by page ID at a given Version</li>\n<li>Commit changes since last Commit atomically</li>\n<li>Delete old (non-latest) versions of each page older than some given cutoff Version</li>\n</ul>\n<p>How the pager organizes, stores, and reclaims versions of pages and whether or not they are compressed is internal to the pager.</p>\n<p>The interface as it exists today is <a href=\"https://github.com/apple/foundationdb/blob/master/fdbserver/IPager.h\" rel=\"nofollow noopener\">here</a> but the comments are likely a bit out of date, the interface will be changing in the future, and the first implementation of the interface is not yet complete.</p>",
        "post_number": 5,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2019-02-17T05:01:43.049Z",
        "reply_count": 0,
        "reply_to_post_number": 4,
        "quote_count": 0,
        "incoming_link_count": 2,
        "reads": 54,
        "readers_count": 53,
        "score": 20.8,
        "yours": false,
        "topic_id": 1144,
        "topic_slug": "page-compression-in-redwood",
        "display_username": "Steve Atherton",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/apple/foundationdb/blob/master/fdbserver/IPager.h",
            "internal": false,
            "reflection": false,
            "title": "foundationdb/IPager.h at master \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 7
          }
        ],
        "read": true,
        "user_title": "",
        "reply_to_user": {
          "id": 514,
          "username": "Passion",
          "name": "",
          "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/p/9de0a6/{size}.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 7,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/page-compression-in-redwood/1144/5",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3400,
        "name": "Steve Atherton",
        "username": "SteavedHams",
        "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png",
        "created_at": "2019-02-17T06:13:02.193Z",
        "cooked": "<p>Thanks for the detailed explanations.  For some reason I was thinking that compression dictionaries would not be created and stored per-page, but I guess that approach makes the most sense.</p>\n<p>The hole-punching scheme is interesting but I would be concerned about overhead from fragmentation at the filesystem level (not the SSD).  That said, I don\u2019t have a better idea, and it sounds like it works well enough.  (To use a concrete example:  In ext4, a file extent tree is made up of internal nodes of around 340 entries each and leaf nodes of also around 340 entries each.  Let\u2019s say you have a 1TB sparse file of 16kB pages and at any given time 90% of pages compress to 12kB or smaller.  That would require an extent tree of about 60 million extents, which itself is a 5-level B+tree of 4kB blocks which is over 700MB in size.  If that isn\u2019t in RAM at all times then page reads could incur an additional disk read latency, and of course any time a page changes its compressed block footprint a 4kB block of the extent tree must also be rewritten.)</p>",
        "post_number": 6,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2019-02-17T06:13:02.193Z",
        "reply_count": 1,
        "reply_to_post_number": 4,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 55,
        "readers_count": 54,
        "score": 16.0,
        "yours": false,
        "topic_id": 1144,
        "topic_slug": "page-compression-in-redwood",
        "display_username": "Steve Atherton",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": "",
        "reply_to_user": {
          "id": 514,
          "username": "Passion",
          "name": "",
          "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/p/9de0a6/{size}.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 7,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/page-compression-in-redwood/1144/6",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3402,
        "name": "",
        "username": "Passion",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/p/9de0a6/{size}.png",
        "created_at": "2019-02-17T21:34:22.722Z",
        "cooked": "<p>Hi Steve,</p>\n<p>Thank you very much for the information and sharing your insightful comments. Yes, although hole-punching simplifies the design of applications, it indeed complicates the operation of the underlying filesystem and may incur performance penalty. Seems the ideal solution would be that SSDs can carry out compression internally and expose a thin-provisioned LBA space. Thanks.</p>",
        "post_number": 7,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2019-02-17T21:34:22.722Z",
        "reply_count": 0,
        "reply_to_post_number": 6,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 49,
        "readers_count": 48,
        "score": 9.8,
        "yours": false,
        "topic_id": 1144,
        "topic_slug": "page-compression-in-redwood",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": "",
        "reply_to_user": {
          "id": 7,
          "username": "SteavedHams",
          "name": "Steve Atherton",
          "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 514,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/page-compression-in-redwood/1144/7",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3406,
        "name": "David Scherer",
        "username": "dave",
        "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
        "created_at": "2019-02-18T21:51:51.429Z",
        "cooked": "<p>If you were going to try to add page compression to redwood, you would want to do it while building the page rather than transparently at the pager level, so that you could target a compressed rather than uncompressed 4k page. But it would be critical to read performance to store the uncompressed page in memory. The great thing about prefix compressed pages is that they can still be searched fast.</p>\n<p>I\u2019m not super enthusiastic about this direction, but it\u2019s possible. You could even get into maintaining shared compression dictionaries based on a sample of pages, but the engineering gets ugly when you have to retire dictionaries.</p>",
        "post_number": 8,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2019-02-18T21:51:51.429Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 48,
        "readers_count": 47,
        "score": 14.6,
        "yours": false,
        "topic_id": 1144,
        "topic_slug": "page-compression-in-redwood",
        "display_username": "David Scherer",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 22,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/page-compression-in-redwood/1144/8",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3410,
        "name": "Steve Atherton",
        "username": "SteavedHams",
        "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png",
        "created_at": "2019-02-19T02:27:49.127Z",
        "cooked": "<p>Growing an uncompressed searchable structure incrementally and stopping when its compressed size reaches some target without going over is a bit tricky.  I agree it\u2019s better but it\u2019s also more complex, while a transparently compressing pager presenting a larger page size is pretty straightforward to implement and can still be beneficial for the right data set.</p>\n<p>But I think if I were going to prioritize full key/value compression in Redwood, I would try to add some sort of dictionary to the prefix compressed binary tree structure so that full page decompression would not be required for search.  The key suffix and value bytes could be encoded using a dictionary which is stored aligned to the end of the page and the binary tree grows toward it.  Insertions into the tree are still possible (without balancing, new nodes are appended and leaf child links are updated) and the new key suffix and value can be encoded using the existing dictionary.  A full page rebuild would build a new, optimal dictionary for the current data set.</p>",
        "post_number": 9,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2019-02-19T02:27:49.127Z",
        "reply_count": 0,
        "reply_to_post_number": 8,
        "quote_count": 0,
        "incoming_link_count": 2,
        "reads": 45,
        "readers_count": 44,
        "score": 19.0,
        "yours": false,
        "topic_id": 1144,
        "topic_slug": "page-compression-in-redwood",
        "display_username": "Steve Atherton",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": "",
        "reply_to_user": {
          "id": 22,
          "username": "dave",
          "name": "David Scherer",
          "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 7,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/page-compression-in-redwood/1144/9",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      3391,
      3393,
      3395,
      3396,
      3399,
      3400,
      3402,
      3406,
      3410
    ]
  },
  "timeline_lookup": [
    [
      1,
      2439
    ],
    [
      7,
      2438
    ],
    [
      8,
      2437
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "Page compression in Redwood",
  "id": 1144,
  "title": "Page compression in Redwood",
  "posts_count": 9,
  "created_at": "2019-02-16T13:48:41.613Z",
  "views": 866,
  "reply_count": 5,
  "like_count": 0,
  "last_posted_at": "2019-02-19T02:27:49.127Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "page-compression-in-redwood",
  "category_id": 5,
  "word_count": 1433,
  "deleted_at": null,
  "user_id": 514,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_1144",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 9,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 3,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "Redwood page fillfactor support",
      "id": 1986,
      "title": "Redwood page fillfactor support",
      "slug": "redwood-page-fillfactor-support",
      "posts_count": 16,
      "reply_count": 12,
      "highest_post_number": 16,
      "image_url": null,
      "created_at": "2020-02-27T17:21:08.254Z",
      "last_posted_at": "2020-05-12T11:17:59.926Z",
      "bumped": true,
      "bumped_at": "2020-05-12T11:17:59.926Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 3,
      "views": 1456,
      "category_id": 5,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 514,
            "username": "Passion",
            "name": "",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/p/9de0a6/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 337,
            "username": "mengxu",
            "name": "Meng Xu",
            "avatar_template": "/user_avatar/forums.foundationdb.org/mengxu/{size}/893_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 7,
            "username": "SteavedHams",
            "name": "Steve Atherton",
            "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Where I can get the latest release version of FDB with redwood engine?",
      "id": 2500,
      "title": "Where I can get the latest release version of FDB with redwood engine?",
      "slug": "where-i-can-get-the-latest-release-version-of-fdb-with-redwood-engine",
      "posts_count": 3,
      "reply_count": 1,
      "highest_post_number": 3,
      "image_url": null,
      "created_at": "2020-12-29T02:52:04.892Z",
      "last_posted_at": "2021-01-05T05:51:47.957Z",
      "bumped": true,
      "bumped_at": "2021-01-05T05:51:47.957Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 790,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 718,
            "username": "Cliicy",
            "name": "Dragon",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/c/47e85d/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 7,
            "username": "SteavedHams",
            "name": "Steve Atherton",
            "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Best practice of storing structs. Should I pack or store fields separately",
      "id": 425,
      "title": "Best practice of storing structs. Should I pack or store fields separately",
      "slug": "best-practice-of-storing-structs-should-i-pack-or-store-fields-separately",
      "posts_count": 6,
      "reply_count": 4,
      "highest_post_number": 6,
      "image_url": null,
      "created_at": "2018-05-16T23:07:22.662Z",
      "last_posted_at": "2018-05-17T13:16:48.924Z",
      "bumped": true,
      "bumped_at": "2018-05-17T13:16:48.924Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 10,
      "views": 2000,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 265,
            "username": "brainfucker",
            "name": "Illarionov Oleg",
            "avatar_template": "/user_avatar/forums.foundationdb.org/brainfucker/{size}/237_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 81,
            "username": "ryanworl",
            "name": "Ryan Worl",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 30,
            "username": "wwilson",
            "name": "Will Wilson",
            "avatar_template": "/user_avatar/forums.foundationdb.org/wwilson/{size}/88_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Discussion thread for new storage engine ideas",
      "id": 101,
      "title": "Discussion thread for new storage engine ideas",
      "slug": "discussion-thread-for-new-storage-engine-ideas",
      "posts_count": 31,
      "reply_count": 16,
      "highest_post_number": 33,
      "image_url": null,
      "created_at": "2018-04-20T06:11:56.229Z",
      "last_posted_at": "2020-02-18T21:37:22.164Z",
      "bumped": true,
      "bumped_at": "2020-02-18T21:37:22.164Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 31,
      "views": 15718,
      "category_id": 5,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 68,
            "username": "daverosenthal",
            "name": "Dave Rosenthal",
            "avatar_template": "/user_avatar/forums.foundationdb.org/daverosenthal/{size}/51_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 257,
            "username": "cih.y2k",
            "name": "cih.y2k",
            "avatar_template": "/user_avatar/forums.foundationdb.org/cih.y2k/{size}/423_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 419,
            "username": "doublemax",
            "name": "",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/d/8e7dd6/{size}.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 1,
            "username": "davelester",
            "name": "Dave Lester",
            "avatar_template": "/user_avatar/forums.foundationdb.org/davelester/{size}/1927_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "FDB new features: fill factor",
      "id": 2131,
      "title": "FDB new features: fill factor",
      "slug": "fdb-new-features-fill-factor",
      "posts_count": 5,
      "reply_count": 3,
      "highest_post_number": 5,
      "image_url": null,
      "created_at": "2020-05-21T05:34:24.755Z",
      "last_posted_at": "2020-05-22T02:50:38.384Z",
      "bumped": true,
      "bumped_at": "2020-05-22T03:05:48.320Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [
        "performance"
      ],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 727,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 718,
            "username": "Cliicy",
            "name": "Dragon",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/c/47e85d/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 7,
            "username": "SteavedHams",
            "name": "Steve Atherton",
            "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png",
            "trust_level": 4
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 7,
        "username": "SteavedHams",
        "name": "Steve Atherton",
        "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png",
        "post_count": 5,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      },
      {
        "id": 514,
        "username": "Passion",
        "name": "",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/p/9de0a6/{size}.png",
        "post_count": 3,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 22,
        "username": "dave",
        "name": "David Scherer",
        "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      }
    ],
    "created_by": {
      "id": 514,
      "username": "Passion",
      "name": "",
      "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/p/9de0a6/{size}.png"
    },
    "last_poster": {
      "id": 7,
      "username": "SteavedHams",
      "name": "Steve Atherton",
      "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png"
    },
    "links": [
      {
        "url": "https://github.com/apple/foundationdb/blob/master/fdbserver/IPager.h",
        "title": "foundationdb/IPager.h at master \u00b7 apple/foundationdb \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 7,
        "user_id": 7,
        "domain": "github.com",
        "root_domain": "github.com"
      }
    ]
  },
  "bookmarks": []
}