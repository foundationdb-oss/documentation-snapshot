{
  "post_stream": {
    "posts": [
      {
        "id": 3518,
        "name": "Kirill Titov",
        "username": "kirilltitov",
        "avatar_template": "/user_avatar/forums.foundationdb.org/kirilltitov/{size}/328_2.png",
        "created_at": "2019-02-26T13:15:00.863Z",
        "cooked": "<p>Hello everyone. I\u2019m working on a Swift FoundationDB <a href=\"https://github.com/kirilltitov/FDBSwift\" rel=\"nofollow noopener\">client</a>. From day one I used <code>FDB_STREAMING_MODE_WANT_ALL</code> as default streaming mode in range get function (<a href=\"https://github.com/kirilltitov/FDBSwift/blob/develop/Sources/FDB/Transaction/Transaction%2BNIO.swift#L142\" rel=\"nofollow noopener\">link</a>) as I\u2019m feeling it suits best for most of <em>my</em> usecases. In rare cases when I used different modes (I think it only was <code>FDB_STREAMING_MODE_ITERATOR</code>), I haven\u2019t noticed anything suspicious.</p>\n<p>However, I recently started working on a stable LTS version of my client and wanted to add a handy sugar iterator(-ish) functionality to the client (<a href=\"https://github.com/kirilltitov/FDBSwift/blob/get-range-generator/Sources/FDB/Transaction/Transaction%2BRange%2BIterator.swift\" rel=\"nofollow noopener\">link</a>) which would manage <code>iteration</code> counter for user and return <code>nil</code> when there are no more records in DB (though it\u2019s not compatible with Swift builtin <code>IteratorProtocol</code> as my implementation can throw error).</p>\n<p>When I was covering this new functionality with tests (<a href=\"https://github.com/kirilltitov/FDBSwift/blob/6305fbe5cdefc270140cf8cdfe4ffe2a49af5f68/Tests/FDBTests/FDBTests.swift#L272\" rel=\"nofollow noopener\">link</a>), I noticed quite strange behaviour: iterator mode wasn\u2019t working as expected. Say I insert 10 rows to the FDB (value is just one byte, incrementing from 1 to 10), and then I\u2019d like to get this range as an iterator.</p>\n<p>Firstly, I noticed that iterator mode ignores <code>limit</code> argument (I wanted to iterate 3 records per iteration), though it wasn\u2019t a big surprise as I eventually found out in FDB sources that FDB returns increasing portions of rows in this mode. No problems here really, however, it would be nice if it would actually obey <code>limit</code> when I <em>do</em> want it.</p>\n<p>But the funniest thing is it would return only first 4 records every time, no matter the <code>iteration</code> counter. I even introduced ultra-verbose printing of all C function invocations, and there\u2019s no mistake (or at least it seems so to me):</p>\n<pre><code class=\"lang-auto\">// First invocation here is WANT_ALL to return all rows\n// from this range and confirm that there are actually 10 rows\n[FDB] [Transaction] Calling C function fdb_transaction_get_range(\n    FDBTransaction* tr: 0x0000000100c19660\n    uint8_t const* begin_key_name: [..., 114, 0, 0]\n    int begin_key_name_length: 42\n    fdb_bool_t begin_or_equal: 0\n    int begin_offset: 1\n    uint8_t const* end_key_name: [..., 114, 0, 255]\n    int end_key_name_length: 42\n    fdb_bool_t end_or_equal: 0\n    int end_offset: 1\n    int limit: 0\n    int target_bytes: 0\n    FDBStreamingMode mode: FDBStreamingMode(rawValue: -2)\n    int iteration: 1\n    fdb_bool_t snapshot: 0\n    fdb_bool_t reverse: 0\n)\n[\"all\": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10]]]\n\n// And after that I call `next()` four times,\n// and you can see that iteration is incremented every time,\n// but only first four rows are returned every time\n[FDB] [Transaction] Calling C function fdb_transaction_get_range(\n    FDBTransaction* tr: 0x0000000100c217d0\n    uint8_t const* begin_key_name: [..., 114, 0, 0]\n    int begin_key_name_length: 42\n    fdb_bool_t begin_or_equal: 0\n    int begin_offset: 1\n    uint8_t const* end_key_name: [..., 114, 0, 255]\n    int end_key_name_length: 42\n    fdb_bool_t end_or_equal: 0\n    int end_offset: 1\n    int limit: 0\n    int target_bytes: 0\n    FDBStreamingMode mode: FDBStreamingMode(rawValue: -1)\n    int iteration: 1\n    fdb_bool_t snapshot: 0\n    fdb_bool_t reverse: 0\n)\n[[1], [2], [3], [4]]\n[FDB] [Transaction] Calling C function fdb_transaction_get_range(\n    FDBTransaction* tr: 0x0000000100c217d0\n    uint8_t const* begin_key_name: [..., 114, 0, 0]\n    int begin_key_name_length: 42\n    fdb_bool_t begin_or_equal: 0\n    int begin_offset: 1\n    uint8_t const* end_key_name: [..., 114, 0, 255]\n    int end_key_name_length: 42\n    fdb_bool_t end_or_equal: 0\n    int end_offset: 1\n    int limit: 0\n    int target_bytes: 0\n    FDBStreamingMode mode: FDBStreamingMode(rawValue: -1)\n    int iteration: 2\n    fdb_bool_t snapshot: 0\n    fdb_bool_t reverse: 0\n)\n[[1], [2], [3], [4]]\n[FDB] [Transaction] Calling C function fdb_transaction_get_range(\n    FDBTransaction* tr: 0x0000000100c217d0\n    uint8_t const* begin_key_name: [..., 114, 0, 0]\n    int begin_key_name_length: 42\n    fdb_bool_t begin_or_equal: 0\n    int begin_offset: 1\n    uint8_t const* end_key_name: [..., 114, 0, 255]\n    int end_key_name_length: 42\n    fdb_bool_t end_or_equal: 0\n    int end_offset: 1\n    int limit: 0\n    int target_bytes: 0\n    FDBStreamingMode mode: FDBStreamingMode(rawValue: -1)\n    int iteration: 3\n    fdb_bool_t snapshot: 0\n    fdb_bool_t reverse: 0\n)\n[[1], [2], [3], [4]]\n[FDB] [Transaction] Calling C function fdb_transaction_get_range(\n    FDBTransaction* tr: 0x0000000100c217d0\n    uint8_t const* begin_key_name: [..., 114, 0, 0]\n    int begin_key_name_length: 42\n    fdb_bool_t begin_or_equal: 0\n    int begin_offset: 1\n    uint8_t const* end_key_name: [..., 114, 0, 255]\n    int end_key_name_length: 42\n    fdb_bool_t end_or_equal: 0\n    int end_offset: 1\n    int limit: 0\n    int target_bytes: 0\n    FDBStreamingMode mode: FDBStreamingMode(rawValue: -1)\n    int iteration: 4\n    fdb_bool_t snapshot: 0\n    fdb_bool_t reverse: 0\n)\n[[1], [2], [3], [4]]\n</code></pre>\n<p>I\u2019m genuinely confused, please help. Either I\u2019m missing something (most probably) or there is a bug in FDB.</p>\n<p>I\u2019m using FoundationDB v6.0.18 with 600 header API version.</p>\n<p>Thanks in advance!</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 4,
        "updated_at": "2019-02-26T14:35:08.530Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 232,
        "reads": 59,
        "readers_count": 58,
        "score": 1171.8,
        "yours": false,
        "topic_id": 1184,
        "topic_slug": "fdb-streaming-mode-iterator-ignores-iteration",
        "display_username": "Kirill Titov",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 3,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/kirilltitov/FDBSwift/blob/get-range-generator/Sources/FDB/Transaction/Transaction%2BRange%2BIterator.swift",
            "internal": false,
            "reflection": false,
            "title": "FDBSwift/Transaction+Range+Iterator.swift at get-range-generator \u00b7 kirilltitov/FDBSwift \u00b7 GitHub",
            "clicks": 7
          },
          {
            "url": "https://github.com/kirilltitov/FDBSwift",
            "internal": false,
            "reflection": false,
            "title": "GitHub - kirilltitov/FDBSwift: FoundationDB wrapper for Swift",
            "clicks": 5
          },
          {
            "url": "https://github.com/kirilltitov/FDBSwift/blob/develop/Sources/FDB/Transaction/Transaction%2BNIO.swift#L142",
            "internal": false,
            "reflection": false,
            "title": "FDBSwift/Transaction+NIO.swift at develop \u00b7 kirilltitov/FDBSwift \u00b7 GitHub",
            "clicks": 4
          },
          {
            "url": "https://github.com/kirilltitov/FDBSwift/blob/6305fbe5cdefc270140cf8cdfe4ffe2a49af5f68/Tests/FDBTests/FDBTests.swift#L272",
            "internal": false,
            "reflection": false,
            "title": "FDBSwift/FDBTests.swift at 6305fbe5cdefc270140cf8cdfe4ffe2a49af5f68 \u00b7 kirilltitov/FDBSwift \u00b7 GitHub",
            "clicks": 2
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 319,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/fdb-streaming-mode-iterator-ignores-iteration/1184/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 3521,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2019-02-26T19:46:22.252Z",
        "cooked": "<p>I\u2019m not immediately spotting why your test isn\u2019t working, but I did run a test of my own with kv pairs of roughly 32 bytes that demonstrates the expected behavior (iteration 0 is WANT_ALL):</p>\n<pre><code class=\"lang-auto\">Got 2518 items for iteration 0\nGot 18 items for iteration 1\nGot 65 items for iteration 2\nGot 261 items for iteration 3\nGot 391 items for iteration 4\nGot 585 items for iteration 5\nGot 877 items for iteration 6\nGot 1315 items for iteration 7\nGot 1972 items for iteration 8\nGot 2518 items for iteration 9\nGot 2518 items for iteration 10\nGot 2518 items for iteration 11\nGot 2518 items for iteration 12\nGot 2518 items for iteration 13\nGot 2518 items for iteration 14\nGot 2518 items for iteration 15\nGot 2518 items for iteration 16\nGot 2518 items for iteration 17\nGot 2518 items for iteration 18\nGot 2518 items for iteration 19\n</code></pre>\n<p>The way that the iterating mode works is that each successive iteration increases the byte limit up to the maximum used in WANT_ALL. When byte limits are specified (i.e. when not using EXACT mode without a byte limit), I believe it\u2019s possible for the query to return early in some cases, such as if your range crosses a shard boundary. That probably wouldn\u2019t happen if your database is small, but you could probably rule that out as an issue by running your WANT_ALL and ITERATOR mode queries in the same transaction. I would expect WANT_ALL to return early in the same cases as ITERATOR would, so if you see a difference then something else is probably going on.</p>\n<p>Another possibility is that the 4th kv pair in your range is sufficiently large that it exceeds the limits specified in the first several iterations. That seems like possibly a stretch, but if it\u2019s the case then you could try more iterations to confirm that it eventually gets past it. See here for the limit progression:</p>\n<aside class=\"onebox githubblob\">\n  <header class=\"source\">\n      <a href=\"https://github.com/apple/foundationdb/blob/ad8bfc1b8f84b4e0987a170940de9a30b869c249/bindings/c/fdb_c.cpp#L462\" target=\"_blank\" rel=\"nofollow noopener\">github.com</a>\n  </header>\n  <article class=\"onebox-body\">\n    <h4><a href=\"https://github.com/apple/foundationdb/blob/ad8bfc1b8f84b4e0987a170940de9a30b869c249/bindings/c/fdb_c.cpp#L462\" target=\"_blank\" rel=\"nofollow noopener\">apple/foundationdb/blob/ad8bfc1b8f84b4e0987a170940de9a30b869c249/bindings/c/fdb_c.cpp#L462</a></h4>\n<pre class=\"onebox\"><code class=\"lang-cpp\"><ol class=\"start lines\" start=\"452\" style=\"counter-reset: li-counter 451 ;\">\n<li>\t/* Unlimited/unlimited with mode _EXACT isn't permitted */</li>\n<li>\tif (limit == CLIENT_KNOBS-&gt;ROW_LIMIT_UNLIMITED &amp;&amp; target_bytes == CLIENT_KNOBS-&gt;BYTE_LIMIT_UNLIMITED &amp;&amp; mode == FDB_STREAMING_MODE_EXACT)</li>\n<li>\t\treturn TSAV_ERROR(Standalone&lt;RangeResultRef&gt;, exact_mode_without_limits);</li>\n<li>\n</li>\n<li>\t/* _ITERATOR mode maps to one of the known streaming modes</li>\n<li>\t   depending on iteration */</li>\n<li>\tstatic const int mode_bytes_array[] = {CLIENT_KNOBS-&gt;BYTE_LIMIT_UNLIMITED, 256, 1000, 4096, 80000};</li>\n<li>\n</li>\n<li>\t/* The progression used for FDB_STREAMING_MODE_ITERATOR.</li>\n<li>\t   Goes from small -&gt; medium -&gt; large.  Then 1.5 * previous until serial. */</li>\n<li class=\"selected\">\tstatic const int iteration_progression[] = { 256, 1000, 4096, 6144, 9216, 13824, 20736, 31104, 46656, 69984, 80000 };</li>\n<li>\n</li>\n<li>\t/* length(iteration_progression) */</li>\n<li>\tstatic const int max_iteration = sizeof(iteration_progression) / sizeof(int);</li>\n<li>\n</li>\n<li>\tif(mode == FDB_STREAMING_MODE_WANT_ALL)</li>\n<li>\t\tmode = FDB_STREAMING_MODE_SERIAL;</li>\n<li>\n</li>\n<li>\tint mode_bytes;</li>\n<li>\tif (mode == FDB_STREAMING_MODE_ITERATOR) {</li>\n<li>\t\tif (iteration &lt;= 0)</li>\n</ol></code></pre>\n\n\n  </article>\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n  <div style=\"clear: both\"></div>\n</aside>\n",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 4,
        "updated_at": "2019-02-26T19:46:22.252Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 19,
        "reads": 52,
        "readers_count": 51,
        "score": 105.4,
        "yours": false,
        "topic_id": 1184,
        "topic_slug": "fdb-streaming-mode-iterator-ignores-iteration",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/apple/foundationdb/blob/ad8bfc1b8f84b4e0987a170940de9a30b869c249/bindings/c/fdb_c.cpp#L462",
            "internal": false,
            "reflection": false,
            "title": "foundationdb/fdb_c.cpp at ad8bfc1b8f84b4e0987a170940de9a30b869c249 \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 9
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/fdb-streaming-mode-iterator-ignores-iteration/1184/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 13007,
        "name": "minhthucdao",
        "username": "dmthuc",
        "avatar_template": "/user_avatar/forums.foundationdb.org/dmthuc/{size}/1522_2.png",
        "created_at": "2023-06-26T02:30:14.366Z",
        "cooked": "<p>You are using API the wrong way, you have to update key differently to get different return result for each iteration</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 4,
        "updated_at": "2023-06-26T02:30:14.366Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 21,
        "readers_count": 20,
        "score": 14.2,
        "yours": false,
        "topic_id": 1184,
        "topic_slug": "fdb-streaming-mode-iterator-ignores-iteration",
        "display_username": "minhthucdao",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 1216,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/fdb-streaming-mode-iterator-ignores-iteration/1184/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 13420,
        "name": "Michael Kohlhaas",
        "username": "mkohlhaas",
        "avatar_template": "/user_avatar/forums.foundationdb.org/mkohlhaas/{size}/1669_2.png",
        "created_at": "2023-10-25T11:27:13.594Z",
        "cooked": "<p>Exactly. No state is kept - it\u2019s all stateless.</p>\n<p>For example, in iterator streaming mode (FDB_STREAMING_MODE_ITERATOR) if limit is set to 0, the iteration parameter is used only to decide if more data should be returned to the client. It doesn\u2019t remember what has been already delivered to the client.</p>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 4,
        "updated_at": "2023-10-25T11:49:52.911Z",
        "reply_count": 0,
        "reply_to_post_number": 3,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 17,
        "readers_count": 16,
        "score": 3.4,
        "yours": false,
        "topic_id": 1184,
        "topic_slug": "fdb-streaming-mode-iterator-ignores-iteration",
        "display_username": "Michael Kohlhaas",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 1216,
          "username": "dmthuc",
          "name": "minhthucdao",
          "avatar_template": "/user_avatar/forums.foundationdb.org/dmthuc/{size}/1522_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 1330,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/fdb-streaming-mode-iterator-ignores-iteration/1184/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      3518,
      3521,
      13007,
      13420
    ]
  },
  "timeline_lookup": [
    [
      1,
      2429
    ],
    [
      3,
      849
    ],
    [
      4,
      727
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "FDB_STREAMING_MODE_ITERATOR ignores iteration",
  "id": 1184,
  "title": "FDB_STREAMING_MODE_ITERATOR ignores iteration",
  "posts_count": 4,
  "created_at": "2019-02-26T13:15:00.751Z",
  "views": 1165,
  "reply_count": 1,
  "like_count": 0,
  "last_posted_at": "2023-10-25T11:27:13.594Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "fdb-streaming-mode-iterator-ignores-iteration",
  "category_id": 7,
  "word_count": 1143,
  "deleted_at": null,
  "user_id": 319,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_1184",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 4,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 4,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "Why can I only range read 2857 keys?",
      "id": 1517,
      "title": "Why can I only range read 2857 keys?",
      "slug": "why-can-i-only-range-read-2857-keys",
      "posts_count": 2,
      "reply_count": 0,
      "highest_post_number": 2,
      "image_url": null,
      "created_at": "2019-07-13T06:06:58.493Z",
      "last_posted_at": "2019-07-13T19:32:13.906Z",
      "bumped": true,
      "bumped_at": "2019-07-13T19:32:13.906Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 2,
      "views": 634,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 542,
            "username": "jonahwest",
            "name": "",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/j/90db22/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "FDB C API and range retrieval has duplicates?",
      "id": 4457,
      "title": "FDB C API and range retrieval has duplicates?",
      "slug": "fdb-c-api-and-range-retrieval-has-duplicates",
      "posts_count": 3,
      "reply_count": 1,
      "highest_post_number": 3,
      "image_url": null,
      "created_at": "2024-05-04T16:24:03.252Z",
      "last_posted_at": "2024-05-08T13:11:37.758Z",
      "bumped": true,
      "bumped_at": "2024-05-08T13:11:37.758Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [
        "bindings"
      ],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 156,
      "category_id": 5,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 1414,
            "username": "mrcode007",
            "name": "",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/m/94ad74/{size}.png",
            "trust_level": 0
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 219,
            "username": "MMcM",
            "name": "Mike McMahon",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/m/d07c76/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "FoundationDB as backend for JanusGraph - Iterate through all vertices",
      "id": 2280,
      "title": "FoundationDB as backend for JanusGraph - Iterate through all vertices",
      "slug": "foundationdb-as-backend-for-janusgraph-iterate-through-all-vertices",
      "posts_count": 4,
      "reply_count": 2,
      "highest_post_number": 4,
      "image_url": null,
      "created_at": "2020-08-06T18:41:32.903Z",
      "last_posted_at": "2020-08-10T03:42:01.690Z",
      "bumped": true,
      "bumped_at": "2020-08-10T10:38:29.945Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 2118,
      "category_id": 14,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 799,
            "username": "SarthakGhosh16",
            "name": "Sarthak Ghosh16",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/ba9def/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        }
      ]
    },
    {
      "fancy_title": "Is That Possible to Force Prefetching on AsyncIterators at FDB Client?",
      "id": 2434,
      "title": "Is That Possible to Force Prefetching on AsyncIterators at FDB Client?",
      "slug": "is-that-possible-to-force-prefetching-on-asynciterators-at-fdb-client",
      "posts_count": 3,
      "reply_count": 1,
      "highest_post_number": 3,
      "image_url": null,
      "created_at": "2020-11-12T10:24:46.625Z",
      "last_posted_at": "2020-11-16T17:39:48.396Z",
      "bumped": true,
      "bumped_at": "2020-11-16T17:39:48.396Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [
        "bindings",
        "performance"
      ],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 737,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 531,
            "username": "jltz",
            "name": "Jun Li",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/j/c0e974/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 156,
            "username": "spullara",
            "name": "Sam Pullara",
            "avatar_template": "/user_avatar/forums.foundationdb.org/spullara/{size}/125_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Scanning a large range with Locality API hangs",
      "id": 2183,
      "title": "Scanning a large range with Locality API hangs",
      "slug": "scanning-a-large-range-with-locality-api-hangs",
      "posts_count": 13,
      "reply_count": 10,
      "highest_post_number": 13,
      "image_url": null,
      "created_at": "2020-06-15T13:08:44.375Z",
      "last_posted_at": "2020-08-12T17:02:10.244Z",
      "bumped": true,
      "bumped_at": "2020-08-12T17:02:10.244Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 1961,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 711,
            "username": "osamarin",
            "name": "Oleg Samarin",
            "avatar_template": "/user_avatar/forums.foundationdb.org/osamarin/{size}/905_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 799,
            "username": "SarthakGhosh16",
            "name": "Sarthak Ghosh16",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/ba9def/{size}.png",
            "trust_level": 1
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 12,
        "username": "ajbeamon",
        "name": "A.J. Beamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "admin": true,
        "trust_level": 4
      },
      {
        "id": 319,
        "username": "kirilltitov",
        "name": "Kirill Titov",
        "avatar_template": "/user_avatar/forums.foundationdb.org/kirilltitov/{size}/328_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 1216,
        "username": "dmthuc",
        "name": "minhthucdao",
        "avatar_template": "/user_avatar/forums.foundationdb.org/dmthuc/{size}/1522_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 1330,
        "username": "mkohlhaas",
        "name": "Michael Kohlhaas",
        "avatar_template": "/user_avatar/forums.foundationdb.org/mkohlhaas/{size}/1669_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      }
    ],
    "created_by": {
      "id": 319,
      "username": "kirilltitov",
      "name": "Kirill Titov",
      "avatar_template": "/user_avatar/forums.foundationdb.org/kirilltitov/{size}/328_2.png"
    },
    "last_poster": {
      "id": 1330,
      "username": "mkohlhaas",
      "name": "Michael Kohlhaas",
      "avatar_template": "/user_avatar/forums.foundationdb.org/mkohlhaas/{size}/1669_2.png"
    },
    "links": [
      {
        "url": "https://github.com/apple/foundationdb/blob/ad8bfc1b8f84b4e0987a170940de9a30b869c249/bindings/c/fdb_c.cpp#L462",
        "title": "foundationdb/fdb_c.cpp at ad8bfc1b8f84b4e0987a170940de9a30b869c249 \u00b7 apple/foundationdb \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 9,
        "user_id": 12,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://github.com/kirilltitov/FDBSwift/blob/get-range-generator/Sources/FDB/Transaction/Transaction%2BRange%2BIterator.swift",
        "title": "FDBSwift/Transaction+Range+Iterator.swift at get-range-generator \u00b7 kirilltitov/FDBSwift \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 7,
        "user_id": 319,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://github.com/kirilltitov/FDBSwift",
        "title": "GitHub - kirilltitov/FDBSwift: FoundationDB wrapper for Swift",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 5,
        "user_id": 319,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://github.com/kirilltitov/FDBSwift/blob/develop/Sources/FDB/Transaction/Transaction%2BNIO.swift#L142",
        "title": "FDBSwift/Transaction+NIO.swift at develop \u00b7 kirilltitov/FDBSwift \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 4,
        "user_id": 319,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://github.com/kirilltitov/FDBSwift/blob/6305fbe5cdefc270140cf8cdfe4ffe2a49af5f68/Tests/FDBTests/FDBTests.swift#L272",
        "title": "FDBSwift/FDBTests.swift at 6305fbe5cdefc270140cf8cdfe4ffe2a49af5f68 \u00b7 kirilltitov/FDBSwift \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 2,
        "user_id": 319,
        "domain": "github.com",
        "root_domain": "github.com"
      }
    ]
  },
  "bookmarks": []
}