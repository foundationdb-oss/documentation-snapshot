{
  "post_stream": {
    "posts": [
      {
        "id": 8986,
        "name": "Meng Xu",
        "username": "mengxu",
        "avatar_template": "/user_avatar/forums.foundationdb.org/mengxu/{size}/893_2.png",
        "created_at": "2021-01-26T23:12:47.410Z",
        "cooked": "<p>I\u2019m not sure how many people run FDB Windows build in prod clusters at scale.</p>\n<p>Windows build is not used in the companies that use FDB in prod at scale, as far as I know.<br>\nRight now, windows build is only \u201cguaranteed\u201d to be compilable, but not tested in real clusters.<br>\nIt seems unwise to use windows build for serious use cases.</p>\n<p>I\u2019d suggest we consider dropping the official support for Windows build and looking for community support for the Windows build.</p>\n<p>What do people think?</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 28,
        "updated_at": "2021-01-26T23:12:47.410Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 203,
        "reads": 29,
        "readers_count": 28,
        "score": 1035.8,
        "yours": false,
        "topic_id": 2531,
        "topic_slug": "looking-for-community-support-for-the-windows-build",
        "display_username": "Meng Xu",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://forums.foundationdb.org/t/foundationdb-windows-download-404s/2784/2",
            "internal": true,
            "reflection": true,
            "title": "FoundationDB Windows Download 404s",
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 337,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/looking-for-community-support-for-the-windows-build/2531/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 8987,
        "name": "Markus Pilman",
        "username": "markus.pilman",
        "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
        "created_at": "2021-01-27T00:41:51.862Z",
        "cooked": "<p>Given that we don\u2019t properly test on Windows, I think we should drop official windows support. I believe users would be better off using WSL - even if it is slightly slower, I would have way more confidence that it doesn\u2019t break anything.</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 28,
        "updated_at": "2021-01-27T00:41:51.862Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 29,
        "readers_count": 28,
        "score": 20.8,
        "yours": false,
        "topic_id": 2531,
        "topic_slug": "looking-for-community-support-for-the-windows-build",
        "display_username": "Markus Pilman",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 15,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/looking-for-community-support-for-the-windows-build/2531/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 8988,
        "name": "Christophe Chevalier",
        "username": "KrzysFR",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "created_at": "2021-01-27T09:32:26.251Z",
        "cooked": "<p>We\u2019re still here! o/</p>\n<p>Been running on Windows since forever without many issues.</p>\n<p>Note that though the <a href=\"https://forums.foundationdb.org/t/foundationdb-does-not-run-on-windows-subsystem-for-linux-wsl/809/10\">fdb server binaries install and run on WSL 2</a> there is an issue with the static IP: Every time the WSL2 vm restarts, it can change its local IP address (used between the windows host and linux guest) so the fdb.cluster file becomes invalid and need to be updated by hand every time\u2026</p>\n<p>If you drop support for the client, we - for example - would be severely impacted by that: we develop using Visual Studio or Visual Studio Code on Windows, meaning we could not easily test/debug or run our backend applications.</p>\n<p>Dropping support for the <em>server</em> part for Windows, would be less an issue.</p>\n<p>It is not uncommon to have database systems that require a specific OS on the server, but they usually have clients for all platforms/languages, but requiring a specific OS for the clients also would make it harder to start develop for it.</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 28,
        "updated_at": "2021-01-27T17:12:15.169Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 14,
        "reads": 29,
        "readers_count": 28,
        "score": 125.8,
        "yours": false,
        "topic_id": 2531,
        "topic_slug": "looking-for-community-support-for-the-windows-build",
        "display_username": "Christophe Chevalier",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://forums.foundationdb.org/t/foundationdb-does-not-run-on-windows-subsystem-for-linux-wsl/809/10",
            "internal": true,
            "reflection": false,
            "title": "FoundationDB does not run on Windows Subsystem For Linux (WSL)",
            "clicks": 6
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 53,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/looking-for-community-support-for-the-windows-build/2531/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 8991,
        "name": "Meng Xu",
        "username": "mengxu",
        "avatar_template": "/user_avatar/forums.foundationdb.org/mengxu/{size}/893_2.png",
        "created_at": "2021-01-27T21:56:33.530Z",
        "cooked": "<p>Thanks for your input, Christophe!</p>\n<p>May I ask which FDB version you are currently running?</p>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 28,
        "updated_at": "2021-01-27T21:56:33.530Z",
        "reply_count": 1,
        "reply_to_post_number": 3,
        "quote_count": 0,
        "incoming_link_count": 9,
        "reads": 25,
        "readers_count": 24,
        "score": 55.0,
        "yours": false,
        "topic_id": 2531,
        "topic_slug": "looking-for-community-support-for-the-windows-build",
        "display_username": "Meng Xu",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 53,
          "username": "KrzysFR",
          "name": "Christophe Chevalier",
          "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 337,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/looking-for-community-support-for-the-windows-build/2531/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 8992,
        "name": "Markus Pilman",
        "username": "markus.pilman",
        "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
        "created_at": "2021-01-27T22:08:24.106Z",
        "cooked": "<p>I think having a functioning windows client is a fair requirement. One avenue I still want to explore is using <code>clang</code> to compile FDB on Windows - this would at least give us some continuity and <code>clang</code> is officially supported by Microsoft (so you can link binaries produced by MSVC and clang).</p>\n<p>The problem I have been running into was that the <code>clang</code> version that Microsoft provides was compiled to 32bit intel. But compilation would occasionally use more than 3GB of main memory for some files.</p>",
        "post_number": 5,
        "post_type": 1,
        "posts_count": 28,
        "updated_at": "2021-01-27T22:08:24.106Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 35,
        "reads": 25,
        "readers_count": 24,
        "score": 185.0,
        "yours": false,
        "topic_id": 2531,
        "topic_slug": "looking-for-community-support-for-the-windows-build",
        "display_username": "Markus Pilman",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 15,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/looking-for-community-support-for-the-windows-build/2531/5",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 8993,
        "name": "Christophe Chevalier",
        "username": "KrzysFR",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "created_at": "2021-01-27T22:41:22.043Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"mengxu\" data-post=\"4\" data-topic=\"2531\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/mengxu/48/893_2.png\" class=\"avatar\"> mengxu:</div>\n<blockquote>\n<p>May I ask which FDB version you are currently running?</p>\n</blockquote>\n</aside>\n<p>A mix of 6.0, 6.1 and 6.2, waiting for 6.3 to be stable to upgrade, but most of these are already on linux or could be linux.</p>\n<p>We even have much older versions than are running fine and that did not need any of the new 6.x features or caused problems so were left alone. All of these are \u201csmall scale\u201d though.</p>\n<p>But on the client side, most of the development, CI and testing is happening on Windows (either talking to a local fdb server for unit testing, or a remote linux cluster). The test servers have multiple versions installed in // (so that we can test older versions that were targeting 5.x and 6.0/6.1).</p>",
        "post_number": 6,
        "post_type": 1,
        "posts_count": 28,
        "updated_at": "2021-01-27T23:04:09.291Z",
        "reply_count": 0,
        "reply_to_post_number": 4,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 25,
        "readers_count": 24,
        "score": 5.0,
        "yours": false,
        "topic_id": 2531,
        "topic_slug": "looking-for-community-support-for-the-windows-build",
        "display_username": "Christophe Chevalier",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 53,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/looking-for-community-support-for-the-windows-build/2531/6",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 8994,
        "name": "Christophe Chevalier",
        "username": "KrzysFR",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "created_at": "2021-01-27T23:02:32.634Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"markus.pilman\" data-post=\"5\" data-topic=\"2531\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/markus.pilman/48/379_2.png\" class=\"avatar\"> markus.pilman:</div>\n<blockquote>\n<p>The problem I have been running into was that the <code>clang</code> version that Microsoft provides was compiled to 32bit intel. But compilation would occasionally use more than 3GB of main memory for some files.</p>\n</blockquote>\n</aside>\n<p>Have you tried the latest Visual Studio 2019 Preview? I see references to 64-bit clang starting from 16.1 preview 1 (which is already old from mid-2019) here: <a href=\"https://devblogs.microsoft.com/cppblog/clang-llvm-support-in-visual-studio/\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Clang/LLVM Support in Visual Studio - C++ Team Blog</a></p>\n<p>In the latest VS 2019 version on my machine (non preview) I also see them, after installing the components manually:<br>\n<img src=\"https://global.discourse-cdn.com/foundationdb/original/2X/8/8d1deddec6e3c1f4be239d0ba7896f43a566616d.png\" alt=\"image\" data-base62-sha1=\"k8nrFBr5D0CEMrwswFaN7vFUvnL\" width=\"386\" height=\"193\"></p>\n<p>This document mentions seems to imply there a x64 binaries for all the llvm/clang tools : <a href=\"https://docs.microsoft.com/en-us/cpp/build/clang-support-msbuild?view=msvc-160\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Clang/LLVM support in Visual Studio projects | Microsoft Learn</a></p>\n<blockquote>\n<p>By default, <strong>clang-cl.exe</strong> is located in %VCINSTALLDIR%\\Tools\\Llvm\\bin\\ and <strong>%VCINSTALLDIR%\\Tools\\Llvm\\x64\\bin</strong></p>\n</blockquote>\n<p>Here is what I see in this folder on my machine:<br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://global.discourse-cdn.com/foundationdb/original/2X/5/589d4ad18a40569c0517cfd6e5c523de61467622.png\" data-download-href=\"/uploads/short-url/cDV0TMBVOVq8YGVOG8yz32RMtwu.png?dl=1\" title=\"image\" rel=\"noopener nofollow ugc\"><img src=\"https://global.discourse-cdn.com/foundationdb/original/2X/5/589d4ad18a40569c0517cfd6e5c523de61467622.png\" alt=\"image\" data-base62-sha1=\"cDV0TMBVOVq8YGVOG8yz32RMtwu\" width=\"324\" height=\"500\" data-dominant-color=\"F6F6F6\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">773\u00d71190 19.8 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p>The non-x64 folder has the sames binaries and they are all a bit smaller, which would be expected if they were built for 32-bits.</p>\n<p>I found older pages talking about hacking the 32-bit versions with editbin to make them Large Address Aware (see <a href=\"https://developercommunity.visualstudio.com/idea/806348/distribute-x64-builds-of-clang.html?childToView=831223#comment-831223\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Developer Community</a> ) but it seems that this is not required anymore?</p>",
        "post_number": 7,
        "post_type": 1,
        "posts_count": 28,
        "updated_at": "2021-01-27T23:02:32.634Z",
        "reply_count": 1,
        "reply_to_post_number": 5,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 25,
        "readers_count": 24,
        "score": 10.0,
        "yours": false,
        "topic_id": 2531,
        "topic_slug": "looking-for-community-support-for-the-windows-build",
        "display_username": "Christophe Chevalier",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://developercommunity.visualstudio.com/idea/806348/distribute-x64-builds-of-clang.html?childToView=831223#comment-831223",
            "internal": false,
            "reflection": false,
            "clicks": 0
          },
          {
            "url": "https://devblogs.microsoft.com/cppblog/clang-llvm-support-in-visual-studio/",
            "internal": false,
            "reflection": false,
            "clicks": 0
          },
          {
            "url": "https://docs.microsoft.com/en-us/cpp/build/clang-support-msbuild?view=msvc-160",
            "internal": false,
            "reflection": false,
            "title": "Clang/LLVM support in Visual Studio Visual Studio projects | Microsoft Docs",
            "clicks": 0
          },
          {
            "url": "https://global.discourse-cdn.com/foundationdb/original/2X/5/589d4ad18a40569c0517cfd6e5c523de61467622.png",
            "internal": false,
            "reflection": false,
            "title": "589d4ad18a40569c0517cfd6e5c523de61467622.png",
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 53,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/looking-for-community-support-for-the-windows-build/2531/7",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 8995,
        "name": "Markus Pilman",
        "username": "markus.pilman",
        "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
        "created_at": "2021-01-27T23:06:06.129Z",
        "cooked": "<p>I did not try this yet \u2013 and currently I don\u2019t have a machine to try (I used my personal gaming PC back then).</p>\n<p>Do you think you could try whether this works? The cmake part to configure the compiler on Windows is relatively short\u2026</p>",
        "post_number": 8,
        "post_type": 1,
        "posts_count": 28,
        "updated_at": "2021-01-27T23:06:06.129Z",
        "reply_count": 0,
        "reply_to_post_number": 7,
        "quote_count": 0,
        "incoming_link_count": 3,
        "reads": 21,
        "readers_count": 20,
        "score": 19.2,
        "yours": false,
        "topic_id": 2531,
        "topic_slug": "looking-for-community-support-for-the-windows-build",
        "display_username": "Markus Pilman",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 53,
          "username": "KrzysFR",
          "name": "Christophe Chevalier",
          "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 15,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/looking-for-community-support-for-the-windows-build/2531/8",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 8996,
        "name": "Christophe Chevalier",
        "username": "KrzysFR",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "created_at": "2021-01-28T13:49:12.871Z",
        "cooked": "<p>I followed the CMAKE instructions but I\u2019m having an issue with Ninja not recognizing the VS 2019 C# compiler. Even hacking the EnableCsharp file to force mono detection, makes it fail later on (does not find a valid linker for projects written in C#)</p>\n<p>I had to switch to a different generator by running <code>cmake -G \"Visual Studio 16 2019\" -A x64 -DCMAKE_BUILD_TYPE=Release -DUSE_WERROR=ON ..</code></p>\n<p>CMAKE runs until the end, and the builds fails with <code>compiler is out of heap space</code> like you probably encountered.</p>\n<p>I had an issue building xxhash.h: it was trying to include &lt;stdalign.h&gt; instead of declaring the macro for MSVC: I manually commented everything except line 640 to work around that.</p><aside class=\"onebox githubblob\">\n  <header class=\"source\">\n      <a href=\"https://github.com/apple/foundationdb/blob/master/flow/xxhash.h#L634-L643\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com</a>\n  </header>\n  <article class=\"onebox-body\">\n    <h4><a href=\"https://github.com/apple/foundationdb/blob/master/flow/xxhash.h#L634-L643\" target=\"_blank\" rel=\"noopener nofollow ugc\">apple/foundationdb/blob/master/flow/xxhash.h#L634-L643</a></h4>\n<pre class=\"onebox\"><code class=\"lang-h\"><ol class=\"start lines\" start=\"634\" style=\"counter-reset: li-counter 633 ;\">\n<li>#if defined(__STDC_VERSION__) &amp;&amp; (__STDC_VERSION__ &gt;= 201112L) /* C11+ */</li><li>#include &lt;stdalign.h&gt;</li><li>#define XXH_ALIGN(n) alignas(n)</li><li>#elif defined(__GNUC__)</li><li>#define XXH_ALIGN(n) __attribute__((aligned(n)))</li><li>#elif defined(_MSC_VER)</li><li>#define XXH_ALIGN(n) __declspec(align(n))</li><li>#else</li><li>#define XXH_ALIGN(n) /* disabled */</li><li>#endif</li>\n</ol></code></pre>\n\n\n  </article>\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>I\u2019m not sure what I must now do to switch to LLVM/clang to test things out?</p>\n<p>Here are the steps I used:</p>\n<pre><code class=\"lang-auto\">- Installed CMAKE 3.19.3 from https://cmake.org/download/\n- Installed Mono 6.12.0 from https://www.mono-project.com/download/stable/, added to PATH\n- Downloaded Ninja 1.10.2 from https://github.com/ninja-build/ninja/releases\n  - note: was lazy and copied ninja.exe to System32, you should follow these instructions instead =&gt; https://github.com/rwols/CMakeBuilder/wiki/Ninja-for-Windows-Installation-Instructions\n- Installed Open JDK 15, added to PATH and JAVA_HOME\n\nUsing VS 2019 Developper Prompt (imporant!)\n- cd into fdb repo\n- mkdir distrib\n- cd distrib\n- cmake -G \"Visual Studio 16 2019\" -A x64 -DCMAKE_BUILD_TYPE=Release -DUSE_WERROR=ON ..\n- msbuild /p:Configuration=Release /p:PreferredToolArchitecture=x64 foundationdb.sln\n  &gt; fails with 'compiler is out of heap space' when building flow\n</code></pre>",
        "post_number": 9,
        "post_type": 1,
        "posts_count": 28,
        "updated_at": "2021-01-28T13:52:25.433Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 3,
        "reads": 23,
        "readers_count": 22,
        "score": 19.6,
        "yours": false,
        "topic_id": 2531,
        "topic_slug": "looking-for-community-support-for-the-windows-build",
        "display_username": "Christophe Chevalier",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/apple/foundationdb/blob/master/flow/xxhash.h#L634-L643",
            "internal": false,
            "reflection": false,
            "title": "foundationdb/xxhash.h at master \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 53,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/looking-for-community-support-for-the-windows-build/2531/9",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 8997,
        "name": "Markus Pilman",
        "username": "markus.pilman",
        "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
        "created_at": "2021-01-28T16:22:52.149Z",
        "cooked": "<p>Is there documentation that claims building with <code>Ninja</code> on Windows is supported? If so we need to correct this. I checked <a href=\"https://github.com/apple/foundationdb/blob/master/README.md\">the readme</a> and it says that on Windows you should use Visual Studio to build.</p>\n<p>I think setting <code>USE_WERROR</code> to <code>ON</code> is not a good idea as the Windows builds generate a lot of warnings (this is a known issue and so far nobody took the time to fix those). I think for the target you would need to set <code>Visual Studio 16 2019 Win64</code> (not sure whether the <code>-A</code> argument does the same thing.</p>\n<p>I think in order to use <code>clang</code> you might need to pass the toolset to <code>cmake</code> (I only found <a href=\"https://stackoverflow.com/questions/38171878/how-do-i-tell-cmake-to-use-clang-on-windows\">this stackoverflow question</a> \u2013 I don\u2019t remember what I tried in the past).</p>\n<p>The XXHash problem you run into is weird. Does VS16 support C11? If not the above macros should be correct. Sorry I don\u2019t think anyone tested with VS16 yet\u2026</p>",
        "post_number": 10,
        "post_type": 1,
        "posts_count": 28,
        "updated_at": "2021-01-28T16:22:52.149Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 20,
        "readers_count": 19,
        "score": 14.0,
        "yours": false,
        "topic_id": 2531,
        "topic_slug": "looking-for-community-support-for-the-windows-build",
        "display_username": "Markus Pilman",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/apple/foundationdb/blob/master/README.md",
            "internal": false,
            "reflection": false,
            "title": "foundationdb/README.md at master \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 0
          },
          {
            "url": "https://stackoverflow.com/questions/38171878/how-do-i-tell-cmake-to-use-clang-on-windows",
            "internal": false,
            "reflection": false,
            "title": "c++ - How do I tell CMake to use Clang on Windows? - Stack Overflow",
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 15,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/looking-for-community-support-for-the-windows-build/2531/10",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 8999,
        "name": "Christophe Chevalier",
        "username": "KrzysFR",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "created_at": "2021-01-28T20:13:07.787Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"markus.pilman\" data-post=\"10\" data-topic=\"2531\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/markus.pilman/48/379_2.png\" class=\"avatar\"> markus.pilman:</div>\n<blockquote>\n<p>Is there documentation that claims building with <code>Ninja</code> on Windows is supported? If so we need to correct this. I checked <a href=\"https://github.com/apple/foundationdb/blob/master/README.md\" rel=\"noopener nofollow ugc\">the readme</a> and it says that on Windows you should use Visual Studio to build.</p>\n</blockquote>\n</aside>\n<p>The documentation first starts with a steps that do not specify a specific environment (<a href=\"https://github.com/apple/foundationdb/blob/master/README.md#compiling-from-source\" rel=\"noopener nofollow ugc\">https://github.com/apple/foundationdb/blob/master/README.md#compiling-from-source</a>) so I started following it, and only found out about the Windows specific with an entire different set of step after scrolling down to the end of the page\u2026</p>\n<aside class=\"quote no-group\" data-username=\"markus.pilman\" data-post=\"10\" data-topic=\"2531\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/markus.pilman/48/379_2.png\" class=\"avatar\"> markus.pilman:</div>\n<blockquote>\n<p>I think in order to use <code>clang</code> you might need to pass the toolset to <code>cmake</code> (I only found <a href=\"https://stackoverflow.com/questions/38171878/how-do-i-tell-cmake-to-use-clang-on-windows\" rel=\"noopener nofollow ugc\">this stackoverflow question</a> \u2013 I don\u2019t remember what I tried in the past).</p>\n</blockquote>\n</aside>\n<p>Followed the steps (they are a bit outdated version-wise) and had to install a few additional things. Most important was llvm-utils to make it work with cmake and VS2019: <a href=\"https://github.com/zufuliu/llvm-utils#llvm-for-visual-studio-2017-and-2019\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">GitHub - zufuliu/llvm-utils: LLVM/Clang toolsets for Visual Studio 2022, 2019, 2017, 2015, 2013, 2012 and 2010.</a></p>\n<p><strong>EDIT : DISREGARD! This toolkit is too old, and does not work properly anymore! I swtiched to used VS \u2018ClangCL\u2019 toolset and it works better, see next message!</strong></p>\n<p>After downloading the LLVM_VS2017.zip from <a href=\"https://github.com/zufuliu/llvm-utils/releases/tag/v20.03\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Release v20.03 \u00b7 zufuliu/llvm-utils \u00b7 GitHub</a> and run install.bat, it copied the correct files for both vs2017 and vs2019. I just had to add <code>-T \"LLVM_v142\"</code> to CMAKE and it generated the proper project files.</p>\n<p>Though it looks like it does not enable parallel build, because the build tooki FOREVER and only used a single core. It took 1h10min and build most of the binaries though there are a few errors remaining.</p>\n<p>While it was running I was able to confirm that the cl-lang.exe process is indeed running as x64.</p>\n<pre><code class=\"lang-auto\">\"C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\foundationdb.sln\" (default target) (1) -&gt;\n\"C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\ALL_BUILD.vcxproj.metaproj\" (default target) (2) -&gt;\n\"C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbbackup\\fdbbackup.vcxproj.metaproj\" (default target) (76) -&gt;\n\"C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbbackup\\fdbbackup.vcxproj\" (default target) (81) -&gt;\n(ClCompile target) -&gt;\n  C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\boostProject-prefix\\src\\boostProject\\boost/interprocess/detail/win32_api.hpp(\n898,48): error : conflicting types for 'GetProcessTimes' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbbackup\\fdbbackup.v\ncxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\boostProject-prefix\\src\\boostProject\\boost/interprocess/detail/win32_api.hpp(\n914,49): error : functions that differ only in their return type cannot be overloaded [C:\\Data\\Git\\GitHub\\foundationdb\\\ndistrib\\fdbbackup\\fdbbackup.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\boostProject-prefix\\src\\boostProject\\boost/interprocess/detail/win32_api.hpp(\n915,50): error : conflicting types for 'FindFirstFileA' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbbackup\\fdbbackup.vc\nxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\boostProject-prefix\\src\\boostProject\\boost/interprocess/detail/win32_api.hpp(\n916,50): error : conflicting types for 'FindNextFileA' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbbackup\\fdbbackup.vcx\nproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\boostProject-prefix\\src\\boostProject\\boost/interprocess/detail/win32_api.hpp(\n920,51): error : conflicting types for 'CreateMutexA' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbbackup\\fdbbackup.vcxp\nroj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\boostProject-prefix\\src\\boostProject\\boost/interprocess/detail/win32_api.hpp(\n924,48): error : conflicting types for 'UnmapViewOfFile' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbbackup\\fdbbackup.v\ncxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\boostProject-prefix\\src\\boostProject\\boost/interprocess/detail/win32_api.hpp(\n925,51): error : conflicting types for 'CreateSemaphoreA' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbbackup\\fdbbackup.\nvcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\boostProject-prefix\\src\\boostProject\\boost/interprocess/detail/win32_api.hpp(\n928,51): error : conflicting types for 'CreateFileMappingA' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbbackup\\fdbbacku\np.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\boostProject-prefix\\src\\boostProject\\boost/interprocess/detail/win32_api.hpp(\n931,51): error : conflicting types for 'CreateFileA' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbbackup\\fdbbackup.vcxpr\noj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\boostProject-prefix\\src\\boostProject\\boost/interprocess/detail/win32_api.hpp(\n932,49): error : conflicting types for 'GetSystemInfo' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbbackup\\fdbbackup.vcx\nproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\boostProject-prefix\\src\\boostProject\\boost/interprocess/detail/win32_api.hpp(\n933,48): error : conflicting types for 'FlushViewOfFile' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbbackup\\fdbbackup.v\ncxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\boostProject-prefix\\src\\boostProject\\boost/interprocess/detail/win32_api.hpp(\n937,48): error : conflicting types for 'GetFileSizeEx' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbbackup\\fdbbackup.vcx\nproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\boostProject-prefix\\src\\boostProject\\boost/interprocess/detail/win32_api.hpp(\n944,48): error : conflicting types for 'CreateDirectoryA' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbbackup\\fdbbackup.\nvcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\boostProject-prefix\\src\\boostProject\\boost/interprocess/detail/win32_api.hpp(\n946,48): error : functions that differ only in their return type cannot be overloaded [C:\\Data\\Git\\GitHub\\foundationdb\\\ndistrib\\fdbbackup\\fdbbackup.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\boostProject-prefix\\src\\boostProject\\boost/interprocess/detail/win32_api.hpp(\n950,48): error : conflicting types for 'SetFilePointerEx' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbbackup\\fdbbackup.\nvcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\boostProject-prefix\\src\\boostProject\\boost/interprocess/detail/win32_api.hpp(\n953,48): error : conflicting types for 'LockFileEx' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbbackup\\fdbbackup.vcxpro\nj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\boostProject-prefix\\src\\boostProject\\boost/interprocess/detail/win32_api.hpp(\n954,48): error : conflicting types for 'UnlockFileEx' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbbackup\\fdbbackup.vcxp\nroj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\boostProject-prefix\\src\\boostProject\\boost/interprocess/detail/win32_api.hpp(\n955,48): error : conflicting types for 'WriteFile' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbbackup\\fdbbackup.vcxproj\n]\n  C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\boostProject-prefix\\src\\boostProject\\boost/interprocess/detail/win32_api.hpp(\n956,48): error : conflicting types for 'ReadFile' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbbackup\\fdbbackup.vcxproj]\n\n\n\"C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\foundationdb.sln\" (default target) (1) -&gt;\n\"C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\ALL_BUILD.vcxproj.metaproj\" (default target) (2) -&gt;\n\"C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbservice\\fdbmonitor.vcxproj.metaproj\" (default target) (100) -&gt;\n\"C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbservice\\fdbmonitor.vcxproj\" (default target) (101) -&gt;\n  C:\\Data\\Git\\GitHub\\foundationdb\\fdbservice\\FDBService.cpp(414,54): error : cannot pass object of non-trivial type 'st\nd::string' (aka 'basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt;&gt;') through variadic function; call will abort at\n runtime [-Wnon-pod-varargs] [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbservice\\fdbmonitor.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\fdbservice\\FDBService.cpp(418,54): error : cannot pass object of non-trivial type 'st\nd::string' (aka 'basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt;&gt;') through variadic function; call will abort at\n runtime [-Wnon-pod-varargs] [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbservice\\fdbmonitor.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\fdbservice\\FDBService.cpp(841,5): error : first parameter of 'main' (argument count)\nmust be of type 'int' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbservice\\fdbmonitor.vcxproj]\n\n\n\"C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\foundationdb.sln\" (default target) (1) -&gt;\n\"C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\ALL_BUILD.vcxproj.metaproj\" (default target) (2) -&gt;\n\"C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbserver\\fdbserver.vcxproj.metaproj\" (default target) (102) -&gt;\n\"C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbserver\\fdbserver.vcxproj\" (default target) (107) -&gt;\n  C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\um\\fileapi.h(59,1): error : conflicting types for 'Create\nDirectoryA' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbserver\\fdbserver.vcxproj]\n  C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\um\\fileapi.h(87,1): error : conflicting types for 'Create\nFileA' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbserver\\fdbserver.vcxproj]\n  C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\um\\fileapi.h(233,1): error : conflicting types for 'FindF\nirstFileA' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbserver\\fdbserver.vcxproj]\n  C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\um\\fileapi.h(322,1): error : conflicting types for 'FindN\nextFileA' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbserver\\fdbserver.vcxproj]\n  C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\um\\fileapi.h(651,1): error : functions that differ only i\nn their return type cannot be overloaded [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbserver\\fdbserver.vcxproj]\n  C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\um\\fileapi.h(681,1): error : conflicting types for 'GetFi\nleSizeEx' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbserver\\fdbserver.vcxproj]\n  C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\um\\fileapi.h(690,1): error : functions that differ only i\nn their return type cannot be overloaded [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbserver\\fdbserver.vcxproj]\n  C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\um\\fileapi.h(984,1): error : conflicting types for 'LockF\nileEx' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbserver\\fdbserver.vcxproj]\n  C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\um\\fileapi.h(1024,1): error : conflicting types for 'Read\nFile' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbserver\\fdbserver.vcxproj]\n  C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\um\\fileapi.h(1150,1): error : conflicting types for 'SetF\nilePointerEx' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbserver\\fdbserver.vcxproj]\n  C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\um\\fileapi.h(1209,1): error : conflicting types for 'Unlo\nckFileEx' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbserver\\fdbserver.vcxproj]\n  C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\um\\fileapi.h(1221,1): error : conflicting types for 'Writ\neFile' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbserver\\fdbserver.vcxproj]\n  C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\um\\fileapi.h(1462,1): error : functions that differ only\nin their return type cannot be overloaded [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbserver\\fdbserver.vcxproj]\n  C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\um\\synchapi.h(428,1): error : conflicting types for 'Crea\nteMutexA' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbserver\\fdbserver.vcxproj]\n  C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\um\\processthreadsapi.h(106,1): error : conflicting types\nfor 'GetProcessTimes' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbserver\\fdbserver.vcxproj]\n  C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\um\\sysinfoapi.h(95,1): error : conflicting types for 'Get\nSystemInfo' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbserver\\fdbserver.vcxproj]\n  C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\um\\memoryapi.h(273,1): error : conflicting types for 'Flu\nshViewOfFile' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbserver\\fdbserver.vcxproj]\n  C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\um\\memoryapi.h(282,1): error : conflicting types for 'Unm\napViewOfFile' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbserver\\fdbserver.vcxproj]\n  C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\um\\libloaderapi.h(186,1): error : conflicting types for '\nFreeLibrary' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbserver\\fdbserver.vcxproj]\n\n\n\"C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\foundationdb.sln\" (default target) (1) -&gt;\n\"C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\documentation\\buildsphinx.vcxproj.metaproj\" (default target) (126) -&gt;\n\"C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\documentation\\buildsphinx.vcxproj\" (default target) (127) -&gt;\n(CustomBuild target) -&gt;\n  C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\MSBuild\\Microsoft\\VC\\v160\\Microsoft.CppCommon.targets(240\n,5): error MSB8066: Custom build for 'C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\CMakeFiles\\0a42c1b5e737061c329a291dcab471\ne1\\venv_setup.rule;C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\CMakeFiles\\2d165168042997a2d819c3db7ea1bfb5\\buildsphinx.rule\n' exited with code 9009. [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\documentation\\buildsphinx.vcxproj]\n\n    2 Warning(s)\n    42 Error(s)\n</code></pre>",
        "post_number": 11,
        "post_type": 1,
        "posts_count": 28,
        "updated_at": "2021-01-28T20:36:56.261Z",
        "reply_count": 0,
        "reply_to_post_number": 10,
        "quote_count": 1,
        "incoming_link_count": 1,
        "reads": 20,
        "readers_count": 19,
        "score": 9.0,
        "yours": false,
        "topic_id": 2531,
        "topic_slug": "looking-for-community-support-for-the-windows-build",
        "display_username": "Christophe Chevalier",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/apple/foundationdb/blob/master/README.md#compiling-from-source",
            "internal": false,
            "reflection": false,
            "title": "foundationdb/README.md at master \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 0
          },
          {
            "url": "https://github.com/zufuliu/llvm-utils#llvm-for-visual-studio-2017-and-2019",
            "internal": false,
            "reflection": false,
            "title": "GitHub - zufuliu/llvm-utils: LLVM/Clang for Visual Studio 2019, 2017, 2015, 2013, 2012 and 2010. clang-cl for Python3 distutils. Utils for Clang Static Analyzer",
            "clicks": 0
          },
          {
            "url": "https://github.com/zufuliu/llvm-utils/releases/tag/v20.03",
            "internal": false,
            "reflection": false,
            "title": "Release v20.03 \u00b7 zufuliu/llvm-utils \u00b7 GitHub",
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 53,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/looking-for-community-support-for-the-windows-build/2531/11",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 9000,
        "name": "Christophe Chevalier",
        "username": "KrzysFR",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "created_at": "2021-01-28T20:35:52.378Z",
        "cooked": "<p>OK, so llvm-utils was not the correct choice, it seems unmaintained and was the only solution before official support of clang in recent VS versions. I changed the toolset to <code>ClangCL</code> which is the name of the official Microsoft Platform Toolset for clang/llvm.</p>\n<pre><code class=\"lang-auto\">cmake -G \"Visual Studio 16 2019\" -A x64 -T\"ClangCL\" -DCMAKE_BUILD_TYPE=Release ..\nmsbuild /p:Configuration=Release /p:PreferredToolArchitecture=x64 foundationdb.sln\n</code></pre>\n<p>This makes so that all vcproj have this toolset selected:</p>\n<pre><code class=\"lang-auto\">  &lt;PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\"&gt;\n    &lt;ConfigurationType&gt;Utility&lt;/ConfigurationType&gt;\n    &lt;CharacterSet&gt;MultiByte&lt;/CharacterSet&gt;\n    &lt;PlatformToolset&gt;ClangCL&lt;/PlatformToolset&gt;\n  &lt;/PropertyGroup&gt;\n</code></pre>\n<p>And VS seems to like this better and even selected ISO C++ 17!</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://global.discourse-cdn.com/foundationdb/original/2X/8/87fbc58ad24cc387a40a88dab6ed7e5e5677b25b.png\" data-download-href=\"/uploads/short-url/joXSmlFXI0FQ9ZPyyn6e9RjBe1Z.png?dl=1\" title=\"image\" rel=\"noopener nofollow ugc\"><img src=\"https://global.discourse-cdn.com/foundationdb/original/2X/8/87fbc58ad24cc387a40a88dab6ed7e5e5677b25b.png\" alt=\"image\" data-base62-sha1=\"joXSmlFXI0FQ9ZPyyn6e9RjBe1Z\" width=\"690\" height=\"206\" data-small-upload=\"https://global.discourse-cdn.com/foundationdb/optimized/2X/8/87fbc58ad24cc387a40a88dab6ed7e5e5677b25b_2_10x10.png\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use xlink:href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">718\u00d7215 7.62 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use xlink:href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p>This fixed the build issues like xxhash for example (macro correctly identifies MSVC).</p>\n<p>The only problem is that the build is still single threaded, and probably take another hour to complete\u2026 I\u2019ll keep you posted with the result.</p>\n<p>I\u2019m pretty sure there are flags or parameters that must be passed to clang to build in // (I would be very surprised if clang would take 1 hour on linux for example!). Any ideas?</p>",
        "post_number": 12,
        "post_type": 1,
        "posts_count": 28,
        "updated_at": "2021-01-28T20:38:05.396Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 19,
        "readers_count": 18,
        "score": 8.8,
        "yours": false,
        "topic_id": 2531,
        "topic_slug": "looking-for-community-support-for-the-windows-build",
        "display_username": "Christophe Chevalier",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://global.discourse-cdn.com/foundationdb/original/2X/8/87fbc58ad24cc387a40a88dab6ed7e5e5677b25b.png",
            "internal": false,
            "reflection": false,
            "title": "87fbc58ad24cc387a40a88dab6ed7e5e5677b25b.png",
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 53,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/looking-for-community-support-for-the-windows-build/2531/12",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 9002,
        "name": "Markus Pilman",
        "username": "markus.pilman",
        "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
        "created_at": "2021-01-28T21:02:19.971Z",
        "cooked": "<p>Thank you so much for looking into this!!! Also a more general question: I think (but here my Windows knowledge might not be good enough and I miss something that makes this not a good idea) we could create a <a href=\"https://docs.microsoft.com/en-us/virtualization/windowscontainers/manage-docker/manage-windows-dockerfile\">docker image</a> for Windows so that the build is easily reproducible by anyone.</p>\n<aside class=\"quote no-group\" data-username=\"KrzysFR\" data-post=\"12\" data-topic=\"2531\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/krzysfr/48/43_2.png\" class=\"avatar\"> KrzysFR:</div>\n<blockquote>\n<p>The only problem is that the build is still single threaded</p>\n</blockquote>\n</aside>\n<p>That shouldn\u2019t be. Did you try using the <code>msbuild</code> command from the readme?</p>",
        "post_number": 13,
        "post_type": 1,
        "posts_count": 28,
        "updated_at": "2021-01-28T21:02:19.971Z",
        "reply_count": 1,
        "reply_to_post_number": 12,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 18,
        "readers_count": 17,
        "score": 8.6,
        "yours": false,
        "topic_id": 2531,
        "topic_slug": "looking-for-community-support-for-the-windows-build",
        "display_username": "Markus Pilman",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://docs.microsoft.com/en-us/virtualization/windowscontainers/manage-docker/manage-windows-dockerfile",
            "internal": false,
            "reflection": false,
            "title": "Dockerfile and Windows Containers | Microsoft Docs",
            "clicks": 1
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 15,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/looking-for-community-support-for-the-windows-build/2531/13",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 9004,
        "name": "Christophe Chevalier",
        "username": "KrzysFR",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "created_at": "2021-01-28T21:06:05.280Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"markus.pilman\" data-post=\"13\" data-topic=\"2531\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/markus.pilman/48/379_2.png\" class=\"avatar\"> markus.pilman:</div>\n<blockquote>\n<p>That shouldn\u2019t be. Did you try using the <code>msbuild</code> command from the readme?</p>\n</blockquote>\n</aside>\n<p>Tried both msbuild and from VS itself, they do the same thing.</p>\n<p>The build failed after 20 minutes with the same errors as above, but some of the binaries where build:</p>\n<p><img src=\"https://global.discourse-cdn.com/foundationdb/original/2X/c/c6b8cec5b74185514276b8cc8b158eaaa5e805a0.png\" alt=\"image\" data-base62-sha1=\"slYufdqEbbu2T9bfwnkyRQM5EuA\" width=\"175\" height=\"257\"></p>\n<p>Errors:</p>\n<pre><code class=\"lang-auto\">\"C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\foundationdb.sln\" (default target) (1) -&gt;\n\"C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\ALL_BUILD.vcxproj.metaproj\" (default target) (2) -&gt;\n\"C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbbackup\\fdbbackup.vcxproj.metaproj\" (default target) (76) -&gt;\n\"C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbbackup\\fdbbackup.vcxproj\" (default target) (81) -&gt;\n(ClCompile target) -&gt;\n  C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\boostProject-prefix\\src\\boostProject\\boost/interprocess/detail/win32_api.hpp(898,48): error : conflicting types for 'Get\nProcessTimes' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbbackup\\fdbbackup.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\boostProject-prefix\\src\\boostProject\\boost/interprocess/detail/win32_api.hpp(914,49): error : functions that differ only\n in their return type cannot be overloaded [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbbackup\\fdbbackup.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\boostProject-prefix\\src\\boostProject\\boost/interprocess/detail/win32_api.hpp(915,50): error : conflicting types for 'Fin\ndFirstFileA' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbbackup\\fdbbackup.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\boostProject-prefix\\src\\boostProject\\boost/interprocess/detail/win32_api.hpp(916,50): error : conflicting types for 'Fin\ndNextFileA' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbbackup\\fdbbackup.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\boostProject-prefix\\src\\boostProject\\boost/interprocess/detail/win32_api.hpp(920,51): error : conflicting types for 'Cre\nateMutexA' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbbackup\\fdbbackup.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\boostProject-prefix\\src\\boostProject\\boost/interprocess/detail/win32_api.hpp(924,48): error : conflicting types for 'Unm\napViewOfFile' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbbackup\\fdbbackup.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\boostProject-prefix\\src\\boostProject\\boost/interprocess/detail/win32_api.hpp(925,51): error : conflicting types for 'Cre\nateSemaphoreA' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbbackup\\fdbbackup.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\boostProject-prefix\\src\\boostProject\\boost/interprocess/detail/win32_api.hpp(928,51): error : conflicting types for 'Cre\nateFileMappingA' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbbackup\\fdbbackup.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\boostProject-prefix\\src\\boostProject\\boost/interprocess/detail/win32_api.hpp(931,51): error : conflicting types for 'Cre\nateFileA' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbbackup\\fdbbackup.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\boostProject-prefix\\src\\boostProject\\boost/interprocess/detail/win32_api.hpp(932,49): error : conflicting types for 'Get\nSystemInfo' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbbackup\\fdbbackup.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\boostProject-prefix\\src\\boostProject\\boost/interprocess/detail/win32_api.hpp(933,48): error : conflicting types for 'Flu\nshViewOfFile' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbbackup\\fdbbackup.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\boostProject-prefix\\src\\boostProject\\boost/interprocess/detail/win32_api.hpp(937,48): error : conflicting types for 'Get\nFileSizeEx' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbbackup\\fdbbackup.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\boostProject-prefix\\src\\boostProject\\boost/interprocess/detail/win32_api.hpp(944,48): error : conflicting types for 'Cre\nateDirectoryA' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbbackup\\fdbbackup.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\boostProject-prefix\\src\\boostProject\\boost/interprocess/detail/win32_api.hpp(946,48): error : functions that differ only\n in their return type cannot be overloaded [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbbackup\\fdbbackup.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\boostProject-prefix\\src\\boostProject\\boost/interprocess/detail/win32_api.hpp(950,48): error : conflicting types for 'Set\nFilePointerEx' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbbackup\\fdbbackup.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\boostProject-prefix\\src\\boostProject\\boost/interprocess/detail/win32_api.hpp(953,48): error : conflicting types for 'Loc\nkFileEx' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbbackup\\fdbbackup.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\boostProject-prefix\\src\\boostProject\\boost/interprocess/detail/win32_api.hpp(954,48): error : conflicting types for 'Unl\nockFileEx' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbbackup\\fdbbackup.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\boostProject-prefix\\src\\boostProject\\boost/interprocess/detail/win32_api.hpp(955,48): error : conflicting types for 'Wri\nteFile' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbbackup\\fdbbackup.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\boostProject-prefix\\src\\boostProject\\boost/interprocess/detail/win32_api.hpp(956,48): error : conflicting types for 'Rea\ndFile' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbbackup\\fdbbackup.vcxproj]\n\n\n\"C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\foundationdb.sln\" (default target) (1) -&gt;\n\"C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\ALL_BUILD.vcxproj.metaproj\" (default target) (2) -&gt;\n\"C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbservice\\fdbmonitor.vcxproj.metaproj\" (default target) (100) -&gt;\n\"C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbservice\\fdbmonitor.vcxproj\" (default target) (101) -&gt;\n  C:\\Data\\Git\\GitHub\\foundationdb\\fdbservice\\FDBService.cpp(414,54): error : cannot pass object of non-trivial type 'std::string' (aka 'basic_string&lt;char, char_tr\naits&lt;char&gt;, allocator&lt;char&gt;&gt;') through variadic function; call will abort at runtime [-Wnon-pod-varargs] [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbservice\\fdbmo\nnitor.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\fdbservice\\FDBService.cpp(418,54): error : cannot pass object of non-trivial type 'std::string' (aka 'basic_string&lt;char, char_tr\naits&lt;char&gt;, allocator&lt;char&gt;&gt;') through variadic function; call will abort at runtime [-Wnon-pod-varargs] [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbservice\\fdbmo\nnitor.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\fdbservice\\FDBService.cpp(841,5): error : first parameter of 'main' (argument count) must be of type 'int' [C:\\Data\\Git\\GitHub\\f\noundationdb\\distrib\\fdbservice\\fdbmonitor.vcxproj]\n\n\n\"C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\foundationdb.sln\" (default target) (1) -&gt;\n\"C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\ALL_BUILD.vcxproj.metaproj\" (default target) (2) -&gt;\n\"C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbserver\\fdbserver.vcxproj.metaproj\" (default target) (102) -&gt;\n\"C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbserver\\fdbserver.vcxproj\" (default target) (107) -&gt;\n  C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\um\\fileapi.h(59,1): error : conflicting types for 'CreateDirectoryA' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbserver\\fdbserver.vcxproj]\n  C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\um\\fileapi.h(87,1): error : conflicting types for 'CreateFileA' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbserver\\fdbserver.vcxproj]\n  C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\um\\fileapi.h(233,1): error : conflicting types for 'FindFirstFileA' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbserver\\fdbserver.vcxproj]\n  C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\um\\fileapi.h(322,1): error : conflicting types for 'FindNextFileA' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbserver\\fdbserver.vcxproj]\n  C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\um\\fileapi.h(651,1): error : functions that differ only in their return type cannot be overloaded [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbserver\\fdbserver.vcxproj]\n  C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\um\\fileapi.h(681,1): error : conflicting types for 'GetFileSizeEx' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbserver\\fdbserver.vcxproj]\n  C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\um\\fileapi.h(690,1): error : functions that differ only in their return type cannot be overloaded [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbserver\\fdbserver.vcxproj]\n  C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\um\\fileapi.h(984,1): error : conflicting types for 'LockFileEx' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbserver\\fdbserver.vcxproj]\n  C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\um\\fileapi.h(1024,1): error : conflicting types for 'ReadFile' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbserver\\fdbserver.vcxproj]\n  C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\um\\fileapi.h(1150,1): error : conflicting types for 'SetFilePointerEx' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbserver\\fdbserver.vcxproj]\n  C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\um\\fileapi.h(1209,1): error : conflicting types for 'UnlockFileEx' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbserver\\fdbserver.vcxproj]\n  C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\um\\fileapi.h(1221,1): error : conflicting types for 'WriteFile' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbserver\\fdbserver.vcxproj]\n  C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\um\\fileapi.h(1462,1): error : functions that differ only in their return type cannot be overloaded [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbserver\\fdbserver.vcxproj]\n  C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\um\\synchapi.h(428,1): error : conflicting types for 'CreateMutexA' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbserver\\fdbserver.vcxproj]\n  C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\um\\processthreadsapi.h(106,1): error : conflicting types for 'GetProcessTimes' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbserver\\fdbserver.vcxproj]\n  C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\um\\sysinfoapi.h(95,1): error : conflicting types for 'GetSystemInfo' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbserver\\fdbserver.vcxproj]\n  C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\um\\memoryapi.h(273,1): error : conflicting types for 'FlushViewOfFile' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbserver\\fdbserver.vcxproj]\n  C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\um\\memoryapi.h(282,1): error : conflicting types for 'UnmapViewOfFile' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbserver\\fdbserver.vcxproj]\n  C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\um\\libloaderapi.h(186,1): error : conflicting types for 'FreeLibrary' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\fdbserver\\fdbserver.vcxproj]\n\n\n\"C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\foundationdb.sln\" (default target) (1) -&gt;\n\"C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\documentation\\buildsphinx.vcxproj.metaproj\" (default target) (126) -&gt;\n\"C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\documentation\\buildsphinx.vcxproj\" (default target) (127) -&gt;\n(CustomBuild target) -&gt;\n  C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\MSBuild\\Microsoft\\VC\\v160\\Microsoft.CppCommon.targets(240,5): error MSB8066: Custom build for 'C:\\Da\nta\\Git\\GitHub\\foundationdb\\distrib\\CMakeFiles\\0a42c1b5e737061c329a291dcab471e1\\venv_setup.rule;C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\CMakeFiles\\2d165168042997a2\nd819c3db7ea1bfb5\\buildsphinx.rule' exited with code 9009. [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\documentation\\buildsphinx.vcxproj]\n\n    2 Warning(s)\n    42 Error(s)\n\nTime Elapsed 00:20:42.39\n</code></pre>",
        "post_number": 14,
        "post_type": 1,
        "posts_count": 28,
        "updated_at": "2021-01-28T21:06:05.280Z",
        "reply_count": 0,
        "reply_to_post_number": 13,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 20,
        "readers_count": 19,
        "score": 4.0,
        "yours": false,
        "topic_id": 2531,
        "topic_slug": "looking-for-community-support-for-the-windows-build",
        "display_username": "Christophe Chevalier",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 53,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/looking-for-community-support-for-the-windows-build/2531/14",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 9008,
        "name": "Christophe Chevalier",
        "username": "KrzysFR",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "created_at": "2021-01-28T23:28:57.119Z",
        "cooked": "<p><em>note: I\u2019m using the 6.3 branch to build</em></p>\n<p>Making a bit of progress, there are a lot of compilation errors due to slight differences in expected types (int vs uint16_t, size_t vs int, const_cast issues, \u2026). One of the bigest issue is defining so that it uses the winapi.h definitions to get rid of duplicate definition of the win api file apis.</p>\n<p>There are also some issues with building the documentation (html, some sphinx comment not found, \u2026) that may be because of missing dependencies.</p>\n<p>The only remaining issue I have are the following:</p>\n<pre><code class=\"lang-auto\">  C:\\Data\\Git\\GitHub\\foundationdb\\flow/Arena.h(181,59): error : too few arguments provided to function-like macro invocation [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\flow\\flow.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\flow/Arena.h(181,27): error : comparison between pointer and integer ('size_t' (aka 'unsigned long long') and 'int (*)() noexcept') [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\flow\\flow.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\flow/Arena.h(186,59): error : too few arguments provided to function-like macro invocation [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\flow\\flow.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\flow/Arena.h(186,27): error : comparison between pointer and integer ('size_t' (aka 'unsigned long long') and 'int (*)() noexcept') [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\flow\\flow.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\flow/Arena.h(407,70): error : too few arguments provided to function-like macro invocation [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\flow\\flow.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\flow/Arena.h(418,48): error : too few arguments provided to function-like macro invocation [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\flow\\flow.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\flow/Arena.h(407,37): error : comparison between pointer and integer ('std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt;&gt;::size_type' (aka 'unsigned long long') and 'int (*)() noexcept') [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\flow\\flow.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\flow/Arena.h(418,16): error : comparison between pointer and integer ('std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt;&gt;::size_type' (aka 'unsigned long long') and 'int (*)() noexcept') [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\flow\\flow.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\flow/Arena.h(513,25): error : expected unqualified-id [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\flow\\flow.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\flow/Arena.h(685,11): error : expected unqualified-id [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\flow\\flow.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\flow/Arena.h(686,49): error : expected unqualified-id [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\flow\\flow.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\flow/Arena.h(692,11): error : expected unqualified-id [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\flow\\flow.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\flow/Arena.h(693,49): error : expected unqualified-id [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\flow\\flow.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\flow/flat_buffers.h(339,14): error : expected unqualified-id [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\flow\\flow.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\flow/flat_buffers.h(339,14): error : expected ';' after expression [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\flow\\flow.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\flow/flat_buffers.h(339,14): error : expected expression [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\flow\\flow.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\flow/flat_buffers.h(339,14): error : expected ';' after expression [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\flow\\flow.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\flow/flat_buffers.h(339,14): error : expected expression [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\flow\\flow.vcxproj]\n  C:\\Data\\Git\\GitHub\\foundationdb\\flow/flat_buffers.h(339,14): error : expected ':' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\flow\\flow.vcxproj]\n</code></pre>\n<p>One such example is the comparison between a size_t and int in the assert: <code>size_t</code> is a <code>long long</code>, but the assert uses <code>std::numeric_limits&lt;int&gt;</code> ? (multiple instances of the same issue, comparing a size/length that is an int, with a size_t)</p><aside class=\"onebox githubblob\">\n  <header class=\"source\">\n      <a href=\"https://github.com/apple/foundationdb/blob/master/flow/Arena.h#L181-L189\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com</a>\n  </header>\n  <article class=\"onebox-body\">\n    <h4><a href=\"https://github.com/apple/foundationdb/blob/master/flow/Arena.h#L181-L189\" target=\"_blank\" rel=\"noopener nofollow ugc\">apple/foundationdb/blob/master/flow/Arena.h#L181-L189</a></h4>\n<pre class=\"onebox\"><code class=\"lang-h\"><ol class=\"start lines\" start=\"181\" style=\"counter-reset: li-counter 180 ;\">\n<li>inline void* operator new ( size_t size, Arena&amp; p ) {</li><li>\tUNSTOPPABLE_ASSERT( size &lt; std::numeric_limits&lt;int&gt;::max() );</li><li>\treturn ArenaBlock::allocate( p.impl, (int)size );</li><li>}</li><li>inline void operator delete( void*, Arena&amp; p ) {}</li><li>inline void* operator new[] ( size_t size, Arena&amp; p ) {</li><li>\tUNSTOPPABLE_ASSERT( size &lt; std::numeric_limits&lt;int&gt;::max() );</li><li>\treturn ArenaBlock::allocate( p.impl, (int)size );</li><li>}</li>\n</ol></code></pre>\n\n\n  </article>\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>Almost all instances of <code>std::max(..)</code> or <code>std::min(..)</code> fail with the same weird macro expansion issue (<code>expected unqualified-id</code>) and I don\u2019t understand what this message means.</p>\n<aside class=\"onebox githubblob\">\n  <header class=\"source\">\n      <a href=\"https://github.com/apple/foundationdb/blob/master/flow/flat_buffers.h#L365-L368\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com</a>\n  </header>\n  <article class=\"onebox-body\">\n    <h4><a href=\"https://github.com/apple/foundationdb/blob/master/flow/flat_buffers.h#L365-L368\" target=\"_blank\" rel=\"noopener nofollow ugc\">apple/foundationdb/blob/master/flow/flat_buffers.h#L365-L368</a></h4>\n<pre class=\"onebox\"><code class=\"lang-h\"><ol class=\"start lines\" start=\"365\" style=\"counter-reset: li-counter 364 ;\">\n<li>template &lt;class... Ts&gt;</li><li>constexpr auto align_helper(pack&lt;Ts...&gt;) {</li><li>\treturn std::max({ size_t{ 1 }, AlignToPowerOfTwo(fb_scalar_size&lt;Ts&gt;)... });</li><li>}</li>\n</ol></code></pre>\n\n\n  </article>\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>They all seem to point to a max() and min() macros somewhere in <code>C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\shared\\minwindef.h</code> that has nothing to do with it. As if it did not see the <code>std::</code> prefix and did not understand it was a different method?</p>\n<pre><code class=\"lang-auto\">#ifndef NOMINMAX\n\n#ifndef max\n#define max(a,b)            (((a) &gt; (b)) ? (a) : (b))\n#endif\n\n#ifndef min\n#define min(a,b)            (((a) &lt; (b)) ? (a) : (b))\n#endif\n\n#endif  /* NOMINMAX */\n</code></pre>\n<p>Plus, the corresponding min/max macros in minwindef.h are not defined because <code>NOMINMAX</code> is not defined so I really don\u2019t understand why the callstack points to these ??</p>",
        "post_number": 15,
        "post_type": 1,
        "posts_count": 28,
        "updated_at": "2021-01-28T23:28:57.119Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 19,
        "readers_count": 18,
        "score": 8.8,
        "yours": false,
        "topic_id": 2531,
        "topic_slug": "looking-for-community-support-for-the-windows-build",
        "display_username": "Christophe Chevalier",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/apple/foundationdb/blob/master/flow/Arena.h#L181-L189",
            "internal": false,
            "reflection": false,
            "title": "foundationdb/Arena.h at master \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 0
          },
          {
            "url": "https://github.com/apple/foundationdb/blob/master/flow/flat_buffers.h#L365-L368",
            "internal": false,
            "reflection": false,
            "title": "foundationdb/flat_buffers.h at master \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 53,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/looking-for-community-support-for-the-windows-build/2531/15",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 9009,
        "name": "Markus Pilman",
        "username": "markus.pilman",
        "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
        "created_at": "2021-01-28T23:41:02.495Z",
        "cooked": "<p>oh wow, you\u2019re amazing! This progress is super cool to see! Can you make a draft PR so I can review your changes while they\u2019re happening?</p>\n<p>Regarding the documentation: I think we could just disable building the documentation on Windows, at least for now. On Linux we can build it just well.</p>\n<p>For the min max thingy. I remember running into this multiple time and it\u2019s always super annoying to debug (I think last time I had to look at preprocessed files to find the problem). I would suggest to first delete all occurrences of  <code>#define NOMINMAX</code> (there are four I believe) and then add this line to <code>cmake/ConfigureCompiler.cmake</code> into the <code>if(WIN32)</code> block (somewhere around line 83):</p>\n<pre><code class=\"lang-auto\">add_compile_definitions(NOMINMAX)\n</code></pre>\n<p>This should then define it for all compilation units (I hope this helps).</p>",
        "post_number": 16,
        "post_type": 1,
        "posts_count": 28,
        "updated_at": "2021-01-28T23:41:02.495Z",
        "reply_count": 1,
        "reply_to_post_number": 15,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 15,
        "readers_count": 14,
        "score": 8.0,
        "yours": false,
        "topic_id": 2531,
        "topic_slug": "looking-for-community-support-for-the-windows-build",
        "display_username": "Markus Pilman",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 53,
          "username": "KrzysFR",
          "name": "Christophe Chevalier",
          "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 15,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/looking-for-community-support-for-the-windows-build/2531/16",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 9011,
        "name": "Christophe Chevalier",
        "username": "KrzysFR",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "created_at": "2021-01-29T09:03:01.854Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"markus.pilman\" data-post=\"16\" data-topic=\"2531\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/markus.pilman/48/379_2.png\" class=\"avatar\"> markus.pilman:</div>\n<blockquote>\n<p>I would suggest to first delete all occurrences of <code>#define NOMINMAX</code> (there are four I believe) and then add this line to <code>cmake/ConfigureCompiler.cmake</code> into the <code>if(WIN32)</code> block (somewhere around line 83):</p>\n<p>add_compile_definitions(NOMINMAX)</p>\n<p>This should then define it for all compilation units (I hope this helps).</p>\n</blockquote>\n</aside>\n<p>This did the trick! <img src=\"https://emoji.discourse-cdn.com/twitter/partying_face.png?v=12\" title=\":partying_face:\" class=\"emoji\" alt=\":partying_face:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n<p>Now onto some winsock issues!</p>\n<pre><code class=\"lang-auto\">(ClCompile target) -&gt;\n  C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\boostProject-prefix\\src\\boostProject\\boost/asio/detail/socket_types.hpp(24,4): error :\n    WinSock.h has already been included [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\flow\\flow.vcxproj]\n  C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\shared\\ws2def.h(238,16): error :\n    redefinition of 'sockaddr' [C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\flow\\flow.vcxproj]\n</code></pre>",
        "post_number": 17,
        "post_type": 1,
        "posts_count": 28,
        "updated_at": "2021-01-29T09:03:01.854Z",
        "reply_count": 0,
        "reply_to_post_number": 16,
        "quote_count": 1,
        "incoming_link_count": 4,
        "reads": 16,
        "readers_count": 15,
        "score": 23.2,
        "yours": false,
        "topic_id": 2531,
        "topic_slug": "looking-for-community-support-for-the-windows-build",
        "display_username": "Christophe Chevalier",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 53,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/looking-for-community-support-for-the-windows-build/2531/17",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 9012,
        "name": "Christophe Chevalier",
        "username": "KrzysFR",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "created_at": "2021-01-29T13:14:05.215Z",
        "cooked": "<p>Was able to build fdbserver ! <img src=\"https://emoji.discourse-cdn.com/twitter/partying_face.png?v=12\" title=\":partying_face:\" class=\"emoji\" alt=\":partying_face:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n<pre><code class=\"lang-plaintext\">C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\bin\\Release&gt;fdbcli --version\nFoundationDB CLI 6.3 (v6.3.11)\nsource version 5bd7e2ab6da6caf197e83a80651dcd913c65b2c4\nprotocol fdb00b063010001\n\nC:\\Data\\Git\\GitHub\\foundationdb\\distrib\\bin\\Release&gt;fdbserver --version\nFoundationDB 6.3 (v6.3.11)\nsource version 5bd7e2ab6da6caf197e83a80651dcd913c65b2c4\nprotocol fdb00b063010001\n</code></pre>\n<p>The java binding seems to have been built as well.</p>\n<p>The html doc / sphinx is the last thing that fails to build.</p>\n<p>Once I have a bit more time, I\u2019ll try cleanup everything into a PR, because I spent most time randomly prodding the code with a stick until it compiles and it\u2019s a bit ugly.</p>\n<p>The last show stopper issue for me is that it is SLOOOW. Takes something like 30minutes just to build fdbserver \u2026? Is this expected to be that slow even on linux ?</p>\n<p>Do you know if there are, somewhere, some options that would force single-core compilation? I tried all the solutions I found to ask clang to build in //, but nothing has any effect. I see a single clang-cl.exe working on each project, locked to a single core.</p>\n<p>\u2013<br>\nCan run a server node from the CLI:</p>\n<blockquote>\n<p><code>C:\\Data\\Git\\GitHub\\foundationdb\\distrib\\bin\\Release&gt;fdbserver.exe --cluster_file=\"R:\\fdb\\fdb.cluster\" --datadir=\"R:\\fdb\\Data\\9501\" --listen_address=\"public\" --logdir=\"R:\\fdb\\logs\" --public_address=\"auto:9501\"</code></p>\n</blockquote>\n<p>And connect to it using the compiled fdbcli:</p>\n<pre><code class=\"lang-auto\">fdb&gt; configure new single ssd\nDatabase created\nfdb&gt; status details\n\nUsing cluster file `R:\\fdb\\fdb.cluster'.\n\nConfiguration:\n  Redundancy mode        - single\n  Storage engine         - ssd-2\n  Coordinators           - 1\n  Usable Regions         - 1\n\nCluster:\n  FoundationDB processes - 1\n  Zones                  - 1\n  Machines               - 1\n  Memory availability    - 8.0 GB per process on machine with least available\n  Fault Tolerance        - 0 machines\n  Server time            - 01/29/21 14:40:41\n\nData:\n  Replication health     - (Re)initializing automatic data distribution\n  Moving data            - unknown (initializing)\n  Sum of key-value sizes - unknown\n  Disk space used        - 210 MB\n\nOperating space:\n  Storage server         - 3.1 GB free on most full server\n  Log server             - 3.1 GB free on most full server\n\nWorkload:\n  Read rate              - 0 Hz\n  Write rate             - 0 Hz\n  Transactions started   - 0 Hz\n  Transactions committed - 0 Hz\n  Conflict rate          - 0 Hz\n\nBackup and DR:\n  Running backups        - 0\n  Running DRs            - 0\n\nProcess performance details:\n  127.0.0.1:9501         (  1% cpu;  1% machine; 0.000 Gbps;  0% disk IO; 0.1 GB / 8.0 GB RAM  )\n\nCoordination servers:\n  127.0.0.1:9501  (reachable)\n\nClient time: 01/29/21 14:40:41\n\nfdb&gt;\n``</code></pre>",
        "post_number": 18,
        "post_type": 1,
        "posts_count": 28,
        "updated_at": "2021-01-29T13:42:38.568Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 16,
        "readers_count": 15,
        "score": 8.2,
        "yours": false,
        "topic_id": 2531,
        "topic_slug": "looking-for-community-support-for-the-windows-build",
        "display_username": "Christophe Chevalier",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 3,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 53,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/looking-for-community-support-for-the-windows-build/2531/18",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 9013,
        "name": "Markus Pilman",
        "username": "markus.pilman",
        "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
        "created_at": "2021-01-29T17:24:19.678Z",
        "cooked": "<p>This is great news! Now we just need to find a way of replicating this on CI (I might look into docker if I have some time).</p>\n<aside class=\"quote no-group\" data-username=\"KrzysFR\" data-post=\"18\" data-topic=\"2531\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/krzysfr/48/43_2.png\" class=\"avatar\"> KrzysFR:</div>\n<blockquote>\n<p>The last show stopper issue for me is that it is SLOOOW. Takes something like 30minutes just to build fdbserver \u2026? Is this expected to be that slow even on linux ?</p>\n</blockquote>\n</aside>\n<p>Yes building FDB is super slow. 30 minutes is on the long end, but it doesn\u2019t sound crazy. This is C++ and templates\u2026</p>\n<aside class=\"quote no-group\" data-username=\"KrzysFR\" data-post=\"18\" data-topic=\"2531\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/krzysfr/48/43_2.png\" class=\"avatar\"> KrzysFR:</div>\n<blockquote>\n<p>Do you know if there are, somewhere, some options that would force single-core compilation?</p>\n</blockquote>\n</aside>\n<p>Do you mean multi-core compilation? For <code>msbuild</code> something like <code>/m:8</code> used to work for me. But this is incredibly volatile on Windows <img src=\"https://emoji.discourse-cdn.com/twitter/frowning.png?v=12\" title=\":frowning:\" class=\"emoji\" alt=\":frowning:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n<p>First question: did you check how much CPU this one <code>clang-cl.exe</code> this process uses? I am not sure about <code>clang-cl</code> but the way parallelism works with the visual studio compiler is different from what gcc on linux does. You see, on Linux if we want to compile 3 .cpp files we (aka make/ninja) would call 3 instances of our compiler in parallel. But this is not what Visual Studio does. Instead it will pass all three files at once to the compiler and it will compile the files together. So on Linux you would see 3 <code>gcc</code> processes each consuming ~100% CPU (assuming you have more than 3 cores). On Windows you would see one compiler running but consuming ~300% CPU. In order to figure this out I once spent 2 full days debugging a cmake issue on Windows.</p>\n<p>One way I have seen this break in the past (where I spent 2 days finding a fix) has been if there are files (or even one file) within a project that is compiled with different command line arguments than the rest, above form of parallelism breaks. I have been very careful with code reviews since then to make sure we don\u2019t do this anymore (this is why we create some weird mini-libraries in flow that we then statically link). But if you indeed don\u2019t see parallelism I would suggest to check the <code>.vsproj</code> files to see whether some compilation units have different options passed to them.</p>\n<aside class=\"quote no-group\" data-username=\"KrzysFR\" data-post=\"18\" data-topic=\"2531\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/krzysfr/48/43_2.png\" class=\"avatar\"> KrzysFR:</div>\n<blockquote>\n<p>The html doc / sphinx is the last thing that fails to build.</p>\n</blockquote>\n</aside>\n<p>It seems that this is currently also broken in our CI. I would suggest you don\u2019t waste too much time on this, there might be something fundamentally broken</p>",
        "post_number": 19,
        "post_type": 1,
        "posts_count": 28,
        "updated_at": "2021-01-29T17:25:29.974Z",
        "reply_count": 1,
        "reply_to_post_number": 18,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 19,
        "readers_count": 18,
        "score": 8.8,
        "yours": false,
        "topic_id": 2531,
        "topic_slug": "looking-for-community-support-for-the-windows-build",
        "display_username": "Markus Pilman",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 15,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/looking-for-community-support-for-the-windows-build/2531/19",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 9014,
        "name": "Christophe Chevalier",
        "username": "KrzysFR",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "created_at": "2021-01-29T17:58:53.978Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"markus.pilman\" data-post=\"19\" data-topic=\"2531\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/markus.pilman/48/379_2.png\" class=\"avatar\"> markus.pilman:</div>\n<blockquote>\n<p>Yes building FDB is super slow. 30 minutes is on the long end, but it doesn\u2019t sound crazy. This is C++ and templates\u2026</p>\n</blockquote>\n</aside>\n<p><img src=\"https://emoji.discourse-cdn.com/twitter/astonished.png?v=12\" title=\":astonished:\" class=\"emoji only-emoji\" alt=\":astonished:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n<p>I work on a .NET code base that is at least an order of magnitude larger than fdb\u2019s code base, and a full rebuild takes maximum one minute, and a partial build usually takes 10-15 seconds!</p>\n<p>Most CI builds take 1 or 2 minutes on a slower VM, including the nuget restore, clean and full rebuild. Usually, it is the \u201cnpm ci\u201d steps that takes more than half the build time!</p>\n<aside class=\"quote no-group\" data-username=\"markus.pilman\" data-post=\"19\" data-topic=\"2531\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/markus.pilman/48/379_2.png\" class=\"avatar\"> markus.pilman:</div>\n<blockquote>\n<p>Do you mean multi-core compilation? For <code>msbuild</code> something like <code>/m:8</code> used to work for me. But this is incredibly volatile on Windows <img src=\"https://emoji.discourse-cdn.com/twitter/frowning.png?v=12\" title=\":frowning:\" class=\"emoji\" alt=\":frowning:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n</blockquote>\n</aside>\n<p>I\u2019m not talking about being able to build multiple separate projects in // (like msbuild or ninja can do), but the time it takes to build a single project. (so for example rebuilding a single project after making a one line change somewhere).</p>\n<p>When building everything, at first I see multiple clang-cl crunching each on a few utility projects that depend on nothing, but once all the easy projects are done, there is the long chain of flow &gt; fdb_rpc &gt; fdbclient &gt; fdbserver etc\u2026 where they each wait for the previous one to finish. Here there\u2019s only one clang-cl working at a time and single-threaded.</p>\n<p><img src=\"https://global.discourse-cdn.com/foundationdb/original/2X/c/c58e1c96b65cbc0fd47e2a6e3d9659e652e76ca5.png\" alt=\"image\" data-base62-sha1=\"sbEx8LchM1Mr4XI0BLSMzKaWdUh\" width=\"478\" height=\"473\"></p>\n<p>When I was using MSVC as the compiler before switching to clang it would spend at most a dozen seconds per project, and ALL my 48 threads on my AMD ThreadRipper 3960X would be pegged at 100% for most of the duration of the build (that\u2019s a LOT of threads crunching C/C++ code!). Granted it would start failing when it reached flow or fdbserver, but it would reach them quickly.</p>\n<p>When I switched to clang-cl, only a single thread would be pegged at 100%, for dozens of minutes. On first approximation this would explain why the compile time appears ~48 times slower on my machine.</p>\n<p>I tried using the <code>/p:CL_MPCount=3 /m</code> arguments on msbuild that is supposed to tell clang to use more threads, but I didn\u2019t see any effect at all.</p>",
        "post_number": 20,
        "post_type": 1,
        "posts_count": 28,
        "updated_at": "2021-01-29T17:59:52.391Z",
        "reply_count": 1,
        "reply_to_post_number": 19,
        "quote_count": 1,
        "incoming_link_count": 1,
        "reads": 23,
        "readers_count": 22,
        "score": 14.6,
        "yours": false,
        "topic_id": 2531,
        "topic_slug": "looking-for-community-support-for-the-windows-build",
        "display_username": "Christophe Chevalier",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 53,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/looking-for-community-support-for-the-windows-build/2531/20",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      8986,
      8987,
      8988,
      8991,
      8992,
      8993,
      8994,
      8995,
      8996,
      8997,
      8999,
      9000,
      9002,
      9004,
      9008,
      9009,
      9011,
      9012,
      9013,
      9014,
      9017,
      9018,
      9019,
      9020,
      9022,
      9023,
      9024,
      9028
    ]
  },
  "timeline_lookup": [
    [
      1,
      1729
    ],
    [
      4,
      1728
    ],
    [
      9,
      1727
    ],
    [
      18,
      1726
    ],
    [
      25,
      1725
    ],
    [
      28,
      1724
    ]
  ],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "Looking for community support for the Windows build",
  "id": 2531,
  "title": "Looking for community support for the Windows build",
  "posts_count": 28,
  "created_at": "2021-01-26T23:12:47.344Z",
  "views": 3203,
  "reply_count": 15,
  "like_count": 3,
  "last_posted_at": "2021-01-31T22:21:40.032Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "looking-for-community-support-for-the-windows-build",
  "category_id": 5,
  "word_count": 8747,
  "deleted_at": null,
  "user_id": 337,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_2531",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 28,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 3,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": null,
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 53,
        "username": "KrzysFR",
        "name": "Christophe Chevalier",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "post_count": 15,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      },
      {
        "id": 15,
        "username": "markus.pilman",
        "name": "Markus Pilman",
        "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
        "post_count": 11,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "admin": true,
        "trust_level": 4
      },
      {
        "id": 337,
        "username": "mengxu",
        "name": "Meng Xu",
        "avatar_template": "/user_avatar/forums.foundationdb.org/mengxu/{size}/893_2.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      }
    ],
    "created_by": {
      "id": 337,
      "username": "mengxu",
      "name": "Meng Xu",
      "avatar_template": "/user_avatar/forums.foundationdb.org/mengxu/{size}/893_2.png"
    },
    "last_poster": {
      "id": 15,
      "username": "markus.pilman",
      "name": "Markus Pilman",
      "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png"
    },
    "links": [
      {
        "url": "https://github.com/apple/foundationdb/pull/4258",
        "title": "Build on Windows using VS 2019 + LLVM/Clang by KrzysFR \u00b7 Pull Request #4258 \u00b7 apple/foundationdb \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 7,
        "user_id": 53,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://forums.foundationdb.org/t/foundationdb-does-not-run-on-windows-subsystem-for-linux-wsl/809/10",
        "title": "FoundationDB does not run on Windows Subsystem For Linux (WSL)",
        "internal": true,
        "attachment": false,
        "reflection": false,
        "clicks": 6,
        "user_id": 53,
        "domain": "forums.foundationdb.org",
        "root_domain": "foundationdb.org"
      },
      {
        "url": "https://github.com/apple/foundationdb/pull/4242",
        "title": null,
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 4,
        "user_id": 15,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://github.com/apple/foundationdb/pull/4257",
        "title": "Added dockerfile for Windows build by mpilman \u00b7 Pull Request #4257 \u00b7 apple/foundationdb \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 3,
        "user_id": 15,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://devblogs.microsoft.com/cppblog/improved-parallelism-in-msbuild/",
        "title": null,
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 2,
        "user_id": 15,
        "domain": "devblogs.microsoft.com",
        "root_domain": "microsoft.com"
      },
      {
        "url": "https://docs.microsoft.com/en-us/virtualization/windowscontainers/manage-docker/manage-windows-dockerfile",
        "title": "Dockerfile and Windows Containers | Microsoft Docs",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 1,
        "user_id": 15,
        "domain": "docs.microsoft.com",
        "root_domain": "microsoft.com"
      }
    ]
  },
  "bookmarks": []
}