{
  "post_stream": {
    "posts": [
      {
        "id": 9652,
        "name": "Benjamin Egelund-M\u00fcller",
        "username": "begelundmuller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/begelundmuller/{size}/1127_2.png",
        "created_at": "2021-07-06T09:08:28.110Z",
        "cooked": "<p>Hi everyone,</p>\n<p>I\u2019ve been thinking a lot lately about a FoundationDB use case that\u2019s probably crazy, but since I can\u2019t shake it out of my mind, I want to share it here to hear what you think! I apologize for the long post, but I need to give some context first <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=9\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\"></p>\n<p><strong>Background</strong></p>\n<p>I\u2019m working on a data platform targetting end-to-end data science use cases (if you\u2019re interested: <a href=\"https://beneath.dev\" rel=\"noopener nofollow ugc\">https://beneath.dev</a>). Long story short, on the data storage side of things, the idea is to bundle three common types of data systems, and add a layer of abstraction on top that handles schema and data sync between them in a (slightly) opinionated way. The three systems are:</p>\n<ul>\n<li>Log replay/streaming (e.g. Kafka)</li>\n<li>Key-indexed range reads (e.g. FoundationDB)</li>\n<li>Columnar OLAP (e.g. Presto on S3)</li>\n</ul>\n<p>Writes go to the log first, and we then handle replication/CDC to the other systems. We need to support multi-tenant workloads with tens of millions of \u201ccollections\u201d (which map to a \u201ctopic\u201d in Kafka, a \u201ckey prefix\u201d in FoundationDB, and a \u201cfile\u201d in S3), which can scale to tens of TBs each.</p>\n<p><strong>The problem</strong></p>\n<p>My question is about two related problems:</p>\n<ol>\n<li>Kafka scales pretty poorly to millions of topics and consumer groups</li>\n<li>Syncing millions of topics between Kafka and a KV-store is also a little difficult</li>\n</ol>\n<p><strong>Our naive solution</strong></p>\n<p>Those problems aren\u2019t the end of the world. We intend to address (1.) by running multiple Kafka clusters and sharding workloads (we\u2019re also considering Apache Pulsar in the future, which seems more scalable, albeit still limited), and we tackle (2.) by first writing everything to one massive topic, and then fanning out records from there to the actual topics and the KV-store.</p>\n<p><strong>My idea</strong></p>\n<p>Instead of using Kafka, I\u2019ve been thinking about a possible implementation based on FoundationDB. There\u2019s not one great reason, but a few good ones:</p>\n<ul>\n<li>We could theoretically scale to an infinite number of topics on one cluster (they\u2019re just a key prefix)</li>\n<li>We get rid of a dependency, leaving only FoundationDB and S3 to manage for storage</li>\n<li>We could transactionally combine log appends and index writes (and get rid of a lot of sync code)</li>\n<li>We get strong consistency for indexed reads (not a strong requirement, but unlocks new use cases)</li>\n<li>We get more flexibility to add some advanced features later on (e.g. efficient filtered log subscribe)</li>\n</ul>\n<p>Of course, there\u2019s one good reason not to do it. We\u2019d have to implement a new log streaming engine on FoundationDB! I know that\u2019s previously been suggested on this forum, e.g. <a href=\"https://forums.foundationdb.org/t/log-abstraction-on-foundationdb/117\">this excellent post</a> by <a class=\"mention\" href=\"/u/ryanworl\">@ryanworl</a>, but I haven\u2019t heard of anyone who did it in production including the networking layer (consumer group management, low-latency push, caching of recent writes, \u2026).</p>\n<p>Still, the benefits has made me tempted to tackle it with a basic implementation we can optimize over time.</p>\n<p><strong>The implementation</strong></p>\n<p>This is how I currently imagine implementing the log storage side of things:</p>\n<ul>\n<li>Topics are split into N partitions and each partition get a UUID</li>\n<li>We have a broker for each partition that batches writes over ~10ms and writes compressed segments containing multiple records</li>\n<li>Segments are written to <code>(partition_id, starting_offset)</code>\n</li>\n<li>The broker pre-allocates offsets using atomic increments on a key <code>(\"offsets\", partition_id)</code> (it should aim to increment at most every 10 seconds)\n<ul>\n<li>It doesn\u2019t transactionally increment offset on every write to avoid excessive reads/writes</li>\n<li>If the broker dies, there\u2019ll just be a minor gap in the log\u2019s offsets</li>\n<li>It doesn\u2019t use versionstamps because integer offsets have nice properties (log length estimation, parallel range reads, backwards paging)</li>\n</ul>\n</li>\n</ul>\n<p>Then additionally, per our index sync use case described above, each write to the log would also transactionally update the separate key-value index, which has a key <code>(topic_id, record_key)</code> for every record (where <code>record_key</code> can be assumed to have a roughly uniform distribution).</p>\n<p><strong>My questions</strong></p>\n<ol>\n<li>Is there any way we can scale out to achieve on the order of the same ingest throughput as a dedicated log storage engine (like Kafka) with this setup? Are there any specific bottlenecks that come to mind?</li>\n<li>Overall, is this mad \u2013 or actually a great FoundationDB use case?</li>\n</ol>\n<p>I\u2019m looking forward to hear what you think. And regardless, thank you for the awesome work with FoundationDB!</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2021-07-06T09:23:02.447Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 695,
        "reads": 61,
        "readers_count": 60,
        "score": 3527.0,
        "yours": false,
        "topic_id": 2781,
        "topic_slug": "building-scalable-log-streaming-on-foundationdb",
        "display_username": "Benjamin Egelund-M\u00fcller",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 3,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://forums.foundationdb.org/t/log-abstraction-on-foundationdb/117",
            "internal": true,
            "reflection": false,
            "title": "Log abstraction on FoundationDB",
            "clicks": 50
          },
          {
            "url": "https://beneath.dev",
            "internal": false,
            "reflection": false,
            "title": "Beneath",
            "clicks": 46
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 3
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 962,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/building-scalable-log-streaming-on-foundationdb/2781/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 9673,
        "name": "gaurav",
        "username": "gaurav",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
        "created_at": "2021-07-10T06:05:19.759Z",
        "cooked": "<p>I think the proposed approach should scale well. There are no hotspots that I can detect in it, and writes are well spread out across partitions. Additionally, as you are batching the writes, it limits the iops. Caching of counter probably makes the transactions write-only, thereby eliminating conflicts and also saving network round trips to get a version stamp.</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2021-07-12T14:13:25.107Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 53,
        "readers_count": 52,
        "score": 35.6,
        "yours": false,
        "topic_id": 2781,
        "topic_slug": "building-scalable-log-streaming-on-foundationdb",
        "display_username": "gaurav",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 166,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/building-scalable-log-streaming-on-foundationdb/2781/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 9679,
        "name": "Benjamin Egelund-M\u00fcller",
        "username": "begelundmuller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/begelundmuller/{size}/1127_2.png",
        "created_at": "2021-07-12T16:49:43.101Z",
        "cooked": "<p>Thanks for your feedback, <a class=\"mention\" href=\"/u/gaurav\">@gaurav</a> <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=9\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\"> Sounds promising! I\u2019ve got a couple more questions:</p>\n<ol>\n<li>\n<p>You say not using versionstamps in the keys saves a round trip \u2013 did I understand that correct? I was actually under the impression that FoundationDB could populate versionstamps in keys on write without a roundtrip.</p>\n</li>\n<li>\n<p>I know it can be hard to say without benchmarking, but do you have a gut feeling for the overhead of using FoundationDB for this kind of partitioned append-only workloads (assuming optimized batching of writes) versus a dedicated replicated log like Kafka or Pulsar (BookKeeper)? I\u2019m assuming FoundationDB\u2019s transaction coordination and indexing adds overhead, but do you reckon it would be on the order of 2x, 5x or 10x lower throughput?</p>\n</li>\n</ol>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2021-07-12T16:50:10.976Z",
        "reply_count": 1,
        "reply_to_post_number": 2,
        "quote_count": 0,
        "incoming_link_count": 65,
        "reads": 49,
        "readers_count": 48,
        "score": 339.8,
        "yours": false,
        "topic_id": 2781,
        "topic_slug": "building-scalable-log-streaming-on-foundationdb",
        "display_username": "Benjamin Egelund-M\u00fcller",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 166,
          "username": "gaurav",
          "name": "gaurav",
          "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 962,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/building-scalable-log-streaming-on-foundationdb/2781/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 9686,
        "name": "Oleg Samarin",
        "username": "osamarin",
        "avatar_template": "/user_avatar/forums.foundationdb.org/osamarin/{size}/905_2.png",
        "created_at": "2021-07-13T07:03:55.208Z",
        "cooked": "<p>I afraid that with small numbers of nodes fdb gives smaller performance than kafka.</p>\n<p>Fdb is optimised mostly for random kv-access, when kafka is optimised for sequencial access. Usually sequencial access is much faster than random one (~ 30-100 times).</p>\n<p>Of cause, scalability can compensate less performance by adding more nodes to the cluster.</p>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2021-07-13T07:03:55.208Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 45,
        "readers_count": 44,
        "score": 14.0,
        "yours": false,
        "topic_id": 2781,
        "topic_slug": "building-scalable-log-streaming-on-foundationdb",
        "display_username": "Oleg Samarin",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 711,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/building-scalable-log-streaming-on-foundationdb/2781/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 9687,
        "name": "Benjamin Egelund-M\u00fcller",
        "username": "begelundmuller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/begelundmuller/{size}/1127_2.png",
        "created_at": "2021-07-13T09:12:07.819Z",
        "cooked": "<p>Hey <a class=\"mention\" href=\"/u/osamarin\">@osamarin</a>, yeah, there\u2019s no doubt the performance is going to be lower, but do you still think it\u2019s going to be that severe given:</p>\n<ol>\n<li>Our multi-tenancy use case, where we\u2019re expecting hundreds to thousands of separate \u201clogs\u201d (key prefixes) per node, and not just a handful (as e.g. Kafka is optimized for)</li>\n<li>Reads on a specific \u201clog\u201d (key prefix) will be range reads (which I would expect that FoundationDB translates to roughly sequential disk access, but I would love to learn if that\u2019s not true)</li>\n</ol>",
        "post_number": 5,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2021-07-13T09:12:07.819Z",
        "reply_count": 1,
        "reply_to_post_number": 4,
        "quote_count": 0,
        "incoming_link_count": 2,
        "reads": 45,
        "readers_count": 44,
        "score": 24.0,
        "yours": false,
        "topic_id": 2781,
        "topic_slug": "building-scalable-log-streaming-on-foundationdb",
        "display_username": "Benjamin Egelund-M\u00fcller",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 711,
          "username": "osamarin",
          "name": "Oleg Samarin",
          "avatar_template": "/user_avatar/forums.foundationdb.org/osamarin/{size}/905_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 962,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/building-scalable-log-streaming-on-foundationdb/2781/5",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 9689,
        "name": "Oleg Samarin",
        "username": "osamarin",
        "avatar_template": "/user_avatar/forums.foundationdb.org/osamarin/{size}/905_2.png",
        "created_at": "2021-07-13T10:06:09.469Z",
        "cooked": "<blockquote>\n<p>Our multi-tenancy use case, where we\u2019re expecting hundreds to thousands of separate \u201clogs\u201d (key prefixes) per node, and not just a handful (as e.g. Kafka is optimized for)</p>\n</blockquote>\n<p>Yes. Having million of topics with few data in each is a pattern where FDB wins.<br>\nBut if you have only a few topics with huge amount of data in each, than kafka wins.</p>\n<blockquote>\n<p>Reads on a specific \u201clog\u201d (key prefix) will be range reads</p>\n</blockquote>\n<ol>\n<li>\n<p>It depends on you data structure. You can read the index (topic_id, record_key) by range, but you still need to read the contents by record_key.</p>\n</li>\n<li>\n<p>Write/insert performance may also be important.</p>\n</li>\n</ol>\n<blockquote>\n<p>I would expect that FoundationDB translates to roughly sequential disk access</p>\n</blockquote>\n<p>It is true, but FDB reads always by 4K blocks and does not batch them. Reading by 1M chunks would be significally faster.</p>",
        "post_number": 6,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2021-07-13T10:42:07.834Z",
        "reply_count": 1,
        "reply_to_post_number": 5,
        "quote_count": 0,
        "incoming_link_count": 9,
        "reads": 43,
        "readers_count": 42,
        "score": 73.6,
        "yours": false,
        "topic_id": 2781,
        "topic_slug": "building-scalable-log-streaming-on-foundationdb",
        "display_username": "Oleg Samarin",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 962,
          "username": "begelundmuller",
          "name": "Benjamin Egelund-M\u00fcller",
          "avatar_template": "/user_avatar/forums.foundationdb.org/begelundmuller/{size}/1127_2.png"
        },
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 711,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/building-scalable-log-streaming-on-foundationdb/2781/6",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 9691,
        "name": "gaurav",
        "username": "gaurav",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
        "created_at": "2021-07-13T13:51:07.679Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"begelundmuller\" data-post=\"3\" data-topic=\"2781\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/begelundmuller/48/1127_2.png\" class=\"avatar\"> begelundmuller:</div>\n<blockquote>\n<p>You say not using versionstamps in the keys saves a round trip \u2013 did I understand that correct? I was actually under the impression that FoundationDB could populate versionstamps in keys on write without a roundtrip.</p>\n</blockquote>\n</aside>\n<p>Fdb clients get the versionstamp in a transaction on first read operation. If a transaction has no reads(or read conflicts to be precise), then versionstamp will not be fetched.</p>\n<p>One more aspect that should be considered with fdb is cleanup of older data. These would translate into roughly same amount of work and io as adding new data. Moreover the data being cleaned up will most likely be fetched from disk in 4K blocks prior to being deleted. This also leads to resizing and rebalancing of shards.</p>\n<p>We have in the past run into lot of such issues related to performance issues when data cleanup kicks in which took fair amount of effort to resolve.</p>\n<p>With Kafka, it is a matter of file truncation.</p>\n<p>But if you are talking about 100k+ topics each potentially with multiple partitions, then operationally Kafka might be much more difficult to maintain. Btw, does Kafka automatically rebalances partitions across brokers on failures? When I last worked with it, I recall that rebalance was a manual step.</p>",
        "post_number": 7,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2021-07-13T14:37:20.304Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 1,
        "incoming_link_count": 11,
        "reads": 39,
        "readers_count": 38,
        "score": 82.8,
        "yours": false,
        "topic_id": 2781,
        "topic_slug": "building-scalable-log-streaming-on-foundationdb",
        "display_username": "gaurav",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 166,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/building-scalable-log-streaming-on-foundationdb/2781/7",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 9696,
        "name": "Benjamin Egelund-M\u00fcller",
        "username": "begelundmuller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/begelundmuller/{size}/1127_2.png",
        "created_at": "2021-07-14T12:56:21.083Z",
        "cooked": "<p>Thanks for all the input!</p>\n<aside class=\"quote no-group\" data-username=\"osamarin\" data-post=\"6\" data-topic=\"2781\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/osamarin/48/905_2.png\" class=\"avatar\"> osamarin:</div>\n<blockquote>\n<ol>\n<li>It depends on you data structure. You can read the index (topic_id, record_key) by range, but you still need to read the contents by record_key.</li>\n</ol>\n</blockquote>\n</aside>\n<p>I believe this would be addressed by storing compressed log segments directly at <code>(partition_id, starting_offset)</code>, so there wouldn\u2019t be a secondary lookup.</p>\n<aside class=\"quote no-group\" data-username=\"osamarin\" data-post=\"6\" data-topic=\"2781\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/osamarin/48/905_2.png\" class=\"avatar\"> osamarin:</div>\n<blockquote>\n<p>It is true, but FDB reads always by 4K blocks and does not batch them. Reading by 1M chunks would be significally faster.</p>\n</blockquote>\n</aside>\n<p>This is a very good point and could be a showstopper. I\u2019ll investigate more.</p>",
        "post_number": 8,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2021-07-14T12:56:21.083Z",
        "reply_count": 0,
        "reply_to_post_number": 6,
        "quote_count": 1,
        "incoming_link_count": 2,
        "reads": 38,
        "readers_count": 37,
        "score": 17.6,
        "yours": false,
        "topic_id": 2781,
        "topic_slug": "building-scalable-log-streaming-on-foundationdb",
        "display_username": "Benjamin Egelund-M\u00fcller",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 962,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/building-scalable-log-streaming-on-foundationdb/2781/8",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 9697,
        "name": "Benjamin Egelund-M\u00fcller",
        "username": "begelundmuller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/begelundmuller/{size}/1127_2.png",
        "created_at": "2021-07-14T13:58:40.853Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"gaurav\" data-post=\"7\" data-topic=\"2781\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/g/b487fb/48.png\" class=\"avatar\"> gaurav:</div>\n<blockquote>\n<p>Fdb clients get the versionstamp in a transaction on first read operation. If a transaction has no reads(or read conflicts to be precise), then versionstamp will not be fetched.</p>\n</blockquote>\n</aside>\n<p>Got it, thanks for clarifying that!</p>\n<aside class=\"quote no-group\" data-username=\"gaurav\" data-post=\"7\" data-topic=\"2781\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/g/b487fb/48.png\" class=\"avatar\"> gaurav:</div>\n<blockquote>\n<p>One more aspect that should be considered with fdb is cleanup of older data. These would translate into roughly same amount of work and io as adding new data. Moreover the data being cleaned up will most likely be fetched from disk in 4K blocks prior to being deleted. This also leads to resizing and rebalancing of shards.</p>\n</blockquote>\n</aside>\n<p>Interesting. Clearing data is important as we would not be storing infinite log history in FoundationDB. But they would be range clears of <code>(partition_id, from_offset)</code> to <code>(partition_id, to_offset)</code>, spanning many MBs to a few GBs.</p>\n<p>The documentation <a href=\"https://apple.github.io/foundationdb/engineering.html?highlight=ultra-efficient#range-clears\" rel=\"noopener nofollow ugc\">here</a> states that range clears are \u201cultra-efficient\u201d. But if I understand you correct, even range clears will consume significant resources after the fact to actually release the disk space?</p>\n<aside class=\"quote no-group\" data-username=\"gaurav\" data-post=\"7\" data-topic=\"2781\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/g/b487fb/48.png\" class=\"avatar\"> gaurav:</div>\n<blockquote>\n<p>But if you are talking about 100k+ topics each potentially with multiple partitions, then operationally Kafka might be much more difficult to maintain. Btw, does Kafka automatically rebalances partitions across brokers on failures? When I last worked with it, I recall that rebalance was a manual step.</p>\n</blockquote>\n</aside>\n<p>On broker failure, Kafka will failover to a replica. But other than that, you\u2019re right that rebalancing is a manual step.</p>\n<p>I think I might have understated how unrealistic it seems to use Kafka for that many topics \u2013 hence this discussion! <a href=\"https://pulsar.apache.org\" rel=\"noopener nofollow ugc\">Pulsar</a> is more suitable because brokers are stateless, but it\u2019s a heck of a dependency.</p>",
        "post_number": 9,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2021-07-14T13:59:26.767Z",
        "reply_count": 1,
        "reply_to_post_number": 7,
        "quote_count": 1,
        "incoming_link_count": 10,
        "reads": 40,
        "readers_count": 39,
        "score": 63.0,
        "yours": false,
        "topic_id": 2781,
        "topic_slug": "building-scalable-log-streaming-on-foundationdb",
        "display_username": "Benjamin Egelund-M\u00fcller",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://pulsar.apache.org",
            "internal": false,
            "reflection": false,
            "title": "Apache Pulsar",
            "clicks": 9
          },
          {
            "url": "https://apple.github.io/foundationdb/engineering.html?highlight=ultra-efficient#range-clears",
            "internal": false,
            "reflection": false,
            "title": "Engineering \u2014 FoundationDB 6.3",
            "clicks": 1
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 962,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/building-scalable-log-streaming-on-foundationdb/2781/9",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 9698,
        "name": "Ryan Worl",
        "username": "ryanworl",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png",
        "created_at": "2021-07-14T14:03:10.175Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"begelundmuller\" data-post=\"9\" data-topic=\"2781\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/begelundmuller/48/1127_2.png\" class=\"avatar\"> begelundmuller:</div>\n<blockquote>\n<p>The documentation <a href=\"https://apple.github.io/foundationdb/engineering.html?highlight=ultra-efficient#range-clears\">here</a> states that range clears are \u201cultra-efficient\u201d. But if I understand you correct, even range clears will consume significant resources after the fact to actually release the disk space?</p>\n</blockquote>\n</aside>\n<p>Range clears incur no additional client-side latency. I wouldn\u2019t call them efficient, though. They incur a debt that will be cleaned up asynchronously. There is a tipping point at which you won\u2019t be able to clean pages fast enough, and your disk usage will grow faster than you can clean pages.</p>",
        "post_number": 10,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2021-07-14T14:03:10.175Z",
        "reply_count": 0,
        "reply_to_post_number": 9,
        "quote_count": 1,
        "incoming_link_count": 5,
        "reads": 36,
        "readers_count": 35,
        "score": 77.2,
        "yours": false,
        "topic_id": 2781,
        "topic_slug": "building-scalable-log-streaming-on-foundationdb",
        "display_username": "Ryan Worl",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 3
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 81,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/building-scalable-log-streaming-on-foundationdb/2781/10",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      9652,
      9673,
      9679,
      9686,
      9687,
      9689,
      9691,
      9696,
      9697,
      9698
    ]
  },
  "timeline_lookup": [
    [
      1,
      1569
    ],
    [
      2,
      1565
    ],
    [
      3,
      1562
    ],
    [
      7,
      1561
    ],
    [
      8,
      1560
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "Building scalable log streaming on FoundationDB",
  "id": 2781,
  "title": "Building scalable log streaming on FoundationDB",
  "posts_count": 10,
  "created_at": "2021-07-06T09:08:27.981Z",
  "views": 1864,
  "reply_count": 6,
  "like_count": 9,
  "last_posted_at": "2021-07-14T14:03:10.175Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "building-scalable-log-streaming-on-foundationdb",
  "category_id": 14,
  "word_count": 1956,
  "deleted_at": null,
  "user_id": 962,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_2781",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 10,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 4,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "Log abstraction on FoundationDB",
      "id": 117,
      "title": "Log abstraction on FoundationDB",
      "slug": "log-abstraction-on-foundationdb",
      "posts_count": 10,
      "reply_count": 3,
      "highest_post_number": 10,
      "image_url": null,
      "created_at": "2018-04-20T10:47:11.941Z",
      "last_posted_at": "2018-05-03T17:35:34.126Z",
      "bumped": true,
      "bumped_at": "2018-05-03T17:35:34.126Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 3,
      "views": 3110,
      "category_id": 5,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 81,
            "username": "ryanworl",
            "name": "Ryan Worl",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 22,
            "username": "dave",
            "name": "David Scherer",
            "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 78,
            "username": "pineapple",
            "name": "Brian Haslet",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/p/7993a0/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Pub/Sub based on FoundationDB",
      "id": 1074,
      "title": "Pub/Sub based on FoundationDB",
      "slug": "pub-sub-based-on-foundationdb",
      "posts_count": 1,
      "reply_count": 0,
      "highest_post_number": 1,
      "image_url": null,
      "created_at": "2019-01-27T19:33:31.530Z",
      "last_posted_at": "2019-01-27T19:33:31.626Z",
      "bumped": true,
      "bumped_at": "2019-01-27T19:33:31.626Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 4,
      "views": 1784,
      "category_id": 9,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest single",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 373,
            "username": "pwliwanow",
            "name": "",
            "avatar_template": "/user_avatar/forums.foundationdb.org/pwliwanow/{size}/771_2.png",
            "trust_level": 1
          }
        }
      ]
    },
    {
      "fancy_title": "Shard marker for log-like data structures",
      "id": 1772,
      "title": "Shard marker for log-like data structures",
      "slug": "shard-marker-for-log-like-data-structures",
      "posts_count": 16,
      "reply_count": 12,
      "highest_post_number": 16,
      "image_url": null,
      "created_at": "2019-11-19T20:59:06.598Z",
      "last_posted_at": "2020-07-13T15:18:48.203Z",
      "bumped": true,
      "bumped_at": "2020-07-13T15:18:48.203Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [
        "performance"
      ],
      "tags_descriptions": {},
      "like_count": 6,
      "views": 2315,
      "category_id": 8,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 156,
            "username": "spullara",
            "name": "Sam Pullara",
            "avatar_template": "/user_avatar/forums.foundationdb.org/spullara/{size}/125_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 7,
            "username": "SteavedHams",
            "name": "Steve Atherton",
            "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 22,
            "username": "dave",
            "name": "David Scherer",
            "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 711,
            "username": "osamarin",
            "name": "Oleg Samarin",
            "avatar_template": "/user_avatar/forums.foundationdb.org/osamarin/{size}/905_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Transaction Log",
      "id": 785,
      "title": "Transaction Log",
      "slug": "transaction-log",
      "posts_count": 4,
      "reply_count": 2,
      "highest_post_number": 4,
      "image_url": null,
      "created_at": "2018-10-19T09:53:24.224Z",
      "last_posted_at": "2018-10-22T13:58:23.756Z",
      "bumped": true,
      "bumped_at": "2018-10-22T13:58:23.756Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 2939,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 382,
            "username": "rahul",
            "name": "Rahul",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/r/f14d63/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 14,
            "username": "andrew.noyes",
            "name": "",
            "avatar_template": "/user_avatar/forums.foundationdb.org/andrew.noyes/{size}/443_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 22,
            "username": "dave",
            "name": "David Scherer",
            "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
            "trust_level": 1
          }
        }
      ]
    },
    {
      "fancy_title": "Keyspace partitions &amp; performance",
      "id": 168,
      "title": "Keyspace partitions & performance",
      "slug": "keyspace-partitions-performance",
      "posts_count": 9,
      "reply_count": 5,
      "highest_post_number": 9,
      "image_url": null,
      "created_at": "2018-04-21T05:03:54.670Z",
      "last_posted_at": "2018-04-22T03:29:31.049Z",
      "bumped": true,
      "bumped_at": "2018-04-22T03:29:31.049Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 5,
      "views": 5892,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 113,
            "username": "pH14",
            "name": "",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ph14/{size}/92_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 9,
            "username": "mbhaskar",
            "name": "Bhaskar Muppana",
            "avatar_template": "/user_avatar/forums.foundationdb.org/mbhaskar/{size}/277_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 54,
            "username": "Evan",
            "name": "Evan Tschannen",
            "avatar_template": "/user_avatar/forums.foundationdb.org/evan/{size}/104_2.png",
            "moderator": true,
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 962,
        "username": "begelundmuller",
        "name": "Benjamin Egelund-M\u00fcller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/begelundmuller/{size}/1127_2.png",
        "post_count": 5,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 166,
        "username": "gaurav",
        "name": "gaurav",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 3
      },
      {
        "id": 711,
        "username": "osamarin",
        "name": "Oleg Samarin",
        "avatar_template": "/user_avatar/forums.foundationdb.org/osamarin/{size}/905_2.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      },
      {
        "id": 81,
        "username": "ryanworl",
        "name": "Ryan Worl",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 3
      }
    ],
    "created_by": {
      "id": 962,
      "username": "begelundmuller",
      "name": "Benjamin Egelund-M\u00fcller",
      "avatar_template": "/user_avatar/forums.foundationdb.org/begelundmuller/{size}/1127_2.png"
    },
    "last_poster": {
      "id": 81,
      "username": "ryanworl",
      "name": "Ryan Worl",
      "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png"
    },
    "links": [
      {
        "url": "https://forums.foundationdb.org/t/log-abstraction-on-foundationdb/117",
        "title": "Log abstraction on FoundationDB",
        "internal": true,
        "attachment": false,
        "reflection": false,
        "clicks": 50,
        "user_id": 962,
        "domain": "forums.foundationdb.org",
        "root_domain": "foundationdb.org"
      },
      {
        "url": "https://beneath.dev",
        "title": "Beneath",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 46,
        "user_id": 962,
        "domain": "beneath.dev",
        "root_domain": "beneath.dev"
      },
      {
        "url": "https://pulsar.apache.org",
        "title": "Apache Pulsar",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 9,
        "user_id": 962,
        "domain": "pulsar.apache.org",
        "root_domain": "apache.org"
      },
      {
        "url": "https://apple.github.io/foundationdb/engineering.html?highlight=ultra-efficient#range-clears",
        "title": "Engineering \u2014 FoundationDB 6.3",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 1,
        "user_id": 962,
        "domain": "apple.github.io",
        "root_domain": "apple.github.io"
      }
    ]
  },
  "bookmarks": []
}