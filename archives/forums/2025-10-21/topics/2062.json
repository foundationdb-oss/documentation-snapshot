{
  "post_stream": {
    "posts": [
      {
        "id": 6637,
        "name": "Markus Pilman",
        "username": "markus.pilman",
        "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
        "created_at": "2020-04-13T23:10:51.892Z",
        "cooked": "<p>I want to have a service that generates unique and monotonically increasing numbers (no other constraints).</p>\n<p>The most straightforward way of doing this is to write a value into FDB and use transactions to increment this. However, this will cause contention and having a transaction for this seems to be a bit too heavy weight.</p>\n<p>The next idea I have is that one could create a dummy-transaction that wouldn\u2019t write anything and commit that (we could achieve that by adding a non-existing key to the write conflict set). This would give me a versionstamp but it would still require two round trips to FDB (one to get the read version and one for the commit) and the commit is still kind of expensive).</p>\n<p>Is there something I am missing? What would be the cheapest way of doing this?</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 19,
        "updated_at": "2020-04-13T23:10:51.892Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 710,
        "reads": 78,
        "readers_count": 77,
        "score": 3575.6,
        "yours": false,
        "topic_id": 2062,
        "topic_slug": "what-is-the-most-efficient-way-to-generate-version-stamps-in-fdb",
        "display_username": "Markus Pilman",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 15,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/what-is-the-most-efficient-way-to-generate-version-stamps-in-fdb/2062/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 6650,
        "name": "Scott Gray",
        "username": "scgray",
        "avatar_template": "/user_avatar/forums.foundationdb.org/scgray/{size}/30_2.png",
        "created_at": "2020-04-14T13:36:54.249Z",
        "cooked": "<p>Hi Markus,</p>\n<p>You can use the FDB version stamp feature (as represented in java: <a href=\"https://apple.github.io/foundationdb/javadoc/com/apple/foundationdb/tuple/Versionstamp.html\" rel=\"nofollow noopener\">https://apple.github.io/foundationdb/javadoc/com/apple/foundationdb/tuple/Versionstamp.html</a>).  This is a place holder in a key or value that is filled in during commit using the commit version assigned at the server (the details are described in the javadocs).</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 19,
        "updated_at": "2020-04-14T13:36:54.249Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 11,
        "reads": 78,
        "readers_count": 77,
        "score": 70.6,
        "yours": false,
        "topic_id": 2062,
        "topic_slug": "what-is-the-most-efficient-way-to-generate-version-stamps-in-fdb",
        "display_username": "Scott Gray",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://apple.github.io/foundationdb/javadoc/com/apple/foundationdb/tuple/Versionstamp.html",
            "internal": false,
            "reflection": false,
            "title": "Versionstamp (FoundationDB Java Client API)",
            "clicks": 96
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 34,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/what-is-the-most-efficient-way-to-generate-version-stamps-in-fdb/2062/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6655,
        "name": "Markus Pilman",
        "username": "markus.pilman",
        "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
        "created_at": "2020-04-14T19:47:04.867Z",
        "cooked": "<p>Thanks. Yes I am aware of this feature. However this is only useful if the reason you generate the versionstamp is so you can write it into fdb.</p>\n<p>For our use-case we don\u2019t need that - so having an additional write to storage is slower (as we would need to follow this with a read) and would put additional pressure to the storage. We just want to order operations externally to FDB.</p>\n<p>I was considering to implement a no-op commit. This would just be an empty commit for which we woul generate a version stamp. But this requires code changes I think.</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 19,
        "updated_at": "2020-04-14T19:47:04.867Z",
        "reply_count": 2,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 75,
        "readers_count": 74,
        "score": 25.0,
        "yours": false,
        "topic_id": 2062,
        "topic_slug": "what-is-the-most-efficient-way-to-generate-version-stamps-in-fdb",
        "display_username": "Markus Pilman",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 15,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/what-is-the-most-efficient-way-to-generate-version-stamps-in-fdb/2062/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6656,
        "name": "Alec Grieser",
        "username": "alloc",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "created_at": "2020-04-14T20:29:59.217Z",
        "cooked": "<p>Yeah, because even blind writes get a read version (one of the two round trips you mentioned) to avoid a failed write \u201cresurfacing\u201d after some time, though that shouldn\u2019t matter if your operation is actually . In theory, you could get a monotonic number just from the read version, but those aren\u2019t unique.</p>\n<p>You also might be able to get away with batching requests, so that you generate 1 versionstamp from the (relatively expensive) two round trips from FDB, and then have the sequencing server order multiple requests by (versionstamp, server-provided-sequence-number). This could increase throughput, I think, though not latency.</p>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 19,
        "updated_at": "2020-04-14T20:29:59.217Z",
        "reply_count": 0,
        "reply_to_post_number": 3,
        "quote_count": 0,
        "incoming_link_count": 11,
        "reads": 73,
        "readers_count": 72,
        "score": 114.6,
        "yours": false,
        "topic_id": 2062,
        "topic_slug": "what-is-the-most-efficient-way-to-generate-version-stamps-in-fdb",
        "display_username": "Alec Grieser",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 15,
          "username": "markus.pilman",
          "name": "Markus Pilman",
          "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png"
        },
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 8,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/what-is-the-most-efficient-way-to-generate-version-stamps-in-fdb/2062/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6658,
        "name": "Alex Miller",
        "username": "alexmiller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "created_at": "2020-04-14T20:34:17.632Z",
        "cooked": "<p>If you\u2019re fine with doing code changes for this, then the cheapest way to do this is an RPC to the master for its current timestamp, without acquiring it as a commit version.</p>\n<p>Otherwise, I think empty commit is your best bet.  We\u2019ve talked about adding a \u201ccommit cannot be a no-op\u201d flag before, but I don\u2019t think anyone ever got around to it.</p>",
        "post_number": 5,
        "post_type": 1,
        "posts_count": 19,
        "updated_at": "2020-04-14T20:34:17.632Z",
        "reply_count": 1,
        "reply_to_post_number": 3,
        "quote_count": 0,
        "incoming_link_count": 4,
        "reads": 68,
        "readers_count": 67,
        "score": 38.6,
        "yours": false,
        "topic_id": 2062,
        "topic_slug": "what-is-the-most-efficient-way-to-generate-version-stamps-in-fdb",
        "display_username": "Alex Miller",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 15,
          "username": "markus.pilman",
          "name": "Markus Pilman",
          "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 13,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/what-is-the-most-efficient-way-to-generate-version-stamps-in-fdb/2062/5",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6659,
        "name": "Alec Grieser",
        "username": "alloc",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "created_at": "2020-04-14T20:44:36.772Z",
        "cooked": "<p>Wouldn\u2019t you need to acquire it as a commit version, though, to avoid someone else getting the same one?</p>\n<p>I suppose this could be a special API or, well, a special <code>\\xff\\xff</code> key or something.</p>",
        "post_number": 6,
        "post_type": 1,
        "posts_count": 19,
        "updated_at": "2020-04-14T20:44:36.772Z",
        "reply_count": 1,
        "reply_to_post_number": 5,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 69,
        "readers_count": 68,
        "score": 18.8,
        "yours": false,
        "topic_id": 2062,
        "topic_slug": "what-is-the-most-efficient-way-to-generate-version-stamps-in-fdb",
        "display_username": "Alec Grieser",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 13,
          "username": "alexmiller",
          "name": "Alex Miller",
          "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 8,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/what-is-the-most-efficient-way-to-generate-version-stamps-in-fdb/2062/6",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6660,
        "name": "Markus Pilman",
        "username": "markus.pilman",
        "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
        "created_at": "2020-04-14T21:06:42.599Z",
        "cooked": "<p>Thanks for these suggestions. If I make any code-changes I want to do the most efficient thing. I tend to agree that using the master would be the same cheapest option, but:</p>\n<aside class=\"quote no-group\" data-username=\"alloc\" data-post=\"6\" data-topic=\"2062\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/alloc/48/9_2.png\" class=\"avatar\"> alloc:</div>\n<blockquote>\n<p>Wouldn\u2019t you need to acquire it as a commit version, though, to avoid someone else getting the same one?</p>\n</blockquote>\n</aside>\n<p>This seems to be a problem. However, the master could also keep a 4 byte number around that it increments as well (and resets whenever the version changes). The other thing I am unsure about is whether it is generally a good idea to allow clients to directly talk to the master.</p>\n<p>Another alternative I could think of would be a special call to the proxy - something like <code>getVersionStamp</code>. The proxy would queue all those requests and whenever it finishes a commit it would reply to all of them. This would have the following benefits:</p>\n<ul>\n<li>Clients don\u2019t need to talk to the master for this.</li>\n<li>We save the roundtrip to get a read version</li>\n<li>Should be much faster than a commit, as we don\u2019t need to wait for batching. Instead the latency should be roughly the frequency at which the proxy finishes commits.</li>\n</ul>\n<p>Obviously we would then need to handle the corner case where there are no commits for a long time. But in that case we could still commit a dummy transaction.</p>\n<p>Any thoughts on this design?</p>",
        "post_number": 7,
        "post_type": 1,
        "posts_count": 19,
        "updated_at": "2020-04-14T21:06:42.599Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 1,
        "incoming_link_count": 3,
        "reads": 68,
        "readers_count": 67,
        "score": 33.6,
        "yours": false,
        "topic_id": 2062,
        "topic_slug": "what-is-the-most-efficient-way-to-generate-version-stamps-in-fdb",
        "display_username": "Markus Pilman",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 15,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/what-is-the-most-efficient-way-to-generate-version-stamps-in-fdb/2062/7",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6661,
        "name": "Alex Miller",
        "username": "alexmiller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "created_at": "2020-04-14T21:12:09.225Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"markus.pilman\" data-post=\"7\" data-topic=\"2062\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/markus.pilman/48/379_2.png\" class=\"avatar\"> markus.pilman:</div>\n<blockquote>\n<p>The other thing I am unsure about is whether it is generally a good idea to allow clients to directly talk to the master.</p>\n</blockquote>\n</aside>\n<p>I mean, generally not, and you\u2019d have to have some pretty set QPS limits on this.  You also don\u2019t need to acquire it as a read version, but you do need to either have the master increment the version, or do your extra counter bytes at the end trick.</p>\n<aside class=\"quote no-group\" data-username=\"markus.pilman\" data-post=\"7\" data-topic=\"2062\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/markus.pilman/48/379_2.png\" class=\"avatar\"> markus.pilman:</div>\n<blockquote>\n<p>Another alternative I could think of would be a special call to the proxy - something like <code>getVersionStamp</code> . The proxy would queue all those requests and whenever it finishes a commit it would reply to all of them.</p>\n</blockquote>\n</aside>\n<p>You could also have the proxy batch them until the next commit it does, and then hand out all versions between the previous commit version and this commit version, as the master already hands out version ranges to proxies.  If you\u2019re fine with adding a 4 byte counter to the end of that, then that\u2019s infinite unique increasing integers, without burdening the master.</p>\n<p>If there are no commits for a while, then there\u2019s still the idle transactions that happen every\u2026 250ms? 500ms?  I\u2019m forgetting.</p>\n<p>Also, I vote for calling this \u201csequence\u201d and not \u201cversionstamp\u201d to avoid overloading terms.</p>",
        "post_number": 8,
        "post_type": 1,
        "posts_count": 19,
        "updated_at": "2020-04-14T21:12:09.225Z",
        "reply_count": 1,
        "reply_to_post_number": 7,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 58,
        "readers_count": 57,
        "score": 31.6,
        "yours": false,
        "topic_id": 2062,
        "topic_slug": "what-is-the-most-efficient-way-to-generate-version-stamps-in-fdb",
        "display_username": "Alex Miller",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 13,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/what-is-the-most-efficient-way-to-generate-version-stamps-in-fdb/2062/8",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6663,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2020-04-14T21:16:33.634Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"alexmiller\" data-post=\"8\" data-topic=\"2062\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/alexmiller/48/326_2.png\" class=\"avatar\"> alexmiller:</div>\n<blockquote>\n<p>Also, I vote for calling this \u201csequence\u201d and not \u201cversionstamp\u201d to avoid overloading terms.</p>\n</blockquote>\n</aside>\n<p>On the other hand, there may be some appeal in actually implementing this by giving out real versionstamps such that they can interoperate with them.</p>",
        "post_number": 9,
        "post_type": 1,
        "posts_count": 19,
        "updated_at": "2020-04-14T21:16:33.634Z",
        "reply_count": 2,
        "reply_to_post_number": 8,
        "quote_count": 1,
        "incoming_link_count": 1,
        "reads": 51,
        "readers_count": 50,
        "score": 25.2,
        "yours": false,
        "topic_id": 2062,
        "topic_slug": "what-is-the-most-efficient-way-to-generate-version-stamps-in-fdb",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/what-is-the-most-efficient-way-to-generate-version-stamps-in-fdb/2062/9",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6665,
        "name": "Alex Miller",
        "username": "alexmiller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "created_at": "2020-04-14T21:33:54.474Z",
        "cooked": "<p>I\u2019m fine with it returning a data of type <code>Version</code> (or <code>Versionstamp</code>, or whatever clients normally get).  I just don\u2019t want someone to post to the forums saying \u201cI\u2019m having trouble with versionstamp operations\u201d, and I then have to ask \u201cwhich?\u201d.</p>\n<p>Also, see Scott Gray\u2019s confusion above.</p>",
        "post_number": 10,
        "post_type": 1,
        "posts_count": 19,
        "updated_at": "2020-04-14T21:33:54.474Z",
        "reply_count": 1,
        "reply_to_post_number": 9,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 51,
        "readers_count": 50,
        "score": 30.2,
        "yours": false,
        "topic_id": 2062,
        "topic_slug": "what-is-the-most-efficient-way-to-generate-version-stamps-in-fdb",
        "display_username": "Alex Miller",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 12,
          "username": "ajbeamon",
          "name": "A.J. Beamon",
          "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png"
        },
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 13,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/what-is-the-most-efficient-way-to-generate-version-stamps-in-fdb/2062/10",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6666,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2020-04-14T21:37:46.367Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"alexmiller\" data-post=\"10\" data-topic=\"2062\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/alexmiller/48/326_2.png\" class=\"avatar\"> alexmiller:</div>\n<blockquote>\n<p>I\u2019m fine with it returning a data of type <code>Version</code> (or <code>Versionstamp</code> , or whatever clients normally get). I just don\u2019t want someone to post to the forums saying \u201cI\u2019m having trouble with versionstamp operations\u201d, and I then have to ask \u201cwhich?\u201d.</p>\n</blockquote>\n</aside>\n<p>Well, there are already three different things you can do related to versionstamps \u2013 set a key, set a value, and get the versionstamp for a transaction. To me, it sounds like the this is just an optimized version of the third one for a \u201ctransaction\u201d that doesn\u2019t need to do anything else. I think keeping the naming consistent makes it clear how it can be used to sequence with other versionstamps.</p>",
        "post_number": 11,
        "post_type": 1,
        "posts_count": 19,
        "updated_at": "2020-04-14T21:37:46.367Z",
        "reply_count": 0,
        "reply_to_post_number": 10,
        "quote_count": 1,
        "incoming_link_count": 3,
        "reads": 50,
        "readers_count": 49,
        "score": 70.0,
        "yours": false,
        "topic_id": 2062,
        "topic_slug": "what-is-the-most-efficient-way-to-generate-version-stamps-in-fdb",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/what-is-the-most-efficient-way-to-generate-version-stamps-in-fdb/2062/11",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6667,
        "name": "Markus Pilman",
        "username": "markus.pilman",
        "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
        "created_at": "2020-04-14T22:16:09.065Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"ajbeamon\" data-post=\"9\" data-topic=\"2062\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/ajbeamon/48/13_2.png\" class=\"avatar\"> ajbeamon:</div>\n<blockquote>\n<p>On the other hand, there may be some appeal in actually implementing this by giving out real versionstamps such that they can interoperate with them.</p>\n</blockquote>\n</aside>\n<p>I agree with AJ here. It should be versionstamp because it is a versionstamp. Additionally to AJs points: if it is called <code>sequence</code> it will be confusing to people because it is not a monotonically increasing number (and people who used databases like PostgreSQL before will probably expect that they are).</p>",
        "post_number": 12,
        "post_type": 1,
        "posts_count": 19,
        "updated_at": "2020-04-14T22:16:09.065Z",
        "reply_count": 0,
        "reply_to_post_number": 9,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 49,
        "readers_count": 48,
        "score": 9.8,
        "yours": false,
        "topic_id": 2062,
        "topic_slug": "what-is-the-most-efficient-way-to-generate-version-stamps-in-fdb",
        "display_username": "Markus Pilman",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 15,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/what-is-the-most-efficient-way-to-generate-version-stamps-in-fdb/2062/12",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6669,
        "name": "gaurav",
        "username": "gaurav",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
        "created_at": "2020-04-15T04:58:12.819Z",
        "cooked": "<p><a class=\"mention\" href=\"/u/markus.pilman\">@markus.pilman</a> Did you specifically want to generate version stamps more efficiently (or have this feature built into FDB core), or would an independent service backed by FDB that generates monotonically increasing  longs be enough? I understand that one would have to build failover/ha etc if standing up their own service instance.</p>",
        "post_number": 13,
        "post_type": 1,
        "posts_count": 19,
        "updated_at": "2020-04-15T05:00:22.390Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 49,
        "readers_count": 48,
        "score": 19.8,
        "yours": false,
        "topic_id": 2062,
        "topic_slug": "what-is-the-most-efficient-way-to-generate-version-stamps-in-fdb",
        "display_username": "gaurav",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 166,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/what-is-the-most-efficient-way-to-generate-version-stamps-in-fdb/2062/13",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6670,
        "name": "Markus Pilman",
        "username": "markus.pilman",
        "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
        "created_at": "2020-04-15T16:39:13.292Z",
        "cooked": "<p>having an independent service would work but is not something we consider for multiple reasons:</p>\n<ul>\n<li>We already run FDB everywhere. Spinning up a new service requires a lot of operational work.</li>\n<li>I don\u2019t think we can build something that will be significantly faster or scale significantly faster - mostly because we will need some form of durability.</li>\n<li>Providing versionstamps is a feature FDB already provides - so I think having an independent way of getting a versionstamp would not really be a new feature - just a performance improvement over the existing stuff</li>\n</ul>",
        "post_number": 14,
        "post_type": 1,
        "posts_count": 19,
        "updated_at": "2020-04-15T16:39:13.292Z",
        "reply_count": 1,
        "reply_to_post_number": 13,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 48,
        "readers_count": 47,
        "score": 14.6,
        "yours": false,
        "topic_id": 2062,
        "topic_slug": "what-is-the-most-efficient-way-to-generate-version-stamps-in-fdb",
        "display_username": "Markus Pilman",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 166,
          "username": "gaurav",
          "name": "gaurav",
          "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 15,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/what-is-the-most-efficient-way-to-generate-version-stamps-in-fdb/2062/14",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6680,
        "name": "gaurav",
        "username": "gaurav",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
        "created_at": "2020-04-15T18:18:32.985Z",
        "cooked": "<p>Sure, makes sense.</p>\n<p>I was thinking that if standing up an independent service was not an issue then the service could do something like Percolator oracle and be made very fast (almost no FDB overhead): something like: have a single key that records last consumed \u201cid\u201d; have the service read this id and then reserve next K ids (million or so) by writing back to this key with existing + K; service just hands out the incremental ids from the reserved id-space; a background thread ensures that we never run out of reserved in-memory id space\u2026</p>",
        "post_number": 15,
        "post_type": 1,
        "posts_count": 19,
        "updated_at": "2020-04-15T18:18:32.985Z",
        "reply_count": 1,
        "reply_to_post_number": 14,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 48,
        "readers_count": 47,
        "score": 19.6,
        "yours": false,
        "topic_id": 2062,
        "topic_slug": "what-is-the-most-efficient-way-to-generate-version-stamps-in-fdb",
        "display_username": "gaurav",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 15,
          "username": "markus.pilman",
          "name": "Markus Pilman",
          "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 166,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/what-is-the-most-efficient-way-to-generate-version-stamps-in-fdb/2062/15",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 6689,
        "name": "Markus Pilman",
        "username": "markus.pilman",
        "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
        "created_at": "2020-04-15T20:53:06.498Z",
        "cooked": "<p>You\u2019re right, doing something like that would be efficient. For now I don\u2019t think performance requirements will warrant that effort, but we definitely would consider something like that if FDB wouldn\u2019t be able to provide this feature in a scalable enough way</p>",
        "post_number": 16,
        "post_type": 1,
        "posts_count": 19,
        "updated_at": "2020-04-15T20:53:06.498Z",
        "reply_count": 0,
        "reply_to_post_number": 15,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 49,
        "readers_count": 48,
        "score": 14.8,
        "yours": false,
        "topic_id": 2062,
        "topic_slug": "what-is-the-most-efficient-way-to-generate-version-stamps-in-fdb",
        "display_username": "Markus Pilman",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 166,
          "username": "gaurav",
          "name": "gaurav",
          "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 15,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/what-is-the-most-efficient-way-to-generate-version-stamps-in-fdb/2062/16",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 7286,
        "name": "Alex Miller",
        "username": "alexmiller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "created_at": "2020-06-10T00:37:08.896Z",
        "cooked": "<p>I had forgotten that Version and Versionstamp are different, as Versionstamp is (Version,Index in Batch).  It wouldn\u2019t be that large of a change to GetReadVersion to have the proxy add to each GetReadVersionReply the index of where this read version request was in the GRV batch to restore the uniqueness of the returned value.</p>\n<p>Naively though, this would then be broken by read version batching on the client.  However, there were previous discussions of making GetReadVersionRequest also communicate the number of batched requests that it represents, so that the Proxy/Ratekeeper can throttle more accurately.  (Currently a client batching 20GRVs into 1 request is treated the same by Ratekeeper as a client batching 1 GRV into 1 request.). If this was implemented, then it\u2019d be an easy change to have Proxies maintain a running sum of the number of batched requests as it iterates through and sends replies, so that each batched request then has a monotonic chunk of batch numbers it can use when constructing versionstamps.</p>",
        "post_number": 17,
        "post_type": 1,
        "posts_count": 19,
        "updated_at": "2020-06-10T00:37:08.896Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 42,
        "readers_count": 41,
        "score": 13.4,
        "yours": false,
        "topic_id": 2062,
        "topic_slug": "what-is-the-most-efficient-way-to-generate-version-stamps-in-fdb",
        "display_username": "Alex Miller",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 13,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/what-is-the-most-efficient-way-to-generate-version-stamps-in-fdb/2062/17",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 7287,
        "name": "Markus Pilman",
        "username": "markus.pilman",
        "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
        "created_at": "2020-06-10T01:05:27.020Z",
        "cooked": "<p>I like this idea, although I think a few details would need to be ironed out. For example:</p>\n<aside class=\"quote no-group\" data-username=\"alexmiller\" data-post=\"17\" data-topic=\"2062\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/alexmiller/48/326_2.png\" class=\"avatar\"> alexmiller:</div>\n<blockquote>\n<p>It wouldn\u2019t be that large of a change to GetReadVersion to have the proxy add to each GetReadVersionReply the index of where this read version request was in the GRV batch to restore the uniqueness of the returned value.</p>\n</blockquote>\n</aside>\n<p>But you can have 6 proxies all of them replying to clients with the same read version. But I think this problem is solvable (the last few bits could be the index of the proxy you\u2019re talking to).</p>",
        "post_number": 18,
        "post_type": 1,
        "posts_count": 19,
        "updated_at": "2020-06-10T01:05:27.020Z",
        "reply_count": 1,
        "reply_to_post_number": 17,
        "quote_count": 1,
        "incoming_link_count": 3,
        "reads": 43,
        "readers_count": 42,
        "score": 28.6,
        "yours": false,
        "topic_id": 2062,
        "topic_slug": "what-is-the-most-efficient-way-to-generate-version-stamps-in-fdb",
        "display_username": "Markus Pilman",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 15,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/what-is-the-most-efficient-way-to-generate-version-stamps-in-fdb/2062/18",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 7656,
        "name": "Jingyu Zhou",
        "username": "jzhou",
        "avatar_template": "/user_avatar/forums.foundationdb.org/jzhou/{size}/445_2.png",
        "created_at": "2020-07-26T16:46:50.841Z",
        "cooked": "<p>There is a transaction option <code>COMMIT_ON_FIRST_PROXY</code> that allows you to only talk to a special \u201cfirst\u201d proxy, so the read version + index would be enough to be unique. The downside is this may become a performance bottleneck, since only one proxy is used.</p>",
        "post_number": 19,
        "post_type": 1,
        "posts_count": 19,
        "updated_at": "2020-07-26T16:46:50.841Z",
        "reply_count": 0,
        "reply_to_post_number": 18,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 36,
        "readers_count": 35,
        "score": 12.2,
        "yours": false,
        "topic_id": 2062,
        "topic_slug": "what-is-the-most-efficient-way-to-generate-version-stamps-in-fdb",
        "display_username": "Jingyu Zhou",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 15,
          "username": "markus.pilman",
          "name": "Markus Pilman",
          "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": true,
        "admin": true,
        "staff": true,
        "user_id": 454,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/what-is-the-most-efficient-way-to-generate-version-stamps-in-fdb/2062/19",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      6637,
      6650,
      6655,
      6656,
      6658,
      6659,
      6660,
      6661,
      6663,
      6665,
      6666,
      6667,
      6669,
      6670,
      6680,
      6689,
      7286,
      7287,
      7656
    ]
  },
  "timeline_lookup": [
    [
      1,
      2017
    ],
    [
      2,
      2016
    ],
    [
      14,
      2015
    ],
    [
      17,
      1960
    ],
    [
      19,
      1913
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "What is the most efficient way to generate version stamps in FDB",
  "id": 2062,
  "title": "What is the most efficient way to generate version stamps in FDB",
  "posts_count": 19,
  "created_at": "2020-04-13T23:10:51.841Z",
  "views": 2324,
  "reply_count": 13,
  "like_count": 5,
  "last_posted_at": "2020-07-26T16:46:50.841Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "what-is-the-most-efficient-way-to-generate-version-stamps-in-fdb",
  "category_id": 9,
  "word_count": 1887,
  "deleted_at": null,
  "user_id": 15,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_2062",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 19,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 7,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "Possible to create a unique/increasing 8-byte sequence with versionstamps?",
      "id": 1640,
      "title": "Possible to create a unique/increasing 8-byte sequence with versionstamps?",
      "slug": "possible-to-create-a-unique-increasing-8-byte-sequence-with-versionstamps",
      "posts_count": 8,
      "reply_count": 4,
      "highest_post_number": 8,
      "image_url": null,
      "created_at": "2019-09-20T11:57:48.578Z",
      "last_posted_at": "2019-09-27T20:52:15.412Z",
      "bumped": true,
      "bumped_at": "2019-09-27T20:52:15.412Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 901,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 113,
            "username": "pH14",
            "name": "",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ph14/{size}/92_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 81,
            "username": "ryanworl",
            "name": "Ryan Worl",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png",
            "trust_level": 3
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 417,
            "username": "lihtnes",
            "name": "Senthil Ramamoorthy",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/l/848f3c/{size}.png",
            "trust_level": 1
          }
        }
      ]
    },
    {
      "fancy_title": "VersionStamp vs CommittedVersion",
      "id": 600,
      "title": "VersionStamp vs CommittedVersion",
      "slug": "versionstamp-vs-committedversion",
      "posts_count": 7,
      "reply_count": 3,
      "highest_post_number": 7,
      "image_url": null,
      "created_at": "2018-07-30T06:50:38.826Z",
      "last_posted_at": "2018-09-17T19:43:14.827Z",
      "bumped": true,
      "bumped_at": "2018-09-17T19:43:14.827Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 3,
      "views": 3916,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 41,
            "username": "amirouche",
            "name": "Amirouche",
            "avatar_template": "/user_avatar/forums.foundationdb.org/amirouche/{size}/1911_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Use case of versionstamp and behavior of pack_with_versionstamp",
      "id": 869,
      "title": "Use case of versionstamp and behavior of pack_with_versionstamp",
      "slug": "use-case-of-versionstamp-and-behavior-of-pack-with-versionstamp",
      "posts_count": 7,
      "reply_count": 4,
      "highest_post_number": 8,
      "image_url": null,
      "created_at": "2018-11-14T21:14:41.993Z",
      "last_posted_at": "2018-11-26T18:06:38.323Z",
      "bumped": true,
      "bumped_at": "2018-11-26T18:06:38.323Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [
        "bindings"
      ],
      "tags_descriptions": {},
      "like_count": 5,
      "views": 2402,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 41,
            "username": "amirouche",
            "name": "Amirouche",
            "avatar_template": "/user_avatar/forums.foundationdb.org/amirouche/{size}/1911_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Versionstamp performance",
      "id": 705,
      "title": "Versionstamp performance",
      "slug": "versionstamp-performance",
      "posts_count": 2,
      "reply_count": 0,
      "highest_post_number": 2,
      "image_url": null,
      "created_at": "2018-09-14T21:51:14.937Z",
      "last_posted_at": "2018-09-14T22:40:24.734Z",
      "bumped": true,
      "bumped_at": "2018-09-14T22:40:24.734Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 2,
      "views": 570,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 251,
            "username": "George",
            "name": "",
            "avatar_template": "/user_avatar/forums.foundationdb.org/george/{size}/620_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "VersionStamp uniqueness and monotonicity",
      "id": 602,
      "title": "VersionStamp uniqueness and monotonicity",
      "slug": "versionstamp-uniqueness-and-monotonicity",
      "posts_count": 12,
      "reply_count": 8,
      "highest_post_number": 12,
      "image_url": null,
      "created_at": "2018-07-31T10:44:01.009Z",
      "last_posted_at": "2019-03-04T22:40:06.565Z",
      "bumped": true,
      "bumped_at": "2019-03-04T22:40:06.565Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 7,
      "views": 2776,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 81,
            "username": "ryanworl",
            "name": "Ryan Worl",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 15,
        "username": "markus.pilman",
        "name": "Markus Pilman",
        "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
        "post_count": 7,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "admin": true,
        "trust_level": 4
      },
      {
        "id": 13,
        "username": "alexmiller",
        "name": "Alex Miller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "post_count": 4,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      },
      {
        "id": 12,
        "username": "ajbeamon",
        "name": "A.J. Beamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "admin": true,
        "trust_level": 4
      },
      {
        "id": 166,
        "username": "gaurav",
        "name": "gaurav",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 3
      },
      {
        "id": 8,
        "username": "alloc",
        "name": "Alec Grieser",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      },
      {
        "id": 454,
        "username": "jzhou",
        "name": "Jingyu Zhou",
        "avatar_template": "/user_avatar/forums.foundationdb.org/jzhou/{size}/445_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "admin": true,
        "moderator": true,
        "trust_level": 2
      },
      {
        "id": 34,
        "username": "scgray",
        "name": "Scott Gray",
        "avatar_template": "/user_avatar/forums.foundationdb.org/scgray/{size}/30_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      }
    ],
    "created_by": {
      "id": 15,
      "username": "markus.pilman",
      "name": "Markus Pilman",
      "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png"
    },
    "last_poster": {
      "id": 454,
      "username": "jzhou",
      "name": "Jingyu Zhou",
      "avatar_template": "/user_avatar/forums.foundationdb.org/jzhou/{size}/445_2.png"
    },
    "links": [
      {
        "url": "https://apple.github.io/foundationdb/javadoc/com/apple/foundationdb/tuple/Versionstamp.html",
        "title": "Versionstamp (FoundationDB Java Client API)",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 96,
        "user_id": 34,
        "domain": "apple.github.io",
        "root_domain": "apple.github.io"
      }
    ]
  },
  "bookmarks": []
}