{
  "post_stream": {
    "posts": [
      {
        "id": 550,
        "name": "seddonm1",
        "username": "seddonm1",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/e274bd/{size}.png",
        "created_at": "2018-04-25T03:34:54.408Z",
        "cooked": "<p>I am trying to determine how to use the Transaction.Watch capabilities of FoundationDB. Here is my thought on a use case.</p>\n<p>I have been using the Postgres <a href=\"https://www.postgresql.org/docs/current/static/sql-notify.html\" rel=\"nofollow noopener\">Notify functionality</a> to push events directly from the database layer to <code>n</code> many subscribing stateless Golang services. The <a href=\"https://godoc.org/github.com/lib/pq#Listener\" rel=\"nofollow noopener\">libpq driver</a> exposes this notification as a golang channel which will receive all events whilst connected. This allows any of the golang services to trigger Postgres notify events and they are published to all the golang listeners.</p>\n<p>In my mental model I had imagined that something similar could be replicated with FoundationDB\u2019s watch capability by watching a specific key which had the value of the latest updated key (both updated in a single transaction):</p>\n<p>Update value:</p>\n<pre><code class=\"lang-auto\">[queuename][timestamp] = [payload]\n</code></pre>\n<p>Update Watch key:</p>\n<pre><code class=\"lang-auto\">[watches][queuename] = [queuename][timestamp]\n</code></pre>\n<p>Then once the FutureNil is resolved run a transaction to get the value from the <code>[watches][queuename]</code> and use it to get the <code>[payload]</code> from <code>[queuename][timestamp]</code> and reset the watch on <code>[watches][queuename]</code> for future changes. The <code>payload</code> would then be pushed in to a buffered golang channel. Unless somehow I could use the transaction that is updating the value to also do this work (which may be possible using the <code>fdb.Transactor</code>) i feel that events may be missed. I have not been able to find any examples (even pseudocode) of how to practically use the Watch capability.</p>\n<p>Am I on the right track?</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 6,
        "updated_at": "2018-04-25T03:34:54.408Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 631,
        "reads": 96,
        "readers_count": 95,
        "score": 3178.2,
        "yours": false,
        "topic_id": 257,
        "topic_slug": "transaction-watch-examples",
        "display_username": "seddonm1",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://www.postgresql.org/docs/current/static/sql-notify.html",
            "internal": false,
            "reflection": false,
            "title": "PostgreSQL: Documentation: 10: NOTIFY",
            "clicks": 13
          },
          {
            "url": "https://godoc.org/github.com/lib/pq#Listener",
            "internal": false,
            "reflection": false,
            "title": "pq - GoDoc",
            "clicks": 4
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 174,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/transaction-watch-examples/257/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 553,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2018-04-25T05:04:43.568Z",
        "cooked": "<p>Your intuition is correct that watches cannot be used to provide a stream of all mutations to a key, as there could be some mutations that slip through undetected. You can see some details for how a watch works <a href=\"https://apple.github.io/foundationdb/api-python.html?#watches\">here</a>, but the basic idea is that it is guaranteed to fire at some point after the value of the watched key no longer matches the value of the key as seen in the transaction that set it. It won\u2019t tell you what the new value is or how many times it changed, and it won\u2019t remain in effect after it\u2019s fired, meaning you\u2019ll have to create a new watch if you want to be notified of further changes.</p>\n<p>I\u2019ll outline another approach here which could be used to accomplish what you\u2019ve described. The idea is that you\u2019d maintain some sort of per-queue counter that gets updated every time an item is added to a queue and then set watches on those counters. Your listeners would start up and process all events currently in the queue (or ignore them, whatever you want it do), remembering the last item that it processed. In the same transaction, you would also set a watch on the queue counter, noting its current value.</p>\n<p>When the watch is triggered (successfully or with an error), you would check whether the value of the counter has increased, process any new events in the queue, and set a new watch on the counter, again in the same transaction.</p>\n<p>Thus, your listeners would be notified every time the queue has changed from the state they last remembered, and then they would be responsible for picking up where they left off. Your producers would need to update the counters each time an item was added to the queue, probably using the atomic ADD mutation.</p>\n<p>There are a few things to note about the above scheme:</p>\n<ol>\n<li>\n<p>If there is a high rate of mutations to a queue counter, the counter may need to be sharded over multiple keys so that a single key isn\u2019t getting hammered.</p>\n</li>\n<li>\n<p>You may need some mechanism to clean up events once they have been processed by all listeners.</p>\n</li>\n<li>\n<p>You need to be careful about how you do your reads to avoid unnecessary conflicts. With the above scheme, you\u2019ll probably want reads of the counter keys to be <a href=\"https://apple.github.io/foundationdb/developer-guide.html#snapshot-isolation\">snapshot reads</a> so that simultaneous queue insertions won\u2019t interfere with listeners. You\u2019ll still know about simultaneous updates because the watches you set will fire if the value of the counter doesn\u2019t match what was read in the transaction. You\u2019ll similarly want to avoid setting conflict ranges past the last item in the queue that you process, which can be done by reading the queue with a snapshot range read and then <a href=\"https://apple.github.io/foundationdb/api-python.html?#conflict-ranges\">manually applying conflict ranges</a> later (either one for each item, or a single range that spans the items you processed). As long as your queue model guarantees that new items are inserted at the end, this should be safe. However, if you have multiple producers for a queue using timestamps for ordering, you\u2019ll need to be certain that items aren\u2019t inserted out of order due to clock sync issues. Otherwise, you may need to extend your conflict ranges beyond the end, perhaps based on some fixed length of time you\u2019re willing to allow items to come in late.</p>\n</li>\n</ol>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 6,
        "updated_at": "2018-04-25T05:14:47.603Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 522,
        "reads": 94,
        "readers_count": 93,
        "score": 2618.8,
        "yours": false,
        "topic_id": 257,
        "topic_slug": "transaction-watch-examples",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 3,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://apple.github.io/foundationdb/api-python.html?#watches",
            "internal": false,
            "reflection": false,
            "title": "Python API \u2014 FoundationDB 5.1",
            "clicks": 78
          },
          {
            "url": "https://apple.github.io/foundationdb/developer-guide.html#snapshot-isolation",
            "internal": false,
            "reflection": false,
            "title": "Developer Guide \u2014 FoundationDB 5.1",
            "clicks": 5
          },
          {
            "url": "https://apple.github.io/foundationdb/api-python.html?#conflict-ranges",
            "internal": false,
            "reflection": false,
            "title": "Python API \u2014 FoundationDB 5.1",
            "clicks": 2
          },
          {
            "url": "https://forums.foundationdb.org/t/foundationdb-error-code-1009-request-for-future-version/610",
            "internal": true,
            "reflection": true,
            "title": "FoundationDB error code 1009 (Request for future version)",
            "clicks": 3
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/transaction-watch-examples/257/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 554,
        "name": "Alec Grieser",
        "username": "alloc",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "created_at": "2018-04-25T05:23:21.863Z",
        "cooked": "<p>If you haven\u2019t already, you might want to check out the section on watches in <a href=\"https://apple.github.io/foundationdb/developer-guide.html#watches\">the Developer Guide</a>, which has some amount of code. It is watching multiple keys rather than using a key to detect a change in a queue, but that\u2019s about the same idea. That appears to be our only example of watches (really) in the docs, so maybe that could be improved.</p>\n<p>You definitely should be able to use <code>fdb.Transactor</code> to set a watch in the same transaction as the one where you read the new data from the queue. That will close up the gaps in which you could miss updates if you had separate transactions for the two.</p>\n<p>As <a class=\"mention\" href=\"/u/ajbeamon\">@ajbeamon</a> points out, you have to be careful when doing queue stuff that you aren\u2019t accidentally appending things in the wrong order (or make sure that you can handle the out-of-order-ness). They <a href=\"https://forums.foundationdb.org/t/golang-versionstamp-usage/253\">don\u2019t play well with the Tuple layer in go</a>, but you might want to look at the <a href=\"https://godoc.org/github.com/apple/foundationdb/bindings/go/src/fdb#Transaction.SetVersionstampedKey\">versionstamp API</a> to use transaction commit ordering instead of time to get around some of those issues. There are other issues related to queues due to the non-idempotency of queue appends, but maybe that\u2019s a good question for another time.</p>\n<p>One other note about watches is that you can only have a limited number (100,000 by default) of outstanding watches at a time. So, if the number <code>n</code> of watchers is small, that shouldn\u2019t be a big deal, but if it\u2019s large, you could hit this limit.</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 6,
        "updated_at": "2018-04-25T05:23:21.863Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 3,
        "reads": 82,
        "readers_count": 81,
        "score": 36.4,
        "yours": false,
        "topic_id": 257,
        "topic_slug": "transaction-watch-examples",
        "display_username": "Alec Grieser",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://apple.github.io/foundationdb/developer-guide.html#watches",
            "internal": false,
            "reflection": false,
            "title": "Developer Guide \u2014 FoundationDB 5.1",
            "clicks": 91
          },
          {
            "url": "https://godoc.org/github.com/apple/foundationdb/bindings/go/src/fdb#Transaction.SetVersionstampedKey",
            "internal": false,
            "reflection": false,
            "title": "fdb - GoDoc",
            "clicks": 9
          },
          {
            "url": "https://forums.foundationdb.org/t/golang-versionstamp-usage/253",
            "internal": true,
            "reflection": false,
            "title": "Golang Versionstamp usage",
            "clicks": 9
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 8,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/transaction-watch-examples/257/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 557,
        "name": "seddonm1",
        "username": "seddonm1",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/e274bd/{size}.png",
        "created_at": "2018-04-25T06:14:55.545Z",
        "cooked": "<p>Thanks both of you.</p>\n<p>I think that building a queue system with an offset per golang service feels safe so that if there is a race condition and they do miss a read between receiving the watch event and establishing the new watch the data is still available and can be caught by the next event. Periodic log compaction seems like a good idea too.</p>\n<p>I\u2019ll have a bit of a play and see what can be done.</p>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 6,
        "updated_at": "2018-04-25T06:14:55.545Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 3,
        "reads": 79,
        "readers_count": 78,
        "score": 35.8,
        "yours": false,
        "topic_id": 257,
        "topic_slug": "transaction-watch-examples",
        "display_username": "seddonm1",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 174,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/transaction-watch-examples/257/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 600,
        "name": "David Scherer",
        "username": "dave",
        "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
        "created_at": "2018-04-26T00:17:30.686Z",
        "cooked": "<p>I find the developer guide examples a little weird as well.  It gets at the idea that you use a watch to replace the sleep in a polling loop that would work but be inefficient and slow.  But I feel like the classic simple case is that you have a transaction in this loop, and you watch the key within the transaction but wait on it outside, and that\u2019s not really the pattern in the example.</p>",
        "post_number": 5,
        "post_type": 1,
        "posts_count": 6,
        "updated_at": "2018-04-26T00:17:30.686Z",
        "reply_count": 0,
        "reply_to_post_number": 4,
        "quote_count": 0,
        "incoming_link_count": 3,
        "reads": 71,
        "readers_count": 70,
        "score": 29.2,
        "yours": false,
        "topic_id": 257,
        "topic_slug": "transaction-watch-examples",
        "display_username": "David Scherer",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 174,
          "username": "seddonm1",
          "name": "seddonm1",
          "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/e274bd/{size}.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 22,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/transaction-watch-examples/257/5",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 2425,
        "name": "Illarionov Oleg",
        "username": "brainfucker",
        "avatar_template": "/user_avatar/forums.foundationdb.org/brainfucker/{size}/237_2.png",
        "created_at": "2018-10-23T12:05:15.737Z",
        "cooked": "<p>the limit of 10000 watches which is set by default seems quite small (in case for example when you are planning to keep watch for each online user for example), does this limit caused by some performance limitations, or it is ok to increase it in config?</p>",
        "post_number": 6,
        "post_type": 1,
        "posts_count": 6,
        "updated_at": "2018-10-23T12:05:15.737Z",
        "reply_count": 0,
        "reply_to_post_number": 3,
        "quote_count": 0,
        "incoming_link_count": 2,
        "reads": 49,
        "readers_count": 48,
        "score": 19.8,
        "yours": false,
        "topic_id": 257,
        "topic_slug": "transaction-watch-examples",
        "display_username": "Illarionov Oleg",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 8,
          "username": "alloc",
          "name": "Alec Grieser",
          "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 265,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/transaction-watch-examples/257/6",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      550,
      553,
      554,
      557,
      600,
      2425
    ]
  },
  "timeline_lookup": [
    [
      1,
      2737
    ],
    [
      5,
      2736
    ],
    [
      6,
      2555
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "Transaction.Watch Examples?",
  "id": 257,
  "title": "Transaction.Watch Examples?",
  "posts_count": 6,
  "created_at": "2018-04-25T03:34:54.216Z",
  "views": 2822,
  "reply_count": 2,
  "like_count": 0,
  "last_posted_at": "2018-10-23T12:05:15.737Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "transaction-watch-examples",
  "category_id": 5,
  "word_count": 1363,
  "deleted_at": null,
  "user_id": 174,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_257",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 6,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 5,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "Watchers and not missing changes",
      "id": 474,
      "title": "Watchers and not missing changes",
      "slug": "watchers-and-not-missing-changes",
      "posts_count": 14,
      "reply_count": 6,
      "highest_post_number": 14,
      "image_url": null,
      "created_at": "2018-05-25T13:29:22.034Z",
      "last_posted_at": "2018-06-05T23:23:48.371Z",
      "bumped": true,
      "bumped_at": "2018-06-05T23:23:48.371Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 3,
      "views": 1999,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 289,
            "username": "rowanG",
            "name": "Rowan Goemans",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/r/8baadc/{size}.png",
            "trust_level": 0
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 81,
            "username": "ryanworl",
            "name": "Ryan Worl",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 298,
            "username": "gwillis12",
            "name": "Geo",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/ed655f/{size}.png",
            "trust_level": 0
          }
        }
      ]
    },
    {
      "fancy_title": "Understanding &ldquo;Watches&rdquo;",
      "id": 903,
      "title": "Understanding \"Watches\"",
      "slug": "understanding-watches",
      "posts_count": 10,
      "reply_count": 4,
      "highest_post_number": 10,
      "image_url": null,
      "created_at": "2018-11-26T17:28:09.202Z",
      "last_posted_at": "2018-11-27T17:28:33.763Z",
      "bumped": true,
      "bumped_at": "2018-11-27T17:28:33.763Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 3295,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 437,
            "username": "MansurAshraf",
            "name": "Mansur Ashraf",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/m/b9bd4f/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 435,
            "username": "ArchDev",
            "name": "Arthur Kushka",
            "avatar_template": "/user_avatar/forums.foundationdb.org/archdev/{size}/425_2.png",
            "trust_level": 0
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Changefeeds (watching and getting updates on ranges of keys)",
      "id": 511,
      "title": "Changefeeds (watching and getting updates on ranges of keys)",
      "slug": "changefeeds-watching-and-getting-updates-on-ranges-of-keys",
      "posts_count": 9,
      "reply_count": 7,
      "highest_post_number": 9,
      "image_url": null,
      "created_at": "2018-06-16T12:26:34.710Z",
      "last_posted_at": "2018-07-06T14:46:54.646Z",
      "bumped": true,
      "bumped_at": "2018-07-06T14:46:54.646Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 2,
      "views": 4221,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 307,
            "username": "jwr",
            "name": "Jan Rychter",
            "avatar_template": "/user_avatar/forums.foundationdb.org/jwr/{size}/302_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 22,
            "username": "dave",
            "name": "David Scherer",
            "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Changes feed without hot keys",
      "id": 1057,
      "title": "Changes feed without hot keys",
      "slug": "changes-feed-without-hot-keys",
      "posts_count": 8,
      "reply_count": 4,
      "highest_post_number": 8,
      "image_url": null,
      "created_at": "2019-01-24T21:54:58.266Z",
      "last_posted_at": "2019-01-25T20:22:00.709Z",
      "bumped": true,
      "bumped_at": "2019-01-25T20:22:00.709Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 1474,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 491,
            "username": "iilyak",
            "name": "Iilyak",
            "avatar_template": "/user_avatar/forums.foundationdb.org/iilyak/{size}/1073_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 81,
            "username": "ryanworl",
            "name": "Ryan Worl",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 308,
            "username": "ananthakumaran",
            "name": "Anantha Kumaran",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ananthakumaran/{size}/526_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 423,
            "username": "kocolosk",
            "name": "Adam Kocoloski",
            "avatar_template": "/user_avatar/forums.foundationdb.org/kocolosk/{size}/412_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Watch WithPrefix equivalent when replacing etcd with fdb",
      "id": 368,
      "title": "Watch WithPrefix equivalent when replacing etcd with fdb",
      "slug": "watch-withprefix-equivalent-when-replacing-etcd-with-fdb",
      "posts_count": 3,
      "reply_count": 0,
      "highest_post_number": 3,
      "image_url": null,
      "created_at": "2018-05-07T18:00:24.127Z",
      "last_posted_at": "2018-05-07T21:46:52.117Z",
      "bumped": true,
      "bumped_at": "2018-05-07T21:46:52.117Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 2,
      "views": 1023,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 241,
            "username": "rwlincoln",
            "name": "Richard Lincoln",
            "avatar_template": "/user_avatar/forums.foundationdb.org/rwlincoln/{size}/284_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 156,
            "username": "spullara",
            "name": "Sam Pullara",
            "avatar_template": "/user_avatar/forums.foundationdb.org/spullara/{size}/125_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 22,
            "username": "dave",
            "name": "David Scherer",
            "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
            "trust_level": 1
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 174,
        "username": "seddonm1",
        "name": "seddonm1",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/e274bd/{size}.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 8,
        "username": "alloc",
        "name": "Alec Grieser",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      },
      {
        "id": 12,
        "username": "ajbeamon",
        "name": "A.J. Beamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "admin": true,
        "trust_level": 4
      },
      {
        "id": 22,
        "username": "dave",
        "name": "David Scherer",
        "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 265,
        "username": "brainfucker",
        "name": "Illarionov Oleg",
        "avatar_template": "/user_avatar/forums.foundationdb.org/brainfucker/{size}/237_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      }
    ],
    "created_by": {
      "id": 174,
      "username": "seddonm1",
      "name": "seddonm1",
      "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/e274bd/{size}.png"
    },
    "last_poster": {
      "id": 265,
      "username": "brainfucker",
      "name": "Illarionov Oleg",
      "avatar_template": "/user_avatar/forums.foundationdb.org/brainfucker/{size}/237_2.png"
    },
    "links": [
      {
        "url": "https://apple.github.io/foundationdb/developer-guide.html#watches",
        "title": "Developer Guide \u2014 FoundationDB 5.1",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 91,
        "user_id": 8,
        "domain": "apple.github.io",
        "root_domain": "apple.github.io"
      },
      {
        "url": "https://apple.github.io/foundationdb/api-python.html?#watches",
        "title": "Python API \u2014 FoundationDB 5.1",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 78,
        "user_id": 12,
        "domain": "apple.github.io",
        "root_domain": "apple.github.io"
      },
      {
        "url": "https://www.postgresql.org/docs/current/static/sql-notify.html",
        "title": "PostgreSQL: Documentation: 10: NOTIFY",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 13,
        "user_id": 174,
        "domain": "www.postgresql.org",
        "root_domain": "postgresql.org"
      },
      {
        "url": "https://forums.foundationdb.org/t/golang-versionstamp-usage/253",
        "title": "Golang Versionstamp usage",
        "internal": true,
        "attachment": false,
        "reflection": false,
        "clicks": 9,
        "user_id": 8,
        "domain": "forums.foundationdb.org",
        "root_domain": "foundationdb.org"
      },
      {
        "url": "https://godoc.org/github.com/apple/foundationdb/bindings/go/src/fdb#Transaction.SetVersionstampedKey",
        "title": "fdb - GoDoc",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 9,
        "user_id": 8,
        "domain": "godoc.org",
        "root_domain": "godoc.org"
      },
      {
        "url": "https://apple.github.io/foundationdb/developer-guide.html#snapshot-isolation",
        "title": "Developer Guide \u2014 FoundationDB 5.1",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 5,
        "user_id": 12,
        "domain": "apple.github.io",
        "root_domain": "apple.github.io"
      },
      {
        "url": "https://godoc.org/github.com/lib/pq#Listener",
        "title": "pq - GoDoc",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 4,
        "user_id": 174,
        "domain": "godoc.org",
        "root_domain": "godoc.org"
      },
      {
        "url": "https://forums.foundationdb.org/t/foundationdb-error-code-1009-request-for-future-version/610",
        "title": "FoundationDB error code 1009 (Request for future version)",
        "internal": true,
        "attachment": false,
        "reflection": true,
        "clicks": 3,
        "user_id": 174,
        "domain": "forums.foundationdb.org",
        "root_domain": "foundationdb.org"
      },
      {
        "url": "https://apple.github.io/foundationdb/api-python.html?#conflict-ranges",
        "title": "Python API \u2014 FoundationDB 5.1",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 2,
        "user_id": 12,
        "domain": "apple.github.io",
        "root_domain": "apple.github.io"
      }
    ]
  },
  "bookmarks": []
}