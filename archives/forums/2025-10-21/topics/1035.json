{
  "post_stream": {
    "posts": [
      {
        "id": 3060,
        "name": "Ryan Worl",
        "username": "ryanworl",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png",
        "created_at": "2019-01-18T12:41:26.293Z",
        "cooked": "<p><a class=\"mention\" href=\"/u/josephg\">@josephg</a> just released version 0.8.0 of the Node bindings, which are available on GitHub here: <a href=\"https://github.com/josephg/node-foundationdb\" rel=\"nofollow noopener\">https://github.com/josephg/node-foundationdb</a></p>\n<p>Important updates include bumping the supported FDB version to 600, improving the ergonomics of the Versionstamp API, and adding Versionstamp support to the tuple layer.</p>\n<pre><code class=\"lang-javascript\">    import * as fdb from 'foundationdb'\n    const db = fdb.openSync().withKeyEncoding(fdb.encoders.tuple)\n\t\n    const key1 = [1,2,3, fdb.tuple.unboundVersionstamp()]\n    const key2 = [1,2,3, fdb.tuple.unboundVersionstamp()]\n\t\n    await db.doTn(async tn =&gt; {\n        tn.setVersionstampedKey(key1, '1')\n        tn.setVersionstampedKey(key2, '2') // Does not overwrite first insert!\n    })\n\n    // key1 is [1,2,3, {type: 'versionstamp', value: Buffer&lt;10 bytes followed by 0x00, 0x00&gt;}]\n    // key2 is [1,2,3, {type: 'versionstamp', value: Buffer&lt;10 bytes followed by 0x00, 0x01&gt;}]\n\n    // You can override this behaviour by baking an explicit code into your call to `tuple.unboundVersionstamp`:\n    const key = [1,2,3, fdb.tuple.unboundVersionstamp(321)]\n</code></pre>\n<p>After the transaction commits the keys are modified to replace the unbound versionstamp with actual versionstamp.</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 14,
        "updated_at": "2019-01-18T13:04:10.144Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 19,
        "reads": 32,
        "readers_count": 31,
        "score": 116.4,
        "yours": false,
        "topic_id": 1035,
        "topic_slug": "node-bindings-release-0-8-0-now-with-versionstamp-support-in-the-tuple-layer",
        "display_username": "Ryan Worl",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 3,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/josephg/node-foundationdb",
            "internal": false,
            "reflection": false,
            "title": "GitHub - josephg/node-foundationdb: Modern Node.js FoundationDB bindings",
            "clicks": 6
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 81,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/node-bindings-release-0-8-0-now-with-versionstamp-support-in-the-tuple-layer/1035/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 3062,
        "name": "Seph Gentle",
        "username": "josephg",
        "avatar_template": "/user_avatar/forums.foundationdb.org/josephg/{size}/84_2.png",
        "created_at": "2019-01-18T13:14:00.472Z",
        "cooked": "<p><code>^_^</code> I\u2019m very happy with how the API turned out, although the method names are all super huge for javascript. It also passes all the tests from the binding tester - well, at least until non-determinism bugs in the python bindings make it crash out.</p>\n<p>I still haven\u2019t ported / implemented the directory layer across. I was hoping someone else would do it, but that hasn\u2019t happened. Once I do it\u2019ll be feature complete with the Python and Java bindings, and I\u2019ll release the binding library as 1.0.</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 14,
        "updated_at": "2019-01-18T13:14:00.472Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 31,
        "readers_count": 30,
        "score": 46.2,
        "yours": false,
        "topic_id": 1035,
        "topic_slug": "node-bindings-release-0-8-0-now-with-versionstamp-support-in-the-tuple-layer",
        "display_username": "Seph Gentle",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 2
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 120,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/node-bindings-release-0-8-0-now-with-versionstamp-support-in-the-tuple-layer/1035/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3066,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2019-01-18T16:36:34.660Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"josephg\" data-post=\"2\" data-topic=\"1035\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/josephg/48/84_2.png\" class=\"avatar\"> josephg:</div>\n<blockquote>\n<p>It also passes all the tests from the binding tester - well, at least until non-determinism bugs in the python bindings make it crash out.</p>\n</blockquote>\n</aside>\n<p>What kind of arguments to the binding tester are producing this problem? I don\u2019t think I\u2019ve seen this behavior in the current bindings in our runs, but if you can lead me to a reproduction I can try to fix it.</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 14,
        "updated_at": "2019-01-18T16:36:34.660Z",
        "reply_count": 2,
        "reply_to_post_number": 2,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 30,
        "readers_count": 29,
        "score": 16.0,
        "yours": false,
        "topic_id": 1035,
        "topic_slug": "node-bindings-release-0-8-0-now-with-versionstamp-support-in-the-tuple-layer",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/node-bindings-release-0-8-0-now-with-versionstamp-support-in-the-tuple-layer/1035/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3070,
        "name": "Ryan Worl",
        "username": "ryanworl",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png",
        "created_at": "2019-01-18T19:44:52.284Z",
        "cooked": "<p>FWIW this hasn\u2019t happened to me when I updated my fork to 600 and ran the binding tester, but maybe it is a versionstamp thing (which I didn\u2019t change at all)</p>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 14,
        "updated_at": "2019-01-18T19:44:52.284Z",
        "reply_count": 0,
        "reply_to_post_number": 3,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 27,
        "readers_count": 26,
        "score": 5.4,
        "yours": false,
        "topic_id": 1035,
        "topic_slug": "node-bindings-release-0-8-0-now-with-versionstamp-support-in-the-tuple-layer",
        "display_username": "Ryan Worl",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 12,
          "username": "ajbeamon",
          "name": "A.J. Beamon",
          "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 81,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/node-bindings-release-0-8-0-now-with-versionstamp-support-in-the-tuple-layer/1035/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3072,
        "name": "Seph Gentle",
        "username": "josephg",
        "avatar_template": "/user_avatar/forums.foundationdb.org/josephg/{size}/84_2.png",
        "created_at": "2019-01-18T22:46:52.327Z",
        "cooked": "<p>Oops - I tried reproducing this from the latest master and the nondeterministic error I was seeing has become deterministic. I tracked it down to a bug in my javascript bindingtester implementation.</p>\n<p>My mistake! Thanks anyway <img src=\"https://emoji.discourse-cdn.com/twitter/sweat_smile.png?v=6\" title=\":sweat_smile:\" class=\"emoji\" alt=\":sweat_smile:\"></p>",
        "post_number": 5,
        "post_type": 1,
        "posts_count": 14,
        "updated_at": "2019-01-18T23:20:19.845Z",
        "reply_count": 0,
        "reply_to_post_number": 3,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 28,
        "readers_count": 27,
        "score": 10.6,
        "yours": false,
        "topic_id": 1035,
        "topic_slug": "node-bindings-release-0-8-0-now-with-versionstamp-support-in-the-tuple-layer",
        "display_username": "Seph Gentle",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 12,
          "username": "ajbeamon",
          "name": "A.J. Beamon",
          "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 120,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/node-bindings-release-0-8-0-now-with-versionstamp-support-in-the-tuple-layer/1035/5",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3091,
        "name": "Christophe Chevalier",
        "username": "KrzysFR",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "created_at": "2019-01-24T09:10:04.448Z",
        "cooked": "<p>For my own curiosity, how to you make <code>setVersionStampedKey(...)</code> recognize the offset of the versionstamp in the key?</p>\n<p>Here it looks like your unbounded stamps are the versionstamp type header followed by a run of 10-12 zeroes . What would happen if another part of the key would contain the same byte sequence by chance (or would not use the tuple encoding, or mix the tuple encoding with a binary prefix/suffix?).</p>\n<p>In my implementation, I used a random 10-byte marker - generated for each transaction - that is used for all \u201cunbounded\u201d version stamps generated from this transaction. The <code>setVersionstamped(Key|Value)(..)</code> methods then scan the key or value to look for that marker (and hopefully find exactly one).</p>\n<p>If, by random chance, the key or value contains the same random byte sequence, I would find two or more occurrences of this marker, and I would throw a \u201cfake\u201d fdb exception, triggering the transaction to retry with a different random marker.</p>\n<p>There is a very small chance of retrying again and again, which means this is not 100% safe by design, but I\u2019m not sure if there is a generic solution that works with all encodings (not only tuples) and that does not require to handle the keys or values for stamped operation differently (having a dedicated set of types or methods to track the stamp location).</p>\n<p>This solution has the added bonus of being able to locate multiple stamps in the same blob, but then you lose the protection against the situation disribed above (unless the caller specify exactly how many stamps are in the key/value, which is not really ideal).</p>",
        "post_number": 6,
        "post_type": 1,
        "posts_count": 14,
        "updated_at": "2019-01-24T09:12:36.331Z",
        "reply_count": 3,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 22,
        "readers_count": 21,
        "score": 19.4,
        "yours": false,
        "topic_id": 1035,
        "topic_slug": "node-bindings-release-0-8-0-now-with-versionstamp-support-in-the-tuple-layer",
        "display_username": "Christophe Chevalier",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 53,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/node-bindings-release-0-8-0-now-with-versionstamp-support-in-the-tuple-layer/1035/6",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3092,
        "name": "Ryan Worl",
        "username": "ryanworl",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png",
        "created_at": "2019-01-24T12:17:25.705Z",
        "cooked": "<p>This API relies on you using an existing key encoder. There are other APIs which you can use to set a versionstamp yourself or with a prefix/suffix.</p>",
        "post_number": 7,
        "post_type": 1,
        "posts_count": 14,
        "updated_at": "2019-01-24T12:17:25.705Z",
        "reply_count": 0,
        "reply_to_post_number": 6,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 22,
        "readers_count": 21,
        "score": 4.4,
        "yours": false,
        "topic_id": 1035,
        "topic_slug": "node-bindings-release-0-8-0-now-with-versionstamp-support-in-the-tuple-layer",
        "display_username": "Ryan Worl",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 53,
          "username": "KrzysFR",
          "name": "Christophe Chevalier",
          "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 81,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/node-bindings-release-0-8-0-now-with-versionstamp-support-in-the-tuple-layer/1035/7",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3113,
        "name": "Anantha Kumaran",
        "username": "ananthakumaran",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ananthakumaran/{size}/526_2.png",
        "created_at": "2019-01-25T07:20:01.807Z",
        "cooked": "<p>I have been using the same approach outlined by you (found it on another thread). But why do you have to cancel the transaction when you find same marker inside the key? I would assume you could just generate a new marker and retry the procedure?</p>\n<blockquote>\n<p>There is a very small chance of retrying again and again</p>\n</blockquote>\n<p>I would consider finding a different 10 byte marker in the same key again and again as an impossibility unless the random generator is flawed</p>\n<pre data-code-wrap=\"elixir\"><code class=\"lang-elixir\">  defp encode_versionstamped(%Coder{module: module, opts: opts} = coder, value) do\n    marker = :crypto.strong_rand_bytes(10)\n\n    {count, transformed_value} =\n      traverse(value, &amp;Versionstamp.new(marker, Versionstamp.user_version(&amp;1)))\n\n    if count != 1 do\n      {:error, count}\n    else\n      encoded = module.encode(transformed_value, opts)\n      {start, 10} = :binary.match(encoded, marker)\n\n      case :binary.match(encoded, marker, [{:scope, {start + 1, 10}}]) do\n        :nomatch -&gt;\n          {:ok, encoded &lt;&gt; &lt;&lt;start::unsigned-little-integer-size(32)&gt;&gt;}\n\n        _ -&gt;\n          encode_versionstamped(coder, value)\n      end\n    end\n  end\n\n  defp traverse(%Versionstamp{} = v, cb) do\n    if Versionstamp.incomplete?(v) do\n      {1, cb.(v)}\n    else\n      {0, v}\n    end\n  end\n\n  defp traverse(value, cb) when is_tuple(value) do\n    {count, list} = traverse(Tuple.to_list(value), cb)\n    {count, List.to_tuple(list)}\n  end\n\n  defp traverse(value, cb) when is_map(value) do\n    {count, list} = traverse(Map.to_list(value), cb)\n    {count, Enum.into(list, %{})}\n  end\n\n  defp traverse(value, cb) when is_list(value) do\n    {count, list} =\n      Enum.reduce(value, {0, []}, fn item, {count, list} -&gt;\n        {c, item} = traverse(item, cb)\n        {count + c, [item | list]}\n      end)\n\n    {count, Enum.reverse(list)}\n  end\n\n  defp traverse(value, _cb), do: {0, value}\n</code></pre>",
        "post_number": 8,
        "post_type": 1,
        "posts_count": 14,
        "updated_at": "2019-01-25T07:20:01.807Z",
        "reply_count": 1,
        "reply_to_post_number": 6,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 20,
        "readers_count": 19,
        "score": 9.0,
        "yours": false,
        "topic_id": 1035,
        "topic_slug": "node-bindings-release-0-8-0-now-with-versionstamp-support-in-the-tuple-layer",
        "display_username": "Anantha Kumaran",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 53,
          "username": "KrzysFR",
          "name": "Christophe Chevalier",
          "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 308,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/node-bindings-release-0-8-0-now-with-versionstamp-support-in-the-tuple-layer/1035/8",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3114,
        "name": "Christophe Chevalier",
        "username": "KrzysFR",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "created_at": "2019-01-25T08:48:33.459Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"ananthakumaran\" data-post=\"8\" data-topic=\"1035\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/ananthakumaran/48/526_2.png\" class=\"avatar\"> ananthakumaran:</div>\n<blockquote>\n<p>But why do you have to cancel the transaction when you find same marker inside the key? I would assume you could just generate a new marker and retry the procedure?</p>\n</blockquote>\n</aside>\n<p>The transaction is not cancelled. The exception thrown is designed to abort the transaction <em>handler</em> and is recognized by the retry-loop as a retry-able error, so that it calls the handler again (after renewing the random marker).</p>\n<aside class=\"quote no-group\" data-username=\"ananthakumaran\" data-post=\"8\" data-topic=\"1035\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/ananthakumaran/48/526_2.png\" class=\"avatar\"> ananthakumaran:</div>\n<blockquote>\n<p>I would consider finding a different 10 byte marker in the same key again and again as an impossibility unless the random generator is flawed</p>\n</blockquote>\n</aside>\n<p>Using a cryptographic PRNG would probably be too slow for high-performance applications, and in this case we don\u2019t <em>need</em> a strong source of randomness because the marker value does not \u201cescape\u201d (only used to recognized a location in a key), so a regular PRNG could be used instead with less entropy.</p>\n<p>There is a tiny possibilty that both the transaction and the application create a random generator using the current unix time as the seed, and <em>could</em> generate the same sequence of bytes again. Would be highly timing rependant.</p>\n<p>But the main source of retries would not be the random generator itself, but a bug in the application that would use a versionstamps twice in a key (or in both key and value at the same time). In this case, the handler would always retry until it hits the transaction retry limit.</p>\n<p>In all cases, either the chances are tiny and would only introduce a couple of retries from time to time, or would infinitely retry and would be caught immediately by the devolepper during testing (hopefully).</p>",
        "post_number": 9,
        "post_type": 1,
        "posts_count": 14,
        "updated_at": "2019-01-25T08:50:15.440Z",
        "reply_count": 1,
        "reply_to_post_number": 8,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 16,
        "readers_count": 15,
        "score": 8.2,
        "yours": false,
        "topic_id": 1035,
        "topic_slug": "node-bindings-release-0-8-0-now-with-versionstamp-support-in-the-tuple-layer",
        "display_username": "Christophe Chevalier",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 53,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/node-bindings-release-0-8-0-now-with-versionstamp-support-in-the-tuple-layer/1035/9",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3115,
        "name": "Anantha Kumaran",
        "username": "ananthakumaran",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ananthakumaran/{size}/526_2.png",
        "created_at": "2019-01-25T09:23:52.591Z",
        "cooked": "<blockquote>\n<p>But the main source of retries would not be the random generator itself, but a bug in the application that would use a versionstamps twice in a key (or in both key and value at the same time). In this case, the handler would always retry until it hits the transaction retry limit.</p>\n</blockquote>\n<p>I think, this is probably the difference between our implementations. I actually traverse the key/value and replace incomplete version with marker, so if there are multiple keys, it can be found at that stage. The user never get to see the marker value anywhere</p>",
        "post_number": 10,
        "post_type": 1,
        "posts_count": 14,
        "updated_at": "2019-01-25T09:23:52.591Z",
        "reply_count": 1,
        "reply_to_post_number": 9,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 15,
        "readers_count": 14,
        "score": 8.0,
        "yours": false,
        "topic_id": 1035,
        "topic_slug": "node-bindings-release-0-8-0-now-with-versionstamp-support-in-the-tuple-layer",
        "display_username": "Anantha Kumaran",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 53,
          "username": "KrzysFR",
          "name": "Christophe Chevalier",
          "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 308,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/node-bindings-release-0-8-0-now-with-versionstamp-support-in-the-tuple-layer/1035/10",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3122,
        "name": "Christophe Chevalier",
        "username": "KrzysFR",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "created_at": "2019-01-25T13:00:38.925Z",
        "cooked": "<p>What if the user creates a new byte array, and generate keys manually? Or use an external serialization library that does not know about versionstamps? Or if the application is not using the Directory Layer for key prefixes?</p>\n<p>All the solutions I\u2019ve seen so far are done in the tuple layer or require a custom encoder, which is a bit limiting in some cases.</p>",
        "post_number": 11,
        "post_type": 1,
        "posts_count": 14,
        "updated_at": "2019-01-25T13:00:38.925Z",
        "reply_count": 1,
        "reply_to_post_number": 10,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 14,
        "readers_count": 13,
        "score": 7.8,
        "yours": false,
        "topic_id": 1035,
        "topic_slug": "node-bindings-release-0-8-0-now-with-versionstamp-support-in-the-tuple-layer",
        "display_username": "Christophe Chevalier",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 308,
          "username": "ananthakumaran",
          "name": "Anantha Kumaran",
          "avatar_template": "/user_avatar/forums.foundationdb.org/ananthakumaran/{size}/526_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 53,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/node-bindings-release-0-8-0-now-with-versionstamp-support-in-the-tuple-layer/1035/11",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3123,
        "name": "Anantha Kumaran",
        "username": "ananthakumaran",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ananthakumaran/{size}/526_2.png",
        "created_at": "2019-01-25T13:46:22.222Z",
        "cooked": "<p>The more I am thinking about this, I guess one fundamental difference is whether we can look inside the key/value and locate the versionstamp. With lisp/erlang etc, it\u2019s possible to look inside all the data structures. There is no class and users are limited to list, map, tuple and struct for containers (there are some specialized data structures like queue/graph etc, but I am assuming nobody would try to use it here or convert it to list/map before serialization)\u2026</p>\n<p>If we have that, then it doesn\u2019t limit the use cases to tuple layer. All I have to do is replace incomplete versionstamp with a versionstamp with specific marker and call the encoding layer. Encoding layer has no idea about versionstamp position. They can output like tuple layer or just convert it to erlang term, msgpack etc. As long as the marker is present in the output bytes, we are good. we can later locate the position.</p>\n<p>Of course, as you said, this is not completely foolproof. Some encoding layer could emit everything twice (like versioning), which would backfire in our case as there will be two markers now. Or, if somebody wants to encrypt/compress the data, that\u2019s also a problem (but these use cases wouldn\u2019t work anyways unless the versionstamp is handled specially)</p>",
        "post_number": 12,
        "post_type": 1,
        "posts_count": 14,
        "updated_at": "2019-01-25T13:46:22.222Z",
        "reply_count": 1,
        "reply_to_post_number": 11,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 14,
        "readers_count": 13,
        "score": 7.8,
        "yours": false,
        "topic_id": 1035,
        "topic_slug": "node-bindings-release-0-8-0-now-with-versionstamp-support-in-the-tuple-layer",
        "display_username": "Anantha Kumaran",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 53,
          "username": "KrzysFR",
          "name": "Christophe Chevalier",
          "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 308,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/node-bindings-release-0-8-0-now-with-versionstamp-support-in-the-tuple-layer/1035/12",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3124,
        "name": "Christophe Chevalier",
        "username": "KrzysFR",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "created_at": "2019-01-25T13:53:28.471Z",
        "cooked": "<p>I get what you say for languages/runtime that are somewhat dynamic in nature, when you can have some sort of introspection of what is going on before rendering the key into bytes.</p>\n<p>Though even there, it would break if, for example, your application would need to interop into a C/C++/ASM third-party serialization library that is opaque to your runtime where all you see are bytes coming in or out.</p>\n<p>This may be an uncommon scenario, and if your solution works for 95+% use cases, then I guess it\u2019s perfectly fine, and people in the less common scenarios would have to do it the hard way (by calling the versions of <code>setVersionstampedKey|Value</code> that take an offset).</p>",
        "post_number": 13,
        "post_type": 1,
        "posts_count": 14,
        "updated_at": "2019-01-25T13:53:56.590Z",
        "reply_count": 0,
        "reply_to_post_number": 12,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 17,
        "readers_count": 16,
        "score": 23.4,
        "yours": false,
        "topic_id": 1035,
        "topic_slug": "node-bindings-release-0-8-0-now-with-versionstamp-support-in-the-tuple-layer",
        "display_username": "Christophe Chevalier",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 308,
          "username": "ananthakumaran",
          "name": "Anantha Kumaran",
          "avatar_template": "/user_avatar/forums.foundationdb.org/ananthakumaran/{size}/526_2.png"
        },
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 53,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/node-bindings-release-0-8-0-now-with-versionstamp-support-in-the-tuple-layer/1035/13",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3158,
        "name": "Seph Gentle",
        "username": "josephg",
        "avatar_template": "/user_avatar/forums.foundationdb.org/josephg/{size}/84_2.png",
        "created_at": "2019-01-29T11:37:56.955Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"KrzysFR\" data-post=\"6\" data-topic=\"1035\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/krzysfr/48/43_2.png\" class=\"avatar\"> KrzysFR:</div>\n<blockquote>\n<p>For my own curiosity, how to you make <code>setVersionStampedKey(...)</code> recognize the offset of the versionstamp in the key?</p>\n</blockquote>\n</aside>\n<p>I have none of that prng magic in my JS bindings!</p>\n<p>The encoder (in this case, the tuple encoder) exposes a method called <code>tuple.packUnboundVersionstamp(value)</code> which returns a <code>{data: Buffer, stampPos: number, codePos?: number}</code> structure.</p>\n<p>That method encodes the tuple, and on the way it looks out for a tuple item with <code>{type: 'unbound versionstamp'}</code>. When it sees that it encodes it into 10 empty bytes, and marks the location into <code>stampPos</code>. (The normal <code>tuple.pack</code> method will throw if it sees this marker in a tuple).</p>\n<p>If you want to implement your own key / value encoding, you won\u2019t be able to use <code>setVersionstampedKey</code> unless you implement that special <code>packUnboundVersionstamp</code> method for your own data type. But thats normally ok - you can just call <code>tn.setVersionstampSuffixedKey(key, value, [suffix])</code> instead.</p>",
        "post_number": 14,
        "post_type": 1,
        "posts_count": 14,
        "updated_at": "2019-01-29T11:37:56.955Z",
        "reply_count": 0,
        "reply_to_post_number": 6,
        "quote_count": 1,
        "incoming_link_count": 1,
        "reads": 15,
        "readers_count": 14,
        "score": 8.0,
        "yours": false,
        "topic_id": 1035,
        "topic_slug": "node-bindings-release-0-8-0-now-with-versionstamp-support-in-the-tuple-layer",
        "display_username": "Seph Gentle",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 120,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/node-bindings-release-0-8-0-now-with-versionstamp-support-in-the-tuple-layer/1035/14",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      3060,
      3062,
      3066,
      3070,
      3072,
      3091,
      3092,
      3113,
      3114,
      3115,
      3122,
      3123,
      3124,
      3158
    ]
  },
  "timeline_lookup": [
    [
      1,
      2468
    ],
    [
      6,
      2463
    ],
    [
      7,
      2462
    ],
    [
      11,
      2461
    ],
    [
      14,
      2457
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "Node bindings release 0.8.0, now with Versionstamp support in the tuple layer!",
  "id": 1035,
  "title": "Node bindings release 0.8.0, now with Versionstamp support in the tuple layer!",
  "posts_count": 14,
  "created_at": "2019-01-18T12:41:26.214Z",
  "views": 792,
  "reply_count": 11,
  "like_count": 4,
  "last_posted_at": "2019-01-29T11:37:56.955Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "node-bindings-release-0-8-0-now-with-versionstamp-support-in-the-tuple-layer",
  "category_id": 7,
  "word_count": 1906,
  "deleted_at": null,
  "user_id": 81,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_1035",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 14,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 5,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "Implementing VersionStamps in bindings",
      "id": 250,
      "title": "Implementing VersionStamps in bindings",
      "slug": "implementing-versionstamps-in-bindings",
      "posts_count": 25,
      "reply_count": 18,
      "highest_post_number": 25,
      "image_url": null,
      "created_at": "2018-04-24T19:05:11.830Z",
      "last_posted_at": "2018-05-09T18:14:10.990Z",
      "bumped": true,
      "bumped_at": "2018-05-09T18:14:10.990Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 3,
      "views": 5417,
      "category_id": 8,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 156,
            "username": "spullara",
            "name": "Sam Pullara",
            "avatar_template": "/user_avatar/forums.foundationdb.org/spullara/{size}/125_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 120,
            "username": "josephg",
            "name": "Seph Gentle",
            "avatar_template": "/user_avatar/forums.foundationdb.org/josephg/{size}/84_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Use case of versionstamp and behavior of pack_with_versionstamp",
      "id": 869,
      "title": "Use case of versionstamp and behavior of pack_with_versionstamp",
      "slug": "use-case-of-versionstamp-and-behavior-of-pack-with-versionstamp",
      "posts_count": 7,
      "reply_count": 4,
      "highest_post_number": 8,
      "image_url": null,
      "created_at": "2018-11-14T21:14:41.993Z",
      "last_posted_at": "2018-11-26T18:06:38.323Z",
      "bumped": true,
      "bumped_at": "2018-11-26T18:06:38.323Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [
        "bindings"
      ],
      "tags_descriptions": {},
      "like_count": 5,
      "views": 2402,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 41,
            "username": "amirouche",
            "name": "Amirouche",
            "avatar_template": "/user_avatar/forums.foundationdb.org/amirouche/{size}/1911_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "&ldquo;Read or wrote an unreadable key&rdquo; when read and then write versionstamp value",
      "id": 2301,
      "title": "\"Read or wrote an unreadable key\" when read and then write versionstamp value",
      "slug": "read-or-wrote-an-unreadable-key-when-read-and-then-write-versionstamp-value",
      "posts_count": 2,
      "reply_count": 0,
      "highest_post_number": 2,
      "image_url": null,
      "created_at": "2020-08-22T22:36:53.054Z",
      "last_posted_at": "2020-08-23T00:50:06.076Z",
      "bumped": true,
      "bumped_at": "2020-08-23T00:50:06.076Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [
        "bindings"
      ],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 706,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest single",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 393,
            "username": "ex3ndr",
            "name": "Steve Korshakov",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ex3ndr/{size}/389_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Cannot commit transaction that reads the metadataVersion key after changing it",
      "id": 1833,
      "title": "Cannot commit transaction that reads the metadataVersion key after changing it",
      "slug": "cannot-commit-transaction-that-reads-the-metadataversion-key-after-changing-it",
      "posts_count": 7,
      "reply_count": 3,
      "highest_post_number": 7,
      "image_url": null,
      "created_at": "2019-12-11T22:52:33.816Z",
      "last_posted_at": "2019-12-13T13:23:15.818Z",
      "bumped": true,
      "bumped_at": "2019-12-13T14:11:35.389Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 1297,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "VersionStamp vs CommittedVersion",
      "id": 600,
      "title": "VersionStamp vs CommittedVersion",
      "slug": "versionstamp-vs-committedversion",
      "posts_count": 7,
      "reply_count": 3,
      "highest_post_number": 7,
      "image_url": null,
      "created_at": "2018-07-30T06:50:38.826Z",
      "last_posted_at": "2018-09-17T19:43:14.827Z",
      "bumped": true,
      "bumped_at": "2018-09-17T19:43:14.827Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 3,
      "views": 3916,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 41,
            "username": "amirouche",
            "name": "Amirouche",
            "avatar_template": "/user_avatar/forums.foundationdb.org/amirouche/{size}/1911_2.png",
            "trust_level": 2
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 53,
        "username": "KrzysFR",
        "name": "Christophe Chevalier",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "post_count": 4,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      },
      {
        "id": 81,
        "username": "ryanworl",
        "name": "Ryan Worl",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png",
        "post_count": 3,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 3
      },
      {
        "id": 120,
        "username": "josephg",
        "name": "Seph Gentle",
        "avatar_template": "/user_avatar/forums.foundationdb.org/josephg/{size}/84_2.png",
        "post_count": 3,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      },
      {
        "id": 308,
        "username": "ananthakumaran",
        "name": "Anantha Kumaran",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ananthakumaran/{size}/526_2.png",
        "post_count": 3,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      },
      {
        "id": 12,
        "username": "ajbeamon",
        "name": "A.J. Beamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "admin": true,
        "trust_level": 4
      }
    ],
    "created_by": {
      "id": 81,
      "username": "ryanworl",
      "name": "Ryan Worl",
      "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png"
    },
    "last_poster": {
      "id": 120,
      "username": "josephg",
      "name": "Seph Gentle",
      "avatar_template": "/user_avatar/forums.foundationdb.org/josephg/{size}/84_2.png"
    },
    "links": [
      {
        "url": "https://github.com/josephg/node-foundationdb",
        "title": "GitHub - josephg/node-foundationdb: Modern Node.js FoundationDB bindings",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 6,
        "user_id": 81,
        "domain": "github.com",
        "root_domain": "github.com"
      }
    ]
  },
  "bookmarks": []
}