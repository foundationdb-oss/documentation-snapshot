{
  "post_stream": {
    "posts": [
      {
        "id": 14083,
        "name": "gripleaf",
        "username": "gripleaf",
        "avatar_template": "/user_avatar/forums.foundationdb.org/gripleaf/{size}/1642_2.png",
        "created_at": "2024-05-27T11:49:05.254Z",
        "cooked": "<p>fdb_transaction_add_conflict_range not work as expected?</p>\n<p>here is my unit test</p>\n<pre><code class=\"lang-auto\">        FDBDatabase* db;  // Simplify the code\n        // step 1: set key1 value1\n        {\n            // create transaction tr\n            fdb_transaction_set(tr, (uint8_t*)\"key1\", 4, (uint8_t*)\"value1\", 6);\n           //  commit tr\n        }\n        // step 2: get read version\n        int64_t version;\n        {\n            FDBTransaction* tr = nullptr;\n            fdb_error_t err = fdb_database_create_transaction(db, &amp;tr);\n            ASSERT_EQ(err, 0);\n            FDBFuture* future = fdb_transaction_get_read_version(tr);\n            err = fdb_future_block_until_ready(future);\n            ASSERT_EQ(err, 0);\n            err = fdb_future_get_int64(future, &amp;version);\n            ASSERT_EQ(err, 0);\n            fdb_future_destroy(future);\n            fdb_transaction_destroy(tr);\n        }\n        // step 3: rewrite key1 ----- set key1 value2\n        {\n            // create transaction tr\n            fdb_transaction_set(tr, (uint8_t*)\"key1\", 4, (uint8_t*)\"value2\", 6);\n           //  commit tr\n        }\n        // step 4: expect a write conflict with step 3 when use step 2's read version\n        FDBTransaction* txn1_tr = nullptr;\n        {\n            fdb_error_t err = fdb_database_create_transaction(db, &amp;txn1_tr);\n            ASSERT_EQ(err, 0);\n            // set read version from step 2\n            fdb_transaction_set_read_version(txn1_tr, version);\n            fdb_transaction_set(txn1_tr, (uint8_t*)\"key1\", 4, (uint8_t*)\"value3\", 6);\n            ASSERT_EQ(err, 0);\n            ASSERT_EQ(fdb_transaction_add_conflict_range(txn1_tr, (uint8_t*)\"key0\", 4, (uint8_t*)\"key2\", 4, FDB_CONFLICT_RANGE_TYPE_READ), 0);\n            // commit txn1\n            err = WaitError(fdb_transaction_commit(txn1_tr));\n            ASSERT_EQ(err, 1020 /*transaction not committed due to conflict with another transaction*/);\n        }\n       \n</code></pre>\n<p>In <a href=\"https://apple.github.io/foundationdb/api-c.html#c.fdb_transaction_add_conflict_range\" rel=\"noopener nofollow ugc\">Document</a>, <code>FDB_CONFLICT_RANGE_TYPE_READ</code> means <code>read the range</code>, step 4 should be conflicted with step 3 when use read version from step 2.</p>\n<p>However, the <code>ASSERT_EQ(err, 1020 /*transaction not committed due to conflict with another transaction*/);</code> is failed, err is 0(means success).</p>\n<p>Is there something wrong with my usage?</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 5,
        "updated_at": "2024-05-28T06:59:41.197Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 27,
        "reads": 19,
        "readers_count": 18,
        "score": 138.8,
        "yours": false,
        "topic_id": 4492,
        "topic_slug": "c-api-add-conflict-range-seems-not-work",
        "display_username": "gripleaf",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://apple.github.io/foundationdb/api-c.html#c.fdb_transaction_add_conflict_range",
            "internal": false,
            "reflection": false,
            "title": "C API \u2014 FoundationDB 7.1",
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 1308,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/c-api-add-conflict-range-seems-not-work/4492/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 14086,
        "name": "Alec Grieser",
        "username": "alloc",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "created_at": "2024-05-28T11:17:53.258Z",
        "cooked": "<p>This is kind of subtle, but I believe the problem is that you\u2019re adding the read conflict range <em>after</em> setting <code>key1</code> in your final transaction.</p>\n<p>The way that the conflict range logic works is that there are data structures maintained by the FDB client indicating what ranges of keys have been read and which have been written. When you add a read-conflict range it, (1) collapses the range with other pre-existing conflict ranges (so that if you have a read conflict range from <code>[a, c)</code> and you add one from <code>[b, d)</code>, it collapses that to a single range from <code>[a, d)</code>) and (2) removes any overwritten keys or key ranges from the read conflict range as the value seen in the transaction is consistent with the uncommitted version not the version associated with the transaction\u2019s read version. So, in this case, you\u2019ve got a write on <code>key1</code> and then read conflict ranges <code>[key0, key1)</code> and <code>[key1+\\x00, key2)</code>, which means that it <em>won\u2019t</em> conflict with the third transaction\u2019s write at <code>key1</code>.</p>\n<p>This behavior is a bit non-intuitive, especially when the user adds explicit conflict ranges. This is somewhat more understandable when conflict ranges come from actual reads and writes.</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 5,
        "updated_at": "2024-05-28T11:17:53.258Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 15,
        "readers_count": 14,
        "score": 8.0,
        "yours": false,
        "topic_id": 4492,
        "topic_slug": "c-api-add-conflict-range-seems-not-work",
        "display_username": "Alec Grieser",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 8,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/c-api-add-conflict-range-seems-not-work/4492/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 14087,
        "name": "gripleaf",
        "username": "gripleaf",
        "avatar_template": "/user_avatar/forums.foundationdb.org/gripleaf/{size}/1642_2.png",
        "created_at": "2024-05-28T12:32:18.050Z",
        "cooked": "<p>I always thought <code>fdb_transaction_add_conflict_range(..., FDB_CONFLICT_RANGE_TYPE_READ)</code> was equivalent to <code>fdb_transaction_get_range</code> on txn conflict detect.</p>\n<p>I want to guarantee no one modify the <code>key1</code> after I got the read_version, then I can modify <code>key1</code>. (just like optimistic lock)</p>\n<p>Is there any way can achieve above requirement?</p>\n<p>My current solution is replacing the <code>fdb_transaction_add_conflict_range</code> with <code>fdb_transaction_get</code>, and do not wait the <code>fdb_transaction_get</code>\u2019s future ready, commit the txn immediately. Example code(step 4) like follow:</p>\n<pre><code class=\"lang-auto\">        // step 4: expect a write conflict with step 3 when use step 2's read version\n        FDBTransaction* txn1_tr = nullptr;\n        {\n            fdb_error_t err = fdb_database_create_transaction(db, &amp;txn1_tr);\n            ASSERT_EQ(err, 0);\n            // set read version from step 2\n            fdb_transaction_set_read_version(txn1_tr, version);\n            fdb_transaction_set(txn1_tr, (uint8_t*)\"key1\", 4, (uint8_t*)\"value3\", 6);\n            ASSERT_EQ(err, 0);\n-           ASSERT_EQ(fdb_transaction_add_conflict_range(txn1_tr, (uint8_t*)\"key0\", 4, (uint8_t*)\"key2\", 4, FDB_CONFLICT_RANGE_TYPE_READ), 0);\n+           FDBFuture* future = fdb_transaction_get(txn1_tr, (uint8_t*)\"key1\", 4);\n+           // not care about the value of \"key1\"\n            // commit txn1\n            err = WaitError(fdb_transaction_commit(txn1_tr));\n            ASSERT_EQ(err, 1020 /*transaction not committed due to conflict with another transaction*/);\n        }\n</code></pre>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 5,
        "updated_at": "2024-05-28T12:32:18.050Z",
        "reply_count": 1,
        "reply_to_post_number": 2,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 15,
        "readers_count": 14,
        "score": 8.0,
        "yours": false,
        "topic_id": 4492,
        "topic_slug": "c-api-add-conflict-range-seems-not-work",
        "display_username": "gripleaf",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 8,
          "username": "alloc",
          "name": "Alec Grieser",
          "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 1308,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/c-api-add-conflict-range-seems-not-work/4492/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 14088,
        "name": "Alec Grieser",
        "username": "alloc",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "created_at": "2024-05-28T13:23:50.819Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"gripleaf\" data-post=\"3\" data-topic=\"4492\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/gripleaf/48/1642_2.png\" class=\"avatar\"> gripleaf:</div>\n<blockquote>\n<p>Is there any way can achieve above requirement?</p>\n</blockquote>\n</aside>\n<p>My suggestion in this case would be to move the call to <code>add_conflict_range</code> to be before the <code>set</code> call. If I\u2019m right about what is going on, this should result in a read conflict range being added that includes <code>key1</code>.</p>\n<aside class=\"quote no-group\" data-username=\"gripleaf\" data-post=\"3\" data-topic=\"4492\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/gripleaf/48/1642_2.png\" class=\"avatar\"> gripleaf:</div>\n<blockquote>\n<p>My current solution is replacing the <code>fdb_transaction_add_conflict_range</code> with <code>fdb_transaction_get</code>,</p>\n</blockquote>\n</aside>\n<p>I\u2019ll admit that this surprised me that this worked. I <em>think</em> what\u2019s going on has to do with how the <code>updateConflictMap</code> methods work:</p>\n<aside class=\"onebox githubblob\" data-onebox-src=\"https://github.com/apple/foundationdb/blob/ad646daf12d6bcc474d558c54db762b50fb64c69/fdbclient/ReadYourWrites.actor.cpp#L322-L350\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/apple/foundationdb/blob/ad646daf12d6bcc474d558c54db762b50fb64c69/fdbclient/ReadYourWrites.actor.cpp#L322-L350\" target=\"_blank\" rel=\"noopener\">github.com</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <h4><a href=\"https://github.com/apple/foundationdb/blob/ad646daf12d6bcc474d558c54db762b50fb64c69/fdbclient/ReadYourWrites.actor.cpp#L322-L350\" target=\"_blank\" rel=\"noopener\">apple/foundationdb/blob/ad646daf12d6bcc474d558c54db762b50fb64c69/fdbclient/ReadYourWrites.actor.cpp#L322-L350</a></h4>\n\n\n\n    <pre class=\"onebox\"><code class=\"lang-cpp\">\n      <ol class=\"start lines\" start=\"322\" style=\"counter-reset: li-counter 321 ;\">\n          <li>\tstatic void updateConflictMap(ReadYourWritesTransaction* ryw, KeyRef const&amp; key, WriteMap::iterator&amp; it) {</li>\n          <li>\t\t// it.skip( key );</li>\n          <li>\t\t// ASSERT( it.beginKey() &lt;= key &amp;&amp; key &lt; it.endKey() );</li>\n          <li>\t\tif (mustUnmodified &amp;&amp; !it.is_unmodified_range()) {</li>\n          <li>\t\t\tthrow get_mapped_range_reads_your_writes();</li>\n          <li>\t\t}</li>\n          <li>\t\tif (it.is_unmodified_range() || (it.is_operation() &amp;&amp; !it.is_independent())) {</li>\n          <li>\t\t\tryw-&gt;approximateSize += 2 * key.expectedSize() + 1 + sizeof(KeyRangeRef);</li>\n          <li>\t\t\tryw-&gt;readConflicts.insert(singleKeyRange(key, ryw-&gt;arena), true);</li>\n          <li>\t\t}</li>\n          <li>\t}</li>\n          <li></li>\n          <li>\ttemplate &lt;bool mustUnmodified = false&gt;</li>\n          <li>\tstatic void updateConflictMap(ReadYourWritesTransaction* ryw, KeyRangeRef const&amp; keys, WriteMap::iterator&amp; it) {</li>\n          <li>\t\t// it.skip( keys.begin );</li>\n          <li>\t\t// ASSERT( it.beginKey() &lt;= keys.begin &amp;&amp; keys.begin &lt; it.endKey() );</li>\n          <li>\t\tfor (; it.beginKey() &lt; keys.end; ++it) {</li>\n          <li>\t\t\tif (mustUnmodified &amp;&amp; !it.is_unmodified_range()) {</li>\n          <li>\t\t\t\tthrow get_mapped_range_reads_your_writes();</li>\n          <li>\t\t\t}</li>\n      </ol>\n    </code></pre>\n\n\n  This file has been truncated. <a href=\"https://github.com/apple/foundationdb/blob/ad646daf12d6bcc474d558c54db762b50fb64c69/fdbclient/ReadYourWrites.actor.cpp#L322-L350\" target=\"_blank\" rel=\"noopener\">show original</a>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>The second method is (I believe) responsible for adding the read conflict ranges if one calls the <code>add_conflict_range</code> method explicitly or if one does a <code>get_range</code> request. In this case, it iterates through the <code>WriteMap</code> to find overlapping gaps with the range, and it only adds read conflict ranges in the gaps. The first method is (again, I believe) the method that adds the conflict range if you read a single key via <code>get</code>, and in this case, its logic for whether it adds the read conflict key given an existing entry in the write map appears to be slightly different. So it could be that it\u2019s adding the read conflict key here but only if you call <code>get</code>.</p>\n<p>Now, whether it <em>should</em> have added the conflict range\u2026 it seems like if it\u2019s reading the uncommitted value from the write cache, as I believe it will, then it shouldn\u2019t add the conflict range, for the same reason that <code>get_range</code> and <code>add_conflict_range</code> don\u2019t.</p>\n<aside class=\"quote no-group\" data-username=\"gripleaf\" data-post=\"3\" data-topic=\"4492\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/gripleaf/48/1642_2.png\" class=\"avatar\"> gripleaf:</div>\n<blockquote>\n<p>I always thought <code>fdb_transaction_add_conflict_range(..., FDB_CONFLICT_RANGE_TYPE_READ)</code> was equivalent to <code>fdb_transaction_get_range</code> on txn conflict detect.</p>\n</blockquote>\n</aside>\n<p>I believe that it actually is. If you want to confirm, you could try issuing a <code>get_range</code> from <code>key0</code> to <code>key2</code> instead of calling <code>get</code> or <code>add_conflict_range</code> and then wait on the result. (Unlike with a single key get, the waiting here is actually important because the read conflict ranges added can be different depending on what data actually gets read during a <code>get_range</code>.) I\u2019d expect the same behavior as you observed as when you called <code>add_conflict_range</code>.</p>\n<p>If anything, I actually think that departing from the behavior of <code>get_range</code> would make sense. That is, it seems like it would be less error prone if calling <code>add_conflict_range</code> <em>always</em> added the conflict range, even if there are mutations in the range.</p>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 5,
        "updated_at": "2024-05-28T13:24:17.386Z",
        "reply_count": 1,
        "reply_to_post_number": 3,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 13,
        "readers_count": 12,
        "score": 7.6,
        "yours": false,
        "topic_id": 4492,
        "topic_slug": "c-api-add-conflict-range-seems-not-work",
        "display_username": "Alec Grieser",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/apple/foundationdb/blob/ad646daf12d6bcc474d558c54db762b50fb64c69/fdbclient/ReadYourWrites.actor.cpp#L322-L350",
            "internal": false,
            "reflection": false,
            "title": "foundationdb/fdbclient/ReadYourWrites.actor.cpp at ad646daf12d6bcc474d558c54db762b50fb64c69 \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 8,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/c-api-add-conflict-range-seems-not-work/4492/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 14091,
        "name": "gripleaf",
        "username": "gripleaf",
        "avatar_template": "/user_avatar/forums.foundationdb.org/gripleaf/{size}/1642_2.png",
        "created_at": "2024-05-29T04:12:47.638Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"alloc\" data-post=\"4\" data-topic=\"4492\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/alloc/48/9_2.png\" class=\"avatar\"> alloc:</div>\n<blockquote>\n<p>My suggestion in this case would be to move the call to <code>add_conflict_range</code> to be before the <code>set</code> call. If I\u2019m right about what is going on, this should result in a read conflict range being added that includes <code>key1</code>.</p>\n</blockquote>\n</aside>\n<p>It seems work for me. Thanks a lot for your suggestion.</p>\n<aside class=\"quote no-group\" data-username=\"alloc\" data-post=\"4\" data-topic=\"4492\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/alloc/48/9_2.png\" class=\"avatar\"> alloc:</div>\n<blockquote>\n<p>Now, whether it <em>should</em> have added the conflict range\u2026 it seems like if it\u2019s reading the uncommitted value from the write cache, as I believe it will, then it shouldn\u2019t add the conflict range, for the same reason that <code>get_range</code> and <code>add_conflict_range</code> don\u2019t.</p>\n</blockquote>\n</aside>\n<p>This is a very reasonable explanation. Nice design. I need to think more carefully next time.</p>",
        "post_number": 5,
        "post_type": 1,
        "posts_count": 5,
        "updated_at": "2024-05-29T04:12:47.638Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 1,
        "incoming_link_count": 1,
        "reads": 9,
        "readers_count": 8,
        "score": 21.8,
        "yours": false,
        "topic_id": 4492,
        "topic_slug": "c-api-add-conflict-range-seems-not-work",
        "display_username": "gripleaf",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 1308,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/c-api-add-conflict-range-seems-not-work/4492/5",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      14083,
      14086,
      14087,
      14088,
      14091
    ]
  },
  "timeline_lookup": [
    [
      1,
      512
    ],
    [
      2,
      511
    ]
  ],
  "suggested_topics": [],
  "tags": [
    "bindings"
  ],
  "tags_descriptions": {},
  "fancy_title": "C api add_conflict_range seems not work",
  "id": 4492,
  "title": "C api add_conflict_range seems not work",
  "posts_count": 5,
  "created_at": "2024-05-27T11:49:05.182Z",
  "views": 153,
  "reply_count": 2,
  "like_count": 1,
  "last_posted_at": "2024-05-29T04:12:47.638Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "c-api-add-conflict-range-seems-not-work",
  "category_id": 5,
  "word_count": 1142,
  "deleted_at": null,
  "user_id": 1308,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_4492",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 5,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 2,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "ReadConflict vs WriteConflict for locking a range?",
      "id": 1070,
      "title": "ReadConflict vs WriteConflict for locking a range?",
      "slug": "readconflict-vs-writeconflict-for-locking-a-range",
      "posts_count": 7,
      "reply_count": 3,
      "highest_post_number": 7,
      "image_url": null,
      "created_at": "2019-01-26T13:26:56.674Z",
      "last_posted_at": "2019-02-02T05:07:53.900Z",
      "bumped": true,
      "bumped_at": "2019-02-02T05:07:53.900Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 1354,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 308,
            "username": "ananthakumaran",
            "name": "Anantha Kumaran",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ananthakumaran/{size}/526_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 173,
            "username": "jkominek",
            "name": "Jay Kominek",
            "avatar_template": "/user_avatar/forums.foundationdb.org/jkominek/{size}/140_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Reading your own write conflict range",
      "id": 2097,
      "title": "Reading your own write conflict range",
      "slug": "reading-your-own-write-conflict-range",
      "posts_count": 6,
      "reply_count": 4,
      "highest_post_number": 6,
      "image_url": null,
      "created_at": "2020-05-01T17:01:26.015Z",
      "last_posted_at": "2020-05-04T16:53:08.629Z",
      "bumped": true,
      "bumped_at": "2020-05-04T16:53:08.629Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 1180,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 14,
            "username": "andrew.noyes",
            "name": "",
            "avatar_template": "/user_avatar/forums.foundationdb.org/andrew.noyes/{size}/443_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 337,
            "username": "mengxu",
            "name": "Meng Xu",
            "avatar_template": "/user_avatar/forums.foundationdb.org/mengxu/{size}/893_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Java Bindings: Additional methods on the ReadTransaction interface to manage read conflict ranges",
      "id": 37,
      "title": "Java Bindings: Additional methods on the ReadTransaction interface to manage read conflict ranges",
      "slug": "java-bindings-additional-methods-on-the-readtransaction-interface-to-manage-read-conflict-ranges",
      "posts_count": 1,
      "reply_count": 0,
      "highest_post_number": 1,
      "image_url": null,
      "created_at": "2018-04-13T18:03:39.089Z",
      "last_posted_at": "2018-04-13T18:03:39.200Z",
      "bumped": true,
      "bumped_at": "2018-04-13T18:08:43.919Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [
        "bindings"
      ],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 879,
      "category_id": 8,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest single",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Inducing a Read Conflict",
      "id": 1850,
      "title": "Inducing a Read Conflict",
      "slug": "inducing-a-read-conflict",
      "posts_count": 6,
      "reply_count": 4,
      "highest_post_number": 6,
      "image_url": null,
      "created_at": "2019-12-17T20:19:47.478Z",
      "last_posted_at": "2019-12-19T20:29:26.296Z",
      "bumped": true,
      "bumped_at": "2019-12-19T20:29:26.296Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 875,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 517,
            "username": "janderland",
            "name": "Jon Anderson",
            "avatar_template": "/user_avatar/forums.foundationdb.org/janderland/{size}/517_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        }
      ]
    },
    {
      "fancy_title": "Returning conflicting read/write conflict ranges after transaction conflict",
      "id": 1499,
      "title": "Returning conflicting read/write conflict ranges after transaction conflict",
      "slug": "returning-conflicting-read-write-conflict-ranges-after-transaction-conflict",
      "posts_count": 4,
      "reply_count": 2,
      "highest_post_number": 4,
      "image_url": null,
      "created_at": "2019-06-28T17:24:23.090Z",
      "last_posted_at": "2022-06-16T16:07:11.271Z",
      "bumped": true,
      "bumped_at": "2022-06-16T16:07:11.271Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 3,
      "views": 1199,
      "category_id": 5,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 1059,
            "username": "zhongyan",
            "name": "zhongyan",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/z/cab0a1/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 14,
            "username": "andrew.noyes",
            "name": "",
            "avatar_template": "/user_avatar/forums.foundationdb.org/andrew.noyes/{size}/443_2.png",
            "trust_level": 2
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 1308,
        "username": "gripleaf",
        "name": "gripleaf",
        "avatar_template": "/user_avatar/forums.foundationdb.org/gripleaf/{size}/1642_2.png",
        "post_count": 3,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 8,
        "username": "alloc",
        "name": "Alec Grieser",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      }
    ],
    "created_by": {
      "id": 1308,
      "username": "gripleaf",
      "name": "gripleaf",
      "avatar_template": "/user_avatar/forums.foundationdb.org/gripleaf/{size}/1642_2.png"
    },
    "last_poster": {
      "id": 1308,
      "username": "gripleaf",
      "name": "gripleaf",
      "avatar_template": "/user_avatar/forums.foundationdb.org/gripleaf/{size}/1642_2.png"
    }
  },
  "bookmarks": []
}