{
  "post_stream": {
    "posts": [
      {
        "id": 3258,
        "name": "Preslav Le",
        "username": "preslavle",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/p/9de0a6/{size}.png",
        "created_at": "2019-02-02T12:39:23.496Z",
        "cooked": "<p>We are running a foundationDB benchmark to better understand its performance and scaling limits. We are currently running a read-only workload where each requests is a point read, doing the following fdb calls: fdb_database_create_transaction(), fdb_transaction_get() and fdb_transaction_commit(). However, as we increase the number of requests, the latencies for getting a read version (GRV) keep increasing to unacceptably high levels and we can\u2019t seem to figure out how to add hardware to address this and scale further.</p>\n<p>We were using 320 clients, and as we grew the number of requests from 100k to 1.4 million, we observed read latencies severely degrade, e.g. median degraded from 2ms to 25ms. By looking at, fdb xml trace files, it seems we were entirely limited by GRV and not by reading from storage servers. This is how client TransactionMetrics look like at 1.42 million qps with 8 proxies and 320 clients:<br>\n<code>&lt;Event Severity=\"10\" Time=\"1549044358.928279\" Type=\"TransactionMetrics\" ID=\"0000000000000000\" ReadVersions=\"284189625\" LogicalUncachedReads=\"284189625\" PhysicalReadRequests=\"284189584\" CommittedMutations=\"0\" CommittedMutationBytes=\"0\" CommitStarted=\"0\" CommitCompleted=\"0\" TooOld=\"0\" FutureVersions=\"0\" NotCommitted=\"0\" MaybeCommitted=\"0\" ResourceConstrained=\"0\" TransactionBatcherReadVersionRequestsSent=\"14668992\" TransactionBatcherMaxBatchSizeReached=\"13170029\" MeanLatency=\"0\" MedianLatency=\"0\" Latency90=\"0\" Latency98=\"0\" MaxLatency=\"0\" MeanRowReadLatency=\"0.00274302\" MedianRowReadLatency=\"0.00192499\" MaxRowReadLatency=\"0.0401535\" MeanGRVLatency=\"0.0400555\" MedianGRVLatency=\"0.0242767\" MaxGRVLatency=\"0.193665\" MeanCommitLatency=\"0\" MedianCommitLatency=\"0\" MaxCommitLatency=\"0\" MeanMutationsPerCommit=\"0\" MedianMutationsPerCommit=\"0\" MaxMutationsPerCommit=\"0\" MeanBytesPerCommit=\"0\" MedianBytesPerCommit=\"0\" MaxBytesPerCommit=\"0\" GRVBatchTimeMean=\"0.00431965\" GRVBatchTimeMedian=\"0.005\" GRVBatchTimeMax=\"0.005\" GRVBatchReplyLatenciesMean=\"0.0384088\" GRVBatchReplyLatenciesMedian=\"0.0205247\" GRVBatchReplyLatenciesMax=\"0.193665\" Machine=\"10.58.120.56:3258\" LogGroup=\"default\" /&gt;</code></p>\n<p>Note that we have added more metrics to the fdbclient better understand the client batching behavior. GRVBatchTime is the target batchTime of the client, which seems to max out at 5ms, while GRVBatchReply is the time to get a response from the proxies, which median was 20ms and mean was 38ms. MeanGRVLatency is about 40ms (roughly the sum of GRVBatchTimeMean / 2 + GRVBatchReplyLatenciesMean as expected). We tried varying number of proxies but this does not seem to have changed the GRV latencies.</p>\n<p>We reduced the number of clients from 320 to 160 and latencies did went back to normal at 1.4 million total rps. <code>&lt;Event Severity=\"10\" Time=\"1549060475.756485\" Type=\"TransactionMetrics\" ID=\"0000000000000000\" ReadVersions=\"3919839\" LogicalUncachedReads=\"3919839\" PhysicalReadRequests=\"3919725\" CommittedMutations=\"0\" CommittedMutationBytes=\"0\" CommitStarted=\"0\" CommitCompleted=\"0\" TooOld=\"0\" FutureVersions=\"0\" NotCommitted=\"0\" MaybeCommitted=\"0\" ResourceConstrained=\"0\" TransactionBatcherReadVersionRequestsSent=\"216126\" TransactionBatcherMaxBatchSizeReached=\"121876\" MeanLatency=\"0\" MedianLatency=\"0\" Latency90=\"0\" Latency98=\"0\" MaxLatency=\"0\" MeanRowReadLatency=\"0.00101261\" MedianRowReadLatency=\"0.000856161\" MaxRowReadLatency=\"0.00865197\" MeanGRVLatency=\"0.00417926\" MedianGRVLatency=\"0.00385022\" MaxGRVLatency=\"0.0224671\" MeanCommitLatency=\"0\" MedianCommitLatency=\"0\" MaxCommitLatency=\"0\" MeanMutationsPerCommit=\"0\" MedianMutationsPerCommit=\"0\" MaxMutationsPerCommit=\"0\" MeanBytesPerCommit=\"0\" MedianBytesPerCommit=\"0\" MaxBytesPerCommit=\"0\" GRVBatchTimeMean=\"0.00187918\" GRVBatchTimeMedian=\"0.00172091\" GRVBatchTimeMax=\"0.005\" GRVBatchReplyLatenciesMean=\"0.00383643\" GRVBatchReplyLatenciesMedian=\"0.00326872\" GRVBatchReplyLatenciesMax=\"0.0223789\" Machine=\"10.58.121.24:25861\" LogGroup=\"default\" /&gt;</code></p>\n<p>However, as we scaled the rps per client further, we did hit another inflection point at 1.8 million qps. Here is a fdb client TransactionMetrics sample:<br>\n<code>&lt;Event Severity=\"10\" Time=\"1549063033.139217\" Type=\"TransactionMetrics\" ID=\"0000000000000000\" ReadVersions=\"8814201\" LogicalUncachedReads=\"8814201\" PhysicalReadRequests=\"8813119\" CommittedMutations=\"0\" CommittedMutationBytes=\"0\" CommitStarted=\"0\" CommitCompleted=\"0\" TooOld=\"0\" FutureVersions=\"0\" NotCommitted=\"0\" MaybeCommitted=\"0\" ResourceConstrained=\"0\" TransactionBatcherReadVersionRequestsSent=\"450788\" TransactionBatcherMaxBatchSizeReached=\"399161\" MeanLatency=\"0\" MedianLatency=\"0\" Latency90=\"0\" Latency98=\"0\" MaxLatency=\"0\" MeanRowReadLatency=\"0.00156971\" MedianRowReadLatency=\"0.00153208\" MaxRowReadLatency=\"0.0099442\" MeanGRVLatency=\"0.0407064\" MedianGRVLatency=\"0.0392284\" MaxGRVLatency=\"0.122648\" MeanCommitLatency=\"0\" MedianCommitLatency=\"0\" MaxCommitLatency=\"0\" MeanMutationsPerCommit=\"0\" MedianMutationsPerCommit=\"0\" MaxMutationsPerCommit=\"0\" MeanBytesPerCommit=\"0\" MedianBytesPerCommit=\"0\" MaxBytesPerCommit=\"0\" GRVBatchTimeMean=\"0.00440744\" GRVBatchTimeMedian=\"0.005\" GRVBatchTimeMax=\"0.005\" GRVBatchReplyLatenciesMean=\"0.0411822\" GRVBatchReplyLatenciesMedian=\"0.0399389\" GRVBatchReplyLatenciesMax=\"0.123384\" Machine=\"10.58.120.56:2754\" LogGroup=\"default\" /&gt;</code></p>\n<p>Batch times are maxing out 5ms (which seem to be a configurable knob), but MeanGRVLatency is over 40ms. We are reaching the max batch size (configured to 20 in fdbclient/Knobs.cpp) that is forcing the client to send requests to the proxy more often. Again, we tried to vary the number of proxies to 2, 4, 8, 12, 16, 20 but it did not seem to have helped (which somewhat makes sense given that every single proxy is involved in computing the live read version). Rate limiter does not seem to be kicking in. Given that read latencies seem low and storage server CPU and IO seem underutilized, we don\u2019t believe we are hitting any limits there. As far as we understand, number of tlogs and resolvers should not matter for computing live read version and we are running read-only workload on a cluster that has not done writes in few days.</p>\n<p>Couple of Questions:</p>\n<ol>\n<li>What is the upper bound of foundationdb clients that can be used and why?</li>\n<li>Any idea how we can scale the number of reads further by reconfiguring the cluster and throwing hardware at the problem without changing any knobs? Or is the upper bound of transactions independent of number of stateless servers?</li>\n<li>Are there any downsides of increasing MAX_BATCH_SIZE in fdbclient/Knobs.cpp to something larger than 20? Any reason why this value was chosen?</li>\n</ol>\n<p>Setup:<br>\n160 clients<br>\n2 - 20 proxies, 2 resolvers, 16 tlogs - 12GB RAM each. Intel\u00ae Xeon\u00ae CPU E5-2620 v4 @ 2.10GHz.<br>\n416 storage servers total - 16 RAM each. Intel\u00ae Xeon\u00ae CPU E5-2630 v4 @ 2.20GHz.<br>\nAll servers in the cluster have round trip time in the range of 0.1-1ms.</p>\n<p>We use development version of FDB at f418a85390734373b74f022ae6a61bed23eb92ee.</p>\n<p>Why we believe rate keeper is not kicking in:<br>\n\u201cperformance_limited_by\u201d : {<br>\n\u201cdescription\u201d : \u201cThe database is not being saturated by the workload.\u201d,<br>\n\u201cname\u201d : \u201cworkload\u201d,<br>\n\u201creason_id\u201d : 2<br>\n},</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 21,
        "updated_at": "2019-02-02T13:27:00.223Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 1833,
        "reads": 182,
        "readers_count": 181,
        "score": 9223.4,
        "yours": false,
        "topic_id": 1108,
        "topic_slug": "how-to-scale-foundation-db-reads",
        "display_username": "Preslav Le",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 5,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://forums.foundationdb.org/t/grv-throughput-saturates-at-400k-per-second/2550",
            "internal": true,
            "reflection": true,
            "title": "GRV throughput saturates at 400K per second",
            "clicks": 4
          },
          {
            "url": "https://forums.foundationdb.org/t/process-class-and-machine-sharing-deployment-questions/1600/12",
            "internal": true,
            "reflection": true,
            "title": "Process class and machine sharing deployment questions",
            "clicks": 1
          }
        ],
        "read": true,
        "user_title": "",
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 504,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/how-to-scale-foundation-db-reads/1108/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 3262,
        "name": "Steve Atherton",
        "username": "SteavedHams",
        "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png",
        "created_at": "2019-02-03T09:40:48.382Z",
        "cooked": "<p>Do you absolutely need each individual point read to get a new read version from the cluster?  In other words, do you require that each point read be able to see the latest committed version as of the start of the point read\u2019s transaction start?</p>\n<p>If the answer is no, then getting more read ops/sec is simple.  Each client can save a recent read version obtained from transaction.getReadVersion() and reuse it in new transactions for some short time period (150ms?) by calling transaction.setVersion().  This avoids the GRV latency entirely for the transactions that use the cached version.</p>\n<p>Obviously you could also batch multiple reads into the same transactions, but I did not suggest this because I assume (in a real application) that some of these transactions are going to decide to do writes based on what they\u2019ve read so it would be messy to have unrelated reads in the same transaction.</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 21,
        "updated_at": "2019-02-03T09:43:26.932Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 5,
        "reads": 161,
        "readers_count": 160,
        "score": 77.2,
        "yours": false,
        "topic_id": 1108,
        "topic_slug": "how-to-scale-foundation-db-reads",
        "display_username": "Steve Atherton",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": "",
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 7,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/how-to-scale-foundation-db-reads/1108/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3263,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2019-02-03T14:08:07.656Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"SteavedHams\" data-post=\"2\" data-topic=\"1108\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/steavedhams/48/18_2.png\" class=\"avatar\"> SteavedHams:</div>\n<blockquote>\n<p>Obviously you could also batch multiple reads into the same transactions, but I did not suggest this because I assume (in a real application) that some of these transactions are going to decide to do writes based on what they\u2019ve read so it would be messy to have unrelated reads in the same transaction.</p>\n</blockquote>\n</aside>\n<p>This would usually be my first suggestion when trying to measure how many reads a cluster can do and the latency of reads \u2013 namely to do multiple reads per transaction. If it really is the case that you need one read per transaction, then you could consider other options.</p>\n<p>Caching read versions works too, but then you are complicating matters a bit with having to store read versions. If you are doing any writes, then you also must be ok with reading stale data, potentially increasing the rate of conflicts, and maybe also getting a suboptimal ratekeeper experience.</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 21,
        "updated_at": "2019-02-03T14:08:07.656Z",
        "reply_count": 0,
        "reply_to_post_number": 2,
        "quote_count": 1,
        "incoming_link_count": 8,
        "reads": 164,
        "readers_count": 163,
        "score": 72.8,
        "yours": false,
        "topic_id": 1108,
        "topic_slug": "how-to-scale-foundation-db-reads",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/how-to-scale-foundation-db-reads/1108/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3264,
        "name": "Alex Miller",
        "username": "alexmiller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "created_at": "2019-02-04T09:43:12.958Z",
        "cooked": "<p>I\u2019m assuming that what you\u2019re doing here is intentionally trying to determine what\u2019s the maximum number of linearizable point reads that you can do.  Unlike many other databases, the first point read in a transaction is significantly more expensive than the second due to the implicit GRV call, and when there isn\u2019t a second call, it\u2019s just a benchmark of GRVs as you\u2019ve discovered.  In that case, you would need to try to get as much GRV throughput as possible, but admittedly, FDB isn\u2019t great at this.  If this workload is an accurate model of your production workload, then this is normally when I recommend anything that does partitioned quorums, e.g. Cassandra, as a better fit.</p>\n<p>If what you\u2019re trying to do is benchmark \u201cmy transactions do a lot of point reads, how does the throughput on that look?\u201d, then just doing many point reads per transaction (as AJ recommends), or re-using read versions (as Steve recommends) are great directions to go.</p>\n<p>EDIT: It\u2019s possibly worth noting that on read-only transactions, <code>fdb_transaction_commit</code> is a no-op.</p>\n<aside class=\"quote no-group\" data-username=\"preslavle\" data-post=\"1\" data-topic=\"1108\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/p/9de0a6/48.png\" class=\"avatar\"> preslavle:</div>\n<blockquote>\n<ul>\n<li>What is the upper bound of foundationdb clients that can be used and why?</li>\n</ul>\n</blockquote>\n</aside>\n<p>Upper bound of clients? Or upper bound of clients that are sitting in a tight loop issuing GetReadVersions requests?</p>\n<p>I think the overall upper bound on clients is somewhere around 10k \u00b15k right now, at which point regardless of your configuration, one of {coordinators, cluster controller} will fall over due to trying to heartbeat so many connections.  (There is actually a <a href=\"https://github.com/apple/foundationdb/pull/1059\">PR</a> open right now that should improve this.)</p>\n<p>For the latter case, I don\u2019t think we have a performance test that does that, which you might have discovered.</p>\n<aside class=\"quote no-group\" data-username=\"preslavle\" data-post=\"1\" data-topic=\"1108\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/p/9de0a6/48.png\" class=\"avatar\"> preslavle:</div>\n<blockquote>\n<ul>\n<li>Any idea how we can scale the number of reads further by reconfiguring the cluster and throwing hardware at the problem without changing any knobs? Or is the upper bound of transactions independent of number of stateless servers?</li>\n</ul>\n</blockquote>\n</aside>\n<p>If I wanted to benchmarket GRV throughput, I\u2019d\u2026</p>\n<ul>\n<li>Find a machine with a fat NIC and a lot of cores</li>\n<li>Run all my proxies on one machine to remove the network latency between them.</li>\n<li>Set <code>CAUSAL_READ_RISKY</code> on all my transactions.</li>\n</ul>\n<p>Each proxy needs to talk to all other proxies to calculate the read version (and a few TLogs if you don\u2019t let us break causal consistency under faults via <code>CAUSAL_READ_RISKY</code>), so you\u2019d want to minimize their latency.  This \u2018everyone talks to everyone\u2019 behavior does mean GRV throughput doesn\u2019t scale up linearly with proxies. You\u2019re very unlikely to max out the bandwidth on one machine with just GRV requests, and you\u2019d have to start from 1 and increment until you find your optimal number to handle as many requests as possible but not cause too much extra communication.</p>\n<p>This would not be an advisable setup to run in production though.  It\u2019s the exact opposite of how you\u2019d try to set up a cluster for a write bandwidth test.  Every commit you do would need to flow into and out of that one machine.  Commits, having actual data, will stress your network bandwidth much sooner.  We generally don\u2019t recommend using <code>CAUSAL_READ_RISKY</code> by default, and not using it would require sending all requests across the network to all your transaction logs, likely defeating some of the benefit of gathering all your proxies on one machine.</p>\n<aside class=\"quote no-group\" data-username=\"preslavle\" data-post=\"1\" data-topic=\"1108\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/p/9de0a6/48.png\" class=\"avatar\"> preslavle:</div>\n<blockquote>\n<ol>\n<li>Are there any downsides of increasing MAX_BATCH_SIZE in fdbclient/Knobs.cpp to something larger than 20? Any reason why this value was chosen?</li>\n</ol>\n</blockquote>\n</aside>\n<p>I can\u2019t think of any.  Increasing that sounds like a solid improvement to your benchmark.</p>\n<p>Adding knob modifications to the benchmarketing above, just crank up all the batching done on both the client and the proxies.</p>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 21,
        "updated_at": "2019-02-04T19:35:32.257Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 1,
        "incoming_link_count": 56,
        "reads": 166,
        "readers_count": 165,
        "score": 318.2,
        "yours": false,
        "topic_id": 1108,
        "topic_slug": "how-to-scale-foundation-db-reads",
        "display_username": "Alex Miller",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/apple/foundationdb/pull/1059",
            "internal": false,
            "reflection": false,
            "title": "Monitor leader only when proxies are unknown or any dies by vishesh \u00b7 Pull Request #1059 \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 24
          },
          {
            "url": "https://forums.foundationdb.org/t/foundationdb-cluster-setup/1641/9",
            "internal": true,
            "reflection": true,
            "title": "FoundationDB cluster setup",
            "clicks": 1
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 13,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/how-to-scale-foundation-db-reads/1108/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3294,
        "name": "Preslav Le",
        "username": "preslavle",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/p/9de0a6/{size}.png",
        "created_at": "2019-02-06T18:47:29.683Z",
        "cooked": "<p>Thanks all for the replies! Yes, we are doing this intentionally and we are trying to understand the scaling limitations of a single foundationdb cluster. As discussed there is an inherited maximum linearizable point reads you can do regardless of size of the cluster.</p>\n<p>We could do some transaction reuse on top of what fdbclient already does but our thinking was that fdbclient/proxy should have robust logic for tuning the batching size already so we digged a bit deeper to try to understand how it works.</p>\n<p>We tried increasing fdbclient/Knobs.cpp MAX_BATCH_SIZE from 20 to 100 to see if this will have any noticeable effect. It did help to only to limited extent and GRV latencies do collapse again at about 2 million rps. We tried uncommenting the code here (and modify it to log only once every 5 seconds) thttps://github.com/apple/foundationdb/blob/master/fdbserver/MasterProxyServer.actor.cpp#L1133 and it does seem from proxy perspective there is no batching happening. It is almost always doing a new live read version computation for single request from the client (queue size is always 0 or 1). Proxy believes its processing time is 0.5ms while the client observes GRV batch reply times of tens of ms. Here are is a sample from the proxy.<br>\n<code>&lt;Event Severity=\"10\" Time=\"1549476776.412145\" Type=\"GRVBatch\" ID=\"6c6259b8ac3827df\" Elapsed=\"0.00059104\" NTransactionToStart=\"10020\" TransactionRate=\"1.60714e+10\" TransactionQueueSize=\"0\" NumTransactionsStarted=\"220\" NumSystemTransactionsStarted=\"0\" NumNonSystemTransactionsStarted=\"220\" TransactionBudget=\"20\" LastLeftToStart=\"9900\" TransactionCount=\"3971886172\" TxnStartIn=\"206636\" TxnStartOut=\"206745\" TxtStartBatch=\"1521.97\" GRVBatchTime=\"0.000596639\" TransactionQueueEmptyCount=\"70921627\" TransactionQueueNonEmptyCount=\"336\" Machine=\"10.50.46.151:5000\" LogGroup=\"default\" Roles=\"MP\" /&gt;</code></p>\n<p>At the same time clients observe very high GRV batch reply latencies.<br>\n<code>&lt;Event Severity=\"10\" Time=\"1549476963.723564\" Type=\"TransactionMetrics\" ID=\"0000000000000000\" ReadVersions=\"5721711\" LogicalUncachedReads=\"5721711\" PhysicalReadRequests=\"5721587\" CommittedMutations=\"0\" CommittedMutationBytes=\"0\" CommitStarted=\"0\" CommitCompleted=\"0\" TooOld=\"0\" FutureVersions=\"0\" NotCommitted=\"0\" MaybeCommitted=\"0\" ResourceConstrained=\"0\" TransactionBatcherReadVersionRequestsSent=\"67743\" TransactionBatcherMaxBatchSizeReached=\"40495\" MeanLatency=\"0\" MedianLatency=\"0\" Latency90=\"0\" Latency98=\"0\" MaxLatency=\"0\" MeanRowReadLatency=\"0.00385984\" MedianRowReadLatency=\"0.00353456\" MaxRowReadLatency=\"0.0199761\" MeanGRVLatency=\"0.0749949\" MedianGRVLatency=\"0.0569313\" MaxGRVLatency=\"0.222431\" MeanCommitLatency=\"0\" MedianCommitLatency=\"0\" MaxCommitLatency=\"0\" MeanMutationsPerCommit=\"0\" MedianMutationsPerCommit=\"0\" MaxMutationsPerCommit=\"0\" MeanBytesPerCommit=\"0\" MedianBytesPerCommit=\"0\" MaxBytesPerCommit=\"0\" GRVBatchTimeMean=\"0.00454283\" GRVBatchTimeMedian=\"0.005\" GRVBatchTimeMax=\"0.005\" GRVBatchReplyLatenciesMean=\"0.0696152\" GRVBatchReplyLatenciesMedian=\"0.0476301\" GRVBatchReplyLatenciesMax=\"0.222431\" Machine=\"10.58.252.48:30800\" LogGroup=\"default\" /&gt;</code></p>\n<p>Any idea where the discrepancies might come from? Can this be somewhere in FLOW or network layer where responses are getting queued or delayed?</p>\n<p>Here are some other proxy metrics for reference:<br>\n<code>&lt;Event Severity=\"10\" Time=\"1549476736.334286\" Type=\"NetworkMetrics\" ID=\"0000000000000000\" CantSleep=\"0\" WontSleep=\"6\" Yields=\"6\" YieldCalls=\"18\" YieldCallsTrue=\"0\" SlowTaskSignals=\"0\" YieldBigStack=\"0\" RunLoopIterations=\"107439\" TimersExecuted=\"189003\" TasksExecuted=\"555124\" ASIOEventsProcessed=\"316113\" ReadCalls=\"176174\" WriteCalls=\"179995\" ReadProbes=\"176174\" WriteProbes=\"0\" PacketsRead=\"182697\" PacketsGenerated=\"182693\" WouldBlock=\"0\" SlowTask1M=\"2\" SlowTask2M=\"2\" SlowTask4M=\"1\" S2Pri1=\"2.50657e-07\" S2Pri2050=\"2.50657e-07\" S2Pri3050=\"2.50657e-07\" S2Pri4050=\"2.43155e-07\" S2Pri4950=\"2.43155e-07\" S2Pri5050=\"2.42905e-07\" S2Pri7050=\"4.6725e-08\" S2Pri8050=\"4.6725e-08\" Machine=\"10.50.46.151:5000\" LogGroup=\"default\" Roles=\"MP\" /&gt; &lt;Event Severity=\"10\" Time=\"1549476736.334286\" Type=\"ProcessMetrics\" ID=\"0000000000000000\" Elapsed=\"5.00004\" CPUSeconds=\"3.044\" MainThreadCPUSeconds=\"3.044\" UptimeSeconds=\"63983.4\" Memory=\"10384719872\" ResidentMemory=\"10271088640\" UnusedAllocatedMemory=\"7503478784\" MbpsSent=\"12.6714\" MbpsReceived=\"10.9247\" DiskTotalBytes=\"982914220032\" DiskFreeBytes=\"903126876160\" DiskQueueDepth=\"0\" DiskIdleSeconds=\"4.42804\" DiskReads=\"0\" DiskWrites=\"255\" DiskReadsCount=\"41200\" DiskWritesCount=\"7585834\" DiskWriteSectors=\"4480\" DiskReadSectors=\"0\" FileWrites=\"0\" FileReads=\"0\" CacheReadBytes=\"0\" CacheFinds=\"0\" CacheWritesBlocked=\"0\" CacheReadsBlocked=\"0\" CachePageReadsMerged=\"0\" CacheWrites=\"0\" CacheReads=\"0\" ZoneID=\"b1b2d80aa10a68ae469f3494237a48df\" MachineID=\"b1b2d80aa10a68ae469f3494237a48df\" AIOSubmitCount=\"0\" AIOCollectCount=\"0\" AIOSubmitLag=\"0\" AIODiskStall=\"0\" CurrentConnections=\"160\" ConnectionsEstablished=\"0\" ConnectionsClosed=\"0\" ConnectionErrors=\"0\" Machine=\"10.50.46.151:5000\" LogGroup=\"default\" Roles=\"MP\" TrackLatestType=\"Original\" /&gt; &lt;Event Severity=\"10\" Time=\"1549476736.334286\" Type=\"MachineMetrics\" ID=\"0000000000000000\" Elapsed=\"5.00004\" MbpsSent=\"68.6815\" MbpsReceived=\"68.2728\" OutSegs=\"453063\" RetransSegs=\"1\" CPUSeconds=\"0.356362\" TotalMemory=\"67425738752\" CommittedMemory=\"46388178944\" AvailableMemory=\"21037559808\" ZoneID=\"b1b2d80aa10a68ae469f3494237a48df\" MachineID=\"b1b2d80aa10a68ae469f3494237a48df\" Machine=\"10.50.46.151:5000\" LogGroup=\"default\" Roles=\"MP\" TrackLatestType=\"Original\" /&gt; &lt;Event Severity=\"10\" Time=\"1549476739.893415\" Type=\"ProxyMetrics\" ID=\"6c6259b8ac3827df\" Elapsed=\"5.00006\" TxnStartIn=\"207412 246.742 3964283538\" TxnStartOut=\"207452 334.648 3964283300\" TxnStartBatch=\"1524.98 2.11975 88408118\" TxnSystemPriorityStartIn=\"0 0 5\" TxnSystemPriorityStartOut=\"0 0 5\" TxnBatchPriorityStartIn=\"0 0 0\" TxnBatchPriorityStartOut=\"0 0 0\" TxnDefaultPriorityStartIn=\"207412 246.742 3964283533\" TxnDefaultPriorityStartOut=\"207452 334.648 3964283295\" TxnCommitIn=\"0 0 36347506\" TxnCommitVersionAssigned=\"0 0 36347506\" TxnCommitResolving=\"0 0 36347506\" TxnCommitResolved=\"0 0 36347506\" TxnCommitOut=\"0 0 36347506\" TxnCommitOutSuccess=\"0 0 35961944\" TxnConflicts=\"0 0 385562\" CommitBatchIn=\"1.39998 2.06359 26336963\" CommitBatchOut=\"1.39998 2.06536 26336963\" MutationBytes=\"0 0 6612540859\" Mutations=\"0 0 48747200\" ConflictRanges=\"0 0 129504684\" LastAssignedCommitVersion=\"1203110550331\" Version=\"1203110550331\" CommittedVersion=\"1203110550331\" CommitBatchesMemBytesCount=\"0\" Machine=\"10.50.46.151:5000\" LogGroup=\"default\" Roles=\"MP\" TrackLatestType=\"Original\" /&gt; &lt;Event Severity=\"10\" Time=\"1549476741.334293\" Type=\"MachineLoadDetail\" ID=\"0000000000000000\" User=\"21762913\" Nice=\"502508\" System=\"20518466\" Idle=\"1526672512\" IOWait=\"1512340\" IRQ=\"0\" SoftIRQ=\"10121770\" Steal=\"0\" Guest=\"0\" Machine=\"10.50.46.151:5000\" LogGroup=\"default\" Roles=\"MP\" /&gt;</code></p>",
        "post_number": 5,
        "post_type": 1,
        "posts_count": 21,
        "updated_at": "2019-02-06T18:50:27.969Z",
        "reply_count": 2,
        "reply_to_post_number": 4,
        "quote_count": 0,
        "incoming_link_count": 9,
        "reads": 139,
        "readers_count": 138,
        "score": 82.8,
        "yours": false,
        "topic_id": 1108,
        "topic_slug": "how-to-scale-foundation-db-reads",
        "display_username": "Preslav Le",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": "",
        "reply_to_user": {
          "id": 13,
          "username": "alexmiller",
          "name": "Alex Miller",
          "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 504,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/how-to-scale-foundation-db-reads/1108/5",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3295,
        "name": "Alex Miller",
        "username": "alexmiller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "created_at": "2019-02-06T19:37:16.507Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"preslavle\" data-post=\"5\" data-topic=\"1108\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/p/9de0a6/48.png\" class=\"avatar\"> preslavle:</div>\n<blockquote>\n<p>We tried uncommenting the code here (and modify it to log only once every 5 seconds) thttps://github.com/apple/foundationdb/blob/master/fdbserver/MasterProxyServer.actor.cpp#L1133 and it does seem from proxy perspective there is no batching happening. It is almost always doing a new live read version computation for single request from the client (queue size is always 0 or 1).</p>\n</blockquote>\n</aside>\n<p>Yeah, that sounds\u2026 not right.  I\u2019ve typed out three half-responses to you, but each time I check my theory against your TraceEvent, it doesn\u2019t check out.  So I don\u2019t have an immediate answer for you.</p>\n<p>I\u2019ll ask around today in case someone else is more familiar with proxy code, but it\u2019s probably about time for us to write a GRV performance test\u2026</p>",
        "post_number": 6,
        "post_type": 1,
        "posts_count": 21,
        "updated_at": "2019-02-06T19:37:16.507Z",
        "reply_count": 0,
        "reply_to_post_number": 5,
        "quote_count": 1,
        "incoming_link_count": 1,
        "reads": 118,
        "readers_count": 117,
        "score": 43.6,
        "yours": false,
        "topic_id": 1108,
        "topic_slug": "how-to-scale-foundation-db-reads",
        "display_username": "Alex Miller",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 13,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/how-to-scale-foundation-db-reads/1108/6",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3296,
        "name": "Christophe Chevalier",
        "username": "KrzysFR",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "created_at": "2019-02-06T22:03:02.101Z",
        "cooked": "<p>Stupid questions, but are any part of your clients or servers running on Windows? I\u2019ve had random latency in the order of 10-15ms on the Windows implementation of fdb before\u2026</p>",
        "post_number": 7,
        "post_type": 1,
        "posts_count": 21,
        "updated_at": "2019-02-06T22:03:02.101Z",
        "reply_count": 1,
        "reply_to_post_number": 5,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 121,
        "readers_count": 120,
        "score": 29.2,
        "yours": false,
        "topic_id": 1108,
        "topic_slug": "how-to-scale-foundation-db-reads",
        "display_username": "Christophe Chevalier",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 504,
          "username": "preslavle",
          "name": "Preslav Le",
          "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/p/9de0a6/{size}.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 53,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/how-to-scale-foundation-db-reads/1108/7",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3297,
        "name": "Preslav Le",
        "username": "preslavle",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/p/9de0a6/{size}.png",
        "created_at": "2019-02-06T22:03:57.807Z",
        "cooked": "<p>It is all linux. Ubuntu-16.04.</p>",
        "post_number": 8,
        "post_type": 1,
        "posts_count": 21,
        "updated_at": "2019-02-06T22:03:57.807Z",
        "reply_count": 0,
        "reply_to_post_number": 7,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 124,
        "readers_count": 123,
        "score": 24.8,
        "yours": false,
        "topic_id": 1108,
        "topic_slug": "how-to-scale-foundation-db-reads",
        "display_username": "Preslav Le",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": "",
        "reply_to_user": {
          "id": 53,
          "username": "KrzysFR",
          "name": "Christophe Chevalier",
          "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 504,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/how-to-scale-foundation-db-reads/1108/8",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3298,
        "name": "Christophe Chevalier",
        "username": "KrzysFR",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "created_at": "2019-02-06T22:04:42.076Z",
        "cooked": "<p>Ok then that\u2019s not linked to that. These random spikes went away when I tested on linux.</p>",
        "post_number": 9,
        "post_type": 1,
        "posts_count": 21,
        "updated_at": "2019-02-06T22:04:42.076Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 122,
        "readers_count": 121,
        "score": 24.4,
        "yours": false,
        "topic_id": 1108,
        "topic_slug": "how-to-scale-foundation-db-reads",
        "display_username": "Christophe Chevalier",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 53,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/how-to-scale-foundation-db-reads/1108/9",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3299,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2019-02-06T23:09:15.241Z",
        "cooked": "<p>What do the ProcessMetrics on the client look like? In particular, is it possible that then network thread is being saturated? If so, then that could be a source of latency.</p>\n<p>Something else you could look for would be SlowTasks on any of the involved processes (client, proxies, logs).</p>",
        "post_number": 10,
        "post_type": 1,
        "posts_count": 21,
        "updated_at": "2019-02-06T23:09:15.241Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 2,
        "reads": 119,
        "readers_count": 118,
        "score": 38.8,
        "yours": false,
        "topic_id": 1108,
        "topic_slug": "how-to-scale-foundation-db-reads",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/how-to-scale-foundation-db-reads/1108/10",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3300,
        "name": "Preslav Le",
        "username": "preslavle",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/p/9de0a6/{size}.png",
        "created_at": "2019-02-06T23:14:20.283Z",
        "cooked": "<p>Yeah, digging into this further, some bottleneck on the client side would make sense since GRV latencies client side do seem to regress as we increase the number of reads although the total number of GRV requests from client to proxy does not change. We are looking at respective metrics and will update here.</p>",
        "post_number": 11,
        "post_type": 1,
        "posts_count": 21,
        "updated_at": "2019-02-06T23:14:58.960Z",
        "reply_count": 1,
        "reply_to_post_number": 10,
        "quote_count": 0,
        "incoming_link_count": 2,
        "reads": 117,
        "readers_count": 116,
        "score": 38.4,
        "yours": false,
        "topic_id": 1108,
        "topic_slug": "how-to-scale-foundation-db-reads",
        "display_username": "Preslav Le",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": "",
        "reply_to_user": {
          "id": 12,
          "username": "ajbeamon",
          "name": "A.J. Beamon",
          "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 504,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/how-to-scale-foundation-db-reads/1108/11",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3301,
        "name": "Preslav Le",
        "username": "preslavle",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/p/9de0a6/{size}.png",
        "created_at": "2019-02-06T23:42:33.656Z",
        "cooked": "<p>Here are the process metrics from the client at health state (500k qps total, 3.1k per client)<br>\n<code>&lt;Event Severity=\"10\" Time=\"1549495001.367166\" Type=\"NetworkMetrics\" ID=\"0000000000000000\" CantSleep=\"2930\" WontSleep=\"1\" Yields=\"2\" YieldCalls=\"0\" YieldCallsTrue=\"0\" SlowTaskSignals=\"0\" YieldBigStack=\"0\" RunLoopIterations=\"76599\" TimersExecuted=\"40494\" TasksExecuted=\"157065\" ASIOEventsProcessed=\"125925\" ReadCalls=\"20387\" WriteCalls=\"20385\" ReadProbes=\"20387\" WriteProbes=\"0\" PacketsRead=\"20424\" PacketsGenerated=\"20420\" WouldBlock=\"0\" SlowTask8M=\"1\" S2Pri1=\"2.62143e-06\" S2Pri2050=\"2.62143e-06\" S2Pri3050=\"2.62143ffe-06\" S2Pri4050=\"2.62143e-06\" S2Pri4950=\"2.62143e-06\" S2Pri5050=\"2.60932e-06\" S2Pri7050=\"1.48976e-06\" S2Pri8050=\"4.00047e-09\" S2Pri10050=\"1.0661e-09\" Machine=\"10.58.121.24:12310\" LogGroup=\"default\" /&gt; &lt;Event Severity=\"10\" Time=\"1549495001.367166\" Type=\"ProcessMetrics\" ID=\"0000000000000000\" Elapsed=\"5.00001\" CPUSeconds=\"2.87021\" MainThreadCPUSeconds=\"2.14769\" UptimeSeconds=\"860.003\" Memory=\"416571392\" ResidentMemory=\"59912192\" UnusedAllocatedMemory=\"524288\" MbpsSent=\"2.2351\" MbpsReceived=\"3.24368\" DiskTotalBytes=\"0\" DiskFreeBytes=\"0\" DiskQueueDepth=\"0\" DiskIdleSeconds=\"0\" DiskReads=\"0\" DiskWrites=\"0\" DiskReadsCount=\"0\" DiskWritesCount=\"0\" DiskWriteSectors=\"0\" DiskReadSectors=\"0\" FileWrites=\"0\" FileReads=\"0\" CacheReadBytes=\"0\" CacheFinds=\"0\" CacheWritesBlocked=\"0\" CacheReadsBlocked=\"0\" CachePageReadsMerged=\"0\" CacheWrites=\"0\" CacheReads=\"0\" ZoneID=\"[not set]\" MachineID=\"[not set]\" AIOSubmitCount=\"0\" AIOCollectCount=\"0\" AIOSubmitLag=\"0\" AIODiskStall=\"0\" CurrentConnections=\"425\" ConnectionsEstablished=\"0\" ConnectionsClosed=\"0\" ConnectionErrors=\"0\" Machine=\"10.58.121.24:12310\" LogGroup=\"default\" TrackLatestType=\"Original\" /&gt; &lt;Event Severity=\"10\" Time=\"1549495001.367166\" Type=\"MachineMetrics\" ID=\"0000000000000000\" Elapsed=\"5.00001\" MbpsSent=\"101.448\" MbpsReceived=\"92.5736\" OutSegs=\"620455\" RetransSegs=\"0\" CPUSeconds=\"1.53884\" TotalMemory=\"67479838720\" CommittedMemory=\"6997049344\" AvailableMemory=\"60482789376\" ZoneID=\"[not set]\" MachineID=\"[not set]\" Machine=\"10.58.121.24:12310\" LogGroup=\"default\" TrackLatestType=\"Original\" /&gt; &lt;Event Severity=\"10\" Time=\"1549495001.376438\" Type=\"TransactionMetrics\" ID=\"0000000000000000\" ReadVersions=\"2694260\" LogicalUncachedReads=\"2687277\" PhysicalReadRequests=\"2687277\" CommittedMutations=\"0\" CommittedMutationBytes=\"0\" CommitStarted=\"0\" CommitCompleted=\"0\" TooOld=\"0\" FutureVersions=\"0\" NotCommitted=\"0\" MaybeCommitted=\"0\" ResourceConstrained=\"0\" TransactionBatcherReadVersionRequestsSent=\"23125\" TransactionBatcherMaxBatchSizeReached=\"0\" MeanLatency=\"0\" MedianLatency=\"0\" Latency90=\"0\" Latency98=\"0\" MaxLatency=\"0\" MeanRowReadLatency=\"0.000286058\" MedianRowReadLatency=\"0.000235319\" MaxRowReadLatency=\"0.00270963\" MeanGRVLatency=\"0.00261455\" MedianGRVLatency=\"0.00257373\" MaxGRVLatency=\"0.00393844\" MeanCommitLatency=\"0\" MedianCommitLatency=\"0\" MaxCommitLatency=\"0\" MeanMutationsPerCommit=\"0\" MedianMutationsPerCommit=\"0\" MaxMutationsPerCommit=\"0\" MeanBytesPerCommit=\"0\" MedianBytesPerCommit=\"0\" MaxBytesPerCommit=\"0\" GRVBatchTimeMean=\"0.000972856\" GRVBatchTimeMedian=\"0.000977913\" GRVBatchTimeMax=\"0.0010788\" GRVBatchReplyLatenciesMean=\"0.00193746\" GRVBatchReplyLatenciesMedian=\"0.00183296\" GRVBatchReplyLatenciesMax=\"0.00301933\" Machine=\"10.58.121.24:12310\" LogGroup=\"default\" /&gt; &lt;Event Severity=\"10\" Time=\"1549495006.367175\" Type=\"MachineLoadDetail\" ID=\"0000000000000000\" User=\"687273237\" Nice=\"934901\" System=\"295009870\" Idle=\"2058843655\" IOWait=\"2289794\" IRQ=\"0\" SoftIRQ=\"155368247\" Steal=\"0\" Guest=\"0\" Machine=\"10.58.121.24:12310\" LogGroup=\"default\" /&gt; &lt;Event Severity=\"10\" Time=\"1549495006.367175\" Type=\"MemoryMetrics\" ID=\"0000000000000000\" AllocatedMemory16=\"262144\" ApproximateUnusedMemory16=\"0\" AllocatedMemory32=\"393216\" ApproximateUnusedMemory32=\"131072\" AllocatedMemory64=\"1048576\" ApproximateUnusedMemory64=\"0\" AllocatedMemory128=\"8126464\" ApproximateUnusedMemory128=\"131072\" AllocatedMemory256=\"786432\" ApproximateUnusedMemory256=\"0\" AllocatedMemory512=\"262144\" ApproximateUnusedMemory512=\"0\" AllocatedMemory1024=\"524288\" ApproximateUnusedMemory1024=\"262144\" AllocatedMemory2048=\"0\" ApproximateUnusedMemory2048=\"0\" AllocatedMemory4096=\"1835008\" ApproximateUnusedMemory4096=\"0\" Machine=\"10.58.121.24:12310\" LogGroup=\"default\" /&gt;</code></p>\n<p>Here are the process metrics from the client at non-healthy state (2000k total qps, 12.5k per client)<br>\n<code>&lt;Event Severity=\"10\" Time=\"1549495967.906281\" Type=\"NetworkMetrics\" ID=\"0000000000000000\" CantSleep=\"754\" WontSleep=\"9583\" Yields=\"9585\" YieldCalls=\"0\" YieldCallsTrue=\"0\" SlowTaskSignals=\"0\" YieldBigStack=\"0\" RunLoopIterations=\"16102\" TimersExecuted=\"134738\" TasksExecuted=\"577462\" ASIOEventsProcessed=\"136813\" ReadCalls=\"66380\" WriteCalls=\"66764\" ReadProbes=\"66380\" WriteProbes=\"0\" PacketsRead=\"70946\" PacketsGenerated=\"70948\" WouldBlock=\"0\" SlowTask1M=\"89\" SlowTask2M=\"92\" SlowTask4M=\"19\" SlowTask8M=\"6\" SlowTask16M=\"1\" SlowTask32M=\"1\" S2Pri1=\"30.6195\" S2Pri2050=\"30.6195\" S2Pri3050=\"30.6195\" S2Pri4050=\"30.6195\" S2Pri4950=\"30.6195\" S2Pri5050=\"0.417555\" S2Pri7050=\"0.390901\" S2Pri8050=\"0.00018723\" S2Pri10050=\"9.7441e-09\" Machine=\"10.58.136.34:34355\" LogGroup=\"default\" /&gt; &lt;Event Severity=\"10\" Time=\"1549495967.906281\" Type=\"ProcessMetrics\" ID=\"0000000000000000\" Elapsed=\"5.00033\" CPUSeconds=\"5.94292\" MainThreadCPUSeconds=\"4.17738\" UptimeSeconds=\"395.029\" Memory=\"461516800\" ResidentMemory=\"106426368\" UnusedAllocatedMemory=\"34865152\" MbpsSent=\"8.45999\" MbpsReceived=\"12.7579\" DiskTotalBytes=\"0\" DiskFreeBytes=\"0\" DiskQueueDepth=\"0\" DiskIdleSeconds=\"0\" DiskReads=\"0\" DiskWrites=\"0\" DiskReadsCount=\"0\" DiskWritesCount=\"0\" DiskWriteSectors=\"0\" DiskReadSectors=\"0\" FileWrites=\"0\" FileReads=\"0\" CacheReadBytes=\"0\" CacheFinds=\"0\" CacheWritesBlocked=\"0\" CacheReadsBlocked=\"0\" CachePageReadsMerged=\"0\" CacheWrites=\"0\" CacheReads=\"0\" ZoneID=\"[not set]\" MachineID=\"[not set]\" AIOSubmitCount=\"0\" AIOCollectCount=\"0\" AIOSubmitLag=\"0\" AIODiskStall=\"0\" CurrentConnections=\"425\" ConnectionsEstablished=\"0\" ConnectionsClosed=\"0\" ConnectionErrors=\"0\" Machine=\"10.58.136.34:34355\" LogGroup=\"default\" TrackLatestType=\"Original\" /&gt; &lt;Event Severity=\"10\" Time=\"1549495967.906281\" Type=\"MachineMetrics\" ID=\"0000000000000000\" Elapsed=\"5.00033\" MbpsSent=\"290.851\" MbpsReceived=\"311.339\" OutSegs=\"1515292\" RetransSegs=\"1\" CPUSeconds=\"3.1805\" TotalMemory=\"67479838720\" CommittedMemory=\"7308333056\" AvailableMemory=\"60171505664\" ZoneID=\"[not set]\" MachineID=\"[not set]\" Machine=\"10.58.136.34:34355\" LogGroup=\"default\" TrackLatestType=\"Original\" /&gt; &lt;Event Severity=\"10\" Time=\"1549495971.358711\" Type=\"TransactionMetrics\" ID=\"0000000000000000\" ReadVersions=\"4983126\" LogicalUncachedReads=\"4980266\" PhysicalReadRequests=\"4978992\" CommittedMutations=\"0\" CommittedMutationBytes=\"0\" CommitStarted=\"0\" CommitCompleted=\"0\" TooOld=\"0\" FutureVersions=\"0\" NotCommitted=\"0\" MaybeCommitted=\"0\" ResourceConstrained=\"0\" TransactionBatcherReadVersionRequestsSent=\"10267\" TransactionBatcherMaxBatchSizeReached=\"7286\" MeanLatency=\"0\" MedianLatency=\"0\" Latency90=\"0\" Latency98=\"0\" MaxLatency=\"0\" MeanRowReadLatency=\"0.00137533\" MedianRowReadLatency=\"0.000899792\" MaxRowReadLatency=\"0.0170996\" MeanGRVLatency=\"0.134298\" MedianGRVLatency=\"0.121609\" MaxGRVLatency=\"0.459229\" MeanCommitLatency=\"0\" MedianCommitLatency=\"0\" MaxCommitLatency=\"0\" MeanMutationsPerCommit=\"0\" MedianMutationsPerCommit=\"0\" MaxMutationsPerCommit=\"0\" MeanBytesPerCommit=\"0\" MedianBytesPerCommit=\"0\" MaxBytesPerCommit=\"0\" GRVBatchTimeMean=\"0.00480935\" GRVBatchTimeMedian=\"0.005\" GRVBatchTimeMax=\"0.005\" GRVBatchReplyLatenciesMean=\"0.118248\" GRVBatchReplyLatenciesMedian=\"0.100317\" GRVBatchReplyLatenciesMax=\"0.457898\" Machine=\"10.58.136.34:34355\" LogGroup=\"default\" /&gt; &lt;Event Severity=\"10\" Time=\"1549495972.906609\" Type=\"MachineLoadDetail\" ID=\"0000000000000000\" User=\"613283393\" Nice=\"689132\" System=\"279238315\" Idle=\"1959405876\" IOWait=\"1587405\" IRQ=\"0\" SoftIRQ=\"148393452\" Steal=\"0\" Guest=\"0\" Machine=\"10.58.136.34:34355\" LogGroup=\"default\" /&gt; &lt;Event Severity=\"10\" Time=\"1549495972.906609\" Type=\"MemoryMetrics\" ID=\"0000000000000000\" AllocatedMemory16=\"393216\" ApproximateUnusedMemory16=\"0\" AllocatedMemory32=\"655360\" ApproximateUnusedMemory32=\"262144\" AllocatedMemory64=\"5373952\" ApproximateUnusedMemory64=\"2883584\" AllocatedMemory128=\"14024704\" ApproximateUnusedMemory128=\"4194304\" AllocatedMemory256=\"11796480\" ApproximateUnusedMemory256=\"7864320\" AllocatedMemory512=\"8781824\" ApproximateUnusedMemory512=\"6160384\" AllocatedMemory1024=\"9699328\" ApproximateUnusedMemory1024=\"6291456\" AllocatedMemory2048=\"0\" ApproximateUnusedMemory2048=\"0\" AllocatedMemory4096=\"1835008\" ApproximateUnusedMemory4096=\"0\" Machine=\"10.58.136.34:34355\" LogGroup=\"default\" /&gt;</code></p>\n<p>We see a lot of SlowTask*M in the second sample. Does this mean we are client side network bound? The stats on the machine look good and we are not saturating the NIC but may be we do too many packets per second. We are also going back to more clients to validate.</p>\n<p>Also we notice that the GRV mean and max latency collapse from 3ms to 700ms and 200ms to 15s respectively, while the Row Read latencies on the client mean and median are steady below 1ms and only max increases from 10ms to 200ms. Is there any priority for Row Read requests over GRV requests on the client side that would explain the disproportional effect?</p>",
        "post_number": 12,
        "post_type": 1,
        "posts_count": 21,
        "updated_at": "2019-02-06T23:47:46.112Z",
        "reply_count": 1,
        "reply_to_post_number": 11,
        "quote_count": 0,
        "incoming_link_count": 6,
        "reads": 125,
        "readers_count": 124,
        "score": 60.0,
        "yours": false,
        "topic_id": 1108,
        "topic_slug": "how-to-scale-foundation-db-reads",
        "display_username": "Preslav Le",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": "",
        "reply_to_user": {
          "id": 504,
          "username": "preslavle",
          "name": "Preslav Le",
          "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/p/9de0a6/{size}.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 504,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/how-to-scale-foundation-db-reads/1108/12",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3306,
        "name": "Evan Tschannen",
        "username": "Evan",
        "avatar_template": "/user_avatar/forums.foundationdb.org/evan/{size}/104_2.png",
        "created_at": "2019-02-07T02:30:38.546Z",
        "cooked": "<p>One theory I have about the batching is that the behavior is a result of a priority inversion on the proxies. Could you try swapping the values of TaskProxyGetConsistentReadVersion and \tTaskProxyGetRawCommittedVersion in network.h and let me know if that changes anything?</p>\n<p>(so TaskProxyGetConsistentReadVersion = 8565, and TaskProxyGetRawCommittedVersion = 8500)</p>",
        "post_number": 13,
        "post_type": 1,
        "posts_count": 21,
        "updated_at": "2019-02-07T02:30:38.546Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 3,
        "reads": 108,
        "readers_count": 107,
        "score": 41.6,
        "yours": false,
        "topic_id": 1108,
        "topic_slug": "how-to-scale-foundation-db-reads",
        "display_username": "Evan Tschannen",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": true,
        "admin": false,
        "staff": true,
        "user_id": 54,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/how-to-scale-foundation-db-reads/1108/13",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3310,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2019-02-07T16:46:37.297Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"preslavle\" data-post=\"12\" data-topic=\"1108\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/p/9de0a6/48.png\" class=\"avatar\"> preslavle:</div>\n<blockquote>\n<p>We see a lot of SlowTask*M in the second sample. Does this mean we are client side network bound?</p>\n</blockquote>\n</aside>\n<p>Slow tasks are measured in terms of their duration in clock cycles, so to account for the hundreds of milliseconds you are seeing, you\u2019d probably need them to be at least in the 100s of millions of cycles. Based on the one event that you pasted, it doesn\u2019t look like you are seeing slow tasks quite that high.</p>\n<p>One thing that does stick out to me, though, are the fields named S2PriXXXX. Roughly speaking, these are intended to track how long it\u2019s taking to service tasks at various priorities. They add up the squared durations of the time spent working with higher priority tasks, so large numbers here usually mean that your process is very busy doing work at or above some particular priority. In this case, we see that between 4950 and 5050, there is a substantial change (30.6 vs. 0.4), so tasks at or below the busy priority are likely to experience significant latencies. It looks like parts of the get read version path use priority 5000, so that may explain it.</p>\n<p>Also, based on this one event it doesn\u2019t look like your network thread is completely saturated (I see MainThreadCPUSeconds=4.2 out of 5.0), but it is pretty busy. If you try to drive the same load to the cluster with more clients, do you still run into trouble?</p>",
        "post_number": 14,
        "post_type": 1,
        "posts_count": 21,
        "updated_at": "2019-02-07T16:46:37.297Z",
        "reply_count": 0,
        "reply_to_post_number": 12,
        "quote_count": 1,
        "incoming_link_count": 2,
        "reads": 110,
        "readers_count": 109,
        "score": 32.0,
        "yours": false,
        "topic_id": 1108,
        "topic_slug": "how-to-scale-foundation-db-reads",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/how-to-scale-foundation-db-reads/1108/14",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3313,
        "name": "Preslav Le",
        "username": "preslavle",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/p/9de0a6/{size}.png",
        "created_at": "2019-02-07T18:07:02.185Z",
        "cooked": "<p>Thanks Evan and A.J., for the responses. All that makes sense.</p>\n<p>We switched to reusing transactions to try to find other bottlenecks besides the GRV. What we have observed is that we are bottlenecked by the clients (we can\u2019t do 2 million rps with 160 clients without collapsing latencies). What was confusing was the GRV latency increased even though we do very few of them but reading from storage servers is more steady which is can be explained by it having higher priority. When we double the number of clients and reuse transactions, we were able to get higher throughput so it seems we were client bound although we where not 100% sure why exactly (CPU and network on the machine where looked fine).</p>\n<p>We will probably get back to testing without reusing transactions and varying number of clients later today to confirm if we are bottlenecked by client or proxy server in that scenario, and when we start being bottlenecked by the server, we will try Evan\u2019s fix and update the thread.</p>",
        "post_number": 15,
        "post_type": 1,
        "posts_count": 21,
        "updated_at": "2019-02-07T18:07:42.282Z",
        "reply_count": 0,
        "reply_to_post_number": 13,
        "quote_count": 0,
        "incoming_link_count": 2,
        "reads": 110,
        "readers_count": 109,
        "score": 32.0,
        "yours": false,
        "topic_id": 1108,
        "topic_slug": "how-to-scale-foundation-db-reads",
        "display_username": "Preslav Le",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": "",
        "reply_to_user": {
          "id": 54,
          "username": "Evan",
          "name": "Evan Tschannen",
          "avatar_template": "/user_avatar/forums.foundationdb.org/evan/{size}/104_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 504,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/how-to-scale-foundation-db-reads/1108/15",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3504,
        "name": "Preslav Le",
        "username": "preslavle",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/p/9de0a6/{size}.png",
        "created_at": "2019-02-23T08:24:52.885Z",
        "cooked": "<p>It turned out we were client side limited and adding more clients did increase the throughput. What was very confusing was that although we did very few GRV requests, their latency did skyrocket while reads only degreased slightly. This seems to be because of the relative priority of the two operations as mentioned above. Seems reasonable given FDB approach at slowing down things when obtaining GRV if overloaded but was confusing.</p>\n<p>To reduce any noise, we tried a GRV only benchmark (no actual reads):</p>\n<blockquote>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th>Clients x GRV/s</th>\n<th>p50 Client GRV mean (ms)</th>\n<th>p50 Client GRV Batch time (ms)</th>\n<th>p50 Proxy GRV Batch time (ms)</th>\n<th>Proxy getLiveCommitedVersion/s</th>\n<th>Client GRV requests to Proxy/s</th>\n<th>Client max GRV batch size reached (%)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>640x100</td>\n<td>2ms</td>\n<td>1ms</td>\n<td>0.25ms</td>\n<td>20k</td>\n<td>20.5k</td>\n<td>0%</td>\n</tr>\n<tr>\n<td>640x200</td>\n<td>2ms</td>\n<td>1ms</td>\n<td>0.28ms</td>\n<td>19k</td>\n<td>40.4k</td>\n<td>0%</td>\n</tr>\n<tr>\n<td>640x400</td>\n<td>3ms</td>\n<td>1.3ms</td>\n<td>0.5ms</td>\n<td>12.6k</td>\n<td>78.8k</td>\n<td>0%</td>\n</tr>\n<tr>\n<td>640x800</td>\n<td>3ms</td>\n<td>1.7ms</td>\n<td>0.7ms</td>\n<td>8.9k</td>\n<td>92.6k</td>\n<td>0%</td>\n</tr>\n<tr>\n<td>640x1600</td>\n<td>4ms</td>\n<td>1.8ms</td>\n<td>0.7ms</td>\n<td>7.8k</td>\n<td>102k</td>\n<td>0%</td>\n</tr>\n<tr>\n<td>640x3200</td>\n<td>5ms</td>\n<td>2ms</td>\n<td>0.7ms</td>\n<td>7.5k</td>\n<td>105.1k</td>\n<td>0%</td>\n</tr>\n<tr>\n<td>640x6400</td>\n<td>5.3ms</td>\n<td>2ms</td>\n<td>0.9ms</td>\n<td>6.8k</td>\n<td>105.8k</td>\n<td>0%</td>\n</tr>\n<tr>\n<td>640x12800</td>\n<td>5.3ms</td>\n<td>2ms</td>\n<td>0.9ms</td>\n<td>6.8k</td>\n<td>106.5k</td>\n<td>0%</td>\n</tr>\n<tr>\n<td>640x25600</td>\n<td>4.6ms</td>\n<td>1.8ms</td>\n<td>0.7ms</td>\n<td>8k</td>\n<td>100k</td>\n<td>14%</td>\n</tr>\n</tbody>\n</table>\n</div></blockquote>\n<p>Observations:</p>\n<ol>\n<li>The first bottleneck we hit was MaxBatchSize. This forces the clients to send the requests early limiting the overall ability to batch. Once fdb clients start hitting that limit, the number of requests they send to the proxies keep growing linearly as we scale GRV requests, and we quickly hit a breaking point where we overloaded the proxy. We have set MaxBatchSize to 100 to achieve the above results, otherwise the cluster was getting into bad state in the last two tests.</li>\n<li>The test is obviously very sensitive with the number of clients. If every client sends one batch request every 5 milliseconds, and proxies have hard limit on how many such requests they can process, this obviously puts a limit on number of clients being involved. We tested with 640 clients below.</li>\n<li>Batching worked pretty well and got us to about 16 million rps and seemed we can just keep scaling (until the client exceeds MaxBatchSize request every 5ms). However, the 5 ms mean GRV is not great for our use case. We tried varying the proxies a bit from 8 to 16 and then 24 but did not see major difference. We did not add a ton (like hundreds) of proxies but we can perform that experiment if someone believes that could help at all. As far as we understand, adding more proxies will give proxies more bandwidth to answer the client batch requests but also require more communication between the proxies themselves so there is a trade-off there.</li>\n</ol>\n<p>We don\u2019t see a way way to get to that scale (16 million) with 640 clients without degrading the latencies significantly. Is that a correct observation?</p>",
        "post_number": 16,
        "post_type": 1,
        "posts_count": 21,
        "updated_at": "2019-02-23T08:26:25.554Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 24,
        "reads": 106,
        "readers_count": 105,
        "score": 176.2,
        "yours": false,
        "topic_id": 1108,
        "topic_slug": "how-to-scale-foundation-db-reads",
        "display_username": "Preslav Le",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": "",
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 2
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 504,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/how-to-scale-foundation-db-reads/1108/16",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3517,
        "name": "Alex Miller",
        "username": "alexmiller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "created_at": "2019-02-26T04:11:15.878Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"preslavle\" data-post=\"16\" data-topic=\"1108\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/p/9de0a6/48.png\" class=\"avatar\"> preslavle:</div>\n<blockquote>\n<p>This seems to be because of the relative priority of the two operations as mentioned above. Seems reasonable given FDB approach at slowing down things when obtaining GRV if overloaded but was confusing.</p>\n</blockquote>\n</aside>\n<p>To be clear, what you\u2019re observing isn\u2019t the intentional behavior.  Your previous posts clearly showed the proxy-side GRV batching logic isn\u2019t batching in your workload, and that\u2019s concerning.  Dynamically resizing MaxBatchSize according to observed GRV latency (or just increasing it) also sounds like a probably good idea.</p>\n<p>It seems like you\u2019ve done good benchmarking work here, so I\u2019m going to guess that, yes, this is as good as you\u2019re going to get with the current state of the code.  Did you happen to run the test that Evan suggested?  Did that improve the batching and end result for you?</p>\n<p>I\u2019ll file an issue to track the GRV batching problems tomorrow, because it\u2019s something that should be addressed regardless.</p>\n<p>EDIT: Filed <a href=\"https://github.com/apple/foundationdb/issues/1192\">#1192</a>.</p>",
        "post_number": 17,
        "post_type": 1,
        "posts_count": 21,
        "updated_at": "2019-02-26T23:21:19.759Z",
        "reply_count": 1,
        "reply_to_post_number": 16,
        "quote_count": 1,
        "incoming_link_count": 16,
        "reads": 102,
        "readers_count": 101,
        "score": 105.4,
        "yours": false,
        "topic_id": 1108,
        "topic_slug": "how-to-scale-foundation-db-reads",
        "display_username": "Alex Miller",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/apple/foundationdb/issues/1192",
            "internal": false,
            "reflection": false,
            "title": "Fix and improve GRV batching \u00b7 Issue #1192 \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 28
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 13,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/how-to-scale-foundation-db-reads/1108/17",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3531,
        "name": "Preslav Le",
        "username": "preslavle",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/p/9de0a6/{size}.png",
        "created_at": "2019-02-27T16:38:33.610Z",
        "cooked": "<p>I do think the batching is working as intended at least to some degree. In my last reponse I said that 1) we were previously client side limited and thus no proxy side batching was needed, sorry about the confusion 2) Proxy-side GRV batching is happening, you can see the Proxy getLiveCommitedVersions (proxy side computation) is way less than the client GRV requests as we scale requests.</p>\n<p>I did try to change the priorities as Evan suggested but it did not lead to substantial improvement since batching is already working.</p>\n<p>Otherwise, thanks for filing the task. GRV performance test that will help identify and fix the bottlenecks sounds good to me.</p>",
        "post_number": 18,
        "post_type": 1,
        "posts_count": 21,
        "updated_at": "2019-02-27T16:43:49.221Z",
        "reply_count": 0,
        "reply_to_post_number": 17,
        "quote_count": 0,
        "incoming_link_count": 102,
        "reads": 97,
        "readers_count": 96,
        "score": 529.4,
        "yours": false,
        "topic_id": 1108,
        "topic_slug": "how-to-scale-foundation-db-reads",
        "display_username": "Preslav Le",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 3,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": "",
        "reply_to_user": {
          "id": 13,
          "username": "alexmiller",
          "name": "Alex Miller",
          "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 504,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/how-to-scale-foundation-db-reads/1108/18",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3687,
        "name": "Nikita Melkozerov",
        "username": "meln1k",
        "avatar_template": "/user_avatar/forums.foundationdb.org/meln1k/{size}/150_2.png",
        "created_at": "2019-03-18T10:36:03.904Z",
        "cooked": "<p>What are the recommendations for the cached GRV lifetime?<br>\nLet\u2019s say if I expect to have an only one active client performing operations on a subspace (no conflicts are expected), can I cache GRV calls for at least 1 second or more? Will it affect the database in any other way besides a higher possibility of the transaction conflict?</p>",
        "post_number": 19,
        "post_type": 1,
        "posts_count": 21,
        "updated_at": "2019-03-18T10:36:03.904Z",
        "reply_count": 2,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 3,
        "reads": 89,
        "readers_count": 88,
        "score": 42.8,
        "yours": false,
        "topic_id": 1108,
        "topic_slug": "how-to-scale-foundation-db-reads",
        "display_username": "Nikita Melkozerov",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 170,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/how-to-scale-foundation-db-reads/1108/19",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3688,
        "name": "gaurav",
        "username": "gaurav",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
        "created_at": "2019-03-18T10:49:36.779Z",
        "cooked": "<p>I believe a read version remains valid for up to 5 seconds.<br>\nOne issue I can think of, when caching read version aggressively - bypassing the ratelimiter\u2019s function to throttle down transactions from starting when the cluster is unable to keep up with the load.</p>",
        "post_number": 20,
        "post_type": 1,
        "posts_count": 21,
        "updated_at": "2019-03-18T10:57:04.014Z",
        "reply_count": 0,
        "reply_to_post_number": 19,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 90,
        "readers_count": 89,
        "score": 38.0,
        "yours": false,
        "topic_id": 1108,
        "topic_slug": "how-to-scale-foundation-db-reads",
        "display_username": "gaurav",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 170,
          "username": "meln1k",
          "name": "Nikita Melkozerov",
          "avatar_template": "/user_avatar/forums.foundationdb.org/meln1k/{size}/150_2.png"
        },
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 166,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/how-to-scale-foundation-db-reads/1108/20",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      3258,
      3262,
      3263,
      3264,
      3294,
      3295,
      3296,
      3297,
      3298,
      3299,
      3300,
      3301,
      3306,
      3310,
      3313,
      3504,
      3517,
      3531,
      3687,
      3688,
      3690
    ]
  },
  "timeline_lookup": [
    [
      1,
      2453
    ],
    [
      3,
      2452
    ],
    [
      5,
      2449
    ],
    [
      14,
      2448
    ],
    [
      16,
      2433
    ],
    [
      17,
      2430
    ],
    [
      18,
      2428
    ],
    [
      19,
      2410
    ],
    [
      20,
      2409
    ]
  ],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "How to scale foundation db reads",
  "id": 1108,
  "title": "How to scale foundation db reads",
  "posts_count": 21,
  "created_at": "2019-02-02T12:39:23.370Z",
  "views": 6504,
  "reply_count": 13,
  "like_count": 7,
  "last_posted_at": "2019-03-18T16:32:32.430Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "how-to-scale-foundation-db-reads",
  "category_id": 7,
  "word_count": 5558,
  "deleted_at": null,
  "user_id": 504,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_1108",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 21,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 9,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": null,
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 504,
        "username": "preslavle",
        "name": "Preslav Le",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/p/9de0a6/{size}.png",
        "post_count": 8,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 13,
        "username": "alexmiller",
        "name": "Alex Miller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "post_count": 3,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      },
      {
        "id": 12,
        "username": "ajbeamon",
        "name": "A.J. Beamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "post_count": 3,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "admin": true,
        "trust_level": 4
      },
      {
        "id": 53,
        "username": "KrzysFR",
        "name": "Christophe Chevalier",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      },
      {
        "id": 54,
        "username": "Evan",
        "name": "Evan Tschannen",
        "avatar_template": "/user_avatar/forums.foundationdb.org/evan/{size}/104_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "moderator": true,
        "trust_level": 1
      },
      {
        "id": 166,
        "username": "gaurav",
        "name": "gaurav",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 3
      },
      {
        "id": 337,
        "username": "mengxu",
        "name": "Meng Xu",
        "avatar_template": "/user_avatar/forums.foundationdb.org/mengxu/{size}/893_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      },
      {
        "id": 7,
        "username": "SteavedHams",
        "name": "Steve Atherton",
        "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      },
      {
        "id": 170,
        "username": "meln1k",
        "name": "Nikita Melkozerov",
        "avatar_template": "/user_avatar/forums.foundationdb.org/meln1k/{size}/150_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      }
    ],
    "created_by": {
      "id": 504,
      "username": "preslavle",
      "name": "Preslav Le",
      "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/p/9de0a6/{size}.png"
    },
    "last_poster": {
      "id": 337,
      "username": "mengxu",
      "name": "Meng Xu",
      "avatar_template": "/user_avatar/forums.foundationdb.org/mengxu/{size}/893_2.png"
    },
    "links": [
      {
        "url": "https://github.com/apple/foundationdb/issues/1192",
        "title": "Fix and improve GRV batching \u00b7 Issue #1192 \u00b7 apple/foundationdb \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 28,
        "user_id": 13,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://github.com/apple/foundationdb/pull/1059",
        "title": "Monitor leader only when proxies are unknown or any dies by vishesh \u00b7 Pull Request #1059 \u00b7 apple/foundationdb \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 24,
        "user_id": 13,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://forums.foundationdb.org/t/grv-throughput-saturates-at-400k-per-second/2550",
        "title": "GRV throughput saturates at 400K per second",
        "internal": true,
        "attachment": false,
        "reflection": true,
        "clicks": 4,
        "user_id": 645,
        "domain": "forums.foundationdb.org",
        "root_domain": "foundationdb.org"
      },
      {
        "url": "https://forums.foundationdb.org/t/foundationdb-cluster-setup/1641/9",
        "title": "FoundationDB cluster setup",
        "internal": true,
        "attachment": false,
        "reflection": true,
        "clicks": 1,
        "user_id": 13,
        "domain": "forums.foundationdb.org",
        "root_domain": "foundationdb.org"
      },
      {
        "url": "https://forums.foundationdb.org/t/process-class-and-machine-sharing-deployment-questions/1600/12",
        "title": "Process class and machine sharing deployment questions",
        "internal": true,
        "attachment": false,
        "reflection": true,
        "clicks": 1,
        "user_id": 13,
        "domain": "forums.foundationdb.org",
        "root_domain": "foundationdb.org"
      }
    ]
  },
  "bookmarks": []
}