{
  "post_stream": {
    "posts": [
      {
        "id": 5083,
        "name": "Vibhuti Dembi",
        "username": "VibhutiD",
        "avatar_template": "/user_avatar/forums.foundationdb.org/vibhutid/{size}/668_2.png",
        "created_at": "2019-09-18T13:01:51.340Z",
        "cooked": "<p>Hi,</p>\n<p>So I recently started exploring FoundationDB and Record Layer and had a couple of questions regarding it.</p>\n<p>As of now, Record Layer\u2019s aggregate functions only support Integer fields. The reason for the same being is that it is built on top of Atomic Mutations of FoundationDB. Is my understanding correct? If that is indeed the case, is there a plan to extend support for Atomic operations on double? If not, how can aggregate functions (eg: SUM) on double be implemented in Record Layer?</p>\n<p>Also, I\u2019m a little lost here. I\u2019m trying to implement a DISTINCT COUNT query in Record Layer. For example:<br>\nmessage simple {<br>\npreference_tag = 1;<br>\n}<br>\nLet\u2019s assume, there are 100 records that either have a \u201cblue\u201d or \u201cred\u201d preference_tag. Is there a way in which I can query a distinct count on preference_tag ( = 2)?<br>\nP.S. I do have an alternate approach of having a count index on preference_tag and then backtracking and doing a native lookup. But I\u2019m assuming there is a better way that I\u2019m missing out on.</p>\n<p>Thanks.</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 6,
        "updated_at": "2019-09-18T13:01:51.340Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 148,
        "reads": 41,
        "readers_count": 40,
        "score": 743.2,
        "yours": false,
        "topic_id": 1635,
        "topic_slug": "aggregate-functions-on-double-distinct-count",
        "display_username": "Vibhuti Dembi",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 653,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/aggregate-functions-on-double-distinct-count/1635/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 5084,
        "name": "",
        "username": "andrew.noyes",
        "avatar_template": "/user_avatar/forums.foundationdb.org/andrew.noyes/{size}/443_2.png",
        "created_at": "2019-09-18T17:49:22.340Z",
        "cooked": "<blockquote>\n<p>is there a plan to extend support for Atomic operations on double?</p>\n</blockquote>\n<p>Atomic operations need to be total functions from [byte] to [byte], so it\u2019s not clear to me what the semantics should be for a double. What do you do if the existing value is not the expected width? How many bits should be interpreted as the significand?</p>\n<p>One thing you could do (not sure if this works for your use case or not) but you could use <a href=\"https://en.wikipedia.org/wiki/Fixed-point_arithmetic\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Fixed-point arithmetic - Wikipedia</a> with the current atomic add</p>\n<p>Edit: I guess more accurately they\u2019re a function from value \u2192 value, since values have an upper bound on size</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 6,
        "updated_at": "2019-09-18T17:50:08.230Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 2,
        "reads": 42,
        "readers_count": 41,
        "score": 23.4,
        "yours": false,
        "topic_id": 1635,
        "topic_slug": "aggregate-functions-on-double-distinct-count",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://en.wikipedia.org/wiki/Fixed-point_arithmetic",
            "internal": false,
            "reflection": false,
            "title": "Fixed-point arithmetic - Wikipedia",
            "clicks": 9
          }
        ],
        "read": true,
        "user_title": "",
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 14,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/aggregate-functions-on-double-distinct-count/1635/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 5167,
        "name": "Vibhuti Dembi",
        "username": "VibhutiD",
        "avatar_template": "/user_avatar/forums.foundationdb.org/vibhutid/{size}/668_2.png",
        "created_at": "2019-09-26T05:26:48.733Z",
        "cooked": "<p>Thanks Andrew. I might be able to spin something off via Fixed-point arithmetic.On the top of my head, for my use-case, maybe a shameless upper-bound expected significand limit plugin could do the trick.</p>\n<p>Also, any insights on the second question?</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 6,
        "updated_at": "2019-09-26T05:26:48.733Z",
        "reply_count": 2,
        "reply_to_post_number": 2,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 34,
        "readers_count": 33,
        "score": 16.8,
        "yours": false,
        "topic_id": 1635,
        "topic_slug": "aggregate-functions-on-double-distinct-count",
        "display_username": "Vibhuti Dembi",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 14,
          "username": "andrew.noyes",
          "name": "",
          "avatar_template": "/user_avatar/forums.foundationdb.org/andrew.noyes/{size}/443_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 653,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/aggregate-functions-on-double-distinct-count/1635/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 5168,
        "name": "Alex Miller",
        "username": "alexmiller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "created_at": "2019-09-26T05:55:01.724Z",
        "cooked": "<p>My apologies, I should have pinged record layer folk sooner.</p>\n<p>Paging <a class=\"mention\" href=\"/u/alloc\">@alloc</a>. <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=9\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\"></p>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 6,
        "updated_at": "2019-09-26T05:55:01.724Z",
        "reply_count": 0,
        "reply_to_post_number": 3,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 34,
        "readers_count": 33,
        "score": 6.8,
        "yours": false,
        "topic_id": 1635,
        "topic_slug": "aggregate-functions-on-double-distinct-count",
        "display_username": "Alex Miller",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 653,
          "username": "VibhutiD",
          "name": "Vibhuti Dembi",
          "avatar_template": "/user_avatar/forums.foundationdb.org/vibhutid/{size}/668_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 13,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/aggregate-functions-on-double-distinct-count/1635/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 5170,
        "name": "Alec Grieser",
        "username": "alloc",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "created_at": "2019-09-26T18:47:59.329Z",
        "cooked": "<p>One note on the first question: yeah, the atomic mutation indexes are all built on top of FDB atomic ops as that allows us to maintain the indexes without having transactions contend on all updates. I believe that the record layer should support <code>MAX_EVER</code> and <code>MIN_EVER</code> operations on double (or float) fields using the <code>MAX_EVER_TUPLE</code> and <code>MIN_EVER_TUPLE</code> types. (With some slight caveats about what happens to <code>NaN</code> values\u2026). Adding (scalable) support for double addition is harder, as <a class=\"mention\" href=\"/u/andrew.noyes\">@andrew.noyes</a> suggests, without either a, like, <code>ADD_IEEE_754</code> atomic operation or some kind of generalized operation pushdown operation. I think some kind of fixed point thing is probably your best bet.</p>\n<p>As to the second, there isn\u2019t any out-of-the-box support for distinct count indexes, no. I guess, to be clear, if you wanted to answer the question \u201chow many distinct records have a \u2018blue\u2019 preference tag\u201d, then I think you just need a <code>COUNT</code> index grouped by <code>preference_tag</code> on that anyway (as there can only be one copy of the record in the record store). If use case is more like you have a record:</p>\n<pre><code class=\"lang-auto\">message Simple {\n  string preference_tag = 1;\n  string sample_id = 2;\n  int64 rec_id = 3;\n}\n</code></pre>\n<p>Where the <code>rec_id</code> was the primary key and you wanted to know, say, how many distinct sample IDs have a given <code>preference_tag</code>, then I don\u2019t think we quite have the index you need. If you had an index on <code>preference_tag</code> or <code>(preference_tag, sample_id)</code>, then you could implement this by querying for results, removing duplicates, and then counting, though this grows linearly with the count, which isn\u2019t great.</p>\n<p>I think a \u201cdistinct count\u201d index maintainer could also feasibly be added, though maybe adding a new index maintainer as a first project is a little much. I think the way this would work would it would keep track of (in the instance above) a regular value index on <code>(preference_tag, sample_id)</code> and a second subspace that looked a lot like a count index on <code>preference_tag</code>. Then the maintainer would update the value index and check if it\u2019s a \u201cnew\u201d <code>sample_id</code>, and then conditionally update the count index-part based on whether the new record is the only one in the group. The cost of this index is: (1) the storage space, which grows linearly with the count, so if storage space is a premium, might be a problem; (2) the extra read I/O on index update; and (3) some amount of extra contention when the first key in a group is changed. The first cost is somewhat ameliorated by the fact that the index can also be used to satisfy other queries on the indexed keys (just like a normal value index), so if you were going to need that value index any way, the marginal cost of the distinct count index might actually be low.</p>\n<p>There are possibly some strategies (like using bloom filters instead of full indexes, though supporting deletes on that data structure may be difficult) that theoretically could reduce space usage and/or contention at the cost of accuracy, but that\u2019s probably not a road you want to go down unless you absolutely need to.</p>",
        "post_number": 5,
        "post_type": 1,
        "posts_count": 6,
        "updated_at": "2019-09-26T18:47:59.329Z",
        "reply_count": 0,
        "reply_to_post_number": 3,
        "quote_count": 0,
        "incoming_link_count": 5,
        "reads": 33,
        "readers_count": 32,
        "score": 46.6,
        "yours": false,
        "topic_id": 1635,
        "topic_slug": "aggregate-functions-on-double-distinct-count",
        "display_username": "Alec Grieser",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 653,
          "username": "VibhutiD",
          "name": "Vibhuti Dembi",
          "avatar_template": "/user_avatar/forums.foundationdb.org/vibhutid/{size}/668_2.png"
        },
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 8,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/aggregate-functions-on-double-distinct-count/1635/5",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 5171,
        "name": "Mike McMahon",
        "username": "MMcM",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/m/d07c76/{size}.png",
        "created_at": "2019-09-26T19:24:25.499Z",
        "cooked": "<p>It\u2019s similar if what you want is just the number of distinct <code>preference_tag</code> values. (Where the answer for \u201cblue\u201d and \u201cred\u201d is two.)</p>\n<p>Add a <code>COUNT</code> index on this field and then get the <code>DISTINCT</code> count by scanning the entries in this index counting non-zero values. This is more expensive than a non-<code>DISTINCT</code> count, but has no more write conflicts.</p>\n<p>If lots of write conflicts is okay and computing the count efficiently is more important, we could have a new index type that kept a counter for each value, and incremented an overall counter whenever a new per-value counter was created (or changed to be positive) and decremented it whenever a per-value counter went to zero. These checks would mean that uses of the same value would conflict. You could do the same thing in advance of such an index with records.</p>",
        "post_number": 6,
        "post_type": 1,
        "posts_count": 6,
        "updated_at": "2019-09-26T19:24:25.499Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 2,
        "reads": 30,
        "readers_count": 29,
        "score": 31.0,
        "yours": false,
        "topic_id": 1635,
        "topic_slug": "aggregate-functions-on-double-distinct-count",
        "display_username": "Mike McMahon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 219,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/aggregate-functions-on-double-distinct-count/1635/6",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      5083,
      5084,
      5167,
      5168,
      5170,
      5171
    ]
  },
  "timeline_lookup": [
    [
      1,
      2225
    ],
    [
      3,
      2218
    ],
    [
      5,
      2217
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "Aggregate Functions on Double | Distinct Count",
  "id": 1635,
  "title": "Aggregate Functions on Double | Distinct Count",
  "posts_count": 6,
  "created_at": "2019-09-18T13:01:51.282Z",
  "views": 1002,
  "reply_count": 3,
  "like_count": 2,
  "last_posted_at": "2019-09-26T19:24:25.499Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "aggregate-functions-on-double-distinct-count",
  "category_id": 12,
  "word_count": 1023,
  "deleted_at": null,
  "user_id": 653,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_1635",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 6,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 5,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "Feature Request: Double Atomic Ops",
      "id": 2828,
      "title": "Feature Request: Double Atomic Ops",
      "slug": "feature-request-double-atomic-ops",
      "posts_count": 2,
      "reply_count": 0,
      "highest_post_number": 2,
      "image_url": null,
      "created_at": "2021-07-30T05:17:49.310Z",
      "last_posted_at": "2021-09-13T09:30:07.377Z",
      "bumped": true,
      "bumped_at": "2021-09-13T09:30:07.377Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 414,
      "category_id": 8,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest single",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 983,
            "username": "Nitish.Gupta",
            "name": "Nitish Gupta",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/n/b9bd4f/{size}.png",
            "trust_level": 1
          }
        }
      ]
    },
    {
      "fancy_title": "Missing API for getting just the count of a key range?",
      "id": 444,
      "title": "Missing API for getting just the count of a key range?",
      "slug": "missing-api-for-getting-just-the-count-of-a-key-range",
      "posts_count": 14,
      "reply_count": 9,
      "highest_post_number": 14,
      "image_url": null,
      "created_at": "2018-05-21T09:23:36.938Z",
      "last_posted_at": "2018-09-10T16:25:03.060Z",
      "bumped": true,
      "bumped_at": "2018-09-10T16:25:03.060Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 4,
      "views": 3599,
      "category_id": 8,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 208,
            "username": "cloudspeech",
            "name": "Cloudspeech",
            "avatar_template": "/user_avatar/forums.foundationdb.org/cloudspeech/{size}/330_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 31,
            "username": "dicklacara",
            "name": "Richard Applebaum",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/d/8797f3/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 173,
            "username": "jkominek",
            "name": "Jay Kominek",
            "avatar_template": "/user_avatar/forums.foundationdb.org/jkominek/{size}/140_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Record Layer query performance benchmarking against traditional RDBMS",
      "id": 2082,
      "title": "Record Layer query performance benchmarking against traditional RDBMS",
      "slug": "record-layer-query-performance-benchmarking-against-traditional-rdbms",
      "posts_count": 4,
      "reply_count": 0,
      "highest_post_number": 4,
      "image_url": null,
      "created_at": "2020-04-20T18:46:55.680Z",
      "last_posted_at": "2020-04-22T15:51:53.223Z",
      "bumped": true,
      "bumped_at": "2020-04-22T15:51:53.223Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 2,
      "views": 1528,
      "category_id": 12,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 712,
            "username": "rahul-nitkkr",
            "name": "Rahul Roy",
            "avatar_template": "/user_avatar/forums.foundationdb.org/rahul-nitkkr/{size}/754_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 34,
            "username": "scgray",
            "name": "Scott Gray",
            "avatar_template": "/user_avatar/forums.foundationdb.org/scgray/{size}/30_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Multiple questions about Indexes, functions and watches to implement etcd-layer",
      "id": 2047,
      "title": "Multiple questions about Indexes, functions and watches to implement etcd-layer",
      "slug": "multiple-questions-about-indexes-functions-and-watches-to-implement-etcd-layer",
      "posts_count": 8,
      "reply_count": 6,
      "highest_post_number": 8,
      "image_url": null,
      "created_at": "2020-04-06T11:43:10.344Z",
      "last_posted_at": "2020-06-03T06:21:53.521Z",
      "bumped": true,
      "bumped_at": "2020-06-03T06:21:53.521Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 8,
      "views": 3094,
      "category_id": 12,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 534,
            "username": "PierreZ",
            "name": "Pierre Zemb",
            "avatar_template": "/user_avatar/forums.foundationdb.org/pierrez/{size}/866_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Getting the number of key/value pairs",
      "id": 189,
      "title": "Getting the number of key/value pairs",
      "slug": "getting-the-number-of-key-value-pairs",
      "posts_count": 12,
      "reply_count": 9,
      "highest_post_number": 12,
      "image_url": null,
      "created_at": "2018-04-21T20:01:47.493Z",
      "last_posted_at": "2021-04-17T19:06:40.085Z",
      "bumped": true,
      "bumped_at": "2021-04-17T19:06:40.085Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 6,
      "views": 6235,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 132,
            "username": "Michael",
            "name": "Michael",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/m/4bbf92/{size}.png",
            "trust_level": 0
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 22,
            "username": "dave",
            "name": "David Scherer",
            "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 156,
            "username": "spullara",
            "name": "Sam Pullara",
            "avatar_template": "/user_avatar/forums.foundationdb.org/spullara/{size}/125_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 323,
            "username": "WolfDan",
            "name": "Wolf Dan",
            "avatar_template": "/user_avatar/forums.foundationdb.org/wolfdan/{size}/806_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 41,
            "username": "amirouche",
            "name": "Amirouche",
            "avatar_template": "/user_avatar/forums.foundationdb.org/amirouche/{size}/1911_2.png",
            "trust_level": 2
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 653,
        "username": "VibhutiD",
        "name": "Vibhuti Dembi",
        "avatar_template": "/user_avatar/forums.foundationdb.org/vibhutid/{size}/668_2.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 8,
        "username": "alloc",
        "name": "Alec Grieser",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      },
      {
        "id": 13,
        "username": "alexmiller",
        "name": "Alex Miller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      },
      {
        "id": 14,
        "username": "andrew.noyes",
        "name": "",
        "avatar_template": "/user_avatar/forums.foundationdb.org/andrew.noyes/{size}/443_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      },
      {
        "id": 219,
        "username": "MMcM",
        "name": "Mike McMahon",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/m/d07c76/{size}.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      }
    ],
    "created_by": {
      "id": 653,
      "username": "VibhutiD",
      "name": "Vibhuti Dembi",
      "avatar_template": "/user_avatar/forums.foundationdb.org/vibhutid/{size}/668_2.png"
    },
    "last_poster": {
      "id": 219,
      "username": "MMcM",
      "name": "Mike McMahon",
      "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/m/d07c76/{size}.png"
    },
    "links": [
      {
        "url": "https://en.wikipedia.org/wiki/Fixed-point_arithmetic",
        "title": "Fixed-point arithmetic - Wikipedia",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 9,
        "user_id": 14,
        "domain": "en.wikipedia.org",
        "root_domain": "wikipedia.org"
      }
    ]
  },
  "bookmarks": []
}