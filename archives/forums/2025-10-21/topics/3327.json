{
  "post_stream": {
    "posts": [
      {
        "id": 11119,
        "name": "Rajiv M Ranganath",
        "username": "rajivr",
        "avatar_template": "/user_avatar/forums.foundationdb.org/rajivr/{size}/1100_2.png",
        "created_at": "2022-05-17T00:51:10.287Z",
        "cooked": "<p>I was wondering if there are any publicly available resources (papers, blog posts, videos) that describes Snowflake\u2019s Entity Layer?</p>\n<p>The only information that I could find was a mention at <a href=\"https://www.youtube.com/watch?v=KkeyjFMmIf8&amp;t=622s\" rel=\"noopener nofollow ugc\">10:22</a> from FDB Summit Presentation.</p>\n<p>Snowflake and Apple have the most operational expertise with FoundationDB.</p>\n<p>Before embarking on layer development on top of Tokio/Rust bindings, I wanted to make sure I\u2019ve learned as much as possible from existing prior-art.</p>\n<p>With Record Layer, its bit easier. <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n<p>The areas where I am looking to gain some insight about Snowflake\u2019s Entity Layer are around: Type System, How schema migration is handled and Index Maintenance.</p>\n<p>Also I am very open to design level contributions/suggestions that I can get from existing layer developers.</p>\n<p>If you think Tokio/Rust might be something that you might adopt in the future and would like to shape the design for your needs as well, please let me know! <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 2,
        "updated_at": "2022-05-17T00:51:10.287Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 266,
        "reads": 36,
        "readers_count": 35,
        "score": 1332.2,
        "yours": false,
        "topic_id": 3327,
        "topic_slug": "snowflake-entity-layer",
        "display_username": "Rajiv M Ranganath",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://www.youtube.com/watch?v=KkeyjFMmIf8&t=622s",
            "internal": false,
            "reflection": false,
            "title": "How FoundationDB powers SnowflakeDB's metadata! - Ashish Motivala, Snowflake Computing - YouTube",
            "clicks": 15
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 946,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/snowflake-entity-layer/3327/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 11405,
        "name": "",
        "username": "Imperatorx",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/i/d2c977/{size}.png",
        "created_at": "2022-07-05T16:29:54.601Z",
        "cooked": "<p>I\u2019ve created an Entity layer for Java, similar to JPA. The key features are:</p>\n<ul>\n<li>Every entity has a primary key</li>\n<li>Entities can be queried via primary key or secondary indices.</li>\n<li>It has async (CompletableFuture) and sync access modes</li>\n<li>Entities can be immutable or mutable</li>\n<li>Mutable entities have dirty checking and auto-save at the end of the transaction</li>\n<li>Retrieval can be instant fetch (exact), lazy stream (iterator) or reactive stream (iterator)</li>\n<li>Entities can have references to other entities</li>\n<li>Immediate query, Lazy reference proxies or Eager reference proxies for related entities</li>\n<li>Session cache and second level cache</li>\n<li>No code generation needed</li>\n<li>Indices are Java POJOs too</li>\n<li>Indices can be queried using method references instead of string field names or statically generated classes</li>\n<li>Covering index queries (returns index POJOs)</li>\n<li>Conditional indices (with WHERE clause)</li>\n<li>Multi range queries are prefetched in the background</li>\n<li>Entity management dashboard with live statistics down to index-level access</li>\n<li>Distributed grid computing engine on top of entities with micro batching and job-embedding support (jobs and tasks can form a directed acyclical graph) (e.g. for background micro batching jobs like interest calculation of different account ranges etc.)</li>\n</ul>\n<p>The company I work for created a high performance micropayment engine and an IoT time series collection engine on top of this proprietary framework, and can provide commercial support if someone is interested.</p>\n<p>Sample usage:</p>\n<pre><code class=\"lang-auto\">// Entity and index definition in POJO style:\n\n@IndexDefinition(shape = IxCustomer.class, type = StoreMode.REFERENCE)\npublic class Account implements Entity&lt;Long&gt; {\n  private Long id;\n  private Customer customer; // another entity\n  private int someOtherField;\n  // getters setters constructors omitted\n  \n public static class IxCustomer implements Index&lt;Account, Long&gt; {\n    private final Customer customer;\n    private final int someOtherField\n    // getters setters constructors omitted\n  }\n}\n\n\n// new entity with related entity\n@Transactional\npublic void create() {\n  var customer = orm.getReference(Customer.class, 100); // this is a lazy proxy, no DB query is performed\n  var account = new Account(42L, customer, 100); // new entity\n  orm.persist(account); // entity gets persisted to memory only\n} // At the end of transaction demarcation, the newly persistend entity gets flushed to FDB\n\n// existing entity gets modified\n@Transactional\npublic void update() {\n  var account = orm.get(Account.class, 42L); // this is an eager proxy, the statement immediately returns, but an async query is immediately started in the background to fetch the entity\n  account.setBalance(200);\n} // At the end of transaction demarcation, the entity gets modified, and the account with the balance of 200 gets written to the DB. All changed indices are updated, if needed.\n\n// query by index\n@Transactional\npublic void index() {\n\n  var customerReference = orm.getReference(Customer.class, 42L);\n\n  var accountsForCustomer = orm.query(Account.class)\n    .index(Account.IxCustomer.class, qurery -&gt; query\n      .field(Account.IxCustomer::getCustomer, c -&gt; c.equal(customer).ascending())\n      .field(Account.IxCustomer::getSomeOtherField, f -&gt; f.between(200,400).greaterThan(1000))\n    )\n    .stream()\n    .take(200)\n}\n\n\n</code></pre>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 2,
        "updated_at": "2022-07-05T16:31:43.463Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 3,
        "reads": 22,
        "readers_count": 21,
        "score": 34.4,
        "yours": false,
        "topic_id": 3327,
        "topic_slug": "snowflake-entity-layer",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 164,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/snowflake-entity-layer/3327/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      11119,
      11405
    ]
  },
  "timeline_lookup": [
    [
      1,
      1254
    ],
    [
      2,
      1204
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "Snowflake Entity Layer",
  "id": 3327,
  "title": "Snowflake Entity Layer",
  "posts_count": 2,
  "created_at": "2022-05-17T00:51:10.216Z",
  "views": 826,
  "reply_count": 0,
  "like_count": 1,
  "last_posted_at": "2022-07-05T16:29:54.601Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "snowflake-entity-layer",
  "category_id": 5,
  "word_count": 624,
  "deleted_at": null,
  "user_id": 946,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_3327",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 2,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 2,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "QFoundation - Entity layer for Java",
      "id": 4596,
      "title": "QFoundation - Entity layer for Java",
      "slug": "qfoundation-entity-layer-for-java",
      "posts_count": 4,
      "reply_count": 0,
      "highest_post_number": 4,
      "image_url": null,
      "created_at": "2024-08-29T17:57:15.576Z",
      "last_posted_at": "2025-01-06T18:00:42.757Z",
      "bumped": true,
      "bumped_at": "2025-01-06T18:00:42.757Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 6,
      "views": 258,
      "category_id": 9,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 164,
            "username": "Imperatorx",
            "name": "",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/i/d2c977/{size}.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 1267,
            "username": "fuCtor",
            "name": "Alexey Shcherbakov",
            "avatar_template": "/user_avatar/forums.foundationdb.org/fuctor/{size}/1599_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Entity Store: A FoundationDB Layer for Versioned Entities with Fine Grained Authorization and Lineage",
      "id": 1302,
      "title": "Entity Store: A FoundationDB Layer for Versioned Entities with Fine Grained Authorization and Lineage",
      "slug": "entity-store-a-foundationdb-layer-for-versioned-entities-with-fine-grained-authorization-and-lineage",
      "posts_count": 2,
      "reply_count": 0,
      "highest_post_number": 2,
      "image_url": null,
      "created_at": "2019-04-11T13:48:23.348Z",
      "last_posted_at": "2019-04-11T22:04:13.628Z",
      "bumped": true,
      "bumped_at": "2019-04-11T22:04:13.628Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [
        "fdbsummit"
      ],
      "tags_descriptions": {},
      "like_count": 3,
      "views": 1014,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 41,
            "username": "amirouche",
            "name": "Amirouche",
            "avatar_template": "/user_avatar/forums.foundationdb.org/amirouche/{size}/1911_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 563,
            "username": "spimentel",
            "name": "Stephen Pimentel",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/3ab097/{size}.png",
            "trust_level": 1
          }
        }
      ]
    },
    {
      "fancy_title": "Implementing atomic DDL for SQL schema",
      "id": 678,
      "title": "Implementing atomic DDL for SQL schema",
      "slug": "implementing-atomic-ddl-for-sql-schema",
      "posts_count": 9,
      "reply_count": 2,
      "highest_post_number": 9,
      "image_url": null,
      "created_at": "2018-09-03T19:04:26.293Z",
      "last_posted_at": "2018-09-08T15:28:47.996Z",
      "bumped": true,
      "bumped_at": "2018-09-08T15:28:47.996Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 2,
      "views": 2146,
      "category_id": 9,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 81,
            "username": "ryanworl",
            "name": "Ryan Worl",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 251,
            "username": "George",
            "name": "",
            "avatar_template": "/user_avatar/forums.foundationdb.org/george/{size}/620_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Announcing the FoundationDB Record Layer",
      "id": 1018,
      "title": "Announcing the FoundationDB Record Layer",
      "slug": "announcing-the-foundationdb-record-layer",
      "posts_count": 2,
      "reply_count": 0,
      "highest_post_number": 2,
      "image_url": null,
      "created_at": "2019-01-15T00:10:52.338Z",
      "last_posted_at": "2019-01-15T00:11:00.429Z",
      "bumped": true,
      "bumped_at": "2019-01-15T00:10:52.417Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": true,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 5,
      "views": 823,
      "category_id": 12,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest single",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 1,
            "username": "davelester",
            "name": "Dave Lester",
            "avatar_template": "/user_avatar/forums.foundationdb.org/davelester/{size}/1927_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "About the Record Layer category",
      "id": 939,
      "title": "About the Record Layer category",
      "slug": "about-the-record-layer-category",
      "posts_count": 1,
      "reply_count": 0,
      "highest_post_number": 1,
      "image_url": null,
      "created_at": "2018-12-06T20:43:53.135Z",
      "last_posted_at": null,
      "bumped": true,
      "bumped_at": "2018-12-06T21:04:22.837Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": true,
      "unpinned": null,
      "excerpt": "Topics related to the FoundationDB Record Layer.",
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 882,
      "category_id": 12,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest single",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 1,
            "username": "davelester",
            "name": "Dave Lester",
            "avatar_template": "/user_avatar/forums.foundationdb.org/davelester/{size}/1927_2.png",
            "trust_level": 4
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 164,
        "username": "Imperatorx",
        "name": "",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/i/d2c977/{size}.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      },
      {
        "id": 946,
        "username": "rajivr",
        "name": "Rajiv M Ranganath",
        "avatar_template": "/user_avatar/forums.foundationdb.org/rajivr/{size}/1100_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      }
    ],
    "created_by": {
      "id": 946,
      "username": "rajivr",
      "name": "Rajiv M Ranganath",
      "avatar_template": "/user_avatar/forums.foundationdb.org/rajivr/{size}/1100_2.png"
    },
    "last_poster": {
      "id": 164,
      "username": "Imperatorx",
      "name": "",
      "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/i/d2c977/{size}.png"
    },
    "links": [
      {
        "url": "https://www.youtube.com/watch?v=KkeyjFMmIf8&t=622s",
        "title": "How FoundationDB powers SnowflakeDB's metadata! - Ashish Motivala, Snowflake Computing - YouTube",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 15,
        "user_id": 946,
        "domain": "www.youtube.com",
        "root_domain": "youtube.com"
      }
    ]
  },
  "bookmarks": []
}