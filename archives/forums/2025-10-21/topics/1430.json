{
  "post_stream": {
    "posts": [
      {
        "id": 4296,
        "name": "Devon",
        "username": "warshawd",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/w/ecccb3/{size}.png",
        "created_at": "2019-06-06T18:34:31.322Z",
        "cooked": "<p>My team would like me to develop a way to run FDB in a read-only mode, to protect against accidental writes categorically.  Our goal is to be able to flip a switch and prevent writes on any specific day, without changing our code to prevent writes in general, since we sometimes still need them.</p>\n<p>The simplest way I can think of doing this to satisfy our needs is to replace the <code>FDBTransaction</code> class in the java api (since we only use java) with one that throws an exception any time one of the write-specific methods from the <code>Transaction</code> interface is called, as long as the database has been acquired in a read-only mode.  If it\u2019s been acquired in write mode, it executes the methods normally.</p>\n<p>But if possible we\u2019d really like to get this upstream in some form or another so that it doesn\u2019t have the potential to break after every release.  So if there\u2019s a preferred way to do it in the c++ code (or someone who\u2019s already working on this) I\u2019d be more than happy to take that approach instead.  Has there been any discussion about this before?</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2019-06-06T18:34:31.322Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 377,
        "reads": 84,
        "readers_count": 83,
        "score": 1888.6,
        "yours": false,
        "topic_id": 1430,
        "topic_slug": "developing-a-read-only-fdb-driver",
        "display_username": "Devon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 376,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/developing-a-read-only-fdb-driver/1430/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 4298,
        "name": "Alex Miller",
        "username": "alexmiller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "created_at": "2019-06-07T00:26:18.978Z",
        "cooked": "<p>I was thinking that this could maybe be done by introducing an <code>ALLOW_WRITES</code> TransactionOption, and then use the support from <a href=\"https://github.com/apple/foundationdb/pull/1323\" rel=\"nofollow noopener\">Support setting Transaction options at the Database level</a> to make <code>ALLOW_WRITES=false</code> the default after opening the database, thus making all your transactions created read-only by default.</p>\n<p>However, it doesn\u2019t appear that <span class=\"hashtag\">#1323</span> applied to all transactions options, only some?  <a class=\"mention\" href=\"/u/alloc\">@alloc</a>, was that intentional?  Would extending it for this be fine?</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2019-06-07T00:26:49.359Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 85,
        "readers_count": 84,
        "score": 21.8,
        "yours": false,
        "topic_id": 1430,
        "topic_slug": "developing-a-read-only-fdb-driver",
        "display_username": "Alex Miller",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/apple/foundationdb/pull/1323",
            "internal": false,
            "reflection": false,
            "clicks": 21
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 13,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/developing-a-read-only-fdb-driver/1430/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 4299,
        "name": "Alec Grieser",
        "username": "alloc",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "created_at": "2019-06-07T06:56:24.916Z",
        "cooked": "<p>Yeah, <span class=\"hashtag\">#1323</span> was intentionally applied to only a subset of transaction options. In particular, the only options that I added were the ones I could make a good case for as something that made sense to apply to all transactions (like retry limit). So, for example, we\u2019d probably never want to add the <code>set_next_write_no_conflict_range</code> option globally.</p>\n<p>But I think it would be reasonable to add more. The change (at an implementation level) was to add more fields to the <code>DatabaseContext</code> struct and to use those values to initialize the transaction options, so adding more fields could make sense. The two that were the most questionably excluded were <code>set_disable_use_during_commit_protection</code> and <code>set_read_lock_aware</code>. The former in theory might make sense to disable globally and, in fact, is disabled globally already in Java as it\u2019s called by <code>Database::createTransaction</code>. Pushing that down might also make sense, though whether it\u2019s safe kind of depends on the language bindings.</p>\n<p>The <code>set_read_lock_aware</code> option, in theory, maybe should be set globally so that if one has a locked cluster, one can set it up so that one can easily read stale data from it without having to set the option manually each time. (Though maybe this is less important in FDB 6 than FDB 5 because of multi-region configurations don\u2019t require the option be set to read from secondary regions.) The problem is that <code>set_read_lock_aware</code> is implemented by (1) setting <code>lock_aware</code> and (2) disabling commits. And one can\u2019t \u201cundisable\u201d commits, so you get a kind of strange database object back.</p>\n<p>Which I guess brings me back to the original question. The only method that <em>must</em> actually throw an error to ensure the transaction is read-only is commit\u2014all other write-related operations will just be buffered locally. (Except maybe some keys in the <code>\\xff\\xff</code> keyspace? Maybe?) And the native client actually already has a way to disable commits (it\u2019s used by <code>set_read_lock_aware</code>) though it appears not to be settable by the user.</p>\n<p>Unlike the proposed option, I don\u2019t think it can be undone, so using it as a way of providing a \u201cread-only be default\u201d database might not work. But your client could implement something like \u201con transaction creation, if I am in a read only context, disable commits\u201d, and the only awkward thing is that doesn\u2019t play super well with how our retry loops work.</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2019-06-07T06:56:24.916Z",
        "reply_count": 0,
        "reply_to_post_number": 2,
        "quote_count": 0,
        "incoming_link_count": 3,
        "reads": 80,
        "readers_count": 79,
        "score": 30.8,
        "yours": false,
        "topic_id": 1430,
        "topic_slug": "developing-a-read-only-fdb-driver",
        "display_username": "Alec Grieser",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 13,
          "username": "alexmiller",
          "name": "Alex Miller",
          "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 8,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/developing-a-read-only-fdb-driver/1430/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 4304,
        "name": "Devon",
        "username": "warshawd",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/w/ecccb3/{size}.png",
        "created_at": "2019-06-09T03:53:16.778Z",
        "cooked": "<p>Thanks!  It sounds like the biggest issue you see is the inability to turn read-only mode off once commits have been disabled.  But it should be possible to address that by defaulting the database to a write-enabled mode, and then setting the disable writes option at the database level on a per client basis, correct?  I\u2019m out of the office next week, but I\u2019ll take a look at how set_read_lock_aware actually disables commits when I\u2019m back.</p>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2019-06-09T03:53:16.778Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 66,
        "readers_count": 65,
        "score": 23.0,
        "yours": false,
        "topic_id": 1430,
        "topic_slug": "developing-a-read-only-fdb-driver",
        "display_username": "Devon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 376,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/developing-a-read-only-fdb-driver/1430/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 4305,
        "name": "Alec Grieser",
        "username": "alloc",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "created_at": "2019-06-09T19:53:37.849Z",
        "cooked": "<p>Right. To be clear, I was really just commenting on what would happen on the client. (None of this affects the server. AFAIK, there isn\u2019t any way of locking the database in a read only mode at the server level.) In particular, as implemented, as there\u2019s no way for a given transaction to start allowing writes, a client who wishes to have a mix of read-only and read-write transactions from the same process can only do so by defaulting all transactions to read-write and then disabling writes (in a somewhat roundabout way) on transactions they want to be read only. It seemed borderline to me to have an option that would (surprise!) stop the client from making any commits at all, but I guess I can see the benefit of a whole process which could only read from the DB. (I don\u2019t have too many principled objections, but it seemed like the conservative thing to do when introducing a new API would be to leave out the things that were borderline if they could be added later.) I do think that the option should be explicit (e.g., a \u201cset read only\u201d option on the database object) rather than implicit (e.g., turns out, setting \u201cread lock aware\u201d also disables commits).</p>",
        "post_number": 5,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2019-06-09T19:53:37.849Z",
        "reply_count": 0,
        "reply_to_post_number": 4,
        "quote_count": 0,
        "incoming_link_count": 3,
        "reads": 66,
        "readers_count": 65,
        "score": 28.0,
        "yours": false,
        "topic_id": 1430,
        "topic_slug": "developing-a-read-only-fdb-driver",
        "display_username": "Alec Grieser",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 376,
          "username": "warshawd",
          "name": "Devon",
          "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/w/ecccb3/{size}.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 8,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/developing-a-read-only-fdb-driver/1430/5",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 4432,
        "name": "Devon",
        "username": "warshawd",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/w/ecccb3/{size}.png",
        "created_at": "2019-06-18T03:00:41.558Z",
        "cooked": "<p>I\u2019m not sure I\u2019m reading the code correctly, but it seems like the <code>TransactionOptions</code> option <code>readOnly</code> does exactly the right thing when enabled, canceling the commit of any transaction that does more than read.  It seems better to me to expose setting that option directly (as now I think it can only be set from calling <code>set_lock_aware</code> or <code>set_read_lock_aware</code>) by adding a new code for it in <code>fdb_c_options.g.h</code>.  Then <code>Database::createTransaction</code> could do the same thing it does with <code>set_disable_use_during_commit_protection</code> in the java bindings and enable it for every transaction, but only conditionally on the value of some new readOnly bool stored on the Database object.  If I\u2019m understanding everything correctly, that completely sidesteps the disabling/inability to \u201cundisable\u201d issue.</p>\n<p>For a little more context of our goals, this ticket is motivated by an issue we had where a CLI tool that was thought to be read-only was run on a database and ended up actually writing things.  We want stronger protection against accidental misuse.</p>",
        "post_number": 6,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2019-06-18T03:01:16.043Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 27,
        "reads": 58,
        "readers_count": 57,
        "score": 146.4,
        "yours": false,
        "topic_id": 1430,
        "topic_slug": "developing-a-read-only-fdb-driver",
        "display_username": "Devon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 376,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/developing-a-read-only-fdb-driver/1430/6",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 4482,
        "name": "Alec Grieser",
        "username": "alloc",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "created_at": "2019-06-20T01:18:10.223Z",
        "cooked": "<p>Yeah, I think a <code>setReadOnly</code> option added to transaction options would make sense.</p>\n<p>I think instead of using the Java-level <code>Database</code> object, you\u2019d want to add a new database option that was like <code>setReadOnly</code> or <code>setTransactionsAreReadOnly</code>. This mirrors the way we handle the <code>setTimeout</code> transaction option and the <code>setTransactionTimeout</code> database option. See <a href=\"https://github.com/apple/foundationdb/pull/1323\" rel=\"nofollow noopener\">PR #1323</a> for how that was added if you wanted a template. (But also see <a href=\"https://github.com/apple/foundationdb/issues/1435\" rel=\"nofollow noopener\">Issue #1435</a> for one bug in how that interacts with the multi-version client. That\u2026might not matter in this case. It would somewhat depend on whether the option would need to be reset on retry, I suppose. There were reasons to disable that with the other DB-wide options, but maybe not this one.) That approach would let the other bindings also get this change.</p>\n<p>I\u2019m not sure this totally sidesteps the \u201cundisable\u201d thing. It would mean that if the user had a mix of read only and read write transactions, they wouldn\u2019t be able to use the <code>setTransactionsAreReadOnly</code> option on a database; the only supported path for them would be to remember to set the <code>setReadOnly</code> option on their read-only transactions with the default being read-write. You could imagine a different API that was <code>setTransactionsAreDefaultReadOnly</code> (or something) that only sets the flag if the user doesn\u2019t also set a <code>setReadWrite</code> option on a database (thereby allowing them to, by default, disable writes, but still provide a way for them to opt-into it).</p>\n<p>That being said, it is probably fine if configuring the database as read only also made it so that the transaction was itself read only. We should probably document that and make that its formal contract if that\u2019s what we go with, but I think it has reasonable enough semantics. If there\u2019s a way forward (that doesn\u2019t necessarily have to be implemented now) to enable a \u201ctransactions are read only by default but can be made read-write\u201d feature, I think that would be for the best, but maybe not strictly necessary.</p>",
        "post_number": 7,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2019-06-20T01:18:10.223Z",
        "reply_count": 0,
        "reply_to_post_number": 6,
        "quote_count": 0,
        "incoming_link_count": 5,
        "reads": 56,
        "readers_count": 55,
        "score": 36.0,
        "yours": false,
        "topic_id": 1430,
        "topic_slug": "developing-a-read-only-fdb-driver",
        "display_username": "Alec Grieser",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/apple/foundationdb/pull/1323",
            "internal": false,
            "reflection": false,
            "clicks": 3
          },
          {
            "url": "https://github.com/apple/foundationdb/issues/1435",
            "internal": false,
            "reflection": false,
            "title": "Fix multi-version client behavior with transaction options that don't need to be reset on retry \u00b7 Issue #1435 \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 2
          }
        ],
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 376,
          "username": "warshawd",
          "name": "Devon",
          "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/w/ecccb3/{size}.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 8,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/developing-a-read-only-fdb-driver/1430/7",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 5169,
        "name": "Hieu Nguyen",
        "username": "ntrhieu89",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ntrhieu89/{size}/587_2.png",
        "created_at": "2019-09-26T17:44:50.006Z",
        "cooked": "<p>Is this feature available in the Java driver?</p>\n<p>I tried both <code>6.0.18</code> and <code>6.1.9</code> but did not see this option (read-only) at either database and transaction levels.</p>",
        "post_number": 8,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2019-09-26T17:45:08.422Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 49,
        "readers_count": 48,
        "score": 14.6,
        "yours": false,
        "topic_id": 1430,
        "topic_slug": "developing-a-read-only-fdb-driver",
        "display_username": "Hieu Nguyen",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 550,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/developing-a-read-only-fdb-driver/1430/8",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 5245,
        "name": "Devon",
        "username": "warshawd",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/w/ecccb3/{size}.png",
        "created_at": "2019-10-03T23:26:44.326Z",
        "cooked": "<p>We ended up developing a solution in our code rather than FDB\u2019s because we thought it would be simpler (it probably wasn\u2019t because of a lot of unexpected problems arising, but that\u2019s how hindsight goes).  So the feature does not exist in FDB.  There is still some discussion here of doing it in FDB proper so that we don\u2019t need to keep updating our solution with every FDB update, but it\u2019s not a high priority for us right now.</p>",
        "post_number": 9,
        "post_type": 1,
        "posts_count": 9,
        "updated_at": "2019-10-03T23:27:11.936Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 47,
        "readers_count": 46,
        "score": 24.2,
        "yours": false,
        "topic_id": 1430,
        "topic_slug": "developing-a-read-only-fdb-driver",
        "display_username": "Devon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 376,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/developing-a-read-only-fdb-driver/1430/9",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      4296,
      4298,
      4299,
      4304,
      4305,
      4432,
      4482,
      5169,
      5245
    ]
  },
  "timeline_lookup": [
    [
      1,
      2329
    ],
    [
      4,
      2327
    ],
    [
      5,
      2326
    ],
    [
      6,
      2318
    ],
    [
      7,
      2316
    ],
    [
      8,
      2217
    ],
    [
      9,
      2210
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "Developing a Read-Only FDB driver",
  "id": 1430,
  "title": "Developing a Read-Only FDB driver",
  "posts_count": 9,
  "created_at": "2019-06-06T18:34:31.241Z",
  "views": 1876,
  "reply_count": 3,
  "like_count": 1,
  "last_posted_at": "2019-10-03T23:26:44.326Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "developing-a-read-only-fdb-driver",
  "category_id": 8,
  "word_count": 1622,
  "deleted_at": null,
  "user_id": 376,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_1430",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 9,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 4,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "Read-only transactions",
      "id": 3412,
      "title": "Read-only transactions",
      "slug": "read-only-transactions",
      "posts_count": 5,
      "reply_count": 1,
      "highest_post_number": 5,
      "image_url": null,
      "created_at": "2022-06-30T16:32:48.057Z",
      "last_posted_at": "2022-07-03T01:46:03.779Z",
      "bumped": true,
      "bumped_at": "2022-07-03T01:46:03.779Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 2,
      "views": 776,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 419,
            "username": "doublemax",
            "name": "",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/d/8e7dd6/{size}.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 164,
            "username": "Imperatorx",
            "name": "",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/i/d2c977/{size}.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 15,
            "username": "markus.pilman",
            "name": "Markus Pilman",
            "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
            "admin": true,
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Read-only operations on FDBTransaction vs ReadSnapshot",
      "id": 616,
      "title": "Read-only operations on FDBTransaction vs ReadSnapshot",
      "slug": "read-only-operations-on-fdbtransaction-vs-readsnapshot",
      "posts_count": 2,
      "reply_count": 0,
      "highest_post_number": 2,
      "image_url": null,
      "created_at": "2018-08-08T04:10:24.449Z",
      "last_posted_at": "2018-08-08T16:36:57.441Z",
      "bumped": true,
      "bumped_at": "2018-08-08T16:36:57.441Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 2,
      "views": 687,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "What&rsquo;s better about read-only transactions?",
      "id": 1721,
      "title": "What's better about read-only transactions?",
      "slug": "whats-better-about-read-only-transactions",
      "posts_count": 2,
      "reply_count": 0,
      "highest_post_number": 2,
      "image_url": null,
      "created_at": "2019-11-08T04:39:51.073Z",
      "last_posted_at": "2019-11-08T06:00:30.730Z",
      "bumped": true,
      "bumped_at": "2019-11-08T06:00:30.730Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [
        "performance"
      ],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 581,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 421,
            "username": "rbranson",
            "name": "Rick Branson",
            "avatar_template": "/user_avatar/forums.foundationdb.org/rbranson/{size}/406_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "A few design-pattern + check-my-understanding questions",
      "id": 1153,
      "title": "A few design-pattern + check-my-understanding questions",
      "slug": "a-few-design-pattern-check-my-understanding-questions",
      "posts_count": 10,
      "reply_count": 6,
      "highest_post_number": 10,
      "image_url": null,
      "created_at": "2019-02-19T15:18:58.329Z",
      "last_posted_at": "2019-02-21T19:51:53.686Z",
      "bumped": true,
      "bumped_at": "2019-02-21T19:51:53.686Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 2273,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 519,
            "username": "JamesThompson",
            "name": "James Thompson",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/j/c67d28/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 173,
            "username": "jkominek",
            "name": "Jay Kominek",
            "avatar_template": "/user_avatar/forums.foundationdb.org/jkominek/{size}/140_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "[Java] why is setReadVersion not part of ReadTransaction/ReadSnapshot",
      "id": 646,
      "title": "[Java] why is setReadVersion not part of ReadTransaction/ReadSnapshot",
      "slug": "java-why-is-setreadversion-not-part-of-readtransaction-readsnapshot",
      "posts_count": 15,
      "reply_count": 12,
      "highest_post_number": 15,
      "image_url": null,
      "created_at": "2018-08-19T08:03:20.405Z",
      "last_posted_at": "2018-08-22T02:19:45.224Z",
      "bumped": true,
      "bumped_at": "2018-08-22T02:19:45.224Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 3,
      "views": 983,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 376,
        "username": "warshawd",
        "name": "Devon",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/w/ecccb3/{size}.png",
        "post_count": 4,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 8,
        "username": "alloc",
        "name": "Alec Grieser",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "post_count": 3,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      },
      {
        "id": 13,
        "username": "alexmiller",
        "name": "Alex Miller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      },
      {
        "id": 550,
        "username": "ntrhieu89",
        "name": "Hieu Nguyen",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ntrhieu89/{size}/587_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      }
    ],
    "created_by": {
      "id": 376,
      "username": "warshawd",
      "name": "Devon",
      "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/w/ecccb3/{size}.png"
    },
    "last_poster": {
      "id": 376,
      "username": "warshawd",
      "name": "Devon",
      "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/w/ecccb3/{size}.png"
    },
    "links": [
      {
        "url": "https://github.com/apple/foundationdb/pull/1323",
        "title": null,
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 24,
        "user_id": 8,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://github.com/apple/foundationdb/issues/1435",
        "title": "Fix multi-version client behavior with transaction options that don't need to be reset on retry \u00b7 Issue #1435 \u00b7 apple/foundationdb \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 2,
        "user_id": 8,
        "domain": "github.com",
        "root_domain": "github.com"
      }
    ]
  },
  "bookmarks": []
}