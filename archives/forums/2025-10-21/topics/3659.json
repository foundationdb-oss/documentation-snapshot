{
  "post_stream": {
    "posts": [
      {
        "id": 12016,
        "name": "",
        "username": "Imperatorx",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/i/d2c977/{size}.png",
        "created_at": "2022-11-16T12:20:03.919Z",
        "cooked": "<p>7.1.25:</p>\n<p>I had a single instance cluster with 6.8 GB data and <strong>SSD</strong> storage engine configured. There were no clients connected, and the used space was constant over time:</p>\n<pre><code class=\"lang-auto\">  Sum of key-value sizes - 6.800 GB\n  Disk space used        - 8.409 GB\n</code></pre>\n<p>Then the cluster was reconfigured using <code>configure ssd-redwood-1-experimental storage_migration_type=aggressive</code>.</p>\n<p>After the data migration completed, the <code>storage_migration_type</code> was disabled, and redwood compressed a lot of keys impressively:</p>\n<pre><code class=\"lang-auto\">  Sum of key-value sizes - 6.800 GB\n  Disk space used        - 6.501 GB\n</code></pre>\n<p>However, with <strong>no clients connected</strong> and no backups running, the database grew slowly but steadily:</p>\n<pre><code class=\"lang-auto\">  02:00:\n  Sum of key-value sizes - 6.800 GB\n  Disk space used        - 6.504 GB\n  \n  11:00:\n  Sum of key-value sizes - 6.800 GB\n  Disk space used        - 6.842 GB\n\n  13:00:\n  Sum of key-value sizes - 6.800 GB\n  Disk space used        - 6.922 GB\n</code></pre>\n<p>So the disk space grew by 10% in 12 hours.</p>\n<p>I could replicate the issue on a linux server, a windows desktop and a docker container too. Is this a redwood bug?</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 16,
        "updated_at": "2022-11-16T12:22:08.989Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 269,
        "reads": 52,
        "readers_count": 51,
        "score": 1345.4,
        "yours": false,
        "topic_id": 3659,
        "topic_slug": "continous-growth-of-redwood-disk-usage-with-no-client-connected-possible-bug",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://forums.foundationdb.org/t/is-it-possible-to-enable-perpetual-storage-wiggle-at-the-shard-level-instead-of-the-process-level/4760/4",
            "internal": true,
            "reflection": true,
            "title": "Is it possible to enable `perpetual_storage_wiggle` at the 'shard' level instead of the 'process' level?",
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 164,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/continous-growth-of-redwood-disk-usage-with-no-client-connected-possible-bug/3659/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 12017,
        "name": "Steve Atherton",
        "username": "SteavedHams",
        "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png",
        "created_at": "2022-11-16T18:46:35.590Z",
        "cooked": "<p>It\u2019s not a bug.  Each Redwood instance will accumulate up to 4GB (configurable, this is the default) of page updates that haven\u2019t been flush to their primary page location.  This flushing is done when the page update rolls off of the 4GB window, and is skipped if another update for that page exists further down in the window.  This design is to save write ops and associated overheads, but at the cost of disk space.  The feature is controlled by the <code>REDWOOD_REMAP_CLEANUP_WINDOW_BYTES</code> knob and you can set it to 0.</p>\n<p>Related to this, Redwood files do not shrink, instead freed pages are maintained in internal free lists and reused.  This is also a design decision to reduce IO and CPU overhead, as maintaining the necessary metadata to shrink files is expensive and normally in a performance focused deployment FDB would be given dedicated disks.</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 16,
        "updated_at": "2022-11-16T18:46:35.590Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 49,
        "readers_count": 48,
        "score": 29.8,
        "yours": false,
        "topic_id": 3659,
        "topic_slug": "continous-growth-of-redwood-disk-usage-with-no-client-connected-possible-bug",
        "display_username": "Steve Atherton",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": "",
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 7,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/continous-growth-of-redwood-disk-usage-with-no-client-connected-possible-bug/3659/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 12028,
        "name": "",
        "username": "Imperatorx",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/i/d2c977/{size}.png",
        "created_at": "2022-11-18T10:49:52.681Z",
        "cooked": "<p>Thank you, the constant size optimization makes sense. However, I configured one of our test servers, and let it run, but it overshot the 4GB default limit, and size is still increasing, see image below:<br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://global.discourse-cdn.com/foundationdb/original/2X/8/8617cf32d9aa2712e5467b9d3de25fb4d069e6e5.png\" data-download-href=\"/uploads/short-url/j8eZwHNFM80w6ETXTqQtvRzPaiF.png?dl=1\" title=\"redwood\" rel=\"noopener nofollow ugc\"><img src=\"https://global.discourse-cdn.com/foundationdb/original/2X/8/8617cf32d9aa2712e5467b9d3de25fb4d069e6e5.png\" alt=\"redwood\" data-base62-sha1=\"j8eZwHNFM80w6ETXTqQtvRzPaiF\" width=\"690\" height=\"334\" data-dominant-color=\"EDECED\"><div class=\"meta\">\n<svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">redwood</span><span class=\"informations\">981\u00d7476 43 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg>\n</div></a></div></p>\n<p>(ignore the drops to zero, those are server restarts)</p>\n<p>The size of key-values in fairly constant, and now the size of the DB is twice the size of the test data.</p>\n<p>The server has 2 types of workloads:</p>\n<ul>\n<li>Frequently: Insert immutable records, keep them for 2 days, delete older than 2 days records in ranges every 1 minute. hundreds to a thousand rows per second.</li>\n<li>Infrequently: Update the same 50 records about 20 times in 5 minutes, then keep them forever unchanged, move to the next 50 records.</li>\n</ul>\n<p>What other factors may be at play here?</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 16,
        "updated_at": "2022-11-18T13:49:18.987Z",
        "reply_count": 0,
        "reply_to_post_number": 2,
        "quote_count": 0,
        "incoming_link_count": 2,
        "reads": 43,
        "readers_count": 42,
        "score": 18.6,
        "yours": false,
        "topic_id": 3659,
        "topic_slug": "continous-growth-of-redwood-disk-usage-with-no-client-connected-possible-bug",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://global.discourse-cdn.com/foundationdb/original/2X/8/8617cf32d9aa2712e5467b9d3de25fb4d069e6e5.png",
            "internal": false,
            "reflection": false,
            "title": "8617cf32d9aa2712e5467b9d3de25fb4d069e6e5.png",
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 7,
          "username": "SteavedHams",
          "name": "Steve Atherton",
          "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 164,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/continous-growth-of-redwood-disk-usage-with-no-client-connected-possible-bug/3659/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 12050,
        "name": "Steve Atherton",
        "username": "SteavedHams",
        "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png",
        "created_at": "2022-11-22T23:31:08.051Z",
        "cooked": "<p>It doesn\u2019t sound like your workload would be generating a lot of page slack.</p>\n<p>Redwood logs a bunch of histograms, can you check your trace logs for the following?</p>\n<p><code>Type=Histogram Group=modifyFillPct Op=L1</code><br>\n<code>Type=Histogram Group=buildFillPct Op=L1</code></p>\n<p>Each logged event covers a 30 second period and shows bucket counts for fill percentages (100% = 1.0) for updated leaf pages and newly built leaf pages generated from page splits, respectively.</p>\n<p>Also, what do you see in <code>Type=StorageMetrics</code> events for the fields</p>\n<pre><code class=\"lang-auto\">KvstoreBytesUsed\nKvstoreBytesFree\nKvstoreBytesAvailable\nKvstoreBytesTotal\nKvstoreBytesTemp\n</code></pre>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 16,
        "updated_at": "2022-11-23T23:38:25.027Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 39,
        "readers_count": 38,
        "score": 7.8,
        "yours": false,
        "topic_id": 3659,
        "topic_slug": "continous-growth-of-redwood-disk-usage-with-no-client-connected-possible-bug",
        "display_username": "Steve Atherton",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": "",
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 7,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/continous-growth-of-redwood-disk-usage-with-no-client-connected-possible-bug/3659/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 12051,
        "name": "Steve Atherton",
        "username": "SteavedHams",
        "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png",
        "created_at": "2022-11-22T23:34:33.192Z",
        "cooked": "<p>Also, can you restart your StorageServer process and post these events?</p>\n<pre><code class=\"lang-auto\">Type=RedwoodRecoveredPager\nType=RedwoodRecoveredBTree\n</code></pre>",
        "post_number": 5,
        "post_type": 1,
        "posts_count": 16,
        "updated_at": "2022-11-22T23:34:33.192Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 39,
        "readers_count": 38,
        "score": 12.8,
        "yours": false,
        "topic_id": 3659,
        "topic_slug": "continous-growth-of-redwood-disk-usage-with-no-client-connected-possible-bug",
        "display_username": "Steve Atherton",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": "",
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 7,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/continous-growth-of-redwood-disk-usage-with-no-client-connected-possible-bug/3659/5",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 12057,
        "name": "",
        "username": "Imperatorx",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/i/d2c977/{size}.png",
        "created_at": "2022-11-23T11:48:07.468Z",
        "cooked": "<p>Thank you, the changed and new pages per bin (raw data below):</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://global.discourse-cdn.com/foundationdb/original/2X/2/216b86fb68e9b8a168d60eea0ecb7e414b5d97e2.png\" data-download-href=\"/uploads/short-url/4LE8dTjFMzbWw34qtia61BAxGqm.png?dl=1\" title=\"image\" rel=\"noopener nofollow ugc\"><img src=\"https://global.discourse-cdn.com/foundationdb/original/2X/2/216b86fb68e9b8a168d60eea0ecb7e414b5d97e2.png\" alt=\"image\" data-base62-sha1=\"4LE8dTjFMzbWw34qtia61BAxGqm\" width=\"414\" height=\"500\" data-dominant-color=\"F1F2F6\"><div class=\"meta\">\n<svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">486\u00d7586 6.49 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg>\n</div></a></div></p>\n<p>This is from a new experiment that is barely above the 4 GB optimization overhead, as I had to convert back to SSD due to the size growth. I even tried to backup, delete the FDB installation (as it was updated from 6.3 to 7.1), install 7.1 and restore. The size of raw data (k+v ) is reported as  6.3 GB.</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://global.discourse-cdn.com/foundationdb/original/2X/e/ea9f46e41e1e7e397543e75960531bfc582a0cd5.png\" data-download-href=\"/uploads/short-url/xtyYAM1S0AifxBb2vtUrO59YmLb.png?dl=1\" title=\"backup\" rel=\"noopener nofollow ugc\"><img src=\"https://global.discourse-cdn.com/foundationdb/optimized/2X/e/ea9f46e41e1e7e397543e75960531bfc582a0cd5_2_690x309.png\" alt=\"backup\" data-base62-sha1=\"xtyYAM1S0AifxBb2vtUrO59YmLb\" width=\"690\" height=\"309\" srcset=\"https://global.discourse-cdn.com/foundationdb/optimized/2X/e/ea9f46e41e1e7e397543e75960531bfc582a0cd5_2_690x309.png, https://global.discourse-cdn.com/foundationdb/optimized/2X/e/ea9f46e41e1e7e397543e75960531bfc582a0cd5_2_1035x463.png 1.5x, https://global.discourse-cdn.com/foundationdb/original/2X/e/ea9f46e41e1e7e397543e75960531bfc582a0cd5.png 2x\" data-dominant-color=\"F2F1F1\"><div class=\"meta\">\n<svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">backup</span><span class=\"informations\">1306\u00d7586 54.1 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg>\n</div></a></div></p>\n<p>After server restart:</p>\n<pre><code class=\"lang-auto\">&lt;Event Severity=\"10\" Time=\"1669196660.889803\" DateTime=\"2022-11-23T09:44:20Z\" Type=\"RedwoodRecoveredBTree\" ID=\"0000000000000000\" FileName=\"/var/lib/foundationdb/data/4500/storage-f87bfbd4641191514656a281b157560d.redwood-v1\"\nOpenedExisting=\"1\" \nLatestVersion=\"166473\" \nLazyClearQueueRecords=\"0\" \nLazyClearQueuePages=\"1\" \nLazyClearQueueRecordsPerPage=\"0\" \nThreadID=\"11653865267480727846\" Machine=\"127.0.0.1:4500\" LogGroup=\"default\" Roles=\"SS\" /&gt;\n\n\n&lt;Event Severity=\"10\" Time=\"1669196660.889803\" DateTime=\"2022-11-23T09:44:20Z\" Type=\"RedwoodRecoveredPager\" ID=\"0000000000000000\" \nOpenedExisting=\"1\" FileName=\"/var/lib/foundationdb/data/4500/storage-f87bfbd4641191514656a281b157560d.redwood-v1\" \nLogicalFileSize=\"13747232768\" \nPhysicalFileSize=\"13762560000\" \nCommittedVersion=\"166473\" \nLogicalPageSize=\"8192\" \nPhysicalPageSize=\"8192\" \nRemapQueueRecords=\"498249\" \nRemapQueuePages=\"1906\" \nRemapQueueRecordsPerPage=\"261.411\" \nFreeQueueRecords=\"2137\" \nFreeQueuePages=\"19\" \nFreeQueueRecordsPerPage=\"112.474\" \nDelayedFreeQueueRecords=\"81\" \nDelayedFreeQueuePages=\"2\" \nDelayedFreeQueueRecordsPerPage=\"40.5\" \nUsedExtentQueueRecords=\"2\" \nUsedExtentQueuePages=\"3\" \nUsedExtentQueueRecordsPerPage=\"0.666667\" \nFreeExtentQueueRecords=\"2\" \nFreeExtentQueuePages=\"3\" \nFreeExtentQueueRecordsPerPage=\"0.666667\" \nStorageBytesUsed=\"13728890880\" \nStorageBytesTemp=\"4081655808\" \nStorageBytesTotal=\"51835101184\" \nStorageBytesFree=\"31935422464\" \nStorageBytesAvailable=\"31953764352\" \nThreadID=\"11653865267480727846\" Machine=\"127.0.0.1:4500\" LogGroup=\"default\" Roles=\"SS\" /&gt;\n</code></pre>\n<p>Raw data:</p>\n<pre><code class=\"lang-auto\">&lt;Event Severity=\"10\" Time=\"1669195789.951340\" DateTime=\"2022-11-23T09:29:49Z\" Type=\"Histogram\" ID=\"0000000000000000\" Group=\"modifyFillPct\" Op=\"L1\" Unit=\"percentage\" Elapsed=\"30.0042\" LessThan0.040000=\"1\" LessThan0.160000=\"29\" LessThan0.240000=\"3\" LessThan0.280000=\"20\" LessThan0.320000=\"151\" LessThan0.360000=\"210\" LessThan0.400000=\"43\" LessThan0.440000=\"9\" LessThan0.480000=\"22\" LessThan0.520000=\"13\" LessThan0.560000=\"29\" LessThan0.600000=\"88\" LessThan0.640000=\"51\" LessThan0.680000=\"266\" LessThan0.720000=\"675\" LessThan0.760000=\"643\" LessThan0.800000=\"533\" LessThan0.840000=\"638\" LessThan0.880000=\"599\" LessThan0.920000=\"640\" LessThan0.960000=\"999\" LessThan1.000000=\"1405\" TotalCount=\"7067\" ThreadID=\"2558203997968097348\" Machine=\"127.0.0.1:4500\" LogGroup=\"default\" Roles=\"CC,CD,CP,DD,GP,MS,RK,RV,SS,TL\" /&gt;\n&lt;Event Severity=\"10\" Time=\"1669195819.951355\" DateTime=\"2022-11-23T09:30:19Z\" Type=\"Histogram\" ID=\"0000000000000000\" Group=\"modifyFillPct\" Op=\"L1\" Unit=\"percentage\" Elapsed=\"30\" LessThan0.040000=\"1\" LessThan0.160000=\"1\" LessThan0.200000=\"19\" LessThan0.240000=\"3\" LessThan0.280000=\"18\" LessThan0.320000=\"140\" LessThan0.360000=\"173\" LessThan0.400000=\"29\" LessThan0.440000=\"11\" LessThan0.480000=\"18\" LessThan0.520000=\"16\" LessThan0.560000=\"19\" LessThan0.600000=\"81\" LessThan0.640000=\"51\" LessThan0.680000=\"266\" LessThan0.720000=\"660\" LessThan0.760000=\"596\" LessThan0.800000=\"549\" LessThan0.840000=\"586\" LessThan0.880000=\"615\" LessThan0.920000=\"565\" LessThan0.960000=\"894\" LessThan1.000000=\"1170\" TotalCount=\"6481\" ThreadID=\"2558203997968097348\" Machine=\"127.0.0.1:4500\" LogGroup=\"default\" Roles=\"CC,CD,CP,DD,GP,MS,RK,RV,SS,TL\" /&gt;\n&lt;Event Severity=\"10\" Time=\"1669195849.951426\" DateTime=\"2022-11-23T09:30:49Z\" Type=\"Histogram\" ID=\"0000000000000000\" Group=\"modifyFillPct\" Op=\"L1\" Unit=\"percentage\" Elapsed=\"30.0001\" LessThan0.040000=\"1\" LessThan0.160000=\"53\" LessThan0.240000=\"8\" LessThan0.280000=\"26\" LessThan0.320000=\"159\" LessThan0.360000=\"253\" LessThan0.400000=\"35\" LessThan0.440000=\"9\" LessThan0.480000=\"17\" LessThan0.520000=\"25\" LessThan0.560000=\"15\" LessThan0.600000=\"87\" LessThan0.640000=\"56\" LessThan0.680000=\"303\" LessThan0.720000=\"717\" LessThan0.760000=\"638\" LessThan0.800000=\"661\" LessThan0.840000=\"711\" LessThan0.880000=\"726\" LessThan0.920000=\"674\" LessThan0.960000=\"1015\" LessThan1.000000=\"1467\" TotalCount=\"7656\" ThreadID=\"2558203997968097348\" Machine=\"127.0.0.1:4500\" LogGroup=\"default\" Roles=\"CC,CD,CP,DD,GP,MS,RK,RV,SS,TL\" /&gt;\n&lt;Event Severity=\"10\" Time=\"1669195879.951443\" DateTime=\"2022-11-23T09:31:19Z\" Type=\"Histogram\" ID=\"0000000000000000\" Group=\"modifyFillPct\" Op=\"L1\" Unit=\"percentage\" Elapsed=\"30\" LessThan0.040000=\"1\" LessThan0.160000=\"2\" LessThan0.240000=\"6\" LessThan0.280000=\"21\" LessThan0.320000=\"182\" LessThan0.360000=\"145\" LessThan0.400000=\"21\" LessThan0.440000=\"15\" LessThan0.480000=\"14\" LessThan0.520000=\"23\" LessThan0.560000=\"22\" LessThan0.600000=\"88\" LessThan0.640000=\"57\" LessThan0.680000=\"269\" LessThan0.720000=\"700\" LessThan0.760000=\"659\" LessThan0.800000=\"623\" LessThan0.840000=\"707\" LessThan0.880000=\"666\" LessThan0.920000=\"696\" LessThan0.960000=\"958\" LessThan1.000000=\"1179\" TotalCount=\"7054\" ThreadID=\"2558203997968097348\" Machine=\"127.0.0.1:4500\" LogGroup=\"default\" Roles=\"CC,CD,CP,DD,GP,MS,RK,RV,SS,TL\" /&gt;\n&lt;Event Severity=\"10\" Time=\"1669195909.952585\" DateTime=\"2022-11-23T09:31:49Z\" Type=\"Histogram\" ID=\"0000000000000000\" Group=\"modifyFillPct\" Op=\"L1\" Unit=\"percentage\" Elapsed=\"30.0011\" LessThan0.040000=\"1\" LessThan0.120000=\"1\" LessThan0.160000=\"1\" LessThan0.240000=\"2\" LessThan0.280000=\"21\" LessThan0.320000=\"207\" LessThan0.360000=\"231\" LessThan0.400000=\"37\" LessThan0.440000=\"13\" LessThan0.480000=\"17\" LessThan0.520000=\"21\" LessThan0.560000=\"21\" LessThan0.600000=\"91\" LessThan0.640000=\"61\" LessThan0.680000=\"296\" LessThan0.720000=\"745\" LessThan0.760000=\"658\" LessThan0.800000=\"623\" LessThan0.840000=\"692\" LessThan0.880000=\"641\" LessThan0.920000=\"608\" LessThan0.960000=\"1022\" LessThan1.000000=\"1412\" TotalCount=\"7422\" ThreadID=\"2558203997968097348\" Machine=\"127.0.0.1:4500\" LogGroup=\"default\" Roles=\"CC,CD,CP,DD,GP,MS,RK,RV,SS,TL\" /&gt;\n&lt;Event Severity=\"10\" Time=\"1669195939.952603\" DateTime=\"2022-11-23T09:32:19Z\" Type=\"Histogram\" ID=\"0000000000000000\" Group=\"modifyFillPct\" Op=\"L1\" Unit=\"percentage\" Elapsed=\"30\" LessThan0.040000=\"1\" LessThan0.160000=\"1\" LessThan0.240000=\"2\" LessThan0.280000=\"40\" LessThan0.320000=\"173\" LessThan0.360000=\"196\" LessThan0.400000=\"37\" LessThan0.440000=\"9\" LessThan0.480000=\"16\" LessThan0.520000=\"23\" LessThan0.560000=\"10\" LessThan0.600000=\"84\" LessThan0.640000=\"58\" LessThan0.680000=\"264\" LessThan0.720000=\"538\" LessThan0.760000=\"491\" LessThan0.800000=\"505\" LessThan0.840000=\"533\" LessThan0.880000=\"535\" LessThan0.920000=\"534\" LessThan0.960000=\"827\" LessThan1.000000=\"1118\" TotalCount=\"5995\" ThreadID=\"2558203997968097348\" Machine=\"127.0.0.1:4500\" LogGroup=\"default\" Roles=\"CC,CD,CP,DD,GP,MS,RK,RV,SS,TL\" /&gt;\n&lt;Event Severity=\"10\" Time=\"1669195969.952622\" DateTime=\"2022-11-23T09:32:49Z\" Type=\"Histogram\" ID=\"0000000000000000\" Group=\"modifyFillPct\" Op=\"L1\" Unit=\"percentage\" Elapsed=\"30\" LessThan0.040000=\"2\" LessThan0.160000=\"1\" LessThan0.240000=\"2\" LessThan0.280000=\"20\" LessThan0.320000=\"170\" LessThan0.360000=\"207\" LessThan0.400000=\"48\" LessThan0.440000=\"9\" LessThan0.480000=\"19\" LessThan0.520000=\"19\" LessThan0.560000=\"30\" LessThan0.600000=\"84\" LessThan0.640000=\"57\" LessThan0.680000=\"295\" LessThan0.720000=\"722\" LessThan0.760000=\"635\" LessThan0.800000=\"563\" LessThan0.840000=\"676\" LessThan0.880000=\"708\" LessThan0.920000=\"683\" LessThan0.960000=\"1041\" LessThan1.000000=\"1425\" TotalCount=\"7416\" ThreadID=\"2558203997968097348\" Machine=\"127.0.0.1:4500\" LogGroup=\"default\" Roles=\"CC,CD,CP,DD,GP,MS,RK,RV,SS,TL\" /&gt;\n&lt;Event Severity=\"10\" Time=\"1669195999.952729\" DateTime=\"2022-11-23T09:33:19Z\" Type=\"Histogram\" ID=\"0000000000000000\" Group=\"modifyFillPct\" Op=\"L1\" Unit=\"percentage\" Elapsed=\"30.0001\" LessThan0.040000=\"1\" LessThan0.160000=\"1\" LessThan0.240000=\"34\" LessThan0.280000=\"17\" LessThan0.320000=\"153\" LessThan0.360000=\"160\" LessThan0.400000=\"33\" LessThan0.440000=\"6\" LessThan0.480000=\"14\" LessThan0.520000=\"17\" LessThan0.560000=\"24\" LessThan0.600000=\"80\" LessThan0.640000=\"44\" LessThan0.680000=\"257\" LessThan0.720000=\"589\" LessThan0.760000=\"549\" LessThan0.800000=\"544\" LessThan0.840000=\"539\" LessThan0.880000=\"641\" LessThan0.920000=\"576\" LessThan0.960000=\"883\" LessThan1.000000=\"1141\" TotalCount=\"6303\" ThreadID=\"2558203997968097348\" Machine=\"127.0.0.1:4500\" LogGroup=\"default\" Roles=\"CC,CD,CP,DD,GP,MS,RK,RV,SS,TL\" /&gt;\n&lt;Event Severity=\"10\" Time=\"1669196029.954096\" DateTime=\"2022-11-23T09:33:49Z\" Type=\"Histogram\" ID=\"0000000000000000\" Group=\"modifyFillPct\" Op=\"L1\" Unit=\"percentage\" Elapsed=\"30.0014\" LessThan0.080000=\"1\" LessThan0.200000=\"1\" LessThan0.240000=\"7\" LessThan0.280000=\"21\" LessThan0.320000=\"210\" LessThan0.360000=\"223\" LessThan0.400000=\"45\" LessThan0.440000=\"13\" LessThan0.480000=\"16\" LessThan0.520000=\"16\" LessThan0.560000=\"24\" LessThan0.600000=\"102\" LessThan0.640000=\"52\" LessThan0.680000=\"239\" LessThan0.720000=\"606\" LessThan0.760000=\"610\" LessThan0.800000=\"509\" LessThan0.840000=\"557\" LessThan0.880000=\"620\" LessThan0.920000=\"544\" LessThan0.960000=\"874\" LessThan1.000000=\"1334\" TotalCount=\"6624\" ThreadID=\"2558203997968097348\" Machine=\"127.0.0.1:4500\" LogGroup=\"default\" Roles=\"CC,CD,CP,DD,GP,MS,RK,RV,SS,TL\" /&gt;\n\n\n&lt;Event Severity=\"10\" Time=\"1669196389.955369\" DateTime=\"2022-11-23T09:39:49Z\" Type=\"Histogram\" ID=\"0000000000000000\" Group=\"buildFillPct\" Op=\"L1\" Unit=\"percentage\" Elapsed=\"30\" LessThan0.040000=\"2\" LessThan0.080000=\"1\" LessThan0.120000=\"3\" LessThan0.160000=\"3\" LessThan0.200000=\"2\" LessThan0.240000=\"5\" LessThan0.280000=\"7\" LessThan0.320000=\"10\" LessThan0.360000=\"270\" LessThan0.400000=\"54\" LessThan0.440000=\"17\" LessThan0.480000=\"14\" LessThan0.520000=\"7\" LessThan0.560000=\"11\" LessThan0.600000=\"15\" LessThan0.640000=\"7\" LessThan0.680000=\"347\" LessThan0.720000=\"164\" LessThan0.760000=\"255\" LessThan0.800000=\"233\" LessThan0.840000=\"248\" LessThan0.880000=\"236\" LessThan0.920000=\"293\" LessThan0.960000=\"303\" LessThan1.000000=\"338\" LessThan1.040000=\"2\" TotalCount=\"2847\" ThreadID=\"2558203997968097348\" Machine=\"127.0.0.1:4500\" LogGroup=\"default\" Roles=\"CC,CD,CP,DD,GP,MS,RK,RV,SS,TL\" /&gt;\n&lt;Event Severity=\"10\" Time=\"1669196419.956688\" DateTime=\"2022-11-23T09:40:19Z\" Type=\"Histogram\" ID=\"0000000000000000\" Group=\"buildFillPct\" Op=\"L1\" Unit=\"percentage\" Elapsed=\"30.0013\" LessThan0.120000=\"1\" LessThan0.200000=\"2\" LessThan0.240000=\"3\" LessThan0.280000=\"3\" LessThan0.320000=\"12\" LessThan0.360000=\"281\" LessThan0.400000=\"65\" LessThan0.440000=\"17\" LessThan0.480000=\"19\" LessThan0.520000=\"7\" LessThan0.560000=\"8\" LessThan0.600000=\"6\" LessThan0.640000=\"13\" LessThan0.680000=\"353\" LessThan0.720000=\"190\" LessThan0.760000=\"250\" LessThan0.800000=\"246\" LessThan0.840000=\"237\" LessThan0.880000=\"255\" LessThan0.920000=\"277\" LessThan0.960000=\"284\" LessThan1.000000=\"315\" LessThan1.040000=\"1\" TotalCount=\"2845\" ThreadID=\"2558203997968097348\" Machine=\"127.0.0.1:4500\" LogGroup=\"default\" Roles=\"CC,CD,CP,DD,GP,MS,RK,RV,SS,TL\" /&gt;\n&lt;Event Severity=\"10\" Time=\"1669196449.956706\" DateTime=\"2022-11-23T09:40:49Z\" Type=\"Histogram\" ID=\"0000000000000000\" Group=\"buildFillPct\" Op=\"L1\" Unit=\"percentage\" Elapsed=\"30\" LessThan0.040000=\"3\" LessThan0.080000=\"3\" LessThan0.120000=\"3\" LessThan0.160000=\"3\" LessThan0.200000=\"6\" LessThan0.240000=\"3\" LessThan0.280000=\"4\" LessThan0.320000=\"19\" LessThan0.360000=\"239\" LessThan0.400000=\"67\" LessThan0.440000=\"11\" LessThan0.480000=\"17\" LessThan0.520000=\"7\" LessThan0.560000=\"10\" LessThan0.600000=\"12\" LessThan0.640000=\"4\" LessThan0.680000=\"310\" LessThan0.720000=\"196\" LessThan0.760000=\"261\" LessThan0.800000=\"234\" LessThan0.840000=\"244\" LessThan0.880000=\"271\" LessThan0.920000=\"283\" LessThan0.960000=\"263\" LessThan1.000000=\"327\" TotalCount=\"2800\" ThreadID=\"2558203997968097348\" Machine=\"127.0.0.1:4500\" LogGroup=\"default\" Roles=\"CC,CD,CP,DD,GP,MS,RK,RV,SS,TL\" /&gt;\n&lt;Event Severity=\"10\" Time=\"1669196479.956742\" DateTime=\"2022-11-23T09:41:19Z\" Type=\"Histogram\" ID=\"0000000000000000\" Group=\"buildFillPct\" Op=\"L1\" Unit=\"percentage\" Elapsed=\"30\" LessThan0.040000=\"1\" LessThan0.080000=\"3\" LessThan0.120000=\"1\" LessThan0.160000=\"3\" LessThan0.200000=\"1\" LessThan0.240000=\"3\" LessThan0.280000=\"5\" LessThan0.320000=\"13\" LessThan0.360000=\"260\" LessThan0.400000=\"82\" LessThan0.440000=\"7\" LessThan0.480000=\"19\" LessThan0.520000=\"6\" LessThan0.560000=\"11\" LessThan0.600000=\"10\" LessThan0.640000=\"13\" LessThan0.680000=\"354\" LessThan0.720000=\"155\" LessThan0.760000=\"233\" LessThan0.800000=\"300\" LessThan0.840000=\"257\" LessThan0.880000=\"252\" LessThan0.920000=\"259\" LessThan0.960000=\"285\" LessThan1.000000=\"347\" TotalCount=\"2880\" ThreadID=\"2558203997968097348\" Machine=\"127.0.0.1:4500\" LogGroup=\"default\" Roles=\"CC,CD,CP,DD,GP,MS,RK,RV,SS,TL\" /&gt;\n&lt;Event Severity=\"10\" Time=\"1669196509.956984\" DateTime=\"2022-11-23T09:41:49Z\" Type=\"Histogram\" ID=\"0000000000000000\" Group=\"buildFillPct\" Op=\"L1\" Unit=\"percentage\" Elapsed=\"30.0002\" LessThan0.040000=\"2\" LessThan0.080000=\"2\" LessThan0.120000=\"1\" LessThan0.160000=\"2\" LessThan0.200000=\"4\" LessThan0.240000=\"5\" LessThan0.280000=\"7\" LessThan0.320000=\"19\" LessThan0.360000=\"246\" LessThan0.400000=\"73\" LessThan0.440000=\"12\" LessThan0.480000=\"17\" LessThan0.520000=\"6\" LessThan0.560000=\"8\" LessThan0.600000=\"6\" LessThan0.640000=\"3\" LessThan0.680000=\"328\" LessThan0.720000=\"180\" LessThan0.760000=\"251\" LessThan0.800000=\"272\" LessThan0.840000=\"252\" LessThan0.880000=\"258\" LessThan0.920000=\"278\" LessThan0.960000=\"277\" LessThan1.000000=\"335\" LessThan1.040000=\"1\" TotalCount=\"2845\" ThreadID=\"2558203997968097348\" Machine=\"127.0.0.1:4500\" LogGroup=\"default\" Roles=\"CC,CD,CP,DD,GP,MS,RK,RV,SS,TL\" /&gt;\n&lt;Event Severity=\"10\" Time=\"1669196539.957032\" DateTime=\"2022-11-23T09:42:19Z\" Type=\"Histogram\" ID=\"0000000000000000\" Group=\"buildFillPct\" Op=\"L1\" Unit=\"percentage\" Elapsed=\"30\" LessThan0.040000=\"1\" LessThan0.080000=\"1\" LessThan0.120000=\"2\" LessThan0.160000=\"1\" LessThan0.200000=\"1\" LessThan0.240000=\"1\" LessThan0.280000=\"4\" LessThan0.320000=\"13\" LessThan0.360000=\"289\" LessThan0.400000=\"64\" LessThan0.440000=\"7\" LessThan0.480000=\"16\" LessThan0.520000=\"5\" LessThan0.560000=\"11\" LessThan0.600000=\"8\" LessThan0.640000=\"5\" LessThan0.680000=\"360\" LessThan0.720000=\"191\" LessThan0.760000=\"233\" LessThan0.800000=\"235\" LessThan0.840000=\"229\" LessThan0.880000=\"274\" LessThan0.920000=\"269\" LessThan0.960000=\"304\" LessThan1.000000=\"322\" LessThan1.040000=\"1\" TotalCount=\"2847\" ThreadID=\"2558203997968097348\" Machine=\"127.0.0.1:4500\" LogGroup=\"default\" Roles=\"CC,CD,CP,DD,GP,MS,RK,RV,SS,TL\" /&gt;\n\n</code></pre>",
        "post_number": 6,
        "post_type": 1,
        "posts_count": 16,
        "updated_at": "2022-11-23T11:49:36.740Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 3,
        "reads": 40,
        "readers_count": 39,
        "score": 23.0,
        "yours": false,
        "topic_id": 3659,
        "topic_slug": "continous-growth-of-redwood-disk-usage-with-no-client-connected-possible-bug",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://global.discourse-cdn.com/foundationdb/original/2X/2/216b86fb68e9b8a168d60eea0ecb7e414b5d97e2.png",
            "internal": false,
            "reflection": false,
            "title": "216b86fb68e9b8a168d60eea0ecb7e414b5d97e2.png",
            "clicks": 0
          },
          {
            "url": "https://global.discourse-cdn.com/foundationdb/original/2X/e/ea9f46e41e1e7e397543e75960531bfc582a0cd5.png",
            "internal": false,
            "reflection": false,
            "title": "ea9f46e41e1e7e397543e75960531bfc582a0cd5.png",
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 164,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/continous-growth-of-redwood-disk-usage-with-no-client-connected-possible-bug/3659/6",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 12060,
        "name": "Steve Atherton",
        "username": "SteavedHams",
        "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png",
        "created_at": "2022-11-24T01:08:59.452Z",
        "cooked": "<p>Thanks.</p>\n<p>All of the queue stats in the Recovered messages look fine (I was looking for large amounts of slack space in Pager internal structures).</p>\n<p>Looking at your StorageBytes event, at that time your <code>.redwood-v1</code> file should be about 13.75 GB.  Internally it contains about 20MB of free blocks and free block metadata, and then 4081MB of updated pages in the pager remap window.  The remap queue itself which describes those page updates is located in bulk allocated blocks called \u201cextents\u201d and there are 4 of those totally 128MB (they are 32MB each by default).</p>\n<p>Subtracting out the already-free space and the overheads (which are fairly constant as the structure grows but significant at these small sizes) this leaves about 9522MB of space being used to store your data.  If the average page of user data has 33% unused slack and we ignore KV record overhead of the internal searchable page structure then the implied user Key+Value bytes would be 9522 * .66 = 6284MB which is approximately what you are seeing with 6.3GB.</p>\n<p>A total slack+overhead of 33% isn\u2019t unreasonable for a BTree, and also it happens to be Redwood\u2019s default \u201cpage rebuild max slack\u201d which is controlled by a knob <code>REDWOOD_PAGE_REBUILD_MAX_SLACK</code>.  This value is used when updates to a BTree node result in more data than the node can hold.  This triggers a node Rebuild, which will produce 1 or more nodes containing the updated data set.  This is \u201c1 or more\u201d because BTree nodes in Redwood can be larger than 1 page, and one reason to do this is if a single multi-page node would have less slack than multiple single-page nodes.  For example, if many of your KV records are 4500 bytes each and you are using 8k pages then 1 BTree Node = 1 Page would often result in about 55% slack when several of these large records exist under adjacent keys.  Instead, with a default max slack of 0.33, Redwood would create 2-page Nodes with size 2 * 8k = 16384 because then 3 adjacent records totaling 13500 bytes can fit in this larger node with only 18% slack (&lt; 33%) instead of 55% if the records were in separate 1-page Nodes.</p>\n<p>Can you also plot the Histograms for <code>buildStoredPct</code> and <code>modifyStoredPct</code> also at L1 (leaf level)?  This is a percentage calculated as <code>(user Key + Value bytes in page) / (Page Size)</code>.  In contrast, filled percentage counts <code>(total node structure overhead + user KV bytes) / total node capacity</code> and there are some details this will miss, for example a node update to delete a KV record does not change the filled percentage because the node structure is not rewritten to remove the record immediately, it\u2019s simply marked as deleted via an existing bit (and its key bytes still participate in decompression) but the deletion <em>will</em> cause the user KV bytes for the node to decrease by the size of the deleted record.</p>\n<p>Based on all the above I would expect your disk footprint to level off very soon after the end of your plot.  If it hasn\u2019t, can you do another restart and post the Recovered events?</p>",
        "post_number": 7,
        "post_type": 1,
        "posts_count": 16,
        "updated_at": "2022-11-24T01:08:59.452Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 34,
        "readers_count": 33,
        "score": 11.8,
        "yours": false,
        "topic_id": 3659,
        "topic_slug": "continous-growth-of-redwood-disk-usage-with-no-client-connected-possible-bug",
        "display_username": "Steve Atherton",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": "",
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 7,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/continous-growth-of-redwood-disk-usage-with-no-client-connected-possible-bug/3659/7",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 12063,
        "name": "",
        "username": "Imperatorx",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/i/d2c977/{size}.png",
        "created_at": "2022-11-24T16:53:30.043Z",
        "cooked": "<p>The size increased stopped after the restart you suggested:</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://global.discourse-cdn.com/foundationdb/original/2X/b/b41982176c0fc41b503c24e200618af56e4d7437.png\" data-download-href=\"/uploads/short-url/pHeAVNSScX9icUY4TIxRUChSTlB.png?dl=1\" title=\"img1\" rel=\"noopener nofollow ugc\"><img src=\"https://global.discourse-cdn.com/foundationdb/optimized/2X/b/b41982176c0fc41b503c24e200618af56e4d7437_2_690x309.png\" alt=\"img1\" data-base62-sha1=\"pHeAVNSScX9icUY4TIxRUChSTlB\" width=\"690\" height=\"309\" srcset=\"https://global.discourse-cdn.com/foundationdb/optimized/2X/b/b41982176c0fc41b503c24e200618af56e4d7437_2_690x309.png, https://global.discourse-cdn.com/foundationdb/optimized/2X/b/b41982176c0fc41b503c24e200618af56e4d7437_2_1035x463.png 1.5x, https://global.discourse-cdn.com/foundationdb/original/2X/b/b41982176c0fc41b503c24e200618af56e4d7437.png 2x\" data-dominant-color=\"F3F3F3\"><div class=\"meta\">\n<svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">img1</span><span class=\"informations\">1306\u00d7586 38.3 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg>\n</div></a></div></p>\n<p>Before the restart, the leaf stats were:</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://global.discourse-cdn.com/foundationdb/original/2X/4/45776c2b46f5f5caff3dbc4973a0813539ef838c.png\" data-download-href=\"/uploads/short-url/9UwO2lHzE1tZqwKbT8b6a3WjvNa.png?dl=1\" title=\"img2\" rel=\"noopener nofollow ugc\"><img src=\"https://global.discourse-cdn.com/foundationdb/original/2X/4/45776c2b46f5f5caff3dbc4973a0813539ef838c.png\" alt=\"img2\" data-base62-sha1=\"9UwO2lHzE1tZqwKbT8b6a3WjvNa\" width=\"580\" height=\"500\" data-dominant-color=\"F0F2F6\"><div class=\"meta\">\n<svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">img2</span><span class=\"informations\">688\u00d7593 7.99 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg>\n</div></a></div></p>\n<p>I\u2019m not sure if the new restart was the cause of the stop of the increase, or it was a coincidence.<br>\nSubtracting 5GB of optimization and buffers,  This gives a 50% page slack, and that includes the high compressability of my keys. Do the bin distributions give you a hint why this might be?</p>\n<p>After the restart, the recovery logs and a sample redwood log:</p>\n<pre><code class=\"lang-auto\">&lt;Event Severity=\"10\" \nTime=\"1669290548.238945\" \nDateTime=\"2022-11-24T11:49:08Z\" \nType=\"RedwoodRecoveredBTree\" \nID=\"0000000000000000\" \nFileName=\"/var/lib/foundationdb/data/4500/storage-f87bfbd4641191514656a281b157560d.redwood-v1\" \nOpenedExisting=\"1\" \nLatestVersion=\"353009\" \nLazyClearQueueRecords=\"0\" \nLazyClearQueuePages=\"1\" \nLazyClearQueueRecordsPerPage=\"0\" \nThreadID=\"4701254271508448680\" \nMachine=\"127.0.0.1:4500\" \nLogGroup=\"default\" Roles=\"SS\" /&gt;\n\n&lt;Event Severity=\"10\" \nTime=\"1669290548.238945\" \nDateTime=\"2022-11-24T11:49:08Z\" \nType=\"RedwoodRecoveredPager\" \nID=\"0000000000000000\" \nOpenedExisting=\"1\" \nFileName=\"/var/lib/foundationdb/data/4500/storage-f87bfbd4641191514656a281b157560d.redwood-v1\"\n LogicalFileSize=\"18561032192\" \nPhysicalFileSize=\"18677760000\" \nCommittedVersion=\"353009\" \nLogicalPageSize=\"8192\" \nPhysicalPageSize=\"8192\" \nRemapQueueRecords=\"498486\" \nRemapQueuePages=\"1940\" \nRemapQueueRecordsPerPage=\"256.952\" \nFreeQueueRecords=\"1265\" \nFreeQueuePages=\"5\" \nFreeQueueRecordsPerPage=\"253\" \nDelayedFreeQueueRecords=\"438\" \nDelayedFreeQueuePages=\"3\" \nDelayedFreeQueueRecordsPerPage=\"146\" \nUsedExtentQueueRecords=\"1\" \nUsedExtentQueuePages=\"2\" \nUsedExtentQueueRecordsPerPage=\"0.5\" \nFreeExtentQueueRecords=\"3\" \nFreeExtentQueuePages=\"4\" \nFreeExtentQueueRecordsPerPage=\"0.75\" \nStorageBytesUsed=\"18547015680\" \nStorageBytesTemp=\"4083597312\" \nStorageBytesTotal=\"51835101184\" \nStorageBytesFree=\"27030654976\" \nStorageBytesAvailable=\"27044671488\" \nThreadID=\"4701254271508448680\" \nMachine=\"127.0.0.1:4500\" \nLogGroup=\"default\" \nRoles=\"SS\" /&gt;\n\nUPDATE:\nOvernight, the size increase continued, just with a different slope:\n\n\n![img3|690x309](upload://lgz5Vam61ZSi8JdwUU9yUfvHYoU.png)\n\n\n\n&lt;Event Severity=\"10\" Time=\"1669291648.341558\" \nDateTime=\"2022-11-24T12:07:28Z\" \nType=\"RedwoodMetrics\" \nID=\"0000000000000000\" Elapsed=\"5.00003\" BTreePreload=\"35\" BTreePreloadExt=\"0\" OpSet=\"5438\" OpSetKeyBytes=\"166831\" OpSetValueBytes=\"1181612\" OpClear=\"2536\" OpClearKey=\"0\" OpGet=\"5288\" OpGetRange=\"2677\" OpCommit=\"10\" PagerDiskWrite=\"2398\" PagerDiskRead=\"2\" PagerCacheHit=\"37551\" PagerCacheMiss=\"2\" PagerProbeHit=\"1\" PagerProbeMiss=\"0\" PagerEvictUnhit=\"0\" PagerEvictFail=\"4\" PagerRemapFree=\"2287\" PagerRemapCopy=\"1\" PagerRemapSkip=\"2274\" LookupGetRPF=\"35\" LookupMeta=\"31\" HitGetRPF=\"35\" HitMeta=\"30\" MissGetRPF=\"0\" MissMeta=\"0\" WriteMeta=\"53\" PageCacheCount=\"124909\" PageCacheMoved=\"0\" PageCacheSize=\"1073726194\" DecodeCacheSize=\"27075314\" L1PageBuild=\"536\" L1PageBuildExt=\"0\" L1PageModify=\"1158\" L1PageModifyExt=\"60\" L1PageRead=\"11554\" L1PageReadExt=\"270\" L1PageCommitStart=\"2309\" L1LazyClearInt=\"0\" L1LazyClearIntExt=\"0\" L1LazyClear=\"0\" L1LazyClearExt=\"0\" L1ForceUpdate=\"0\" L1DetachChild=\"0\" L1LookupCommit=\"2309\" L1LookupLazyClr=\"0\" L1LookupGet=\"5293\" L1LookupGetR=\"3952\" L1HitCommit=\"2307\" L1HitLazyClr=\"0\" L1HitGet=\"5293\" L1HitGetR=\"3952\" L1MissCommit=\"2\" L1MissLazyClr=\"0\" L1MissGet=\"0\" L1MissGetR=\"0\" L1WriteCommit=\"1754\" L1WriteLazyClr=\"0\" L2PageBuild=\"2\" L2PageBuildExt=\"0\" L2PageModify=\"496\" L2PageModifyExt=\"0\" L2PageRead=\"9735\" L2PageReadExt=\"0\" L2PageCommitStart=\"1675\" L2LazyClearInt=\"0\" L2LazyClearIntExt=\"0\" L2LazyClear=\"0\" L2LazyClearExt=\"0\" L2ForceUpdate=\"35\" L2DetachChild=\"211\" L2LookupCommit=\"1675\" L2LookupLazyClr=\"0\" L2LookupGet=\"5288\" L2LookupGetR=\"2772\" L2HitCommit=\"1675\" L2HitLazyClr=\"0\" L2HitGet=\"5288\" L2HitGetR=\"2772\" L2MissCommit=\"0\" L2MissLazyClr=\"0\" L2MissGet=\"0\" L2MissGetR=\"0\" L2WriteCommit=\"498\" L2WriteLazyClr=\"0\" L3PageBuild=\"0\" L3PageBuildExt=\"0\" L3PageModify=\"84\" L3PageModifyExt=\"0\" L3PageRead=\"8224\" L3PageReadExt=\"0\" L3PageCommitStart=\"259\" L3LazyClearInt=\"0\" L3LazyClearIntExt=\"0\" L3LazyClear=\"0\" L3LazyClearExt=\"0\" L3ForceUpdate=\"82\" L3DetachChild=\"438\" L3LookupCommit=\"259\" L3LookupLazyClr=\"0\" L3LookupGet=\"5288\" L3LookupGetR=\"2677\" L3HitCommit=\"259\" L3HitLazyClr=\"0\" L3HitGet=\"5288\" L3HitGetR=\"2677\" L3MissCommit=\"0\" L3MissLazyClr=\"0\" L3MissGet=\"0\" L3MissGetR=\"0\" L3WriteCommit=\"84\" L3WriteLazyClr=\"0\" L4PageBuild=\"0\" L4PageBuildExt=\"0\" L4PageModify=\"9\" L4PageModifyExt=\"0\" L4PageRead=\"7975\" L4PageReadExt=\"0\" L4PageCommitStart=\"10\" L4LazyClearInt=\"0\" L4LazyClearIntExt=\"0\" L4LazyClear=\"0\" L4LazyClearExt=\"0\" L4ForceUpdate=\"9\" L4DetachChild=\"84\" L4LookupCommit=\"10\" L4LookupLazyClr=\"0\" L4LookupGet=\"5288\" L4LookupGetR=\"2677\" L4HitCommit=\"10\" L4HitLazyClr=\"0\" L4HitGet=\"5288\" L4HitGetR=\"2677\" L4MissCommit=\"0\" L4MissLazyClr=\"0\" L4MissGet=\"0\" L4MissGetR=\"0\" L4WriteCommit=\"9\" L4WriteLazyClr=\"0\" L5PageBuild=\"0\" L5PageBuildExt=\"0\" L5PageModify=\"0\" L5PageModifyExt=\"0\" L5PageRead=\"0\" L5PageReadExt=\"0\" L5PageCommitStart=\"0\" L5LazyClearInt=\"0\" L5LazyClearIntExt=\"0\" L5LazyClear=\"0\" L5LazyClearExt=\"0\" L5ForceUpdate=\"0\" L5DetachChild=\"0\" L5LookupCommit=\"0\" L5LookupLazyClr=\"0\" L5LookupGet=\"0\" L5LookupGetR=\"0\" L5HitCommit=\"0\" L5HitLazyClr=\"0\" L5HitGet=\"0\" L5HitGetR=\"0\" L5MissCommit=\"0\" L5MissLazyClr=\"0\" L5MissGet=\"0\" L5MissGetR=\"0\" L5WriteCommit=\"0\" L5WriteLazyClr=\"0\" ThreadID=\"4701254271508448680\" Machine=\"127.0.0.1:4500\" LogGroup=\"default\" Roles=\"CC,CD,CP,DD,GP,MS,RK,RV,SS,TL\" /&gt;\n\n</code></pre>",
        "post_number": 8,
        "post_type": 1,
        "posts_count": 16,
        "updated_at": "2022-11-25T11:10:30.743Z",
        "reply_count": 0,
        "reply_to_post_number": 7,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 33,
        "readers_count": 32,
        "score": 6.6,
        "yours": false,
        "topic_id": 3659,
        "topic_slug": "continous-growth-of-redwood-disk-usage-with-no-client-connected-possible-bug",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://global.discourse-cdn.com/foundationdb/original/2X/4/45776c2b46f5f5caff3dbc4973a0813539ef838c.png",
            "internal": false,
            "reflection": false,
            "title": "45776c2b46f5f5caff3dbc4973a0813539ef838c.png",
            "clicks": 0
          },
          {
            "url": "https://global.discourse-cdn.com/foundationdb/original/2X/b/b41982176c0fc41b503c24e200618af56e4d7437.png",
            "internal": false,
            "reflection": false,
            "title": "b41982176c0fc41b503c24e200618af56e4d7437.png",
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 7,
          "username": "SteavedHams",
          "name": "Steve Atherton",
          "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 164,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/continous-growth-of-redwood-disk-usage-with-no-client-connected-possible-bug/3659/8",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 12065,
        "name": "",
        "username": "Imperatorx",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/i/d2c977/{size}.png",
        "created_at": "2022-11-25T11:11:18.946Z",
        "cooked": "<p>Update: overnight, the increase continued, just with a different slope:</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://global.discourse-cdn.com/foundationdb/original/2X/9/950d0bf45a616082a45e89c453a03eee54d8a4b0.png\" data-download-href=\"/uploads/short-url/lgz5Vam61ZSi8JdwUU9yUfvHYoU.png?dl=1\" title=\"img1\" rel=\"noopener nofollow ugc\"><img src=\"https://global.discourse-cdn.com/foundationdb/optimized/2X/9/950d0bf45a616082a45e89c453a03eee54d8a4b0_2_690x309.png\" alt=\"img1\" data-base62-sha1=\"lgz5Vam61ZSi8JdwUU9yUfvHYoU\" width=\"690\" height=\"309\" srcset=\"https://global.discourse-cdn.com/foundationdb/optimized/2X/9/950d0bf45a616082a45e89c453a03eee54d8a4b0_2_690x309.png, https://global.discourse-cdn.com/foundationdb/optimized/2X/9/950d0bf45a616082a45e89c453a03eee54d8a4b0_2_1035x463.png 1.5x, https://global.discourse-cdn.com/foundationdb/original/2X/9/950d0bf45a616082a45e89c453a03eee54d8a4b0.png 2x\" data-dominant-color=\"F3F3F3\"><div class=\"meta\">\n<svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">img1</span><span class=\"informations\">1307\u00d7587 37.4 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg>\n</div></a></div></p>",
        "post_number": 9,
        "post_type": 1,
        "posts_count": 16,
        "updated_at": "2022-11-25T11:11:29.439Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 32,
        "readers_count": 31,
        "score": 6.4,
        "yours": false,
        "topic_id": 3659,
        "topic_slug": "continous-growth-of-redwood-disk-usage-with-no-client-connected-possible-bug",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://global.discourse-cdn.com/foundationdb/original/2X/9/950d0bf45a616082a45e89c453a03eee54d8a4b0.png",
            "internal": false,
            "reflection": false,
            "title": "950d0bf45a616082a45e89c453a03eee54d8a4b0.png",
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 164,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/continous-growth-of-redwood-disk-usage-with-no-client-connected-possible-bug/3659/9",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 12066,
        "name": "Steve Atherton",
        "username": "SteavedHams",
        "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png",
        "created_at": "2022-11-25T21:35:23.560Z",
        "cooked": "<p>Thanks for the update.  Can you post bin counts from the <code>Stored</code> histograms for a 4 hour period?  It looks like the space usage growth is about 1GB per 24 hours, so this should capture 175MB of growth and if it\u2019s due to slack I would think it would show up there somehow.</p>\n<p>Another possibility is leakage of internal space, but there are no known bugs of this form (or any other corruption bugs of any kind).  In simulation tests, when a Redwood instance is destroyed it goes through a \u201cdestructive sanity check\u201d which ensures that after deleting all data and allowing all deferred operations to complete, with a remap queue of 0, that the BTree is in the expected state of having 1 empty root node and that all other space is accounted for in either the free lists or as part of the internal queue structures themselves.</p>\n<p>You can also run this (destructive!) sanity check process on a real data file if you make a consistent copy of it (with fdbserver not running).  If you can do this, please</p>\n<ol>\n<li>Shut down your storage process so the file is no longer being used.</li>\n<li>Copy the <code>.redwood-v1</code> file to some other directory.</li>\n<li>Run this command on the <em>copy</em> (Note: This will delete all data in the file)<br>\n<code>fdbserver -r unittests -f :/redwood/performance/set --test_openExisting=1 --test_insertRecords=0 --test_scans=0 --test_seeks=0 --test_destructiveSanityCheck=1 --test_file=/path/to/copy.redwood-v1</code>\n</li>\n<li>If the command succeeded, then no internal space leakage was found.  You can run the command again as a convenient way to reopen the instance and get the <code>RedwoodRecovered</code> trace events.</li>\n</ol>",
        "post_number": 10,
        "post_type": 1,
        "posts_count": 16,
        "updated_at": "2022-11-26T04:20:53.152Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 32,
        "readers_count": 31,
        "score": 11.4,
        "yours": false,
        "topic_id": 3659,
        "topic_slug": "continous-growth-of-redwood-disk-usage-with-no-client-connected-possible-bug",
        "display_username": "Steve Atherton",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 3,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": "",
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 7,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/continous-growth-of-redwood-disk-usage-with-no-client-connected-possible-bug/3659/10",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 12076,
        "name": "",
        "username": "Imperatorx",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/i/d2c977/{size}.png",
        "created_at": "2022-11-30T11:04:27.832Z",
        "cooked": "<p>Thank you, I\u2019ve continued with the investigation, here are my findings:</p>\n<ul>\n<li>The destructive test ran successfully, so this is not an integrity problem, but a slack problem.</li>\n<li>The system finally reached a steady state (no size increase) with a slack rate of about 50%. I mean (KV size) / (Total size - 5GB) = ~ 50%</li>\n</ul>\n<p>Now, the next thing is to <em>understand</em> and possibly mitigate the high slack rate:</p>\n<p>I managed to isolate the part of the workload that I suspected before to cause this, and created a single file Java reproducer: <a href=\"https://gist.github.com/imperatorx/8c22af7ba741b90e82fdd6279786ce31\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">RedwoodReproducer.java \u00b7 GitHub</a></p>\n<p>Let me explain what workload is generated: By default, running this java application will</p>\n<ul>\n<li>connect to the default cluster</li>\n<li>create a directory called \u201credwood-key-test\u201d if not exist</li>\n<li>clear that directory</li>\n<li>will generate 1000 random long (64bit) category identifiers</li>\n<li>on 10 threads, it will generate records: by default it will generate 13800 records per second evenly spread among the 1000 categories, resulting in about 50 million records in an hour.</li>\n</ul>\n<p>The key of each record:<br>\n<code>(directory-prefix).(category).(current time in millis rounded up to seconds).(random long number)</code><br>\nThe value of each record is a byte array of 52 bytes.</p>\n<p>Furthermore, every 20 seconds it will delete older than 1 hour entries for every category in 1000 clearrange operations. As you can see, if you run this program for a little more than 1 hour, it will reach steady state and constant disk usage, as new data gets inserted, old data gets purged.</p>\n<p>I think this workload should not generate a lot of slack, since the values are small enough to lots of them to be fit on a single page, and data is closely correlated (category id, increasing date), and removed in ranges.</p>\n<p>I even tried the following, with no change in results (<strong>47-53% slack</strong>):</p>\n<ul>\n<li>Doubled the size of values from 52 to 104 bytes</li>\n<li>Instead of 1 hour and 50 million records, configured it to reach steady state with 2 hours and 100M records</li>\n<li>Ran the delete job less frequently so that it has more chance to delete whole pages 20 sec \u2192 5 minutes</li>\n</ul>\n<p>Here is a chart of the build operations after reaching steady state over a a couple of minutes (avg):</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://global.discourse-cdn.com/foundationdb/original/2X/7/79d7b9d0cbc3dd99a053aa19ca6f5bc3058ecf42.png\" data-download-href=\"/uploads/short-url/hnRXNbPLfpWc10faovmKAkygOum.png?dl=1\" title=\"img1\" rel=\"noopener nofollow ugc\"><img src=\"https://global.discourse-cdn.com/foundationdb/original/2X/7/79d7b9d0cbc3dd99a053aa19ca6f5bc3058ecf42.png\" alt=\"img1\" data-base62-sha1=\"hnRXNbPLfpWc10faovmKAkygOum\" width=\"650\" height=\"500\" data-dominant-color=\"F1EEEB\"><div class=\"meta\">\n<svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">img1</span><span class=\"informations\">789\u00d7606 25.8 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg>\n</div></a></div></p>\n<p>lower percentage bins are lower on the chart, I marked the first large bins for L1.</p>\n<p>As you have suggested, I checked the Recovered events after the destructive test (on the original database, not the reproducer). After the first destructive test:</p>\n<pre><code class=\"lang-xml\">&lt;Event Severity=\"10\" Time=\"1669485569.561169\" DateTime=\"2022-11-26T17:59:29Z\" Type=\"RedwoodRecoveredPager\" ID=\"0000000000000000\" OpenedExisting=\"1\" FileName=\"/root/storage-f87bfbd4641191514656a281b157560d.redwood-v1\" \nLogicalFileSize=\"19988004864\" \nPhysicalFileSize=\"19988480000\" \nCommittedVersion=\"687168\" \nLogicalPageSize=\"8192\" \nPhysicalPageSize=\"8192\" \nRemapQueueRecords=\"498381\" \nRemapQueuePages=\"2076\" \nRemapQueueRecordsPerPage=\"240.068\" \nFreeQueueRecords=\"328380\" \nFreeQueuePages=\"2276\" \nFreeQueueRecordsPerPage=\"144.279\" \nDelayedFreeQueueRecords=\"25\" \nDelayedFreeQueuePages=\"2\" \nDelayedFreeQueueRecordsPerPage=\"12.5\" \nUsedExtentQueueRecords=\"2\" \nUsedExtentQueuePages=\"3\" \nUsedExtentQueueRecordsPerPage=\"0.666667\" \nFreeExtentQueueRecords=\"2\" \nFreeExtentQueuePages=\"3\" \nFreeExtentQueueRecordsPerPage=\"0.666667\" \nStorageBytesUsed=\"17279049728\" \nStorageBytesTemp=\"4082737152\" \nStorageBytesTotal=\"51835101184\"\nStorageBytesFree=\"5065433088\" \nStorageBytesAvailable=\"7774388224\" ThreadID=\"18147191374447456872\" Machine=\"0.0.0.0:0\" LogGroup=\"default\" Roles=\"TS\" /&gt;\n\n&lt;Event Severity=\"10\" Time=\"1669485569.561169\" DateTime=\"2022-11-26T17:59:29Z\" Type=\"RedwoodRecoveredBTree\" ID=\"0000000000000000\" FileName=\"/root/storage-f87bfbd4641191514656a281b157560d.redwood-v1\" OpenedExisting=\"1\" LatestVersion=\"687168\" \nLazyClearQueueRecords=\"0\" \nLazyClearQueuePages=\"1\" \nLazyClearQueueRecordsPerPage=\"0\" ThreadID=\"18147191374447456872\" Machine=\"0.0.0.0:0\" LogGroup=\"default\" Roles=\"TS\" /&gt;\n</code></pre>\n<p>After a repeated run:</p>\n<pre><code class=\"lang-xml\">\n&lt;Event Severity=\"10\" Time=\"1669485651.378883\" DateTime=\"2022-11-26T18:00:51Z\" Type=\"RedwoodRecoveredPager\" ID=\"0000000000000000\" OpenedExisting=\"1\" FileName=\"/root/storage-f87bfbd4641191514656a281b157560d.redwood-v1\" \nLogicalFileSize=\"19988004864\" \nPhysicalFileSize=\"19988480000\" \nCommittedVersion=\"688066\" \nLogicalPageSize=\"8192\" \nPhysicalPageSize=\"8192\" \nRemapQueueRecords=\"0\" \nRemapQueuePages=\"1\" \nRemapQueueRecordsPerPage=\"0\" \nFreeQueueRecords=\"2262171\" \nFreeQueuePages=\"5519\" \nFreeQueueRecordsPerPage=\"409.888\" \nDelayedFreeQueueRecords=\"155612\" \nDelayedFreeQueuePages=\"246\" \nDelayedFreeQueueRecordsPerPage=\"632.569\" \nUsedExtentQueueRecords=\"1\" \nUsedExtentQueuePages=\"2\" \nUsedExtentQueueRecordsPerPage=\"0.5\" \nFreeExtentQueueRecords=\"3\" \nFreeExtentQueuePages=\"4\" \nFreeExtentQueueRecordsPerPage=\"0.75\" \nStorageBytesUsed=\"134299648\" \nStorageBytesTemp=\"0\" \nStorageBytesTotal=\"51835101184\" \nStorageBytesFree=\"5063442432\" \nStorageBytesAvailable=\"24917147648\" ThreadID=\"18255384138145159065\" Machine=\"0.0.0.0:0\" LogGroup=\"default\" Roles=\"TS\" /&gt;\n\n&lt;Event Severity=\"10\" Time=\"1669485651.378883\" DateTime=\"2022-11-26T18:00:51Z\" Type=\"RedwoodRecoveredBTree\" ID=\"0000000000000000\" FileName=\"/root/storage-f87bfbd4641191514656a281b157560d.redwood-v1\" \nOpenedExisting=\"1\" \nLatestVersion=\"688066\" \nLazyClearQueueRecords=\"0\" \nLazyClearQueuePages=\"1\" \nLazyClearQueueRecordsPerPage=\"0\" ThreadID=\"18255384138145159065\" Machine=\"0.0.0.0:0\" LogGroup=\"default\" Roles=\"TS\" /&gt;\n</code></pre>\n<p>Do you have any intuition what could cause this slack rate and what parameters can I change in the workload generator to validate the hypothesis?</p>\n<p><strong>Update</strong> I did a 5 hour test with 5x the data, the slack  rate got slightly worse:<br>\nSum of key-value sizes - 18.271 GB<br>\nDisk space used           - 47.311 GB</p>\n<p>So whatever the problem is, is not constant but linear.</p>",
        "post_number": 11,
        "post_type": 1,
        "posts_count": 16,
        "updated_at": "2022-11-30T17:00:46.141Z",
        "reply_count": 0,
        "reply_to_post_number": 10,
        "quote_count": 0,
        "incoming_link_count": 2,
        "reads": 33,
        "readers_count": 32,
        "score": 16.6,
        "yours": false,
        "topic_id": 3659,
        "topic_slug": "continous-growth-of-redwood-disk-usage-with-no-client-connected-possible-bug",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 5,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://gist.github.com/imperatorx/8c22af7ba741b90e82fdd6279786ce31",
            "internal": false,
            "reflection": false,
            "title": "RedwoodReproducer.java \u00b7 GitHub",
            "clicks": 1
          },
          {
            "url": "https://global.discourse-cdn.com/foundationdb/original/2X/7/79d7b9d0cbc3dd99a053aa19ca6f5bc3058ecf42.png",
            "internal": false,
            "reflection": false,
            "title": "79d7b9d0cbc3dd99a053aa19ca6f5bc3058ecf42.png",
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 7,
          "username": "SteavedHams",
          "name": "Steve Atherton",
          "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 164,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/continous-growth-of-redwood-disk-usage-with-no-client-connected-possible-bug/3659/11",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 12086,
        "name": "",
        "username": "Imperatorx",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/i/d2c977/{size}.png",
        "created_at": "2022-12-02T14:03:13.190Z",
        "cooked": "<p><a class=\"mention\" href=\"/u/steavedhams\">@SteavedHams</a> I managed to find the parameter that causes the high slack rate: it is the number of correlation categories. When set from 1000 to just 100, the slack disappears:</p>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th>Number of categories</th>\n<th>Record count</th>\n<th>Threads</th>\n<th>kv size (GB)</th>\n<th>db size (GB)</th>\n<th>variable overhead</th>\n<th>slack ratio</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1000</td>\n<td>50M</td>\n<td>10</td>\n<td>3.924</td>\n<td>12.319</td>\n<td>99%</td>\n<td>50%</td>\n</tr>\n<tr>\n<td>1000</td>\n<td>250M</td>\n<td>10</td>\n<td>19.683</td>\n<td>49.858</td>\n<td>130%</td>\n<td>57%</td>\n</tr>\n<tr>\n<td>1000</td>\n<td>600M</td>\n<td>10</td>\n<td>45.658</td>\n<td>113.06</td>\n<td>138%</td>\n<td>58%</td>\n</tr>\n<tr>\n<td>500</td>\n<td>50M</td>\n<td>10</td>\n<td>3.927</td>\n<td>11.205</td>\n<td>71%</td>\n<td>41%</td>\n</tr>\n<tr>\n<td>100</td>\n<td>50M</td>\n<td>10</td>\n<td>3.923</td>\n<td>8.824</td>\n<td>10%</td>\n<td>\n<strong>9%</strong> <img src=\"https://emoji.discourse-cdn.com/twitter/+1.png?v=12\" title=\":+1:\" class=\"emoji\" alt=\":+1:\" loading=\"lazy\" width=\"20\" height=\"20\">\n</td>\n</tr>\n<tr>\n<td>100</td>\n<td>50M</td>\n<td>100</td>\n<td>3.507</td>\n<td>8.61</td>\n<td>17%</td>\n<td>15%</td>\n</tr>\n</tbody>\n</table>\n</div><p><em>(variable overhead calculated with a constant overhead of 4.5GB)</em></p>\n<p>At first I thought that if the less correlation categories get touched in a single transaction that means fewer pages are modified and that is the cause. However, I also set the number of threads to 10x, so in average the same number of pages were modified in a transaction, with minimal change.</p>\n<p>I checked this presentation:</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://global.discourse-cdn.com/foundationdb/original/2X/3/35420a5ef32205054c1ed5f622b4df168a95c6d6.jpeg\" data-download-href=\"/uploads/short-url/7B8NpXHQW81xQgW67fs5mW7X9GK.jpeg?dl=1\" title=\"image\" rel=\"noopener nofollow ugc\"><img src=\"https://global.discourse-cdn.com/foundationdb/optimized/2X/3/35420a5ef32205054c1ed5f622b4df168a95c6d6_2_690x385.jpeg\" alt=\"image\" data-base62-sha1=\"7B8NpXHQW81xQgW67fs5mW7X9GK\" width=\"690\" height=\"385\" srcset=\"https://global.discourse-cdn.com/foundationdb/optimized/2X/3/35420a5ef32205054c1ed5f622b4df168a95c6d6_2_690x385.jpeg, https://global.discourse-cdn.com/foundationdb/original/2X/3/35420a5ef32205054c1ed5f622b4df168a95c6d6.jpeg 1.5x, https://global.discourse-cdn.com/foundationdb/original/2X/3/35420a5ef32205054c1ed5f622b4df168a95c6d6.jpeg 2x\" data-dominant-color=\"F0EFEF\"><div class=\"meta\">\n<svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">962\u00d7537 63.2 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg>\n</div></a></div></p>\n<p>So this workload is clearly in the worst case, which I understand performance wise, but I think this should not cause this sub-optimal on-disk structure, given the 100 or 1000 category correlation ids create separate namespaces and should be on entirely different parts on the binary tree. Also one more thing to note is that the removal of old keys can be entirely omitted from the reproducer, since the initial loading (1 hour) itself will create the slack without any data deleted.</p>",
        "post_number": 12,
        "post_type": 1,
        "posts_count": 16,
        "updated_at": "2022-12-02T14:43:02.254Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 2,
        "reads": 34,
        "readers_count": 33,
        "score": 21.8,
        "yours": false,
        "topic_id": 3659,
        "topic_slug": "continous-growth-of-redwood-disk-usage-with-no-client-connected-possible-bug",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://global.discourse-cdn.com/foundationdb/original/2X/3/35420a5ef32205054c1ed5f622b4df168a95c6d6.jpeg",
            "internal": false,
            "reflection": false,
            "title": "35420a5ef32205054c1ed5f622b4df168a95c6d6.jpeg",
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 164,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/continous-growth-of-redwood-disk-usage-with-no-client-connected-possible-bug/3659/12",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 12097,
        "name": "Steve Atherton",
        "username": "SteavedHams",
        "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png",
        "created_at": "2022-12-06T08:37:27.497Z",
        "cooked": "<p>Thanks for confirming that this is not an internal space leak.</p>\n<p>Based on your workload description I should have realized earlier what was going on here, but it didn\u2019t click for me until you pointed out that the category count affects the slack.</p>\n<p>Here\u2019s what is happening and I think I have a configuration fix for you.</p>\n<p>First, I should explain that Redwood does not merge pages.  This was intentionally omitted (for now) because in the context of a large cluster FDB Data Movement between Storage Servers will remove all slack space from a shard during its move by clearing it at the source and generating maximally filled pages at the destination via large sequential insertions.  However, since some shards may not move for long periods of time, as a fallback FDB has a feature called the Perpetual Storage Wiggle which will safely exclude and re-add Storage Servers, one at a time, once they reach some maximum age which defaults to 3 weeks.  Of course, for a cluster with 1 Storage Server there is no Data Movement so everything stays in place.</p>\n<p>As pages fill up, they must eventually must split.  When a page splits (whether due to adding 1 byte or millions) the process is to build sequential pages with <code>REDWOOD_PAGE_REBUILD_MAX_SLACK</code> in slack space and then try to balance space between the last two pages in the split set.  In the case of gradually filling a page, the split set is just 2 pages.</p>\n<p>What is going wrong here is that the balancing logic will shift records from the second to last page of the set to the last page of the set so long as the last page slack is &gt; <code>REDWOOD_PAGE_REBUILD_MAX_SLACK</code>.  With the default value of 33%, this is actually shifting more records to the right-hand side of a 2-way split, leaving the left side with up to 66% slack.</p>\n<p>If within some key range, such as under a Category prefix, your only updates are either to insert new highest key(s) or to remove lowest key(s), then the left side page of the 2-way split on insertion remains under-filled and untouched until it is eventually completely cleared.  Each new right side of a 2-way split eventually becomes the left side of the next 2-way split under that prefix range, which leads to the slack space steady state you observe.</p>\n<p>I think the reason that lowering your Category prefix count by 10x reduces the slack is that now you are inserting enough data under a single Category in one Storage Server commit cycle (which is every 250ms or 10MB, whichever comes first, and it doesn\u2019t matter how many different clients/threads/transactions produced the sets/clears) that you are doing &gt;2-way splits so you are leaving behind some very filled pages which mitigates the effect of the under-filled second to last pages.</p>\n<p>The reason all of this was not apparent from the stats is that that only pages that are touched during update are reported on, so an under-filled untouched page is not.</p>\n<p>Redwood\u2019s split logic could be better here.  The balancing part was added because <em>not</em> balancing between the last two pages could have a worse outcome, where you keep making small inserts on the <em>left</em> and generating many single-record pages on the <em>right</em>.  But the balance % should be a different setting and should default to 50%.  This of course still won\u2019t be ideal for your workload.  I do plan to add some kind of page merging in the future but I want to avoid anything that would allow certain update patterns to cause split/merge/split/merge thrashing.</p>\n<p>Since your records are known to be far smaller than a page, the page-upsizing logic I mentioned previously won\u2019t be active, so the knob is only affecting the balance between the last two post-split pages.  Therefore, you should see lower slack with a <em>higher</em> value of this setting (counter-intuitive, I realize) because it will leave more slack on the right side of 2-way splits.  So please try adding</p>\n<pre><code class=\"lang-auto\">knob_redwood_page_rebuild_max_slack = .90\n</code></pre>\n<p>to your <code>foundationdb.conf</code> file.  You could also try a value of 1.0 which will leave all slack on the right side of a 2-way split.</p>",
        "post_number": 13,
        "post_type": 1,
        "posts_count": 16,
        "updated_at": "2022-12-06T08:38:30.910Z",
        "reply_count": 1,
        "reply_to_post_number": 12,
        "quote_count": 0,
        "incoming_link_count": 69,
        "reads": 36,
        "readers_count": 35,
        "score": 352.2,
        "yours": false,
        "topic_id": 3659,
        "topic_slug": "continous-growth-of-redwood-disk-usage-with-no-client-connected-possible-bug",
        "display_username": "Steve Atherton",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": "",
        "reply_to_user": {
          "id": 164,
          "username": "Imperatorx",
          "name": "",
          "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/i/d2c977/{size}.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 7,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/continous-growth-of-redwood-disk-usage-with-no-client-connected-possible-bug/3659/13",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 12108,
        "name": "",
        "username": "Imperatorx",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/i/d2c977/{size}.png",
        "created_at": "2022-12-08T10:14:43.867Z",
        "cooked": "<p>Thank you Steve for the detailed insights into Redwood! The configuration change indeed fixed my problem!</p>\n<p>I think that the <code>REDWOOD_PAGE_REBUILD_MAX_SLACK</code> controls two almost independent parameters, as seen in the <code>VersionedBTreeActor</code>\u2019s <code>splitPages</code> method:</p>\n<ul>\n<li>Whether or not an existing page should be expanded and the record inserted into an existing page based on the existing slack ratio of the existing page and the new record not fitting</li>\n<li>The (anti) filling ratio of the new page in case of a page split from the existing page.</li>\n</ul>\n<p>I think the 50% ratio you mentioned would be a sensible default value for the latter. I created a patch with a new knob: <a href=\"https://github.com/imperatorx/foundationdb/commit/238287da20df33612f71ca861828b58bc6314e4c\" rel=\"noopener nofollow ugc\">https://github.com/imperatorx/foundationdb/commit/238287da20df33612f71ca861828b58bc6314e4c</a> and did some experimenting:</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://global.discourse-cdn.com/foundationdb/original/2X/f/f1848d93797c8567faf548794513c9e39b6024f9.png\" data-download-href=\"/uploads/short-url/ysz3XMl0TmfaTuZkwNW5wLnJ1dD.png?dl=1\" title=\"image\" rel=\"noopener nofollow ugc\"><img src=\"https://global.discourse-cdn.com/foundationdb/original/2X/f/f1848d93797c8567faf548794513c9e39b6024f9.png\" alt=\"image\" data-base62-sha1=\"ysz3XMl0TmfaTuZkwNW5wLnJ1dD\" width=\"690\" height=\"404\" data-dominant-color=\"F0EEED\"><div class=\"meta\">\n<svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">865\u00d7507 15 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg>\n</div></a></div></p>\n<p>As you can see, the the workaround made the slack decrease from 66% to 36% even in a smallish test. I can see even better gains (close to 0% calculated slack thanks to value compression) on the test server with the original workload with <code>REDWOOD_PAGE_REBUILD_MAX_SLACK</code> set to .9.</p>\n<p>When the new knob is set to 0, all slack remains in the old page, so as expected, the system generates runaway slack and storage efficiency converges to 0%.</p>\n<p>When the new knob is set to .33 (mimics behavior before patch), the slack converges to 66% as before, which is expected.</p>\n<p>When the new knob is 0.5 or less, the small tests produce 33% or less slack. The only thing I can\u2019t make sense of the small difference between 0.5 and 1, but it is probably related to some other overhead, possibly 4 page worth of slack in non-leaf pages, or me not properly assessing the size of the static buffer overheads.</p>\n<p>I think a knob like this should be introduced, or at least the second variable should be set to static value of 0.5, to support users using keys increasing by some time value (like twitter snowflake style ids with first bits set to partition ids to avoid storage node contention).</p>\n<p>Also, what is your opinion on using 16 byte Type4 Tandom UUIDs as keys in Redwood (with the assumption of the new setting being 0.5?</p>",
        "post_number": 14,
        "post_type": 1,
        "posts_count": 16,
        "updated_at": "2022-12-08T11:23:18.036Z",
        "reply_count": 1,
        "reply_to_post_number": 13,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 34,
        "readers_count": 33,
        "score": 16.8,
        "yours": false,
        "topic_id": 3659,
        "topic_slug": "continous-growth-of-redwood-disk-usage-with-no-client-connected-possible-bug",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 4,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/imperatorx/foundationdb/commit/238287da20df33612f71ca861828b58bc6314e4c",
            "internal": false,
            "reflection": false,
            "clicks": 5
          },
          {
            "url": "https://global.discourse-cdn.com/foundationdb/original/2X/f/f1848d93797c8567faf548794513c9e39b6024f9.png",
            "internal": false,
            "reflection": false,
            "title": "f1848d93797c8567faf548794513c9e39b6024f9.png",
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 7,
          "username": "SteavedHams",
          "name": "Steve Atherton",
          "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 164,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/continous-growth-of-redwood-disk-usage-with-no-client-connected-possible-bug/3659/14",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 12126,
        "name": "Steve Atherton",
        "username": "SteavedHams",
        "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png",
        "created_at": "2022-12-14T07:07:29.943Z",
        "cooked": "<p>Glad to see your results match expectations!  Your patch implements what I alluded to above</p>\n<blockquote>\n<p>the balance % should be a different setting and should default to 50%</p>\n</blockquote>\n<p>which I haven\u2019t done yet (would you like to submit a PR?) but I also had an idea for detection of always-greatest insertion automatically with a trivial cost so that balancing could be automatically biased for at least the purely increasing insertion pattern.</p>\n<blockquote>\n<p>I can see even better gains (close to 0% calculated slack thanks to value compression) on the test server with the original workload with <code>REDWOOD_PAGE_REBUILD_MAX_SLACK</code> set to .9.</p>\n</blockquote>\n<p>To be clear Redwood only has key prefix compression, not value, (but I suspect that\u2019s what you meant) and yes I would expect that aside from the ~4.5GB of relatively fixed overhead your time based queue-like pattern should be able to achieve near 0% slack or perhaps &lt;0% if the keys were long and prefix-compressible enough.</p>\n<blockquote>\n<p>Also, what is your opinion on using 16 byte Type4 Tandom UUIDs as keys in Redwood (with the assumption of the new setting being 0.5?</p>\n</blockquote>\n<p>This will cause a random update pattern of course, but it should result in pages being somewhere between 50% full (if they are new) and 100% full (if they are close to splitting) so overall slack should be somewhere in that range.  I think in a uniform random insert pattern there would be a high correlation in the fill progresses of many pages so overall slack might swing between these extremes as the BTree grows?  This would be an interesting experiment.</p>",
        "post_number": 15,
        "post_type": 1,
        "posts_count": 16,
        "updated_at": "2022-12-14T07:07:29.943Z",
        "reply_count": 1,
        "reply_to_post_number": 14,
        "quote_count": 0,
        "incoming_link_count": 4,
        "reads": 30,
        "readers_count": 29,
        "score": 31.0,
        "yours": false,
        "topic_id": 3659,
        "topic_slug": "continous-growth-of-redwood-disk-usage-with-no-client-connected-possible-bug",
        "display_username": "Steve Atherton",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": "",
        "reply_to_user": {
          "id": 164,
          "username": "Imperatorx",
          "name": "",
          "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/i/d2c977/{size}.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 7,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/continous-growth-of-redwood-disk-usage-with-no-client-connected-possible-bug/3659/15",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 12146,
        "name": "",
        "username": "Imperatorx",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/i/d2c977/{size}.png",
        "created_at": "2022-12-20T15:06:45.041Z",
        "cooked": "<p>I created a PR but CI is complaining about formatting, but the changes are fairly trivial and I ran the clang-format too:</p>\n<aside class=\"onebox githubpullrequest\" data-onebox-src=\"https://github.com/apple/foundationdb/pull/9042/files\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/apple/foundationdb/pull/9042/files\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com/apple/foundationdb</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"github-row\">\n\n\n\n    <div class=\"github-icon-container\" title=\"Pull Request\">\n      <svg width=\"60\" height=\"60\" class=\"github-icon\" viewbox=\"0 0 12 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z\"></path></svg>\n    </div>\n\n  <div class=\"github-info-container\">\n\n\n\n      <h4>\n        <a href=\"https://github.com/apple/foundationdb/pull/9042/files\" target=\"_blank\" rel=\"noopener nofollow ugc\">Introduced a new knob to control Redwood slack balance when splitting a page</a>\n      </h4>\n\n    <div class=\"branches\">\n      <code>apple:main</code> \u2190 <code>imperatorx:add-redwood-slack-knob</code>\n    </div>\n\n      <div class=\"github-info\">\n        <div class=\"date\">\n          opened <span class=\"discourse-local-date\" data-format=\"ll\" data-date=\"2022-12-14\" data-time=\"09:13:43\" data-timezone=\"UTC\">09:13AM - 14 Dec 22 UTC</span>\n        </div>\n\n        <div class=\"user\">\n          <a href=\"https://github.com/imperatorx\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <img alt=\"imperatorx\" src=\"https://global.discourse-cdn.com/foundationdb/original/2X/0/01c51a9a26e5fdca081a8f92cbd92495050baf2a.png\" class=\"onebox-avatar-inline\" width=\"20\" height=\"20\">\n            imperatorx\n          </a>\n        </div>\n\n        <div class=\"lines\" title=\"1 commits changed 3 files with 11 additions and 2 deletions\">\n          <a href=\"https://github.com/apple/foundationdb/pull/9042/files\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <span class=\"added\">+11</span>\n            <span class=\"removed\">-2</span>\n          </a>\n        </div>\n      </div>\n  </div>\n</div>\n\n  <div class=\"github-row\">\n    <p class=\"github-body-container\">If the Redwood storage engine is used with an increasing key pattern (e.g. Twitt<span class=\"show-more-container\"><a href=\"https://github.com/apple/foundationdb/pull/9042\" target=\"_blank\" rel=\"noopener nofollow ugc\" class=\"show-more\">\u2026</a></span><span class=\"excerpt hidden\">er Snowflake style IDs with first bytes set to partition categories to avoid storage node contention), Redwood generates a lot of slack due to the way data is balanced between the old page and the new page when a page is split in two. Now this is set by default by `REDWOOD_PAGE_REBUILD_MAX_SLACK` to 33%, so the old page will have 66% of slack until the storage wiggler or re-balancing takes care of compaction.\n\nThe problem is that the knob `REDWOOD_PAGE_REBUILD_MAX_SLACK` has a primary feature (controls page expansion), and the slack rebalancing is a secondary feature of it. Since these features often require different setting, a new knob named `REDWOOD_PAGE_REBUILD_SLACK_DISTRIBUTION` is introduced with the default vale of 50% (data is halfway split between new and old page on page split)\n\nProblem details and experimentation can be seen in this [forums thread](https://forums.foundationdb.org/t/continous-growth-of-redwood-disk-usage-with-no-client-connected-possible-bug/3659/13?u=imperatorx)\n\n# Code-Reviewer Section\n\nThe general pull request guidelines can be found [here](https://github.com/apple/foundationdb/wiki/FoundationDB-Commit-Process).\n\nPlease check each of the following things and check *all* boxes before accepting a PR.\n\n- [ ] The PR has a description, explaining both the problem and the solution.\n- [ ] The description mentions which forms of testing were done and the testing seems reasonable.\n- [ ] Every function/class/actor that was touched is reasonably well documented.\n\n## For Release-Branches\n\nIf this PR is made against a release-branch, please also check the following:\n\n- [ ] This change/bugfix is a cherry-pick from the next younger branch (younger `release-branch` or `main` if this is the youngest branch)\n- [ ] There is a good reason why this PR needs to go into a release branch and this reason is documented (either in the description above or in a linked GitHub issue)</span></p>\n  </div>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n",
        "post_number": 16,
        "post_type": 1,
        "posts_count": 16,
        "updated_at": "2022-12-20T15:06:45.041Z",
        "reply_count": 0,
        "reply_to_post_number": 15,
        "quote_count": 0,
        "incoming_link_count": 2,
        "reads": 31,
        "readers_count": 30,
        "score": 16.2,
        "yours": false,
        "topic_id": 3659,
        "topic_slug": "continous-growth-of-redwood-disk-usage-with-no-client-connected-possible-bug",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/apple/foundationdb/pull/9042/files",
            "internal": false,
            "reflection": false,
            "title": "Introduced a new knob to control Redwood slack balance when splitting a page by imperatorx \u00b7 Pull Request #9042 \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 19
          }
        ],
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 7,
          "username": "SteavedHams",
          "name": "Steve Atherton",
          "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 164,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/continous-growth-of-redwood-disk-usage-with-no-client-connected-possible-bug/3659/16",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      12016,
      12017,
      12028,
      12050,
      12051,
      12057,
      12060,
      12063,
      12065,
      12066,
      12076,
      12086,
      12097,
      12108,
      12126,
      12146
    ]
  },
  "timeline_lookup": [
    [
      1,
      1070
    ],
    [
      3,
      1068
    ],
    [
      4,
      1064
    ],
    [
      6,
      1063
    ],
    [
      8,
      1062
    ],
    [
      9,
      1061
    ],
    [
      11,
      1056
    ],
    [
      12,
      1054
    ],
    [
      13,
      1051
    ],
    [
      14,
      1049
    ],
    [
      15,
      1043
    ],
    [
      16,
      1036
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "Continous growth of Redwood disk usage with no client connected, possible bug?",
  "id": 3659,
  "title": "Continous growth of Redwood disk usage with no client connected, possible bug?",
  "posts_count": 16,
  "created_at": "2022-11-16T12:20:03.854Z",
  "views": 926,
  "reply_count": 7,
  "like_count": 1,
  "last_posted_at": "2022-12-20T15:06:45.041Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "continous-growth-of-redwood-disk-usage-with-no-client-connected-possible-bug",
  "category_id": 7,
  "word_count": 6424,
  "deleted_at": null,
  "user_id": 164,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_3659",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 16,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 2,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "FoundationDB cluster performance issue - Periods of high disk I/O and sustained high latency",
      "id": 2184,
      "title": "FoundationDB cluster performance issue - Periods of high disk I/O and sustained high latency",
      "slug": "foundationdb-cluster-performance-issue-periods-of-high-disk-i-o-and-sustained-high-latency",
      "posts_count": 22,
      "reply_count": 17,
      "highest_post_number": 22,
      "image_url": null,
      "created_at": "2020-06-15T15:45:43.650Z",
      "last_posted_at": "2020-07-06T06:50:56.594Z",
      "bumped": true,
      "bumped_at": "2020-07-06T06:50:56.594Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [
        "performance"
      ],
      "tags_descriptions": {},
      "like_count": 2,
      "views": 2571,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 779,
            "username": "imtdk",
            "name": null,
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/i/22d042/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 747,
            "username": "ashishgupta",
            "name": "Ashish Gupta",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/a/c67d28/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 7,
            "username": "SteavedHams",
            "name": "Steve Atherton",
            "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        }
      ]
    },
    {
      "fancy_title": "How to increase the read/write throughput for foundationdb 5.2",
      "id": 1968,
      "title": "How to increase the read/write throughput for foundationdb 5.2",
      "slug": "how-to-increase-the-read-write-throughput-for-foundationdb-5-2",
      "posts_count": 21,
      "reply_count": 19,
      "highest_post_number": 23,
      "image_url": null,
      "created_at": "2020-02-20T00:35:23.457Z",
      "last_posted_at": "2020-05-24T08:05:30.224Z",
      "bumped": true,
      "bumped_at": "2020-05-24T08:05:30.224Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 2,
      "views": 3153,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 718,
            "username": "Cliicy",
            "name": "Dragon",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/c/47e85d/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 7,
            "username": "SteavedHams",
            "name": "Steve Atherton",
            "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Help me understand this status output",
      "id": 742,
      "title": "Help me understand this status output",
      "slug": "help-me-understand-this-status-output",
      "posts_count": 13,
      "reply_count": 8,
      "highest_post_number": 13,
      "image_url": null,
      "created_at": "2018-10-04T01:03:25.785Z",
      "last_posted_at": "2021-06-15T15:32:08.437Z",
      "bumped": true,
      "bumped_at": "2021-06-15T15:32:08.437Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 3594,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 44,
            "username": "cespare",
            "name": "Caleb Spare",
            "avatar_template": "/user_avatar/forums.foundationdb.org/cespare/{size}/36_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 22,
            "username": "dave",
            "name": "David Scherer",
            "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 949,
            "username": "DenisBY",
            "name": "Denis",
            "avatar_template": "/user_avatar/forums.foundationdb.org/denisby/{size}/1104_2.png",
            "trust_level": 1
          }
        }
      ]
    },
    {
      "fancy_title": "How to troubleshoot throughput performance degrade?",
      "id": 1436,
      "title": "How to troubleshoot throughput performance degrade?",
      "slug": "how-to-troubleshoot-throughput-performance-degrade",
      "posts_count": 36,
      "reply_count": 24,
      "highest_post_number": 36,
      "image_url": "https://global.discourse-cdn.com/foundationdb/original/1X/9c9854ce87e53265f75154876f180812ee93f8ec.png",
      "created_at": "2019-06-10T10:09:55.810Z",
      "last_posted_at": "2019-06-20T21:36:30.209Z",
      "bumped": true,
      "bumped_at": "2019-06-20T21:36:30.209Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [
        "performance"
      ],
      "tags_descriptions": {},
      "like_count": 8,
      "views": 4377,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 597,
            "username": "rayjcwu",
            "name": "",
            "avatar_template": "/user_avatar/forums.foundationdb.org/rayjcwu/{size}/602_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 337,
            "username": "mengxu",
            "name": "Meng Xu",
            "avatar_template": "/user_avatar/forums.foundationdb.org/mengxu/{size}/893_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 81,
            "username": "ryanworl",
            "name": "Ryan Worl",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png",
            "trust_level": 3
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 592,
            "username": "nfeinberg",
            "name": "Nicholas Feinberg",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/n/ba8739/{size}.png",
            "trust_level": 1
          }
        }
      ]
    },
    {
      "fancy_title": "Redwood page fillfactor support",
      "id": 1986,
      "title": "Redwood page fillfactor support",
      "slug": "redwood-page-fillfactor-support",
      "posts_count": 16,
      "reply_count": 12,
      "highest_post_number": 16,
      "image_url": null,
      "created_at": "2020-02-27T17:21:08.254Z",
      "last_posted_at": "2020-05-12T11:17:59.926Z",
      "bumped": true,
      "bumped_at": "2020-05-12T11:17:59.926Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 3,
      "views": 1456,
      "category_id": 5,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 514,
            "username": "Passion",
            "name": "",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/p/9de0a6/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 337,
            "username": "mengxu",
            "name": "Meng Xu",
            "avatar_template": "/user_avatar/forums.foundationdb.org/mengxu/{size}/893_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 7,
            "username": "SteavedHams",
            "name": "Steve Atherton",
            "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png",
            "trust_level": 4
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 164,
        "username": "Imperatorx",
        "name": "",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/i/d2c977/{size}.png",
        "post_count": 9,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      },
      {
        "id": 7,
        "username": "SteavedHams",
        "name": "Steve Atherton",
        "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png",
        "post_count": 7,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      }
    ],
    "created_by": {
      "id": 164,
      "username": "Imperatorx",
      "name": "",
      "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/i/d2c977/{size}.png"
    },
    "last_poster": {
      "id": 164,
      "username": "Imperatorx",
      "name": "",
      "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/i/d2c977/{size}.png"
    },
    "links": [
      {
        "url": "https://github.com/apple/foundationdb/pull/9042/files",
        "title": "Introduced a new knob to control Redwood slack balance when splitting a page by imperatorx \u00b7 Pull Request #9042 \u00b7 apple/foundationdb \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 19,
        "user_id": 164,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://github.com/imperatorx/foundationdb/commit/238287da20df33612f71ca861828b58bc6314e4c",
        "title": null,
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 5,
        "user_id": 164,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://gist.github.com/imperatorx/8c22af7ba741b90e82fdd6279786ce31",
        "title": "RedwoodReproducer.java \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 1,
        "user_id": 164,
        "domain": "gist.github.com",
        "root_domain": "github.com"
      }
    ]
  },
  "bookmarks": []
}