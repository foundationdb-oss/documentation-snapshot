{
  "post_stream": {
    "posts": [
      {
        "id": 3314,
        "name": "Dave Koston",
        "username": "dkoston",
        "avatar_template": "/user_avatar/forums.foundationdb.org/dkoston/{size}/264_2.png",
        "created_at": "2019-02-07T20:55:09.529Z",
        "cooked": "<p>Is anyone able to mock transactions when using the golang bindings? How are people testing code when foundationdb is involved? Since it doesn\u2019t use database/sql, there\u2019s no easy path to injecting a mock driver and using that.</p>\n<p>I want to overwrite things like <code>fdb.Database.Transact</code> and <code>fdb.Transaction.Get</code> but those aren\u2019t set up in a way that they can be overridden (i.e. properties of the struct vs functions).</p>\n<p>What approaches are people taking for mocks?</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2019-02-07T20:55:31.463Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 370,
        "reads": 41,
        "readers_count": 40,
        "score": 1858.2,
        "yours": false,
        "topic_id": 1120,
        "topic_slug": "mocking-using-golang-bindings",
        "display_username": "Dave Koston",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 264,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/mocking-using-golang-bindings/1120/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 3315,
        "name": "Ryan Worl",
        "username": "ryanworl",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png",
        "created_at": "2019-02-07T22:49:59.145Z",
        "cooked": "<p>I test against an in memory single process cluster on the same machine with the node bindings. I don\u2019t personally think mocking FDB out is a great idea, as you\u2019d have to 100% match the semantics and not just the interface to be correct.</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2019-02-07T22:49:59.145Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 2,
        "reads": 41,
        "readers_count": 40,
        "score": 23.2,
        "yours": false,
        "topic_id": 1120,
        "topic_slug": "mocking-using-golang-bindings",
        "display_username": "Ryan Worl",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 81,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/mocking-using-golang-bindings/1120/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3316,
        "name": "Dave Koston",
        "username": "dkoston",
        "avatar_template": "/user_avatar/forums.foundationdb.org/dkoston/{size}/264_2.png",
        "created_at": "2019-02-07T23:08:14.147Z",
        "cooked": "<p>Thanks for the insight. I thought about spinning up fdb in CI as an option but in this case, it\u2019s not my desired path as spinning up fdb from scratch (even via docker) is more time consuming than I want.</p>\n<p>Since my use-case for FDB is as a key/value store, the interfaces I\u2019d have to mock are pretty limited. The bindings in golang don\u2019t seem to be designed with testing in mind (see lack of tests in the source) so it\u2019s been a bit of a challenge. Implementing wrapper functions for the interfaces I use has been my hacky way so far. For me, it\u2019s better than spinning up the db during each test suite run.</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2019-02-07T23:08:14.147Z",
        "reply_count": 0,
        "reply_to_post_number": 2,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 41,
        "readers_count": 40,
        "score": 13.2,
        "yours": false,
        "topic_id": 1120,
        "topic_slug": "mocking-using-golang-bindings",
        "display_username": "Dave Koston",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 81,
          "username": "ryanworl",
          "name": "Ryan Worl",
          "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 264,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/mocking-using-golang-bindings/1120/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3317,
        "name": "Ryan Worl",
        "username": "ryanworl",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png",
        "created_at": "2019-02-07T23:18:38.765Z",
        "cooked": "<p>The bindings are tested using the <code>bindingtester</code>, which is a standardized test for all bindings which covers the entirety of the functionality by generating a bunch of operations and testing that they match what is expected.</p>\n<p>I totally understand what you\u2019re saying since go is a bit picky compared to how it works in Node, since I could just make mocks however I like.</p>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2019-02-07T23:20:06.014Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 39,
        "readers_count": 38,
        "score": 17.8,
        "yours": false,
        "topic_id": 1120,
        "topic_slug": "mocking-using-golang-bindings",
        "display_username": "Ryan Worl",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 81,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/mocking-using-golang-bindings/1120/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3318,
        "name": "Dave Koston",
        "username": "dkoston",
        "avatar_template": "/user_avatar/forums.foundationdb.org/dkoston/{size}/264_2.png",
        "created_at": "2019-02-07T23:24:08.455Z",
        "cooked": "<p>Ah, thanks for the clarification. It\u2019s definitely a golang peculiarity as other languages are more flexible when it comes to overriding methods. I\u2019m going to work around it for my use case with some wrapper functions.</p>",
        "post_number": 5,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2019-02-07T23:24:08.455Z",
        "reply_count": 0,
        "reply_to_post_number": 4,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 38,
        "readers_count": 37,
        "score": 27.6,
        "yours": false,
        "topic_id": 1120,
        "topic_slug": "mocking-using-golang-bindings",
        "display_username": "Dave Koston",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 81,
          "username": "ryanworl",
          "name": "Ryan Worl",
          "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png"
        },
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 264,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/mocking-using-golang-bindings/1120/5",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3319,
        "name": "David Scherer",
        "username": "dave",
        "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
        "created_at": "2019-02-08T02:26:42.537Z",
        "cooked": "<p>A trick that may help in some circumstances is to create a transaction, set the read version to 1, and then clear the whole database. You can then use that transaction sort of like a database, and then discard it at the end of a test. This will work without any real database to connect to, because your reads can always be supplied by the read your writes cache.</p>",
        "post_number": 6,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2019-02-08T02:26:42.537Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 3,
        "reads": 36,
        "readers_count": 35,
        "score": 52.2,
        "yours": false,
        "topic_id": 1120,
        "topic_slug": "mocking-using-golang-bindings",
        "display_username": "David Scherer",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 2
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 22,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/mocking-using-golang-bindings/1120/6",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3324,
        "name": "Dave Koston",
        "username": "dkoston",
        "avatar_template": "/user_avatar/forums.foundationdb.org/dkoston/{size}/264_2.png",
        "created_at": "2019-02-08T20:28:36.054Z",
        "cooked": "<p>Thanks <a class=\"mention\" href=\"/u/dave\">@dave</a>! I may be able to give that a shot. Right now, I\u2019ve been using a wrapper with a <code>map[string]interface{}</code> to hold keys and values and it\u2019s working pretty well. Like <a href=\"https://github.com/DATA-DOG/go-sqlmock\" rel=\"nofollow noopener\">go-sqlmock</a>, I set up some expectations for certain keys to return certain values and then when I execute the wrapper function in mock mode, it pulls back the values from the map. I haven\u2019t implemented anything other than <code>tr.Get()</code>, <code>tr.Set()</code>, and <code>tr.Add()</code> at the moment.</p>\n<p>It\u2019s definitely not as clean as implementing a driver for an existing database wrapper since I have to replace all my calls with wrapper functions so I implemented helpers for things like \u201cdoes key exist\u201d, \u201cincrement key\u201d, \u201cset key\u201d, etc with transaction timeouts and retries and some other boilerplate that tended to make using the golang bindings duplicative either way.</p>\n<p>Appreciate the suggestions. I\u2019ll keep plugging a way on a couple of approaches and see what works best for a balance of CI speed and correctness of tests.</p>",
        "post_number": 7,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2019-02-08T20:28:50.717Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 10,
        "reads": 29,
        "readers_count": 28,
        "score": 55.8,
        "yours": false,
        "topic_id": 1120,
        "topic_slug": "mocking-using-golang-bindings",
        "display_username": "Dave Koston",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/DATA-DOG/go-sqlmock",
            "internal": false,
            "reflection": false,
            "title": "GitHub - DATA-DOG/go-sqlmock: Sql mock driver for golang to test database interactions",
            "clicks": 3
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 264,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/mocking-using-golang-bindings/1120/7",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3327,
        "name": "Bastien Gysler",
        "username": "basgys",
        "avatar_template": "/user_avatar/forums.foundationdb.org/basgys/{size}/291_2.png",
        "created_at": "2019-02-09T12:43:24.584Z",
        "cooked": "<p>I have developed a thin layer on top of FoundationDB to replace it with BBolt in my testing environment. As <a class=\"mention\" href=\"/u/ryanworl\">@ryanworl</a> said, it is not the ideal path, but so far I haven\u2019t experienced unexpected behaviours between both environment. It is also probably worth noting that I don\u2019t use all features provided by FoundationDB. (e.g. Watch)</p>\n<p>It is on the <a href=\"https://github.com/stairlin/storage.go/tree/master/kv\" rel=\"nofollow noopener\">github.com/stairlin/storage.go/kv</a> package.</p>",
        "post_number": 8,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2019-02-09T12:43:24.584Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 3,
        "reads": 26,
        "readers_count": 25,
        "score": 25.2,
        "yours": false,
        "topic_id": 1120,
        "topic_slug": "mocking-using-golang-bindings",
        "display_username": "Bastien Gysler",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/stairlin/storage.go/tree/master/kv",
            "internal": false,
            "reflection": false,
            "title": "storage.go/kv at master \u00b7 stairlin/storage.go \u00b7 GitHub",
            "clicks": 18
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 302,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/mocking-using-golang-bindings/1120/8",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3330,
        "name": "Dave Koston",
        "username": "dkoston",
        "avatar_template": "/user_avatar/forums.foundationdb.org/dkoston/{size}/264_2.png",
        "created_at": "2019-02-10T18:21:17.475Z",
        "cooked": "<p><a class=\"mention\" href=\"/u/basgys\">@basgys</a> nice! Having a K/V package that can accept different drivers and is well maintained would be huge. database/sql does an awesome job of this in the SQL world and it\u2019d be incredibly useful to have something similar in the K/V world.  Hopefully that project, or similar will take off (I do worry about it\u2019s goal to support graph, k/v, etc from the start\u2026I\u2019ve always had more success starting small and focused).</p>",
        "post_number": 9,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2019-02-10T18:21:17.475Z",
        "reply_count": 1,
        "reply_to_post_number": 8,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 24,
        "readers_count": 23,
        "score": 14.8,
        "yours": false,
        "topic_id": 1120,
        "topic_slug": "mocking-using-golang-bindings",
        "display_username": "Dave Koston",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 302,
          "username": "basgys",
          "name": "Bastien Gysler",
          "avatar_template": "/user_avatar/forums.foundationdb.org/basgys/{size}/291_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 264,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/mocking-using-golang-bindings/1120/9",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3341,
        "name": "Bastien Gysler",
        "username": "basgys",
        "avatar_template": "/user_avatar/forums.foundationdb.org/basgys/{size}/291_2.png",
        "created_at": "2019-02-12T08:04:12.163Z",
        "cooked": "<p>Thanks, <a class=\"mention\" href=\"/u/dkoston\">@dkoston</a>! I understand your concern about thinking too big. However, I usually work on another whenever Stairlin (organisation) needs it. Regarding the GraphDB layer, it was fairly trivial to implement as it is just a wrapper around <a href=\"https://github.com/cayleygraph/cayley\" rel=\"nofollow noopener\">Cayley</a>.</p>\n<p>Now back to the K/V store, the goal was not about having a generic K/V package with as many drivers as possible. It would not be a bad idea though. The only problem I see is that this K/V package is assuming an ordered key/value store with transaction support, which limits already the choices. Also, the API is virtually identical to FoundationDB\u2019s, which is perhaps not the best choice for a generic K/V API.</p>\n<p>If you are interested in using this package, I am open to including more drivers or other ideas in the project. Then you can benefit from the new extra layers added.</p>",
        "post_number": 10,
        "post_type": 1,
        "posts_count": 10,
        "updated_at": "2019-02-12T08:04:12.163Z",
        "reply_count": 0,
        "reply_to_post_number": 9,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 19,
        "readers_count": 18,
        "score": 3.8,
        "yours": false,
        "topic_id": 1120,
        "topic_slug": "mocking-using-golang-bindings",
        "display_username": "Bastien Gysler",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/cayleygraph/cayley",
            "internal": false,
            "reflection": false,
            "title": "GitHub - cayleygraph/cayley: An open-source graph database",
            "clicks": 6
          }
        ],
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 264,
          "username": "dkoston",
          "name": "Dave Koston",
          "avatar_template": "/user_avatar/forums.foundationdb.org/dkoston/{size}/264_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 302,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/mocking-using-golang-bindings/1120/10",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      3314,
      3315,
      3316,
      3317,
      3318,
      3319,
      3324,
      3327,
      3330,
      3341
    ]
  },
  "timeline_lookup": [
    [
      1,
      2448
    ],
    [
      7,
      2447
    ],
    [
      8,
      2446
    ],
    [
      9,
      2445
    ],
    [
      10,
      2444
    ]
  ],
  "suggested_topics": [],
  "tags": [
    "bindings"
  ],
  "tags_descriptions": {},
  "fancy_title": "Mocking using golang bindings",
  "id": 1120,
  "title": "Mocking using golang bindings",
  "posts_count": 10,
  "created_at": "2019-02-07T20:55:09.429Z",
  "views": 1519,
  "reply_count": 4,
  "like_count": 3,
  "last_posted_at": "2019-02-12T08:04:12.163Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "mocking-using-golang-bindings",
  "category_id": 7,
  "word_count": 920,
  "deleted_at": null,
  "user_id": 264,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_1120",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 10,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 4,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "Running a Go test with a Transaction",
      "id": 1288,
      "title": "Running a Go test with a Transaction",
      "slug": "running-a-go-test-with-a-transaction",
      "posts_count": 6,
      "reply_count": 2,
      "highest_post_number": 6,
      "image_url": null,
      "created_at": "2019-04-08T23:38:28.704Z",
      "last_posted_at": "2020-03-19T22:39:42.212Z",
      "bumped": true,
      "bumped_at": "2020-03-19T22:39:42.212Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 727,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 558,
            "username": "bancron",
            "name": "bancron",
            "avatar_template": "/user_avatar/forums.foundationdb.org/bancron/{size}/550_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 407,
            "username": "pjvds",
            "name": "Pieter Joost Van De Sande",
            "avatar_template": "/user_avatar/forums.foundationdb.org/pjvds/{size}/394_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "ANN: benchmark FoundationDB with Go YCSB",
      "id": 318,
      "title": "ANN: benchmark FoundationDB with Go YCSB",
      "slug": "ann-benchmark-foundationdb-with-go-ycsb",
      "posts_count": 6,
      "reply_count": 1,
      "highest_post_number": 6,
      "image_url": null,
      "created_at": "2018-04-30T22:55:12.171Z",
      "last_posted_at": "2018-05-06T18:42:59.159Z",
      "bumped": true,
      "bumped_at": "2018-05-06T18:42:59.159Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 9,
      "views": 3423,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 195,
            "username": "siddontang",
            "name": "Siddontang",
            "avatar_template": "/user_avatar/forums.foundationdb.org/siddontang/{size}/155_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 146,
            "username": "bigdata86",
            "name": "Wangmeng",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/b/cdc98d/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 232,
            "username": "tekumara",
            "name": "Oliver Mannion",
            "avatar_template": "/user_avatar/forums.foundationdb.org/tekumara/{size}/201_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 54,
            "username": "Evan",
            "name": "Evan Tschannen",
            "avatar_template": "/user_avatar/forums.foundationdb.org/evan/{size}/104_2.png",
            "moderator": true,
            "trust_level": 1
          }
        }
      ]
    },
    {
      "fancy_title": "Experience of combining FoundationDB with a MPP data warehouse",
      "id": 438,
      "title": "Experience of combining FoundationDB with a MPP data warehouse",
      "slug": "experience-of-combining-foundationdb-with-a-mpp-data-warehouse",
      "posts_count": 6,
      "reply_count": 4,
      "highest_post_number": 6,
      "image_url": null,
      "created_at": "2018-05-19T15:37:27.305Z",
      "last_posted_at": "2018-05-24T00:32:08.763Z",
      "bumped": true,
      "bumped_at": "2018-05-24T00:32:08.763Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 2,
      "views": 1234,
      "category_id": 10,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 270,
            "username": "ftian",
            "name": "",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/f/aca169/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Unit- and Integration-Testing a Python/FDB app?",
      "id": 492,
      "title": "Unit- and Integration-Testing a Python/FDB app?",
      "slug": "unit-and-integration-testing-a-python-fdb-app",
      "posts_count": 4,
      "reply_count": 0,
      "highest_post_number": 4,
      "image_url": null,
      "created_at": "2018-06-06T09:13:56.876Z",
      "last_posted_at": "2018-06-08T21:46:33.954Z",
      "bumped": true,
      "bumped_at": "2018-06-08T21:46:33.954Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 2,
      "views": 1284,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 299,
            "username": "kevin",
            "name": "kevin",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/k/2acd7d/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 118,
            "username": "abdullin",
            "name": "Rinat Abdullin",
            "avatar_template": "/user_avatar/forums.foundationdb.org/abdullin/{size}/83_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 22,
            "username": "dave",
            "name": "David Scherer",
            "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
            "trust_level": 1
          }
        }
      ]
    },
    {
      "fancy_title": "Creating New Bindings",
      "id": 207,
      "title": "Creating New Bindings",
      "slug": "creating-new-bindings",
      "posts_count": 9,
      "reply_count": 3,
      "highest_post_number": 9,
      "image_url": null,
      "created_at": "2018-04-22T20:30:53.215Z",
      "last_posted_at": "2018-04-27T11:57:09.813Z",
      "bumped": true,
      "bumped_at": "2018-04-27T11:57:09.813Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [
        "bindings"
      ],
      "tags_descriptions": {},
      "like_count": 6,
      "views": 2729,
      "category_id": 5,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 30,
            "username": "wwilson",
            "name": "Will Wilson",
            "avatar_template": "/user_avatar/forums.foundationdb.org/wwilson/{size}/88_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 63,
            "username": "fire",
            "name": "",
            "avatar_template": "/user_avatar/forums.foundationdb.org/fire/{size}/1480_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 22,
            "username": "dave",
            "name": "David Scherer",
            "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 168,
            "username": "hasseily",
            "name": "Henri Asseily",
            "avatar_template": "/user_avatar/forums.foundationdb.org/hasseily/{size}/131_2.png",
            "trust_level": 1
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 264,
        "username": "dkoston",
        "name": "Dave Koston",
        "avatar_template": "/user_avatar/forums.foundationdb.org/dkoston/{size}/264_2.png",
        "post_count": 5,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 81,
        "username": "ryanworl",
        "name": "Ryan Worl",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 3
      },
      {
        "id": 302,
        "username": "basgys",
        "name": "Bastien Gysler",
        "avatar_template": "/user_avatar/forums.foundationdb.org/basgys/{size}/291_2.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 22,
        "username": "dave",
        "name": "David Scherer",
        "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      }
    ],
    "created_by": {
      "id": 264,
      "username": "dkoston",
      "name": "Dave Koston",
      "avatar_template": "/user_avatar/forums.foundationdb.org/dkoston/{size}/264_2.png"
    },
    "last_poster": {
      "id": 302,
      "username": "basgys",
      "name": "Bastien Gysler",
      "avatar_template": "/user_avatar/forums.foundationdb.org/basgys/{size}/291_2.png"
    },
    "links": [
      {
        "url": "https://github.com/stairlin/storage.go/tree/master/kv",
        "title": "storage.go/kv at master \u00b7 stairlin/storage.go \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 18,
        "user_id": 302,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://github.com/cayleygraph/cayley",
        "title": "GitHub - cayleygraph/cayley: An open-source graph database",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 6,
        "user_id": 302,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://github.com/DATA-DOG/go-sqlmock",
        "title": "GitHub - DATA-DOG/go-sqlmock: Sql mock driver for golang to test database interactions",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 3,
        "user_id": 264,
        "domain": "github.com",
        "root_domain": "github.com"
      }
    ]
  },
  "bookmarks": []
}