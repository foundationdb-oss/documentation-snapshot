{
  "post_stream": {
    "posts": [
      {
        "id": 4097,
        "name": "Austin Seipp",
        "username": "aseipp",
        "avatar_template": "/user_avatar/forums.foundationdb.org/aseipp/{size}/124_2.png",
        "created_at": "2019-05-14T17:49:31.933Z",
        "cooked": "<p>Hello *,</p>\n<p>Recently for my own uses, I\u2019ve been experimenting with (and somewhat standardizing on) the usage of <a href=\"https://clickhouse.yandex\" rel=\"nofollow noopener\">ClickHouse</a> for a lot of my time series/OLAP/logging information \u2013 it\u2019s a screaming fast column store for OLAP workloads. Recently I found a question on the forums about ingesting/reading trace files, which made it apparent a lot of people are using one-off tools for logging/analytics. I thought it might be a good use of ClickHouse to try ingesting and querying the FDB trace logs: they\u2019re \u201cwide\u201d event logs with potentially many columns for each event which is a decent fit for columnar designs.</p>\n<p>Here\u2019s the result of this experiment: a tool, contained in a Docker container, that you can launch to watch for log files being rotated, and ingest them whenever <code>fdbserver</code> syncs/flushes them and creates a new file. It depends on the (relatively new) <code>--trace_format json</code> directive in <code>fdbserver</code>.</p>\n<aside class=\"onebox whitelistedgeneric\">\n  <header class=\"source\">\n      <img src=\"https://github.githubassets.com/favicons/favicon.svg\" class=\"site-icon\" width=\"32\" height=\"32\">\n      <a href=\"https://github.com/thoughtpolice/fdblog2clickhouse\" target=\"_blank\" rel=\"nofollow noopener\">GitHub</a>\n  </header>\n  <article class=\"onebox-body\">\n    <img src=\"https://avatars0.githubusercontent.com/u/3416?s=400&amp;v=4\" class=\"thumbnail onebox-avatar\" width=\"400\" height=\"400\">\n\n<h3><a href=\"https://github.com/thoughtpolice/fdblog2clickhouse\" target=\"_blank\" rel=\"nofollow noopener\">thoughtpolice/fdblog2clickhouse</a></h3>\n\n<p>Ingest FoundationDB Logs into ClickHouse. Contribute to thoughtpolice/fdblog2clickhouse development by creating an account on GitHub.</p>\n\n\n  </article>\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>Additions to the various column types, <code>CODEC</code> choices, etc would be appreciated.</p>\n<p>In the future, ClickHouse will also (ideally) support reading/scanning/ingesting data from S3 data sources directly without tools like Kafka, which would open up another mechanism for doing log ingestion (instead this tool would only have to write cleaned-up logs to S3, and schema management, query construction, etc could be done elsewhere.) This would have the obvious value-add of re-using any existing S3 endpoints in your infrastructure, which is already necessary for robust and scalable FoundationDB backups.</p>\n<p>There are several more details about how things work inside the README. I\u2019d appreciate any particular feedback, but probably the most important thing is:</p>\n<ul>\n<li>Is the general idea of waiting for <code>close(2)</code> events on trace files through <code>inotify</code> a valid and legitimate way of tracking log file rotations? The whole assumption here is that a single <code>fdbserver</code> writes to a single trace file and once it\u2019s closed, it\u2019s rotated and never touched again. Providing this guarantee is met, I think everything else is relatively valid, right?</li>\n</ul>\n<hr>\n<p>Very fast TL;DR: you can run these two docker images to pull up a demo ClickHouse server and a copy of this tool, which will ingest any <code>.json</code> trace logs in <code>/var/log/foundationdb</code> into ClickHouse</p>\n<pre><code class=\"lang-bash\">$ docker run -d --rm \\\n    --ulimit nofile=262144:262144 \\\n    -p 8123:8123 \\\n    --name clickhouse-server \\\n    yandex/clickhouse-server\n\n$ docker run -d --rm \\\n    --link clickhouse-server \\\n    -e CLICKHOUSE_ADDR=http://clickhouse-server:8123 \\\n    -e CLICKHOUSE_DB=testing \\\n    -e CLICKHOUSE_TABLE=cluster01 \\\n    -v /var/log/foundationdb:/data/logs \\\n    thoughtpolice/fdblog2clickhouse:latest\n</code></pre>\n<p>After a while, you can run a <code>clickhouse-client</code> and check out the data:</p>\n<pre><code class=\"lang-bash\">$ docker run -it --rm \\\n    --link clickhouse-server \\\n    yandex/clickhouse-client \\\n    --host clickhouse-server\n\nClickHouse client version 19.5.2.6 (official build).\nConnecting to clickhouse-server:9000 as user default.\nConnected to ClickHouse server version 19.5.2 revision 54417.\n\ne328593055b3 :) describe table testing.cluster01;\n\nDESCRIBE TABLE testing.cluster01\n\n\u250c\u2500name\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500type\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500default_type\u2500\u252c\u2500default_expression\u2500\u252c\u2500comment\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500codec_expression\u2500\u2510\n\u2502 As         \u2502 Nullable(String) \u2502              \u2502                    \u2502 Lorem ipsum     \u2502 NONE             \u2502\n\u2502 ID         \u2502 String           \u2502              \u2502                    \u2502 Lorem ipsum     \u2502 NONE             \u2502\n\u2502 Locality   \u2502 Nullable(String) \u2502              \u2502                    \u2502 Lorem ipsum     \u2502 NONE             \u2502\n\u2502 Machine    \u2502 String           \u2502              \u2502                    \u2502 Lorem ipsum     \u2502 NONE             \u2502\n\u2502 Severity   \u2502 UInt32           \u2502              \u2502                    \u2502 Event severity  \u2502 NONE             \u2502\n\u2502 Transition \u2502 Nullable(String) \u2502              \u2502                    \u2502 Lorem ipsum     \u2502 NONE             \u2502\n\u2502 Time       \u2502 DateTime         \u2502              \u2502                    \u2502 Event timestamp \u2502 NONE             \u2502\n\u2502 Type       \u2502 String           \u2502              \u2502                    \u2502 Event type      \u2502 NONE             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n8 rows in set. Elapsed: 0.001 sec.\n\ne328593055b3 :) select count(*) from testing.cluster01;\n\nSELECT count(*)\nFROM testing.cluster01\n\n\u250c\u2500count()\u2500\u2510\n\u2502   25831 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n1 rows in set. Elapsed: 0.002 sec. Processed 25.83 thousand rows, 103.32 KB (10.34 million rows/s., 41.38 MB/s.)\n\ne328593055b3 :)\n</code></pre>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 8,
        "updated_at": "2019-05-14T17:49:31.933Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 564,
        "reads": 52,
        "readers_count": 51,
        "score": 2875.4,
        "yours": false,
        "topic_id": 1360,
        "topic_slug": "show-the-forums-ingest-fdb-logs-into-clickhouse",
        "display_username": "Austin Seipp",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/thoughtpolice/fdblog2clickhouse",
            "internal": false,
            "reflection": false,
            "title": "GitHub - thoughtpolice/fdblog2clickhouse: Ingest FoundationDB Logs into ClickHouse",
            "clicks": 17
          },
          {
            "url": "https://clickhouse.yandex",
            "internal": false,
            "reflection": false,
            "title": "ClickHouse \u2014 open source distributed column-oriented DBMS",
            "clicks": 13
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 3
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 158,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/show-the-forums-ingest-fdb-logs-into-clickhouse/1360/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 4100,
        "name": "Markus Pilman",
        "username": "markus.pilman",
        "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
        "created_at": "2019-05-14T20:56:47.101Z",
        "cooked": "<p>This is great! Does ClickHouse support querying the json data directly?</p>\n<p>We (Snowflake) injest all of our FDB traces to snowflake through our injestion service. The Table we use has the following schema:</p>\n<pre><code>| name     | type              | kind   |\n|----------+-------------------+--------|\n| TIME     | TIMESTAMP_NTZ(9)  | COLUMN |\n| SEVERITY | NUMBER(38,0)      | COLUMN |\n| MACHINE  | VARCHAR(16777216) | COLUMN |\n| TYPE     | VARCHAR(16777216) | COLUMN |\n| FILE     | VARCHAR(16777216) | COLUMN |\n| V        | VARIANT           | COLUMN |\n</code></pre>\n<p>The table has currently around 20 billion rows. Us injesting into Snowflake is actually the reason <code>--trace_format json</code> exists <img src=\"https://emoji.discourse-cdn.com/twitter/wink.png?v=9\" title=\":wink:\" class=\"emoji\" alt=\":wink:\"></p>\n<p>The gust of it is that I strongly agree that having the traces in a data warehouse is a great thing to have. This helped us quite often to analyze production issues with FDB that we had.</p>\n<p>Additionally we also store tracefiles from all simulation tests in a database (separate table but the same schema).</p>\n<p>When you get this data injested and your SQL dialect supports json, you can also create views for the most common types that you query to bring them into a relational form. We never bothered to do that as nobody seems to mind querying the json directly, but if you would connect the database to some third party application that doesn\u2019t understand json this would be useful.</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 8,
        "updated_at": "2019-05-14T20:56:47.101Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 2,
        "reads": 45,
        "readers_count": 44,
        "score": 24.0,
        "yours": false,
        "topic_id": 1360,
        "topic_slug": "show-the-forums-ingest-fdb-logs-into-clickhouse",
        "display_username": "Markus Pilman",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 15,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/show-the-forums-ingest-fdb-logs-into-clickhouse/1360/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 4101,
        "name": "Ryan Worl",
        "username": "ryanworl",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png",
        "created_at": "2019-05-14T21:06:01.339Z",
        "cooked": "<p>Clickhouse does have some JSON functions but they aren\u2019t as sophisticated as the Snowflake variant type. It also doesn\u2019t have a more efficient encoding for JSON than just compressing the string.</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 8,
        "updated_at": "2019-05-14T21:06:01.339Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 44,
        "readers_count": 43,
        "score": 13.8,
        "yours": false,
        "topic_id": 1360,
        "topic_slug": "show-the-forums-ingest-fdb-logs-into-clickhouse",
        "display_username": "Ryan Worl",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 81,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/show-the-forums-ingest-fdb-logs-into-clickhouse/1360/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 4102,
        "name": "Austin Seipp",
        "username": "aseipp",
        "avatar_template": "/user_avatar/forums.foundationdb.org/aseipp/{size}/124_2.png",
        "created_at": "2019-05-14T21:11:04.416Z",
        "cooked": "<blockquote>\n<p>This is great! Does ClickHouse support querying the json data directly?</p>\n</blockquote>\n<p>You mean doing things like raw scans over the actual documents? No, I\u2019m afraid. Though maybe you could add it\u2026</p>\n<p>ClickHouse is an OLAP database but it is firmly a SQL one, so while you don\u2019t necessarily want a totally normalized schema (just a wide one with everything), you still need a schema. This is one of the reasons the Python tool actually snips out the columns it knows about from the underlying JSON, another being that these columns can be enriched with metadata/column type information for ClickHouse (like the compression type). When you want to write rows into the database, you <em>can</em> use JSON (in a very particular format), but the JSON \u201cschema\u201d must match the table schema directly</p>\n<p>ClickHouse errors when non-present columns are present in the submitted JSON, so it must all match exactly. It also errors when non-<code>Nullable</code> columns have <code>NULL</code> inserted into them or is not present (<code>Nullable</code>s require more overhead in its design and degrade performance), hence why some are optional in my current schema.</p>\n<p>ClickHouse does support <a href=\"https://clickhouse.yandex/docs/en/query_language/functions/json_functions/\" rel=\"noopener nofollow ugc\">a limited subset of functionality on JSON strings</a>. So what you could do is actually keep the relevant data in actual columns after cleaning up the DataFrame, then have a \u2018raw\u2019 column that contains the original JSON row in its entirety as a String. <code>CODEC(ZSTD)</code> would substantially reduce the space usage in this column, and it would let you do some limited JSON stuff in the mean time. ClickHouse will probably expand some of its JSON support in the future, but I don\u2019t know how much.</p>\n<hr>\n<p>One thing I experimented with was just slurping up all my logs into a single DataFrame and then dumping out the schema based on every trace that was seen. This resulted in a 500+ column-wide schema. Which ClickHouse could handle, but, the problem is it\u2019s incomplete: you don\u2019t know what columns are \u201cpossible\u201d until you see them in a trace log, meaning you can get stuck on invalid log files in the future if they include columns you didn\u2019t previously account for. I imagine I am missing quite a few possible columns in  my logs, making it difficult to be sure it\u2019s correct. Otherwise ClickHouse could injest every column of every trace file with little fuss.</p>\n<p>FoundationDB, as of current, doesn\u2019t support any kind of exportable schema for all possible trace events \u2013 events are simply added to the source code as freeform strings. There would need to be a big refactoring so that e.g. all trace events were put into a separate file with metadata about the format of the trace event, what columns/types are present, and then used/compiled into the source code somehow (e.g. an X-Macro or preprocessor hack). This would be a good change and make it possible to make reliable versions of this tool that work for any trace, but it would be a significant amount of work, I think.</p>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 8,
        "updated_at": "2019-05-14T21:11:04.416Z",
        "reply_count": 1,
        "reply_to_post_number": 2,
        "quote_count": 0,
        "incoming_link_count": 6,
        "reads": 45,
        "readers_count": 44,
        "score": 44.0,
        "yours": false,
        "topic_id": 1360,
        "topic_slug": "show-the-forums-ingest-fdb-logs-into-clickhouse",
        "display_username": "Austin Seipp",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://clickhouse.yandex/docs/en/query_language/functions/json_functions/",
            "internal": false,
            "reflection": false,
            "title": "Working with JSON. - ClickHouse Documentation",
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 15,
          "username": "markus.pilman",
          "name": "Markus Pilman",
          "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 158,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/show-the-forums-ingest-fdb-logs-into-clickhouse/1360/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 4103,
        "name": "Markus Pilman",
        "username": "markus.pilman",
        "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
        "created_at": "2019-05-14T22:03:30.696Z",
        "cooked": "<p>I see\u2026 IMHO it is a bad idea to force a schema on traces. We want to be able to add more stuff on the fly and having to change a schema whenever you add tracing will result in people not tracing useful stuff anymore (as some people - like myself - are lazy).</p>\n<p>I think any tool that we want to use to analyze traces has to support semi-structured data. Snowflake optimizes JSON really well (internally we use a PAX-layout and automatically create columns for common json keys) and the query language is easy to use. The main drawback is that it is not an open source tool\u2026 But it is one option for people who are willing to pay.</p>\n<p>Did you take a look at <a href=\"https://prestodb.github.io\" rel=\"nofollow noopener\">Presto</a> for this? Presto should be able to directly read data from S3 and I think it has some JSON-support (not sure how good it is).</p>",
        "post_number": 5,
        "post_type": 1,
        "posts_count": 8,
        "updated_at": "2019-05-14T22:03:30.696Z",
        "reply_count": 1,
        "reply_to_post_number": 4,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 39,
        "readers_count": 38,
        "score": 17.8,
        "yours": false,
        "topic_id": 1360,
        "topic_slug": "show-the-forums-ingest-fdb-logs-into-clickhouse",
        "display_username": "Markus Pilman",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://prestodb.github.io",
            "internal": false,
            "reflection": false,
            "title": "Presto | Distributed SQL Query Engine for Big Data",
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 158,
          "username": "aseipp",
          "name": "Austin Seipp",
          "avatar_template": "/user_avatar/forums.foundationdb.org/aseipp/{size}/124_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 15,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/show-the-forums-ingest-fdb-logs-into-clickhouse/1360/5",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 4104,
        "name": "Austin Seipp",
        "username": "aseipp",
        "avatar_template": "/user_avatar/forums.foundationdb.org/aseipp/{size}/124_2.png",
        "created_at": "2019-05-14T22:22:48.929Z",
        "cooked": "<p>Semi-structured querying is probably quite useful and makes the pipeline simpler; ClickHouse might get some better support for it, but I think in practice trace structure for many events is probably already pretty stable (at least for many common fields). After all, even if you can store and query semi-structured data, doing vast changes to the trace format will probably break tons of stuff (reporting dashboards, etc) that you have to account for anyway. You\u2019ll do canary rollouts, tests, schema updates etc. It gives you a bit more agility to have a flexible format like the one in use now (which is good), but it\u2019s not like the trace format will (or should) change all the time, or you run major version upgrades every day, either.</p>\n<p>In return for having a schema, though, ClickHouse has absolutely unrivaled performance and space usage compared to almost anything else that is readily available. (I don\u2019t know how much space 20 billion records uses for you, but it\u2019d be interesting to compare: I\u2019d ballpark ClickHouse would get 80%+ space savings, and easily do multi-hundred-million rows/s on a single high-end node.) I don\u2019t know of any open source semi-structured tool that can come close to ClickHouse\u2019s performance, or even more equivalent commercial OLAP SQL offerings \u2013 it\u2019s nearly as fast (or faster) as BigQuery in many cases, but quirkier and not as polished.</p>\n<p>I have also looked at Presto quite a bit (I recently wanted to use it on the multi-PB Common Crawl Index, available on S3, actually), and it could almost certainly fit this use case, but it\u2019s more of a \u201cdata warehouse frontend\u201d than an actual storage system. As a result there are some up-front differences:</p>\n<ul>\n<li>S3 support requires running a Hive metadata service to keep schema metadata, and That\u2019s An Annoying Amount Of Work\u2122. Presto itself is easy to run but Hive is\u2026 surprisingly annoying to run. You\u2019d think this very common data-warehouse usecase would have a native storage connector, making it easy, but the Hive adapter is the only supported way of doing this for now.</li>\n<li>Even if the data is on S3, you will lose substantial performance/space savings vs ClickHouse unless you process records into a disk-based columnar format, such as Parquet. Therefore you still need some kind of batch processing pipeline. Again, this works with Presto (Parquet on S3 is probably the closest columnar-OLAP storage system you can get), but still requires Hive.</li>\n<li>Presto still models all foreign connectors with \u201cahead-of-time\u201d schemas, so you would still need to write out the schema for your Parquet data on S3, etc. Though, it has more traditional/expansive JSON support that isn\u2019t as limited as the ClickHouse variants.</li>\n</ul>\n<p>These drawbacks (especially the first two, which bring a much more complex set of failure/operation modes) mean that ClickHouse is ultimately a much better choice for most of my uses, since it\u2019s much more effective as far as ROI/commodity hardware usage goes and very easy to run.</p>\n<p>Ultimately, it would be better to build something like a ClickHouse <em>connector</em> for Presto. Then you could load trace files into ClickHouse and query ClickHouse schemas from Presto easily, without the need for Hive or anything else, while retaining the other benefits.</p>\n<p>EDIT: I should say though, that one of my inevitable goals is to pipe full trace logs somewhere into \u2018cold storage\u2019 on my own S3 endpoint, and given that \u2013 if you can figure out the 30 magical commands needed to get Hive working \u2013 Presto would still be a good choice to consider, given you need a little data loader for ClickHouse (resp. a Parquet converter) anyway.</p>",
        "post_number": 6,
        "post_type": 1,
        "posts_count": 8,
        "updated_at": "2019-05-14T23:06:30.044Z",
        "reply_count": 1,
        "reply_to_post_number": 5,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 40,
        "readers_count": 39,
        "score": 18.0,
        "yours": false,
        "topic_id": 1360,
        "topic_slug": "show-the-forums-ingest-fdb-logs-into-clickhouse",
        "display_username": "Austin Seipp",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 15,
          "username": "markus.pilman",
          "name": "Markus Pilman",
          "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 158,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/show-the-forums-ingest-fdb-logs-into-clickhouse/1360/6",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 4105,
        "name": "Markus Pilman",
        "username": "markus.pilman",
        "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
        "created_at": "2019-05-14T23:16:53.295Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"aseipp\" data-post=\"6\" data-topic=\"1360\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/aseipp/48/124_2.png\" class=\"avatar\"> aseipp:</div>\n<blockquote>\n<p>(I don\u2019t know how much space 20 billion records uses for you, but it\u2019d be interesting to compare: I\u2019d ballpark ClickHouse would get 80%+ space savings, and easily do multi-hundred-million rows/s on a single high-end node.)</p>\n</blockquote>\n</aside>\n<p>This table uses ~1.5TB of space (or around $30/month in money - which is the important number for us). A simple full-table scan on one row takes on a large warehouse 30 seconds. But I don\u2019t think you can make an easy apples to apples comparison between Snowflake and ClickHouse.</p>\n<p>But I don\u2019t think this should be a Snowflake vs ClickHouse thread and I am sorry if I directed the course towards this <img src=\"https://emoji.discourse-cdn.com/twitter/wink.png?v=12\" title=\":wink:\" class=\"emoji\" alt=\":wink:\" loading=\"lazy\" width=\"20\" height=\"20\"> If Snowflake is slower than ClickHouse I would be very much interested in some numbers.</p>\n<p>But please don\u2019t get me wrong: I didn\u2019t say that you shouldn\u2019t use ClickHouse, I just said that without support for semi-structured data in your OLAP system you will probably run into problems and it might be worth to explore other options.</p>\n<p>You are right that existing traces typically don\u2019t change that often (though they do sometimes change quite drastically). But you will probably see new traces and/or new keys in existing traces whenever you change the FDB version. And this will probably be true even for patch-releases. Changing your database schema whenever you switch to a different version of FDB won\u2019t be fun. Furthermore your tables will be very sparse which will mean that you will need to use quite a lot of projection to make results readable (you can make this better by creating many views - or maybe even a view per trace-type but it is still not optimal).</p>\n<p>If you can make this still work well with ClickHouse I think there would be a lot of value in this work. Did you take a look at the <a href=\"https://github.com/wavefrontHQ/wavefront-fdb-tailer\">Wavefront tailer</a>? Depending on how cheap inserts are for ClickHouse you could adapt from there? This would allow you to ingest data quicker than FDB rotates files.</p>\n<p>Also if you don\u2019t mind me asking: what is your ultimate goal here? Do you simply want to have OLAP over your own files or do you want to have a general solution for FoundationDB? If it is the first Snowflake will probably be cheaper for you (as the storage pricing is the same as S3 and you only pay for compute if you actually run queries).</p>",
        "post_number": 7,
        "post_type": 1,
        "posts_count": 8,
        "updated_at": "2019-05-14T23:16:53.295Z",
        "reply_count": 1,
        "reply_to_post_number": 6,
        "quote_count": 1,
        "incoming_link_count": 1,
        "reads": 40,
        "readers_count": 39,
        "score": 18.0,
        "yours": false,
        "topic_id": 1360,
        "topic_slug": "show-the-forums-ingest-fdb-logs-into-clickhouse",
        "display_username": "Markus Pilman",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/wavefrontHQ/wavefront-fdb-tailer",
            "internal": false,
            "reflection": false,
            "title": "GitHub - wavefrontHQ/wavefront-fdb-tailer: Wavefront Metrics Adaptor for FoundationDB Logs",
            "clicks": 7
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 15,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/show-the-forums-ingest-fdb-logs-into-clickhouse/1360/7",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 4106,
        "name": "Austin Seipp",
        "username": "aseipp",
        "avatar_template": "/user_avatar/forums.foundationdb.org/aseipp/{size}/124_2.png",
        "created_at": "2019-05-15T00:46:26.081Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"markus.pilman\" data-post=\"7\" data-topic=\"1360\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/markus.pilman/48/379_2.png\" class=\"avatar\"> markus.pilman:</div>\n<blockquote>\n<p>This table uses ~1.5TB of space (or around $30/month in money - which is the important number for us). A simple full-table scan on one row takes on a large warehouse 30 seconds. But I don\u2019t think you can make an easy apples to apples comparison between Snowflake and ClickHouse.</p>\n<p>But I don\u2019t think this should be a Snowflake vs ClickHouse thread and I am sorry if I directed the course towards this <img src=\"https://emoji.discourse-cdn.com/twitter/wink.png?v=12\" title=\":wink:\" class=\"emoji\" alt=\":wink:\" loading=\"lazy\" width=\"20\" height=\"20\"> If Snowflake is slower than ClickHouse I would be very much interested in some numbers.</p>\n</blockquote>\n</aside>\n<p>No worries, and that\u2019s an interesting ballpark number for the size/cost. It\u2019d probably be very small with ClickHouse but comparing CH to a system like Snowflake with disaggregated storage, as you say, makes cost comparisons very wonky here (even if ClickHouse compresses 1/10th of that size, the cost of a included cloud SSD for that storage, and the CPUs, is probably a bit more variable/costly than the relative warehousing cost, etc)</p>\n<aside class=\"quote no-group\" data-username=\"markus.pilman\" data-post=\"7\" data-topic=\"1360\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/markus.pilman/48/379_2.png\" class=\"avatar\"> markus.pilman:</div>\n<blockquote>\n<p>You are right that existing traces typically don\u2019t change that often (though they do sometimes change quite drastically). But you will probably see new traces and/or new keys in existing traces whenever you change the FDB version. And this will probably be true even for patch-releases. Changing your database schema whenever you switch to a different version of FDB won\u2019t be fun. Furthermore your tables will be very sparse which will mean that you will need to use quite a lot of projection to make results readable (you can make this better by creating many views - or maybe even a view per trace-type but it is still not optimal).</p>\n</blockquote>\n</aside>\n<p>Right, the important thing is trying to isolate what are probably the most common, stable trace columns, and using those for the main table. After all, even being able to aggregate error severity by machine across some time window is still very useful, even if many other columns are difficult.</p>\n<p>It would still be excellent if there was some schema describing all possible trace events in the source code. At least then there would be some hope of comparing/generating schemas and writing migrations, etc.</p>\n<p>The sparsity thing is true and common unfortunately. <img src=\"https://emoji.discourse-cdn.com/twitter/frowning.png?v=12\" title=\":frowning:\" class=\"emoji\" alt=\":frowning:\" loading=\"lazy\" width=\"20\" height=\"20\"> There ultra-wide \u201chas everything\u201d table is the easy part. The best thing is to use a <code>(MATERIALIZED) VIEW</code> into other storage engines for these cases with more refined schemas, which requires a bit of thought as you say.</p>\n<aside class=\"quote no-group\" data-username=\"markus.pilman\" data-post=\"7\" data-topic=\"1360\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/markus.pilman/48/379_2.png\" class=\"avatar\"> markus.pilman:</div>\n<blockquote>\n<p>If you can make this still work well with ClickHouse I think there would be a lot of value in this work. Did you take a look at the <a href=\"https://github.com/wavefrontHQ/wavefront-fdb-tailer\" rel=\"noopener nofollow ugc\">Wavefront tailer</a>? Depending on how cheap inserts are for ClickHouse you could adapt from there? This would allow you to ingest data quicker than FDB rotates files.</p>\n</blockquote>\n</aside>\n<p>I didn\u2019t look at the Wavefront trailer, but I know of it. ClickHouse doesn\u2019t really like small writes at all, unfortunately, and it\u2019s an easy way to annihilate your performance \u2013 it wants very large batched writes (tens or hundreds of thousands of entries <em>per insert</em>). It can do many large batched writes concurrently at very high rates, but they must be large. Therefore, I don\u2019t think the tailing approach is very appropriate.</p>\n<p>The default FDB policy of rotating logs at 10MB is actually a pretty good default setting for this case, and why I use the \u201cwait for a log rotation to occur, then slurp that up\u201d strategy, since it works nicely and is extremely easy to implement.</p>\n<p>A more generalized tool, one that tailed logs and did continuous/streaming inserts, or could wait for log rotation to occur and do big \u201cbatch\u201d inserts of a log, would be very useful.</p>\n<aside class=\"quote no-group\" data-username=\"markus.pilman\" data-post=\"7\" data-topic=\"1360\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/markus.pilman/48/379_2.png\" class=\"avatar\"> markus.pilman:</div>\n<blockquote>\n<p>Also if you don\u2019t mind me asking: what is your ultimate goal here? Do you simply want to have OLAP over your own files or do you want to have a general solution for FoundationDB? If it is the first Snowflake will probably be cheaper for you (as the storage pricing is the same as S3 and you only pay for compute if you actually run queries).</p>\n</blockquote>\n</aside>\n<p>Basically: I need a better way of aggregating/searching logs for performance tuning, debugging, etc, and I already use ClickHouse for other use cases like this (logging) etc already. So it was an easy fit, and I get to to re-use what I already have available (my hardware, my server, my SQL skills).</p>\n<p>Generally, this tool already should be usable for deployment elsewhere if you already have ClickHouse on hand. There\u2019s nothing specific to my deployment. One goal is to eventually also use this for my simulation tests of my NixOS packages (as I mentioned elsewhere) but it should already be usable for other people, too.</p>\n<p>Also, regarding pricing: I mostly have decent hardware available already running ClickHouse (my workstation, an alright remove VPS) for my low-volume uses, so there\u2019s a bit of a sunk cost here where I might as well already use the resources I have at hand rather than pay more S3/compute costs. Since ClickHouse also prioritizes performance above all else, this means I get maximum return on my hardware investment too \u2013 although I probably won\u2019t get this far, I could easily go to multi-billion datapoints on either machine without using much space/compute, and it\u2019s already available.</p>",
        "post_number": 8,
        "post_type": 1,
        "posts_count": 8,
        "updated_at": "2019-05-15T00:46:26.081Z",
        "reply_count": 0,
        "reply_to_post_number": 7,
        "quote_count": 1,
        "incoming_link_count": 10,
        "reads": 39,
        "readers_count": 38,
        "score": 57.8,
        "yours": false,
        "topic_id": 1360,
        "topic_slug": "show-the-forums-ingest-fdb-logs-into-clickhouse",
        "display_username": "Austin Seipp",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 158,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/show-the-forums-ingest-fdb-logs-into-clickhouse/1360/8",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      4097,
      4100,
      4101,
      4102,
      4103,
      4104,
      4105,
      4106
    ]
  },
  "timeline_lookup": [
    [
      1,
      2352
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "Show the forums: Ingest FDB logs into ClickHouse",
  "id": 1360,
  "title": "Show the forums: Ingest FDB logs into ClickHouse",
  "posts_count": 8,
  "created_at": "2019-05-14T17:49:31.805Z",
  "views": 2620,
  "reply_count": 5,
  "like_count": 3,
  "last_posted_at": "2019-05-15T00:46:26.081Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "show-the-forums-ingest-fdb-logs-into-clickhouse",
  "category_id": 7,
  "word_count": 3510,
  "deleted_at": null,
  "user_id": 158,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_1360",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 8,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 3,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "Discussion thread for new storage engine ideas",
      "id": 101,
      "title": "Discussion thread for new storage engine ideas",
      "slug": "discussion-thread-for-new-storage-engine-ideas",
      "posts_count": 31,
      "reply_count": 16,
      "highest_post_number": 33,
      "image_url": null,
      "created_at": "2018-04-20T06:11:56.229Z",
      "last_posted_at": "2020-02-18T21:37:22.164Z",
      "bumped": true,
      "bumped_at": "2020-02-18T21:37:22.164Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 31,
      "views": 15718,
      "category_id": 5,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 68,
            "username": "daverosenthal",
            "name": "Dave Rosenthal",
            "avatar_template": "/user_avatar/forums.foundationdb.org/daverosenthal/{size}/51_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 257,
            "username": "cih.y2k",
            "name": "cih.y2k",
            "avatar_template": "/user_avatar/forums.foundationdb.org/cih.y2k/{size}/423_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 419,
            "username": "doublemax",
            "name": "",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/d/8e7dd6/{size}.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 1,
            "username": "davelester",
            "name": "Dave Lester",
            "avatar_template": "/user_avatar/forums.foundationdb.org/davelester/{size}/1927_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Log abstraction on FoundationDB",
      "id": 117,
      "title": "Log abstraction on FoundationDB",
      "slug": "log-abstraction-on-foundationdb",
      "posts_count": 10,
      "reply_count": 3,
      "highest_post_number": 10,
      "image_url": null,
      "created_at": "2018-04-20T10:47:11.941Z",
      "last_posted_at": "2018-05-03T17:35:34.126Z",
      "bumped": true,
      "bumped_at": "2018-05-03T17:35:34.126Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 3,
      "views": 3110,
      "category_id": 5,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 81,
            "username": "ryanworl",
            "name": "Ryan Worl",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 22,
            "username": "dave",
            "name": "David Scherer",
            "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 78,
            "username": "pineapple",
            "name": "Brian Haslet",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/p/7993a0/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "A few design-pattern + check-my-understanding questions",
      "id": 1153,
      "title": "A few design-pattern + check-my-understanding questions",
      "slug": "a-few-design-pattern-check-my-understanding-questions",
      "posts_count": 10,
      "reply_count": 6,
      "highest_post_number": 10,
      "image_url": null,
      "created_at": "2019-02-19T15:18:58.329Z",
      "last_posted_at": "2019-02-21T19:51:53.686Z",
      "bumped": true,
      "bumped_at": "2019-02-21T19:51:53.686Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 2273,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 519,
            "username": "JamesThompson",
            "name": "James Thompson",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/j/c67d28/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 173,
            "username": "jkominek",
            "name": "Jay Kominek",
            "avatar_template": "/user_avatar/forums.foundationdb.org/jkominek/{size}/140_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Evangelism - informing about FoundationDB&rsquo;s new open source status where it fits into the DB landscape",
      "id": 279,
      "title": "Evangelism - informing about FoundationDB's new open source status where it fits into the DB landscape",
      "slug": "evangelism-informing-about-foundationdbs-new-open-source-status-where-it-fits-into-the-db-landscape",
      "posts_count": 9,
      "reply_count": 4,
      "highest_post_number": 9,
      "image_url": null,
      "created_at": "2018-04-26T07:48:14.583Z",
      "last_posted_at": "2018-05-03T23:33:08.864Z",
      "bumped": true,
      "bumped_at": "2018-05-03T23:33:08.864Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 1941,
      "category_id": 10,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 188,
            "username": "sesam",
            "name": "Simon B ",
            "avatar_template": "/user_avatar/forums.foundationdb.org/sesam/{size}/148_2.png",
            "trust_level": 0
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 1,
            "username": "davelester",
            "name": "Dave Lester",
            "avatar_template": "/user_avatar/forums.foundationdb.org/davelester/{size}/1927_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 31,
            "username": "dicklacara",
            "name": "Richard Applebaum",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/d/8797f3/{size}.png",
            "trust_level": 1
          }
        }
      ]
    },
    {
      "fancy_title": "How can I reduce FoundationDB&rsquo;s trace log spam?",
      "id": 3657,
      "title": "How can I reduce FoundationDB's trace log spam?",
      "slug": "how-can-i-reduce-foundationdbs-trace-log-spam",
      "posts_count": 15,
      "reply_count": 5,
      "highest_post_number": 15,
      "image_url": null,
      "created_at": "2022-11-14T15:13:17.806Z",
      "last_posted_at": "2023-05-03T16:26:34.477Z",
      "bumped": true,
      "bumped_at": "2023-05-03T16:26:34.477Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 3,
      "views": 977,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 1142,
            "username": "danm",
            "name": "Dan Meyers",
            "avatar_template": "/user_avatar/forums.foundationdb.org/danm/{size}/1393_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 7,
            "username": "SteavedHams",
            "name": "Steve Atherton",
            "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 15,
            "username": "markus.pilman",
            "name": "Markus Pilman",
            "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 946,
            "username": "rajivr",
            "name": "Rajiv M Ranganath",
            "avatar_template": "/user_avatar/forums.foundationdb.org/rajivr/{size}/1100_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 1250,
            "username": "fmassot",
            "name": "Fran\u00e7ois Massot",
            "avatar_template": "/user_avatar/forums.foundationdb.org/fmassot/{size}/1579_2.png",
            "trust_level": 0
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 158,
        "username": "aseipp",
        "name": "Austin Seipp",
        "avatar_template": "/user_avatar/forums.foundationdb.org/aseipp/{size}/124_2.png",
        "post_count": 4,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      },
      {
        "id": 15,
        "username": "markus.pilman",
        "name": "Markus Pilman",
        "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
        "post_count": 3,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "admin": true,
        "trust_level": 4
      },
      {
        "id": 81,
        "username": "ryanworl",
        "name": "Ryan Worl",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 3
      }
    ],
    "created_by": {
      "id": 158,
      "username": "aseipp",
      "name": "Austin Seipp",
      "avatar_template": "/user_avatar/forums.foundationdb.org/aseipp/{size}/124_2.png"
    },
    "last_poster": {
      "id": 158,
      "username": "aseipp",
      "name": "Austin Seipp",
      "avatar_template": "/user_avatar/forums.foundationdb.org/aseipp/{size}/124_2.png"
    },
    "links": [
      {
        "url": "https://github.com/thoughtpolice/fdblog2clickhouse",
        "title": "GitHub - thoughtpolice/fdblog2clickhouse: Ingest FoundationDB Logs into ClickHouse",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 17,
        "user_id": 158,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://clickhouse.yandex",
        "title": "ClickHouse \u2014 open source distributed column-oriented DBMS",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 13,
        "user_id": 158,
        "domain": "clickhouse.yandex",
        "root_domain": "clickhouse.yandex"
      },
      {
        "url": "https://github.com/wavefrontHQ/wavefront-fdb-tailer",
        "title": "GitHub - wavefrontHQ/wavefront-fdb-tailer: Wavefront Metrics Adaptor for FoundationDB Logs",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 7,
        "user_id": 15,
        "domain": "github.com",
        "root_domain": "github.com"
      }
    ]
  },
  "bookmarks": []
}