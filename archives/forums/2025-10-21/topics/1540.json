{
  "post_stream": {
    "posts": [
      {
        "id": 4729,
        "name": "Ryan Worl",
        "username": "ryanworl",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png",
        "created_at": "2019-07-28T14:41:39.666Z",
        "cooked": "<p>Why does a proxy have to communicate with all the other proxies when getting a read version for a client?</p>\n<aside class=\"quote quote-modified\" data-post=\"6\" data-topic=\"745\">\n  <div class=\"title\">\n    <div class=\"quote-controls\"></div>\n    <img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/alexmiller/48/326_2.png\" class=\"avatar\">\n    <a href=\"https://forums.foundationdb.org/t/understanding-inter-communication/745/6\">Understanding inter communication</a> <a class=\"badge-category__wrapper \" href=\"/c/using-foundationdb/7\"><span data-category-id=\"7\" data-drop-close=\"true\" class=\"badge-category \" title=\"Topics related to use of FoundationDB.\"><span class=\"badge-category__name\">Using FoundationDB</span></span></a>\n  </div>\n  <blockquote>\n    Both of these numbers, in a sense, originate from the master, but at any point in time, the read version and commit version won\u2019t be the same.  The read version is the smallest number that is equal than or greater to any commit that has been acknowledged as committed by FDB.  The commit version is a number that is greater than any previously granted commit version.  The commit version should be greater than the read version, and this difference in versions represents the transactions that are \u201c\u2026\n  </blockquote>\n</aside>\n\n<p>This post from <a class=\"mention\" href=\"/u/alexmiller\">@alexmiller</a> leads to me to believe that the proxy all-to-all communication is a performance optimization that allows the client to get a read version that\u2019s less than the highest commit version that master has ever <em>replied with</em> and instead only get the highest version <em>successfully committed</em>.</p>\n<p>This means new transactions do not need to wait for all the in-flight mutations to be available on all the storage servers the new transactions read from.</p>\n<p>Is that a good summary for why this is the case? Are there other benefits to not just using the version from on the master itself? Scalability doesn\u2019t seem like a likely explanation given the proxy all-to-all communication, while batched, is not more scalable than batching requests to the master.</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 11,
        "updated_at": "2019-07-28T16:55:58.687Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 190,
        "reads": 72,
        "readers_count": 71,
        "score": 979.4,
        "yours": false,
        "topic_id": 1540,
        "topic_slug": "proxy-all-to-all-communication",
        "display_username": "Ryan Worl",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://forums.foundationdb.org/t/understanding-inter-communication/745/6",
            "internal": true,
            "reflection": false,
            "title": "Understanding inter communication",
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 81,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/proxy-all-to-all-communication/1540/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 4731,
        "name": "Markus Pilman",
        "username": "markus.pilman",
        "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
        "created_at": "2019-07-28T17:21:12.990Z",
        "cooked": "<p>The short answer is: to guarantee external consistency.</p>\n<p>For the long answer, lets look at the alternatives:</p>\n<h1>Get Read-Version from Master</h1>\n<p>You could get a read-version from master. You could ask the master what the last version was it gave out and use that as a read version.</p>\n<p>As you correctly pointed out, this has the drawback that now the client would need to wait for all in-flight transaction-batches (a write version is used for a batch of transactions) to commit. This can take a long time and I guess this is the main reason for it not being done that way. However, this would be a correct way of getting read versions.</p>\n<p>Another drawback here would be that there\u2019s a bigger chance of seeing <code>future_version</code> errors which would increase load on the system. Last but not least, the master role can\u2019t be scaled. So putting more work towards the master is generally something you want to avoid (even though giving out read-versions isn\u2019t super expensive, it still would require the master to get a transaction budget from Ratekeeper, batch requests and generally have to maintain potentially thousands of network connections from clients and server processes).</p>\n<h1>Get Read-Version from one Proxy</h1>\n<p>You can actually do this by setting the flat <code>CASUAL_READ_RISKY</code> (I am not a fan of the name of this, as I would argue that in almost no cases doing this is actually risky). In that case the client would ask a random proxy for the last committed version.</p>\n<p>This is probably the cheapest way of doing it (and I would argue in most deployments this should be the default).</p>\n<p>However, this strategy comes with drawbacks:</p>\n<ol>\n<li>You could have a stale proxy. In that case the read-version would be old. This would increase chances of transaction conflicts (and conflicts are generally bad as these transactions use resources without doing work).</li>\n<li>It will violate external consistency. This means that if you start two transactions A and then B (in that order), A might get a higher read-version than B - so B will logically run before A. This basically means that your transactions will be reordered. Your transactions will still be serializable (a database is allowed to reorder transactions as long as the ordered execution is serializable) and this is why I would argue it is in general not a big deal.</li>\n<li>You might not read your own writes. This is a consequence of losing external consistency. You could write something in a transactions, successfully commit and then start another transaction which will read the same keys but you will read them in the state they were before you committed. I guess this is really the worst drawback as it is not very intuitive to the user. But keep in mind: you still wouldn\u2019t violate serializability: any attempt of writing after reading this old state will result in a conflict.</li>\n</ol>\n<p>I would like (and probably will implement) some changes to make above problems less problematic. We can so something for each point:</p>\n<ol>\n<li>The proxies could communicate with all other proxies at least once per 10ms (I made up this number on the spot - might be larger or smaller). This way, a proxy could limit how old the read version is.</li>\n<li>I think not having external consistency is fine for most applications. If you need external consistency, you need to disable <code>CASUAL_READ_RISKY</code>.</li>\n<li>Whenever the client commits a transaction, it could set an internally maintained max-committed version. After getting a read-version it could compare this read version with the highest committed version it knows of and use the larger one. This would be free for the FDB cluster (and very cheap on the client) and it would guarantee that would always see your own writes. From the view of one client you would have almost external consistency.</li>\n</ol>\n<p>With these two simple changes, (and 1 might have been done already, but I need to check the code), clients could only see that there\u2019s no external consistency if they communicate with each other through other channels than FDB (for example through direct network communication or another database). If that is the case in your application you might not want to use <code>CASUAL_READ_RISKY</code>.</p>\n<h1>Don\u2019t get Read-Versions</h1>\n<p>This is actually a valid strategy. Whenever you commit, you get a version back that you can use as a read-version for your next transaction. Obviously, if your client doesn\u2019t generate any load it would mean you will get a stale read version and all your transactions will abort (either by conflicting or by getting a <code>past_version</code> errors.</p>\n<p>However, you could measure throughput at your client and decide to only fetch a read-version from a proxy if your last commit is old. Clients could even share their versions with each other, although I am not convinced you can do this in a more efficient way than just using the proxies.</p>\n<p>I hope these explanation helps. There might be other ways of optimizing this part and I would be happy to hear about them.</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 11,
        "updated_at": "2019-07-28T17:21:12.990Z",
        "reply_count": 2,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 8,
        "reads": 69,
        "readers_count": 68,
        "score": 123.8,
        "yours": false,
        "topic_id": 1540,
        "topic_slug": "proxy-all-to-all-communication",
        "display_username": "Markus Pilman",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 2
          }
        ],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 15,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/proxy-all-to-all-communication/1540/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 4732,
        "name": "Ryan Worl",
        "username": "ryanworl",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png",
        "created_at": "2019-07-28T17:41:08.387Z",
        "cooked": "<p>Thanks, that\u2019s very helpful. I was hoping to enumerate the different trade-offs between architectures where clients talk directly to the master, clients talk to a proxy without all-to-all messages, and clients talk to the proxy with all-to-all messages. I think that covers it.</p>\n<p>Is it also used as a way for a proxy detect that a proxy is partitioned away and should stop? I could imagine a scenario in which a client, a proxy, and an old master (in my model where the proxy doesn\u2019t use all-to-all messages) are partitioned away and could participate in some read-only transaction. I think the Tlogs all get locked to tell them not to commit transactions from older generations of the transaction subsystem anymore, but I don\u2019t know about the proxies and their behavior here for read-only transactions.</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 11,
        "updated_at": "2019-07-28T17:42:05.480Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 6,
        "reads": 62,
        "readers_count": 61,
        "score": 47.4,
        "yours": false,
        "topic_id": 1540,
        "topic_slug": "proxy-all-to-all-communication",
        "display_username": "Ryan Worl",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 81,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/proxy-all-to-all-communication/1540/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 4733,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2019-07-28T21:32:09.230Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"markus.pilman\" data-post=\"2\" data-topic=\"1540\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/markus.pilman/48/379_2.png\" class=\"avatar\"> markus.pilman:</div>\n<blockquote>\n<p>You can actually do this by setting the flat <code>CASUAL_READ_RISKY</code></p>\n</blockquote>\n</aside>\n<p>I thought <code>CAUSAL_READ_RISKY</code> does still require the all-proxy communication, but it makes it so you don\u2019t have to check in with the transaction logs (based on <a href=\"https://github.com/apple/foundationdb/blob/d19be2348a90f41b1dc715905188250b0475b418/fdbserver/MasterProxyServer.actor.cpp#L1029\">https://github.com/apple/foundationdb/blob/d19be2348a90f41b1dc715905188250b0475b418/fdbserver/MasterProxyServer.actor.cpp#L1029</a>).</p>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 11,
        "updated_at": "2019-07-28T21:32:09.230Z",
        "reply_count": 2,
        "reply_to_post_number": 2,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 61,
        "readers_count": 60,
        "score": 22.2,
        "yours": false,
        "topic_id": 1540,
        "topic_slug": "proxy-all-to-all-communication",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/apple/foundationdb/blob/d19be2348a90f41b1dc715905188250b0475b418/fdbserver/MasterProxyServer.actor.cpp#L1029",
            "internal": false,
            "reflection": false,
            "title": "foundationdb/MasterProxyServer.actor.cpp at d19be2348a90f41b1dc715905188250b0475b418 \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 4
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/proxy-all-to-all-communication/1540/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 4738,
        "name": "Markus Pilman",
        "username": "markus.pilman",
        "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
        "created_at": "2019-07-29T17:59:32.543Z",
        "cooked": "<p>Oh, you\u2019re right, guess my mental model was wrong.</p>\n<p>So this means there\u2019s actually another possible architecture in my list above and this is what <code>CASUAL_READ_RISKY</code> currently does. Let me quickly try to finish this:</p>\n<h1><a name=\"get-read-versions-from-all-proxies-but-ignore-tlogs-1\" class=\"anchor\" href=\"#get-read-versions-from-all-proxies-but-ignore-tlogs-1\"></a>Get Read-Versions from all Proxies but ignore TLogs</h1>\n<p>so this is <code>CASUAL_READ_RISKY</code> (and not what I wrote above) as you could get a read version from a proxy that was declared dead. This will give you external consistency for as long as there are no recoveries. Main benefit is that it reduces load on the log system.</p>\n<aside class=\"quote no-group\" data-username=\"ryanworl\" data-post=\"3\" data-topic=\"1540\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/ryanworl/48/440_2.png\" class=\"avatar\"> ryanworl:</div>\n<blockquote>\n<p>Is it also used as a way for a proxy detect that a proxy is partitioned away and should stop?</p>\n</blockquote>\n</aside>\n<p>Usually it is the failure monitors job to detect partitions. If the proxies can\u2019t communicate with each other (but all proxies can reach the cluster controller), they will simply wait forever without handing out read-versions. This is actually an interesting question: I don\u2019t know how the system would detect this kind of partition. I guess in most cases the partition would go away eventually, but this is obviously not a good argument. It might be that master will eventually kill itself if it can\u2019t run system transactions? But I am not sure.</p>",
        "post_number": 5,
        "post_type": 1,
        "posts_count": 11,
        "updated_at": "2019-07-29T17:59:32.543Z",
        "reply_count": 1,
        "reply_to_post_number": 4,
        "quote_count": 1,
        "incoming_link_count": 1,
        "reads": 58,
        "readers_count": 57,
        "score": 36.6,
        "yours": false,
        "topic_id": 1540,
        "topic_slug": "proxy-all-to-all-communication",
        "display_username": "Markus Pilman",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 12,
          "username": "ajbeamon",
          "name": "A.J. Beamon",
          "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png"
        },
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 15,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/proxy-all-to-all-communication/1540/5",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 4739,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2019-07-29T18:21:02.079Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"markus.pilman\" data-post=\"5\" data-topic=\"1540\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/markus.pilman/48/379_2.png\" class=\"avatar\"> markus.pilman:</div>\n<blockquote>\n<p>Main benefit is that it reduces load on the log system.</p>\n</blockquote>\n</aside>\n<p>Another big benefit of this is that there exist some deployment configurations with logs in distant locations (for example, to get durability to more than one datacenter), and get read version requests can avoid making remote round trips if they don\u2019t talk to these logs.</p>",
        "post_number": 6,
        "post_type": 1,
        "posts_count": 11,
        "updated_at": "2019-07-29T18:21:02.079Z",
        "reply_count": 0,
        "reply_to_post_number": 5,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 53,
        "readers_count": 52,
        "score": 25.6,
        "yours": false,
        "topic_id": 1540,
        "topic_slug": "proxy-all-to-all-communication",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/proxy-all-to-all-communication/1540/6",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 4748,
        "name": null,
        "username": "ddi",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ddi/{size}/721_2.png",
        "created_at": "2019-07-30T11:04:09.587Z",
        "cooked": "<p>Hi, this is a really interesting discussion. Some comments/questions.</p>\n<aside class=\"quote no-group\" data-username=\"markus.pilman\" data-post=\"2\" data-topic=\"1540\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/markus.pilman/48/379_2.png\" class=\"avatar\"> markus.pilman:</div>\n<blockquote>\n<p>It will violate external consistency. This means that if you start two transactions A and then B (in that order), A might get a higher read-version than B - so B will logically run before A. This basically means that your transactions will be reordered. Your transactions will still be serializable (a database is allowed to reorder transactions as long as the ordered execution is serializable) and this is why I would argue it is in general not a big deal.</p>\n</blockquote>\n</aside>\n<p>Just to understand: by \u201cstart A and then B\u201d, you mean \u201cstart A, commit A and then start B\u201d, or do you mean that A and B start one after the other, and B starts before A commits?</p>\n<aside class=\"quote no-group\" data-username=\"markus.pilman\" data-post=\"2\" data-topic=\"1540\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/markus.pilman/48/379_2.png\" class=\"avatar\"> markus.pilman:</div>\n<blockquote>\n<p>Whenever the client commits a transaction, it could set an internally maintained max-committed version. After getting a read-version it could compare this read version with the highest committed version it knows of and use the larger one. This would be free for the FDB cluster (and very cheap on the client) and it would guarantee that would always see your own writes. From the view of one client you would have almost external consistency.</p>\n</blockquote>\n</aside>\n<p>Instead of keeping this max-commit version private within the client, you could piggyback it on every message the client sends to a proxy. Then, the proxy can update its own value of \u201clast committed known version\u201d. The proxy can then enforce that clients monotonically increasing versions, and  data freshness is improved (at the cost of having to transmit this info).</p>\n<aside class=\"quote no-group\" data-username=\"ajbeamon\" data-post=\"4\" data-topic=\"1540\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/ajbeamon/48/13_2.png\" class=\"avatar\"> ajbeamon:</div>\n<blockquote>\n<p>I thought <code>CAUSAL_READ_RISKY</code> does still require the all-proxy communication, but it makes it so you don\u2019t have to check in with the transaction logs</p>\n</blockquote>\n</aside>\n<p>What is the role of the tlogs when determining the read-versions for a transaction?<br>\nIf  CAUSAL_READ_RISKY is disabled, are there any consistency issues in a failure-free scenario, or consistency can be compromised only if failures/network partitions happen?</p>\n<p>Thank you</p>",
        "post_number": 7,
        "post_type": 1,
        "posts_count": 11,
        "updated_at": "2019-07-30T11:04:09.587Z",
        "reply_count": 2,
        "reply_to_post_number": null,
        "quote_count": 2,
        "incoming_link_count": 0,
        "reads": 51,
        "readers_count": 50,
        "score": 20.2,
        "yours": false,
        "topic_id": 1540,
        "topic_slug": "proxy-all-to-all-communication",
        "display_username": null,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 562,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/proxy-all-to-all-communication/1540/7",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 4749,
        "name": "Markus Pilman",
        "username": "markus.pilman",
        "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
        "created_at": "2019-07-30T13:26:32.212Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"ddi\" data-post=\"7\" data-topic=\"1540\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/ddi/48/721_2.png\" class=\"avatar\"> ddi:</div>\n<blockquote>\n<p>Just to understand: by \u201cstart A and then B\u201d, you mean \u201cstart A, commit A and then start B\u201d,</p>\n</blockquote>\n</aside>\n<p>Yes. If you start B before you commit A, FDB will guarantee that you don\u2019t see anything that A has written, not matter what and in that case you wouldn\u2019t violate external consistency. If you start A, commit A, then start B and you would not read from all proxies AND/OR don\u2019t check the tlogs (kind of left that part out in my first post) it could happen that B would not be able to read data that was written by A (if it would try to read it, it wouldn\u2019t be able to write afterwards - therefore my argument that it is generally not a big deal).</p>\n<aside class=\"quote no-group\" data-username=\"ddi\" data-post=\"7\" data-topic=\"1540\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/ddi/48/721_2.png\" class=\"avatar\"> ddi:</div>\n<blockquote>\n<p>Instead of keeping this max-commit version private within the client, you could piggyback it on every message the client sends to a proxy. Then, the proxy can update its own value of \u201clast committed known version\u201d. The proxy can then enforce that clients monotonically increasing versions, and data freshness is improved (at the cost of having to transmit this info).</p>\n</blockquote>\n</aside>\n<p>Yes, that is a good point. Though it would only improve it, not solve it as the clients will only talk to one proxy for each get read version request (so one proxy could not see a request for a long time and therefore still be stale). Also clients don\u2019t stick with one particular proxy, instead they will load balance their requests across all proxies. It would also not solve the tlog problem.</p>\n<aside class=\"quote no-group\" data-username=\"ddi\" data-post=\"7\" data-topic=\"1540\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/ddi/48/721_2.png\" class=\"avatar\"> ddi:</div>\n<blockquote>\n<p>What is the role of the tlogs when determining the read-versions for a transaction?</p>\n</blockquote>\n</aside>\n<p>The Cluster Controller within FDB broadcasts the list of all proxies (and some other data - you can find that in the code in the struct <code>ClientDBInfo</code>) to all clients.</p>\n<p>We don\u2019t guarantee that this object is up to data - only that it will be updated eventually. So if the cluster goas through a recovery you might talk to an old proxy and that proxy might not know that it should be dead. So you might get a stale read version. The proxies will get informed (locked) by the new master process early in the recovery phase.</p>\n<aside class=\"quote no-group\" data-username=\"ddi\" data-post=\"7\" data-topic=\"1540\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/ddi/48/721_2.png\" class=\"avatar\"> ddi:</div>\n<blockquote>\n<p>If CAUSAL_READ_RISKY is disabled, are there any consistency issues in a failure-free scenario, or consistency can be compromised only if failures/network partitions happen?</p>\n</blockquote>\n</aside>\n<p>It can also happen if new machines come up. In that case the Cluster Controller or master could decide that it can run a better configuration and will therefore force a recovery. But without any recoveries, you won\u2019t run into any issues with <code>CASUAL_READ_RISKY</code> (I think).</p>",
        "post_number": 8,
        "post_type": 1,
        "posts_count": 11,
        "updated_at": "2019-07-30T13:26:32.212Z",
        "reply_count": 1,
        "reply_to_post_number": 7,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 48,
        "readers_count": 47,
        "score": 14.6,
        "yours": false,
        "topic_id": 1540,
        "topic_slug": "proxy-all-to-all-communication",
        "display_username": "Markus Pilman",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 15,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/proxy-all-to-all-communication/1540/8",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 4750,
        "name": null,
        "username": "ddi",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ddi/{size}/721_2.png",
        "created_at": "2019-07-30T14:23:37.585Z",
        "cooked": "<aside class=\"quote no-group quote-modified\" data-username=\"markus.pilman\" data-post=\"8\" data-topic=\"1540\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/markus.pilman/48/379_2.png\" class=\"avatar\"> markus.pilman:</div>\n<blockquote>\n<p>Yes.  [\u2026]</p>\n</blockquote>\n</aside>\n<p>Ok, the confusion for me was caused by the fact that I did not get that A and B are executed by the same client (your explanation works for the general case anyway).</p>\n<aside class=\"quote no-group quote-modified\" data-username=\"markus.pilman\" data-post=\"8\" data-topic=\"1540\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/markus.pilman/48/379_2.png\" class=\"avatar\"> markus.pilman:</div>\n<blockquote>\n<p>Yes, that is a good point. Though it would only improve it, not solve it [\u2026]</p>\n</blockquote>\n</aside>\n<p>Sure, that would only be an improvement to be implemented on top of the periodic all-to-all broadcast + whatever is needed to be done with the tlogs.<br>\nActually, instead of an all-to-all broadcast, you could use some kind of hierarchical gossiping across proxies, as done in some systems like GentleRain[1]. The message complexity goes from O(N squared) to O(logN) where N is the number of proxies. Probably it\u2019s not worth the effort with a low proxy count, though.</p>\n<p>Thanks for the details on the tlogs!</p>\n<hr>\n<p>[1] <a href=\"https://infoscience.epfl.ch/record/202079/files/paper.pdf\" rel=\"noopener nofollow ugc\">https://infoscience.epfl.ch/record/202079/files/paper.pdf</a></p>",
        "post_number": 9,
        "post_type": 1,
        "posts_count": 11,
        "updated_at": "2019-07-30T14:24:38.184Z",
        "reply_count": 0,
        "reply_to_post_number": 8,
        "quote_count": 1,
        "incoming_link_count": 1,
        "reads": 42,
        "readers_count": 41,
        "score": 13.4,
        "yours": false,
        "topic_id": 1540,
        "topic_slug": "proxy-all-to-all-communication",
        "display_username": null,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://infoscience.epfl.ch/record/202079/files/paper.pdf",
            "internal": false,
            "reflection": false,
            "clicks": 4
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 562,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/proxy-all-to-all-communication/1540/9",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 4754,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2019-07-30T16:15:59.797Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"ddi\" data-post=\"7\" data-topic=\"1540\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/ddi/48/721_2.png\" class=\"avatar\"> ddi:</div>\n<blockquote>\n<p>If CAUSAL_READ_RISKY is disabled, are there any consistency issues in a failure-free scenario, or consistency can be compromised only if failures/network partitions happen?</p>\n</blockquote>\n</aside>\n<p>If <code>CAUSAL_READ_RISKY</code> being <em>disabled</em> means that you aren\u2019t using the option, then we guarantee strict serializability regardless of faults in that case. If you are using the option, then I believe the risk is that you could suffer reduced consistency guarantees during recoveries, as Markus stated.</p>",
        "post_number": 10,
        "post_type": 1,
        "posts_count": 11,
        "updated_at": "2019-07-30T16:15:59.797Z",
        "reply_count": 1,
        "reply_to_post_number": 7,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 43,
        "readers_count": 42,
        "score": 13.6,
        "yours": false,
        "topic_id": 1540,
        "topic_slug": "proxy-all-to-all-communication",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/proxy-all-to-all-communication/1540/10",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 4762,
        "name": null,
        "username": "ddi",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ddi/{size}/721_2.png",
        "created_at": "2019-07-31T07:49:16.419Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"ajbeamon\" data-post=\"10\" data-topic=\"1540\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/ajbeamon/48/13_2.png\" class=\"avatar\"> ajbeamon:</div>\n<blockquote>\n<p>If <code>CAUSAL_READ_RISKY</code> being <em>disabled</em> means that you aren\u2019t using the option, then we guarantee strict serializability regardless of faults in that case. If you are using the option, then I believe the risk is that you could suffer reduced consistency guarantees during recoveries, as Markus stated.</p>\n</blockquote>\n</aside>\n<p>Yes, thank you for pointing it out:   of course <em>enabling</em> a flag called \u201crisky\u201d implies troubles, and not disabling it <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>",
        "post_number": 11,
        "post_type": 1,
        "posts_count": 11,
        "updated_at": "2019-07-31T07:49:16.419Z",
        "reply_count": 0,
        "reply_to_post_number": 10,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 43,
        "readers_count": 42,
        "score": 8.6,
        "yours": false,
        "topic_id": 1540,
        "topic_slug": "proxy-all-to-all-communication",
        "display_username": null,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 562,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/proxy-all-to-all-communication/1540/11",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      4729,
      4731,
      4732,
      4733,
      4738,
      4739,
      4748,
      4749,
      4750,
      4754,
      4762
    ]
  },
  "timeline_lookup": [
    [
      1,
      2277
    ],
    [
      5,
      2276
    ],
    [
      7,
      2275
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "Proxy all-to-all communication",
  "id": 1540,
  "title": "Proxy all-to-all communication",
  "posts_count": 11,
  "created_at": "2019-07-28T14:41:39.604Z",
  "views": 1474,
  "reply_count": 7,
  "like_count": 5,
  "last_posted_at": "2019-07-31T07:49:16.419Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "proxy-all-to-all-communication",
  "category_id": 8,
  "word_count": 2667,
  "deleted_at": null,
  "user_id": 81,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_1540",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 11,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 4,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "Understanding inter communication",
      "id": 745,
      "title": "Understanding inter communication",
      "slug": "understanding-inter-communication",
      "posts_count": 12,
      "reply_count": 7,
      "highest_post_number": 12,
      "image_url": null,
      "created_at": "2018-10-05T00:51:33.531Z",
      "last_posted_at": "2018-10-11T17:16:52.613Z",
      "bumped": true,
      "bumped_at": "2018-10-11T17:16:52.613Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 10,
      "views": 3588,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 384,
            "username": "Chandru4u",
            "name": "Chandrashekar",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/c/b487fb/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Why doesn\u2019t proxy get read version directly from master, but need to broadcast all other proxies?",
      "id": 494,
      "title": "Why doesn\u2019t proxy get read version directly from master, but need to broadcast all other proxies?",
      "slug": "why-doesn-t-proxy-get-read-version-directly-from-master-but-need-to-broadcast-all-other-proxies",
      "posts_count": 6,
      "reply_count": 2,
      "highest_post_number": 6,
      "image_url": "https://global.discourse-cdn.com/foundationdb/optimized/1X/2a2325a822939c9b25a10b4fbd1b338b335ceb8e_2_1023x777.jpg",
      "created_at": "2018-06-07T05:21:13.355Z",
      "last_posted_at": "2021-10-08T16:05:32.657Z",
      "bumped": true,
      "bumped_at": "2021-10-08T16:05:32.657Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 2,
      "views": 1270,
      "category_id": 8,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 124,
            "username": "coder0718",
            "name": "Coder0718",
            "avatar_template": "/user_avatar/forums.foundationdb.org/coder0718/{size}/87_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 296,
            "username": "theos",
            "name": "Daniil Gitelson",
            "avatar_template": "/user_avatar/forums.foundationdb.org/theos/{size}/282_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 54,
            "username": "Evan",
            "name": "Evan Tschannen",
            "avatar_template": "/user_avatar/forums.foundationdb.org/evan/{size}/104_2.png",
            "moderator": true,
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 990,
            "username": "baiwfg2",
            "name": "Lewis Chan",
            "avatar_template": "/user_avatar/forums.foundationdb.org/baiwfg2/{size}/1173_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 15,
            "username": "markus.pilman",
            "name": "Markus Pilman",
            "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
            "admin": true,
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "How to scale foundation db reads",
      "id": 1108,
      "title": "How to scale foundation db reads",
      "slug": "how-to-scale-foundation-db-reads",
      "posts_count": 21,
      "reply_count": 13,
      "highest_post_number": 21,
      "image_url": null,
      "created_at": "2019-02-02T12:39:23.370Z",
      "last_posted_at": "2019-03-18T16:32:32.430Z",
      "bumped": true,
      "bumped_at": "2019-03-18T16:32:32.430Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 7,
      "views": 6504,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 504,
            "username": "preslavle",
            "name": "Preslav Le",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/p/9de0a6/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 337,
            "username": "mengxu",
            "name": "Meng Xu",
            "avatar_template": "/user_avatar/forums.foundationdb.org/mengxu/{size}/893_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Maintain Read Availability in Partitioned Data Centers",
      "id": 154,
      "title": "Maintain Read Availability in Partitioned Data Centers",
      "slug": "maintain-read-availability-in-partitioned-data-centers",
      "posts_count": 3,
      "reply_count": 0,
      "highest_post_number": 3,
      "image_url": null,
      "created_at": "2018-04-20T21:42:28.824Z",
      "last_posted_at": "2018-04-21T01:53:59.662Z",
      "bumped": true,
      "bumped_at": "2018-04-21T01:53:59.662Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 1093,
      "category_id": 8,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 54,
            "username": "Evan",
            "name": "Evan Tschannen",
            "avatar_template": "/user_avatar/forums.foundationdb.org/evan/{size}/104_2.png",
            "moderator": true,
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 22,
            "username": "dave",
            "name": "David Scherer",
            "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
            "trust_level": 1
          }
        }
      ]
    },
    {
      "fancy_title": "Technical overview of the database",
      "id": 135,
      "title": "Technical overview of the database",
      "slug": "technical-overview-of-the-database",
      "posts_count": 27,
      "reply_count": 15,
      "highest_post_number": 27,
      "image_url": null,
      "created_at": "2018-04-20T15:30:31.788Z",
      "last_posted_at": "2019-01-11T23:25:47.462Z",
      "bumped": true,
      "bumped_at": "2019-01-11T23:25:47.462Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 64,
      "views": 12958,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 96,
            "username": "idiot",
            "name": "",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/i/f04885/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 22,
            "username": "dave",
            "name": "David Scherer",
            "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 443,
            "username": "junius",
            "name": "junius",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/j/f08c70/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 54,
            "username": "Evan",
            "name": "Evan Tschannen",
            "avatar_template": "/user_avatar/forums.foundationdb.org/evan/{size}/104_2.png",
            "moderator": true,
            "trust_level": 1
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 12,
        "username": "ajbeamon",
        "name": "A.J. Beamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "post_count": 3,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "admin": true,
        "trust_level": 4
      },
      {
        "id": 15,
        "username": "markus.pilman",
        "name": "Markus Pilman",
        "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
        "post_count": 3,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "admin": true,
        "trust_level": 4
      },
      {
        "id": 562,
        "username": "ddi",
        "name": null,
        "avatar_template": "/user_avatar/forums.foundationdb.org/ddi/{size}/721_2.png",
        "post_count": 3,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 81,
        "username": "ryanworl",
        "name": "Ryan Worl",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 3
      }
    ],
    "created_by": {
      "id": 81,
      "username": "ryanworl",
      "name": "Ryan Worl",
      "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png"
    },
    "last_poster": {
      "id": 562,
      "username": "ddi",
      "name": null,
      "avatar_template": "/user_avatar/forums.foundationdb.org/ddi/{size}/721_2.png"
    },
    "links": [
      {
        "url": "https://github.com/apple/foundationdb/blob/d19be2348a90f41b1dc715905188250b0475b418/fdbserver/MasterProxyServer.actor.cpp#L1029",
        "title": "foundationdb/MasterProxyServer.actor.cpp at d19be2348a90f41b1dc715905188250b0475b418 \u00b7 apple/foundationdb \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 4,
        "user_id": 12,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://infoscience.epfl.ch/record/202079/files/paper.pdf",
        "title": null,
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 4,
        "user_id": 562,
        "domain": "infoscience.epfl.ch",
        "root_domain": "epfl.ch"
      }
    ]
  },
  "bookmarks": []
}