{
  "post_stream": {
    "posts": [
      {
        "id": 9203,
        "name": "Hari B",
        "username": "harikb",
        "avatar_template": "/user_avatar/forums.foundationdb.org/harikb/{size}/1033_2.png",
        "created_at": "2021-03-22T16:46:22.436Z",
        "cooked": "<p>Hello,</p>\n<p>I am working on a utility for a full export (inconsistent, non-transactional) for subsequent data processing elsewhere. I would appreciate your feedback on the approach and any concerns.</p>\n<p>(For now, ignore the fact that the client runs from only one client node and not scalable)</p>\n<p>The first thing to get over was to batch taking care of the 5s limit. Based on your feedback in other threads, I have the following code that is the crux of the loop to fetch a given range of keys</p><aside class=\"onebox githubblob\">\n  <header class=\"source\">\n      <a href=\"https://github.com/adobe/ferry/blob/86be2b5487db505efb24dcd63cd9a45337211f6e/lib/exporter/exporter.go#L133:L206\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com</a>\n  </header>\n  <article class=\"onebox-body\">\n    <h4><a href=\"https://github.com/adobe/ferry/blob/86be2b5487db505efb24dcd63cd9a45337211f6e/lib/exporter/exporter.go#L133:L206\" target=\"_blank\" rel=\"noopener nofollow ugc\">adobe/ferry/blob/86be2b5487db505efb24dcd63cd9a45337211f6e/lib/exporter/exporter.go#L133:L206</a></h4>\n<pre class=\"onebox\"><code class=\"lang-go\"><ol class=\"start lines\" start=\"123\" style=\"counter-reset: li-counter 122 ;\">\n<li>\t\ttxn, err := exp.db.CreateTransaction()</li>\n<li>\t\tif err != nil {</li>\n<li>\t\t\treturn errors.Wrapf(err, \"Unable to create fdb transaction\")</li>\n<li>\t\t}</li>\n<li>\n<li>\t\tkeysRead := 0</li>\n<li>\t\tkeysReadInOneTxn := 0</li>\n<li>\t\tkeysReadInOneBatch := 0</li>\n<li>\t\tbytesRead := int64(0)</li>\n<li>\t\tlastReadKey, endKey := keyRange.FDBRangeKeys()</li>\n<li class=\"selected\">\t\tbatchReadLimit := 1_000_000</li>\n<li>\tFetch:</li>\n<li>\t\tfor {</li>\n<li>\t\t\tfKey := txn.GetRange(keyRange, fdb.RangeOptions{Limit: batchReadLimit, Mode: fdb.StreamingModeSerial})</li>\n<li>\t\t\tit := fKey.Iterator()</li>\n<li>\t\t\tfor it.Advance() {</li>\n<li>\t\t\t\t// ---------------------------------------------------------</li>\n<li>\t\t\t\t// uncomment line below for testing only</li>\n<li>\t\t\t\t// time.Sleep(time.Millisecond * 1)</li>\n<li>\t\t\t\t// This is to artifically create the 5 second txn limit test</li>\n<li>\t\t\t\t// ---------------------------------------------------------</li>\n</ol></code></pre>\n\n\n  </article>\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>Couple of questions on this</p>\n<ol>\n<li>\n<p>I know there is a newer split-key-ranges-by-size API coming up in 7.0 . But for now, is the approach of \u2018creating a new txn after a failure\u2019 the best approach?</p>\n</li>\n<li>\n<p>I feel a bit uneasy about the byte slice returned by <code>.Get()</code> - how long is that slice valid? Should I clone it before assigning it to a variable (see line 178) which is referenced in the next loop?</p>\n</li>\n</ol>\n<p>Future plans</p>\n<p>Ideal setup, if it is possible, would be to make sure I can narrow down each key-range to a particular host and make the read local (by having an agent run local to that node), filter some data locally, and then return data to caller. The challenge of course would be test if filtering would add any value and how to make it generic to be useful in an open-source project. But I am working on it. Let me know if you have any thoughts on it. Lot of this is based on hunches, only tests will show if there is any value in doing this.</p>\n<p>Any feed back is appreciated. The wip code is open-source, although it is just a prototype now</p><aside class=\"onebox githubfolder\">\n  <header class=\"source\">\n      <img src=\"https://github.githubassets.com/favicons/favicon.svg\" class=\"site-icon\" width=\"32\" height=\"32\">\n      <a href=\"https://github.com/adobe/ferry\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com</a>\n  </header>\n  <article class=\"onebox-body\">\n    <div class=\"aspect-image\" style=\"--aspect-ratio:364/364;\"><img src=\"https://avatars.githubusercontent.com/u/476009?s=400&amp;amp;v=4\" class=\"thumbnail\" width=\"364\" height=\"364\"></div>\n\n<h3><a href=\"https://github.com/adobe/ferry\" target=\"_blank\" rel=\"noopener nofollow ugc\">adobe/ferry</a></h3>\n\n\n  <p><span class=\"label1\">Contribute to adobe/ferry development by creating an account on GitHub.</span></p>\n\n  </article>\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>Thank you for your time<br>\nHari</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 3,
        "updated_at": "2021-03-22T16:46:22.436Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 21,
        "reads": 32,
        "readers_count": 31,
        "score": 116.4,
        "yours": false,
        "topic_id": 2620,
        "topic_slug": "request-for-feedback-full-export-go-binding-usage-future-plans",
        "display_username": "Hari B",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/adobe/ferry",
            "internal": false,
            "reflection": false,
            "title": "GitHub - adobe/ferry",
            "clicks": 11
          },
          {
            "url": "https://github.com/adobe/ferry/blob/86be2b5487db505efb24dcd63cd9a45337211f6e/lib/exporter/exporter.go#L133:L206",
            "internal": false,
            "reflection": false,
            "title": "ferry/exporter.go at 86be2b5487db505efb24dcd63cd9a45337211f6e \u00b7 adobe/ferry \u00b7 GitHub",
            "clicks": 4
          }
        ],
        "read": true,
        "user_title": "",
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 405,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/request-for-feedback-full-export-go-binding-usage-future-plans/2620/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 9227,
        "name": "Hari B",
        "username": "harikb",
        "avatar_template": "/user_avatar/forums.foundationdb.org/harikb/{size}/1033_2.png",
        "created_at": "2021-03-29T19:12:46.365Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"harikb\" data-post=\"1\" data-topic=\"2620\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/harikb/48/1033_2.png\" class=\"avatar\"> harikb:</div>\n<blockquote>\n<p>byte slice returned by <code>.Get()</code> - how long is that slice valid?</p>\n</blockquote>\n</aside>\n<p>I appreciate if anyone who knows the Go binding has any input on this.</p>\n<p>I see that this code is creating a new slice of KeyValue structs, but since the <code>.Value</code> is being recast with unsafe, I am not quite sure what is going on</p>\n<aside class=\"onebox githubblob\" data-onebox-src=\"https://github.com/apple/foundationdb/blob/main/bindings/go/src/fdb/futures.go#L297\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/apple/foundationdb/blob/main/bindings/go/src/fdb/futures.go#L297\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <h4><a href=\"https://github.com/apple/foundationdb/blob/main/bindings/go/src/fdb/futures.go#L297\" target=\"_blank\" rel=\"noopener nofollow ugc\">apple/foundationdb/blob/main/bindings/go/src/fdb/futures.go#L297</a></h4>\n\n\n\n    <pre class=\"onebox\"><code class=\"lang-go\">\n      <ol class=\"start lines\" start=\"287\" style=\"counter-reset: li-counter 286 ;\">\n          <li>\tf.BlockUntilReady()</li>\n          <li></li>\n          <li>\tvar kvs *C.FDBKeyValue</li>\n          <li>\tvar count C.int</li>\n          <li>\tvar more C.fdb_bool_t</li>\n          <li></li>\n          <li>\tif err := C.fdb_future_get_keyvalue_array(f.ptr, &amp;kvs, &amp;count, &amp;more); err != 0 {</li>\n          <li>\t\treturn nil, false, Error{int(err)}</li>\n          <li>\t}</li>\n          <li></li>\n          <li class=\"selected\">\tret := make([]KeyValue, int(count))</li>\n          <li></li>\n          <li>\tfor i := 0; i &lt; int(count); i++ {</li>\n          <li>\t\tkvptr := unsafe.Pointer(uintptr(unsafe.Pointer(kvs)) + uintptr(i*24))</li>\n          <li></li>\n          <li>\t\tret[i].Key = stringRefToSlice(kvptr)</li>\n          <li>\t\tret[i].Value = stringRefToSlice(unsafe.Pointer(uintptr(kvptr) + 12))</li>\n          <li>\t}</li>\n          <li></li>\n          <li>\treturn ret, (more != 0), nil</li>\n          <li>}</li>\n      </ol>\n    </code></pre>\n\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 3,
        "updated_at": "2021-03-29T19:21:15.931Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 23,
        "readers_count": 22,
        "score": 4.6,
        "yours": false,
        "topic_id": 2620,
        "topic_slug": "request-for-feedback-full-export-go-binding-usage-future-plans",
        "display_username": "Hari B",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/apple/foundationdb/blob/main/bindings/go/src/fdb/futures.go#L297",
            "internal": false,
            "reflection": false,
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": "",
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 405,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/request-for-feedback-full-export-go-binding-usage-future-plans/2620/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 9228,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2021-03-29T23:49:17.994Z",
        "cooked": "<p>I am not a Go expert, but looking at this, it appears that <code>stringRefToSlice</code> is using <code>C.GoBytes</code> to copy the data from the C buffer into a Go buffer. My understanding, then, is that the memory lifetime is not tied to any underlying native object.</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 3,
        "updated_at": "2021-03-29T23:50:00.629Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 22,
        "readers_count": 21,
        "score": 19.4,
        "yours": false,
        "topic_id": 2620,
        "topic_slug": "request-for-feedback-full-export-go-binding-usage-future-plans",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/request-for-feedback-full-export-go-binding-usage-future-plans/2620/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      9203,
      9227,
      9228
    ]
  },
  "timeline_lookup": [
    [
      1,
      1674
    ],
    [
      2,
      1667
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "Request for feedback: Full export, Go binding usage, Future plans",
  "id": 2620,
  "title": "Request for feedback: Full export, Go binding usage, Future plans",
  "posts_count": 3,
  "created_at": "2021-03-22T16:46:22.364Z",
  "views": 447,
  "reply_count": 0,
  "like_count": 1,
  "last_posted_at": "2021-03-29T23:49:17.994Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "request-for-feedback-full-export-go-binding-usage-future-plans",
  "category_id": 7,
  "word_count": 442,
  "deleted_at": null,
  "user_id": 405,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_2620",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 3,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 2,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "Why can I only range read 2857 keys?",
      "id": 1517,
      "title": "Why can I only range read 2857 keys?",
      "slug": "why-can-i-only-range-read-2857-keys",
      "posts_count": 2,
      "reply_count": 0,
      "highest_post_number": 2,
      "image_url": null,
      "created_at": "2019-07-13T06:06:58.493Z",
      "last_posted_at": "2019-07-13T19:32:13.906Z",
      "bumped": true,
      "bumped_at": "2019-07-13T19:32:13.906Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 2,
      "views": 634,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 542,
            "username": "jonahwest",
            "name": "",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/j/90db22/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Copying data from one &ldquo;table&rdquo; to another",
      "id": 860,
      "title": "Copying data from one \"table\" to another",
      "slug": "copying-data-from-one-table-to-another",
      "posts_count": 11,
      "reply_count": 7,
      "highest_post_number": 11,
      "image_url": null,
      "created_at": "2018-11-10T19:48:38.480Z",
      "last_posted_at": "2019-09-19T21:56:33.805Z",
      "bumped": true,
      "bumped_at": "2019-09-19T21:56:33.805Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 3,
      "views": 1653,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 311,
            "username": "ThomasJ",
            "name": "Thomas Johson",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/t/6f9a4e/{size}.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 538,
            "username": "ravilution",
            "name": "Ravilution",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ravilution/{size}/728_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "How to Fetch all stored key-values at once",
      "id": 1285,
      "title": "How to Fetch all stored key-values at once",
      "slug": "how-to-fetch-all-stored-key-values-at-once",
      "posts_count": 7,
      "reply_count": 4,
      "highest_post_number": 7,
      "image_url": null,
      "created_at": "2019-04-05T12:12:49.636Z",
      "last_posted_at": "2019-04-10T20:48:57.581Z",
      "bumped": true,
      "bumped_at": "2019-04-10T20:48:57.581Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [
        "fdbsummit"
      ],
      "tags_descriptions": {},
      "like_count": 3,
      "views": 5507,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 511,
            "username": "sakthivelpvs",
            "name": "Sakthivel",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/9dc877/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 337,
            "username": "mengxu",
            "name": "Meng Xu",
            "avatar_template": "/user_avatar/forums.foundationdb.org/mengxu/{size}/893_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Questions of extraneous keys received via Go binding on a full range read",
      "id": 2649,
      "title": "Questions of extraneous keys received via Go binding on a full range read",
      "slug": "questions-of-extraneous-keys-received-via-go-binding-on-a-full-range-read",
      "posts_count": 3,
      "reply_count": 1,
      "highest_post_number": 3,
      "image_url": null,
      "created_at": "2021-04-11T20:49:00.028Z",
      "last_posted_at": "2021-04-12T16:23:09.328Z",
      "bumped": true,
      "bumped_at": "2021-04-12T16:23:09.328Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 340,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 405,
            "username": "harikb",
            "name": "Hari B",
            "avatar_template": "/user_avatar/forums.foundationdb.org/harikb/{size}/1033_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "A few design-pattern + check-my-understanding questions",
      "id": 1153,
      "title": "A few design-pattern + check-my-understanding questions",
      "slug": "a-few-design-pattern-check-my-understanding-questions",
      "posts_count": 10,
      "reply_count": 6,
      "highest_post_number": 10,
      "image_url": null,
      "created_at": "2019-02-19T15:18:58.329Z",
      "last_posted_at": "2019-02-21T19:51:53.686Z",
      "bumped": true,
      "bumped_at": "2019-02-21T19:51:53.686Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 2273,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 519,
            "username": "JamesThompson",
            "name": "James Thompson",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/j/c67d28/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 173,
            "username": "jkominek",
            "name": "Jay Kominek",
            "avatar_template": "/user_avatar/forums.foundationdb.org/jkominek/{size}/140_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 405,
        "username": "harikb",
        "name": "Hari B",
        "avatar_template": "/user_avatar/forums.foundationdb.org/harikb/{size}/1033_2.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      },
      {
        "id": 12,
        "username": "ajbeamon",
        "name": "A.J. Beamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "admin": true,
        "trust_level": 4
      }
    ],
    "created_by": {
      "id": 405,
      "username": "harikb",
      "name": "Hari B",
      "avatar_template": "/user_avatar/forums.foundationdb.org/harikb/{size}/1033_2.png"
    },
    "last_poster": {
      "id": 12,
      "username": "ajbeamon",
      "name": "A.J. Beamon",
      "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png"
    },
    "links": [
      {
        "url": "https://github.com/adobe/ferry",
        "title": "GitHub - adobe/ferry",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 11,
        "user_id": 405,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://github.com/adobe/ferry/blob/86be2b5487db505efb24dcd63cd9a45337211f6e/lib/exporter/exporter.go#L133:L206",
        "title": "ferry/exporter.go at 86be2b5487db505efb24dcd63cd9a45337211f6e \u00b7 adobe/ferry \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 4,
        "user_id": 405,
        "domain": "github.com",
        "root_domain": "github.com"
      }
    ]
  },
  "bookmarks": []
}