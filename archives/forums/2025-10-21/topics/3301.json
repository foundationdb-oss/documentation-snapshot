{
  "post_stream": {
    "posts": [
      {
        "id": 11066,
        "name": "Arnaud Geiser",
        "username": "arnaudgeiser",
        "avatar_template": "/user_avatar/forums.foundationdb.org/arnaudgeiser/{size}/1138_2.png",
        "created_at": "2022-05-06T14:18:56.176Z",
        "cooked": "<h2>\n<a name=\"description-1\" class=\"anchor\" href=\"#description-1\"></a>Description</h2>\n<p>We are using <code>proto3</code> to serialize our records and we wanted to create an<br>\nindex based on an enum.<br>\nUnfortunately, it seems the ordinal 0 cannot be indexed at all and is ignored.<br>\nI cannot find anything on the documentation but according to the tests it seems<br>\nto be something \u201cexpected\u201d or at least known.</p>\n<ul>\n<li><a href=\"https://github.com/FoundationDB/fdb-record-layer/blob/fbd60ce6c3189c06fb891fd957d37f3fc07c0b9b/fdb-record-layer-core/src/main/proto/index_build.proto#L31\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">fdb-record-layer/index_build.proto at fbd60ce6c3189c06fb891fd957d37f3fc07c0b9b \u00b7 FoundationDB/fdb-record-layer \u00b7 GitHub</a></li>\n<li><a href=\"https://github.com/FoundationDB/fdb-record-layer/blob/036443fe91fe822422fe0d732bfade3c91d68441/fdb-record-layer-core/src/main/proto/record_metadata_options.proto#L39\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">fdb-record-layer/record_metadata_options.proto at 036443fe91fe822422fe0d732bfade3c91d68441 \u00b7 FoundationDB/fdb-record-layer \u00b7 GitHub</a></li>\n<li><a href=\"https://github.com/FoundationDB/fdb-record-layer/blob/b75305a69eefcc33f934d12dd299197c832273b0/fdb-record-layer-core/src/main/proto/record_cursor.proto#L90\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">fdb-record-layer/record_cursor.proto at b75305a69eefcc33f934d12dd299197c832273b0 \u00b7 FoundationDB/fdb-record-layer \u00b7 GitHub</a></li>\n</ul>\n<p>As <code>proto3</code> requires a 0 for an enum, I end up with the following definition.</p>\n<pre><code class=\"lang-auto\">enum Payment {\n    INVALID  = 0; // proto3 requires an enum to start with 0 but it's an invalid value for FDB Record Layer\n    PREPAID  = 1;\n    POSTPAID = 2;\n    WIRED    = 3;\n}\n</code></pre>\n<p>And then, after inserting a bunch of data of all those types, I end up with the following keys.<br>\nEverything created as <code>INVALID</code> hasn\u2019t be indexed at all.</p>\n<pre><code class=\"lang-auto\">fdb&gt; clearrange \\x00 \\xff\nCommitted (44052630238)\nfdb&gt; getrange \\x00 \\xff 1000\n\nRange limited to 1000 keys\n`\\x15\\x01\\x02demostore\\x00\\x15\\x02\\x02account_payment_count\\x00\\x15\\x01' is `\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n`\\x15\\x01\\x02demostore\\x00\\x15\\x02\\x02account_payment_count\\x00\\x15\\x02' is `\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n`\\x15\\x01\\x02demostore\\x00\\x15\\x02\\x02account_payment_count\\x00\\x15\\x03' is `\\x03\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n</code></pre>\n<h2>\n<a name=\"questions-2\" class=\"anchor\" href=\"#questions-2\"></a>Questions</h2>\n<ul>\n<li>Is the behaviour expected?</li>\n<li>Am I reaching the wrong conclusions here?</li>\n</ul>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 3,
        "updated_at": "2022-05-06T14:21:04.961Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 1849,
        "reads": 20,
        "readers_count": 19,
        "score": 9229.0,
        "yours": false,
        "topic_id": 3301,
        "topic_slug": "whats-so-special-about-proto3-and-ordinal-0-for-enums",
        "display_username": "Arnaud Geiser",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/FoundationDB/fdb-record-layer/blob/036443fe91fe822422fe0d732bfade3c91d68441/fdb-record-layer-core/src/main/proto/record_metadata_options.proto#L39",
            "internal": false,
            "reflection": false,
            "title": "fdb-record-layer/record_metadata_options.proto at 036443fe91fe822422fe0d732bfade3c91d68441 \u00b7 FoundationDB/fdb-record-layer \u00b7 GitHub",
            "clicks": 1
          },
          {
            "url": "https://github.com/FoundationDB/fdb-record-layer/blob/b75305a69eefcc33f934d12dd299197c832273b0/fdb-record-layer-core/src/main/proto/record_cursor.proto#L90",
            "internal": false,
            "reflection": false,
            "title": "fdb-record-layer/record_cursor.proto at b75305a69eefcc33f934d12dd299197c832273b0 \u00b7 FoundationDB/fdb-record-layer \u00b7 GitHub",
            "clicks": 0
          },
          {
            "url": "https://github.com/FoundationDB/fdb-record-layer/blob/fbd60ce6c3189c06fb891fd957d37f3fc07c0b9b/fdb-record-layer-core/src/main/proto/index_build.proto#L31",
            "internal": false,
            "reflection": false,
            "title": "fdb-record-layer/index_build.proto at fbd60ce6c3189c06fb891fd957d37f3fc07c0b9b \u00b7 FoundationDB/fdb-record-layer \u00b7 GitHub",
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 968,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/whats-so-special-about-proto3-and-ordinal-0-for-enums/3301/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 11068,
        "name": "Alec Grieser",
        "username": "alloc",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "created_at": "2022-05-06T20:31:52.030Z",
        "cooked": "<p>The basic answer is that this is an unfortunate artifact of how the Record Layer\u2019s type system and proto3 field nullability interact poorly. More details here: <a href=\"https://foundationdb.github.io/fdb-record-layer/Overview.html#indexing-and-querying-of-missing--null-values\" class=\"inline-onebox\">FoundationDB Record Layer Overview</a></p>\n<p>But the short answer here is that proto3 does not allow one to distinguish between a scalar field value set to its default value from a value that is not set when we first developed the Record Layer, which for enums, means the value associated with ordinal 0. So, assuming you have something like:</p>\n<pre data-code-wrap=\"proto\"><code class=\"lang-nohighlight\">message Account {\n    Payment payment = 1;\n}\n</code></pre>\n<p>So, if you then try and evaluate a key expression like <code>field(\"payment\")</code> on a message where the value is set to <code>INVALID</code>, then what the Record Layer does is it asks the message if the status is set (via the <code>hasField</code> method on <code>Message</code>), which returns <code>false</code>. At that point, the Record Layer chooses to interpret that field as unset, and so the key expression returns <code>null</code>.</p>\n<p>What index type are you using? I\u2019d expect this behavior if you were using <code>COUNT_NOT_NULL</code> grouped by the <code>field(\"payment\")</code>, though I\u2019d expect there to be an entry for <code>INVALID</code> if the type was <code>COUNT</code>, though the corresponding index entry would correspond to <code>payment IS NULL</code> instead of <code>payment = INVALID</code>. That would look like this key:</p>\n<pre><code class=\"lang-auto\">`\\x15\\x01\\x02demostore\\x00\\x15\\x02\\x02account_payment_count\\x00\\x00' is `\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n</code></pre>\n<p>To get around this, there are a few things you could do. One would be to define your index with a non-default <code>NullStandin</code>: for example, <code>field(\"payment\", FanType.scalar, NullStandin.NOT_NULL)</code> will choose to always interpret an unset value as the default value, which would mean you\u2019d start indexing <code>INVALID</code> instead of <code>null</code>. Another would be to use a dummy value as enum-value 0. So something like:</p>\n<pre data-code-wrap=\"proto\"><code class=\"lang-nohighlight\">enum Payment {\n    UNSET = 0; // unused\n    INVALID = 1;\n    PREPAID = 2;\n    POSTPID = 3;\n    WIRED = 4;\n}\n</code></pre>\n<p>Then anything where <code>payment = UNSET</code> would be treated just like <code>INVALID</code> payments today, but that (special) value is explicitly supposed to correspond to a <code>null</code> value.</p>\n<p>You could also (I think) try a message with the field marked as explicitly <code>optional</code>:</p>\n<pre data-code-wrap=\"proto\"><code class=\"lang-nohighlight\">message Account {\n    optional Payment payment = 1;\n}\n</code></pre>\n<p>I <em>think</em> that would result in <code>hasField</code> now actually being able to tell if the <code>payment</code> field had been set to <code>INVALID</code> (versus unset). However, we haven\u2019t really verified that behavior with <code>optional</code> proto3 fields (yet), I don\u2019t think.</p>\n<p>Note that some of this is historical: when we first added proto3 support, proto3 did not have <code>optional</code> fields. (That feature existed in proto2 but was removed in early versions of proto3, but added back with version 3.9.) So, if we wanted to have <em>some</em> way of expressing nulls, it seemed to make sense to default to treating default-or-unset fields as unset, and then give users a way to opt in to treating them as default. But now that <code>optional</code> is back, I think we\u2019d kind of like to reverse that decision, and treat not-optional default-or-unset fields as their default value, and then a user who wants <code>null</code>-ability can mark the field as <code>optional</code>. However, we\u2019d need to carefully roll out that change to avoid breaking existing data, as it would be backwards incompatible.</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 3,
        "updated_at": "2022-05-06T20:31:52.030Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 33,
        "reads": 18,
        "readers_count": 17,
        "score": 183.6,
        "yours": false,
        "topic_id": 3301,
        "topic_slug": "whats-so-special-about-proto3-and-ordinal-0-for-enums",
        "display_username": "Alec Grieser",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://foundationdb.github.io/fdb-record-layer/Overview.html#indexing-and-querying-of-missing--null-values",
            "internal": false,
            "reflection": false,
            "title": "FoundationDB Record Layer Overview",
            "clicks": 12
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 8,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/whats-so-special-about-proto3-and-ordinal-0-for-enums/3301/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 11069,
        "name": "Arnaud Geiser",
        "username": "arnaudgeiser",
        "avatar_template": "/user_avatar/forums.foundationdb.org/arnaudgeiser/{size}/1138_2.png",
        "created_at": "2022-05-06T22:23:45.024Z",
        "cooked": "<p>Thank you for this very detailed answer.</p>\n<blockquote>\n<p>What index type are you using? I\u2019d expect this behavior if you were using <code>COUNT_NOT_NULL</code> grouped by the <code>field(\"payment\")</code> , though I\u2019d expect there to be an entry for <code>INVALID</code> if the type was <code>COUNT</code> , though the corresponding index entry would correspond to <code>payment IS NULL</code> instead of <code>payment = INVALID</code> . That would look like this key:</p>\n</blockquote>\n<p>Definitely! We are using a <code>COUNT_NOT_NULL</code> index. As you mentioned, using <code>COUNT</code> results in having null (\\x00) encoded.</p>\n<blockquote>\n<p>To get around this, there are a few things you could do. One would be to define your index with a non-default <code>NullStandin</code> : for example, <code>field(\"payment\", FanType.scalar, NullStandin.NOT_NULL)</code> will choose to always interpret an unset value as the default value, which would mean you\u2019d start indexing <code>INVALID</code> instead of <code>null</code> .</p>\n</blockquote>\n<p>This seems a really good alternative regarding enums values, that\u2019s unlikely you want to consider 0 as being null here.</p>\n<p>It seems there are three alternatives then:</p>\n<ul>\n<li>Use <code>NullStandin.NOT_NULL</code> to ensure null is never inserted</li>\n<li>Insert a dummy value on the enum which is supposed to map to <code>null</code></li>\n<li>Handled the nullability on the top-level type to not have to handle 0</li>\n</ul>\n<p>If I understand correctly, the latter won\u2019t make it really convenient the indexing.<br>\nAnyway,  I think the two first propositions are good enough.</p>\n<p>Thanks a lot for your time.</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 3,
        "updated_at": "2022-05-06T22:23:45.024Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 11,
        "reads": 16,
        "readers_count": 15,
        "score": 58.2,
        "yours": false,
        "topic_id": 3301,
        "topic_slug": "whats-so-special-about-proto3-and-ordinal-0-for-enums",
        "display_username": "Arnaud Geiser",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 968,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/whats-so-special-about-proto3-and-ordinal-0-for-enums/3301/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      11066,
      11068,
      11069
    ]
  },
  "timeline_lookup": [
    [
      1,
      1264
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "What&rsquo;s so special about proto3 and ordinal 0 for enums?",
  "id": 3301,
  "title": "What's so special about proto3 and ordinal 0 for enums?",
  "posts_count": 3,
  "created_at": "2022-05-06T14:18:56.090Z",
  "views": 2185,
  "reply_count": 0,
  "like_count": 2,
  "last_posted_at": "2022-05-06T22:23:45.024Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "whats-so-special-about-proto3-and-ordinal-0-for-enums",
  "category_id": 5,
  "word_count": 1066,
  "deleted_at": null,
  "user_id": 968,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_3301",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 3,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 2,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "Querying a non-string value",
      "id": 1807,
      "title": "Querying a non-string value",
      "slug": "querying-a-non-string-value",
      "posts_count": 4,
      "reply_count": 2,
      "highest_post_number": 4,
      "image_url": null,
      "created_at": "2019-12-04T13:52:17.159Z",
      "last_posted_at": "2020-04-01T07:45:29.577Z",
      "bumped": true,
      "bumped_at": "2020-04-01T07:45:29.577Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 1004,
      "category_id": 12,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 694,
            "username": "marko.cacic",
            "name": "",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/m/e274bd/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 219,
            "username": "MMcM",
            "name": "Mike McMahon",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/m/d07c76/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 534,
            "username": "PierreZ",
            "name": "Pierre Zemb",
            "avatar_template": "/user_avatar/forums.foundationdb.org/pierrez/{size}/866_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Record Layer `Field` proto message",
      "id": 3091,
      "title": "Record Layer `Field` proto message",
      "slug": "record-layer-field-proto-message",
      "posts_count": 3,
      "reply_count": 1,
      "highest_post_number": 3,
      "image_url": null,
      "created_at": "2021-12-25T04:32:20.529Z",
      "last_posted_at": "2022-01-05T00:28:08.536Z",
      "bumped": true,
      "bumped_at": "2022-01-05T00:28:08.536Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 521,
      "category_id": 9,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 946,
            "username": "rajivr",
            "name": "Rajiv M Ranganath",
            "avatar_template": "/user_avatar/forums.foundationdb.org/rajivr/{size}/1100_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Application design using Subspace and Tuple",
      "id": 452,
      "title": "Application design using Subspace and Tuple",
      "slug": "application-design-using-subspace-and-tuple",
      "posts_count": 9,
      "reply_count": 7,
      "highest_post_number": 9,
      "image_url": null,
      "created_at": "2018-05-22T21:46:43.537Z",
      "last_posted_at": "2018-07-14T21:02:50.010Z",
      "bumped": true,
      "bumped_at": "2018-07-14T21:02:50.010Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 5,
      "views": 3678,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 211,
            "username": "brk0v",
            "name": "Viacheslav Biriukov",
            "avatar_template": "/user_avatar/forums.foundationdb.org/brk0v/{size}/173_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 317,
            "username": "Lundin",
            "name": "Pontus Lundin",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/l/dfb087/{size}.png",
            "trust_level": 1
          }
        }
      ]
    },
    {
      "fancy_title": "Emulate secondary index",
      "id": 430,
      "title": "Emulate secondary index",
      "slug": "emulate-secondary-index",
      "posts_count": 5,
      "reply_count": 2,
      "highest_post_number": 5,
      "image_url": null,
      "created_at": "2018-05-18T07:04:04.967Z",
      "last_posted_at": "2018-05-21T14:11:05.503Z",
      "bumped": true,
      "bumped_at": "2018-05-21T14:11:05.503Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 1123,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 268,
            "username": "urykhy",
            "name": "Yury",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/u/7bcc69/{size}.png",
            "trust_level": 0
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 190,
            "username": "itp",
            "name": "Ian Peters",
            "avatar_template": "/user_avatar/forums.foundationdb.org/itp/{size}/151_2.png",
            "trust_level": 1
          }
        }
      ]
    },
    {
      "fancy_title": "Number types in Tuples may not be null | Reverse scan",
      "id": 1912,
      "title": "Number types in Tuples may not be null | Reverse scan",
      "slug": "number-types-in-tuples-may-not-be-null-reverse-scan",
      "posts_count": 4,
      "reply_count": 2,
      "highest_post_number": 4,
      "image_url": null,
      "created_at": "2020-01-27T13:38:56.010Z",
      "last_posted_at": "2020-02-20T14:50:37.088Z",
      "bumped": true,
      "bumped_at": "2020-02-20T14:50:37.088Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 992,
      "category_id": 12,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 653,
            "username": "VibhutiD",
            "name": "Vibhuti Dembi",
            "avatar_template": "/user_avatar/forums.foundationdb.org/vibhutid/{size}/668_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 968,
        "username": "arnaudgeiser",
        "name": "Arnaud Geiser",
        "avatar_template": "/user_avatar/forums.foundationdb.org/arnaudgeiser/{size}/1138_2.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 8,
        "username": "alloc",
        "name": "Alec Grieser",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      }
    ],
    "created_by": {
      "id": 968,
      "username": "arnaudgeiser",
      "name": "Arnaud Geiser",
      "avatar_template": "/user_avatar/forums.foundationdb.org/arnaudgeiser/{size}/1138_2.png"
    },
    "last_poster": {
      "id": 968,
      "username": "arnaudgeiser",
      "name": "Arnaud Geiser",
      "avatar_template": "/user_avatar/forums.foundationdb.org/arnaudgeiser/{size}/1138_2.png"
    },
    "links": [
      {
        "url": "https://foundationdb.github.io/fdb-record-layer/Overview.html#indexing-and-querying-of-missing--null-values",
        "title": "FoundationDB Record Layer Overview",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 12,
        "user_id": 8,
        "domain": "foundationdb.github.io",
        "root_domain": "foundationdb.github.io"
      },
      {
        "url": "https://github.com/FoundationDB/fdb-record-layer/blob/036443fe91fe822422fe0d732bfade3c91d68441/fdb-record-layer-core/src/main/proto/record_metadata_options.proto#L39",
        "title": "fdb-record-layer/record_metadata_options.proto at 036443fe91fe822422fe0d732bfade3c91d68441 \u00b7 FoundationDB/fdb-record-layer \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 1,
        "user_id": 968,
        "domain": "github.com",
        "root_domain": "github.com"
      }
    ]
  },
  "bookmarks": []
}