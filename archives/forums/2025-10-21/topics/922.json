{
  "post_stream": {
    "posts": [
      {
        "id": 2760,
        "name": "Roman",
        "username": "RomanPope",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/r/f19dbf/{size}.png",
        "created_at": "2018-11-30T22:45:57.445Z",
        "cooked": "<p>Hello,</p>\n<p>I am trying to simply iterate through a subspace items and read them as Key-Value pair.</p>\n<p>I have created a directory and a subspace for it that holds all the relevant information about my data structure.<br>\nI have already populated, and I am trying to simply iterate through it using Transaction.get_range(start, end) in Python.</p>\n<p>Here is a snippet of my getItems() code:<br>\n<span class=\"mention\">@fdb.transactional</span><br>\ndef GETItems(self, tr, subspace):<br>\nrange = subspace.range()<br>\nstart = range.start<br>\nstop = range.stop<br>\nfor packedKey, packedValue in tr.get_range(start, stop):<br>\nkey = subspace.unpack(packedKey)<br>\nvalueTup = fdb.tuple.unpack(packedValue)<br>\nyield ((key, valueTup,))</p>\n<p>I get the following trace at execution:</p>\n<pre><code>main()\n</code></pre>\n<p>line 61, in main<br>\nfor item in storeConnector.getItems(subspaceName):<br>\nStoreConnectorClasses.py\", line 188, in GETItems<br>\nfor packedKey, packedValue in tr.get_range(start, stop):<br>\n/fdb/impl.py\", line 372, in <strong>iter</strong><br>\n(kvs, count, more) = future.wait()<br>\n/fdb/impl.py\", line 691, in wait<br>\nself.capi.fdb_future_get_keyvalue_array(self.fpointer, ctypes.byref(kvs), ctypes.byref(count), ctypes.byref(more))<br>\n/fdb/impl.py\", line 1204, in check_error_code<br>\nraise FDBError(code)<br>\nfdb.impl.FDBError: b\u2019Operation issued while a commit was outstanding\u2019 (2017)</p>\n<p>If I don\u2019t use a transaction and use a database object, this doesn\u2019t happen. I am very puzzled about this error.</p>\n<p>What would be the most efficient way to iterate over a subspace as an iterator?</p>\n<p>Many thanks in advance!</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 4,
        "updated_at": "2018-11-30T22:46:50.205Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 249,
        "reads": 46,
        "readers_count": 45,
        "score": 1259.2,
        "yours": false,
        "topic_id": 922,
        "topic_slug": "implementing-transactional-getitems-in-python-getting-error-2017",
        "display_username": "Roman",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 442,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/implementing-transactional-getitems-in-python-getting-error-2017/922/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 2762,
        "name": "Alex Miller",
        "username": "alexmiller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "created_at": "2018-12-01T02:51:41.214Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"RomanPope\" data-post=\"1\" data-topic=\"922\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/r/f19dbf/48.png\" class=\"avatar\"> RomanPope:</div>\n<blockquote>\n<p><span class=\"mention\">@fdb.transactional</span><br>\ndef GETItems(self, tr, subspace):<br>\nrange = subspace.range()<br>\nstart = range.start<br>\nstop = range.stop<br>\nfor packedKey, packedValue in tr.get_range(start, stop):<br>\nkey = subspace.unpack(packedKey)<br>\nvalueTup = fdb.tuple.unpack(packedValue)<br>\nyield ((key, valueTup,))</p>\n</blockquote>\n</aside>\n<p><code>@fdb.transactional</code> is incompatible with generators.  I have a patch from some time ago to actually make this an error, that I never landed because the binding tester was broken at the time.  I\u2019ll try to actually commit that sometime soon.  You\u2019ll need to return a list instead of a generator.</p>\n<p><code>@fdb.transactional</code> produces a function that calls the wrapped one and then calls <code>commit</code>.  When you yield, you return from the function, commit is called, and then a subsequent invocation of the generator tries to read from the database as part of iterating through the result of get_range.  That read fails, because the <code>@fdb.transactional</code> wrapper already called <code>commit</code> on your transaction.</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 4,
        "updated_at": "2018-12-01T02:51:41.214Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 1,
        "incoming_link_count": 7,
        "reads": 42,
        "readers_count": 41,
        "score": 78.4,
        "yours": false,
        "topic_id": 922,
        "topic_slug": "implementing-transactional-getitems-in-python-getting-error-2017",
        "display_username": "Alex Miller",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 2
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 13,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/implementing-transactional-getitems-in-python-getting-error-2017/922/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 2781,
        "name": "Roman",
        "username": "RomanPope",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/r/f19dbf/{size}.png",
        "created_at": "2018-12-02T21:13:43.679Z",
        "cooked": "<p>Thank you for the information.</p>\n<p>The message had me puzzled, but looking at the implementation of the <span class=\"mention\">@fdb.trandsactional</span>  after your explanation makes perfect sense. I guess it won\u2019t do much even if I try to resuse code of <span class=\"mention\">@fdb.transactional</span> without the commit.</p>\n<p>Is there a way I can return an key-value iterator? I didn\u2019t find one. Database seems to be returning the full list. I really would like to have an iterator in one particular scenario: I have about 1 million records in the key subspace, and the transaction that I used became stale. I might be wrong, I would need to run the test again to double check if the transaction did .</p>\n<p>I can most likely write my own method to implement a retry look and keep the last key I got so I get the following key if anything goes wrong. The fact that previous iterator is not fully consumed shouldn\u2019t cause an issue.</p>\n<p>PS I guess I could try and set the timeout for a transaction to infinite, but I still would need a retry mechanism.</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 4,
        "updated_at": "2018-12-02T21:25:06.878Z",
        "reply_count": 1,
        "reply_to_post_number": 2,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 40,
        "readers_count": 39,
        "score": 18.0,
        "yours": false,
        "topic_id": 922,
        "topic_slug": "implementing-transactional-getitems-in-python-getting-error-2017",
        "display_username": "Roman",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 3,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 13,
          "username": "alexmiller",
          "name": "Alex Miller",
          "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 442,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/implementing-transactional-getitems-in-python-getting-error-2017/922/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 2787,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2018-12-03T20:30:29.550Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"RomanPope\" data-post=\"3\" data-topic=\"922\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/r/f19dbf/48.png\" class=\"avatar\"> RomanPope:</div>\n<blockquote>\n<p>Is there a way I can return an key-value iterator? I didn\u2019t find one. Database seems to be returning the full list. I really would like to have an iterator in one particular scenario: I have about 1 million records in the key subspace, and the transaction that I used became stale. I might be wrong, I would need to run the test again to double check if the transaction did .</p>\n</blockquote>\n</aside>\n<p>Calling <code>db.get_range()</code> does return a list, if that\u2019s what you\u2019re referring to, because the lifetime of the transaction created doesn\u2019t extend beyond the function call. With <code>tr.get_range()</code>, you should instead get an iterator. Under the hood, it will be executing multiple range queries to the database as you advance through that iterator, so it won\u2019t need to fetch all of the results in one shot.</p>\n<p>As you\u2019ve discovered, you can\u2019t have your <code>transactional</code> function be a generator. To work around this, there are two basic approaches. All of your reads need to happen within the lifetime of the transaction, so you either need to collect the results that you want inside the transaction and then return them to the code that\u2019s going to process them, or you need to move the processing code inside the transaction. You suggested that you\u2019ll keep track of your last key and start your retry after that, which works well with the latter approach of trying to process your data within the transaction. You may not even need a custom retry loop to do that.</p>\n<p>And also just in case it isn\u2019t obvious, you can use a generator function within your transaction so long as that function isn\u2019t transactional. Instead, you could call it from a transactional function. For example:</p>\n<pre><code class=\"lang-auto\">fdb.api_version(600)\ndb=fdb.open()\n\nclass KeyCounter(object):\n    def __init__(self):\n        self.num_tries = 0\n        self.num_keys = 0\n        self.num_matches = 0\n        self.start_key = ''\n\n    def get_first_element_from_values(self, tr):\n        for k,v in tr.get_range(self.start_key, '\\xff'):\n            yield (k, fdb.tuple.unpack(v)[0])\n\n    @fdb.transactional\n    def count_values_that_start_with(self, tr, desired_first_item):\n        self.num_tries += 1\n\n        for k, first_item in self.get_first_element_from_values(tr):\n            self.num_keys += 1\n            self.start_key = k + '\\x00'\n\n            if first_item == desired_first_item:\n                self.num_matches += 1\n\n        return self.num_matches\n\ncounter = KeyCounter()\n\nprint('Matches: %d' % counter.count_values_that_start_with(db, 1))\nprint('Tries: %d' % counter.num_tries)\nprint('Keys: %d' % counter.num_keys)\n</code></pre>\n<p>The output of this when I ran it with the 5 million keys I inserted:</p>\n<pre><code class=\"lang-auto\">Matches: 1000\nTries: 5\nKeys: 5000000\n</code></pre>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 4,
        "updated_at": "2018-12-03T20:30:29.550Z",
        "reply_count": 0,
        "reply_to_post_number": 3,
        "quote_count": 1,
        "incoming_link_count": 6,
        "reads": 33,
        "readers_count": 32,
        "score": 51.6,
        "yours": false,
        "topic_id": 922,
        "topic_slug": "implementing-transactional-getitems-in-python-getting-error-2017",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/implementing-transactional-getitems-in-python-getting-error-2017/922/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      2760,
      2762,
      2781,
      2787
    ]
  },
  "timeline_lookup": [
    [
      1,
      2517
    ],
    [
      3,
      2515
    ],
    [
      4,
      2514
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "Implementing transactional getItems() in python -&gt; getting error 2017",
  "id": 922,
  "title": "Implementing transactional getItems() in python -> getting error 2017",
  "posts_count": 4,
  "created_at": "2018-11-30T22:45:57.370Z",
  "views": 1555,
  "reply_count": 2,
  "like_count": 3,
  "last_posted_at": "2018-12-03T20:30:29.550Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "implementing-transactional-getitems-in-python-getting-error-2017",
  "category_id": 8,
  "word_count": 997,
  "deleted_at": null,
  "user_id": 442,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_922",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 4,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 3,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "FoundationDB as backend for JanusGraph - Iterate through all vertices",
      "id": 2280,
      "title": "FoundationDB as backend for JanusGraph - Iterate through all vertices",
      "slug": "foundationdb-as-backend-for-janusgraph-iterate-through-all-vertices",
      "posts_count": 4,
      "reply_count": 2,
      "highest_post_number": 4,
      "image_url": null,
      "created_at": "2020-08-06T18:41:32.903Z",
      "last_posted_at": "2020-08-10T03:42:01.690Z",
      "bumped": true,
      "bumped_at": "2020-08-10T10:38:29.945Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 2118,
      "category_id": 14,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 799,
            "username": "SarthakGhosh16",
            "name": "Sarthak Ghosh16",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/ba9def/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        }
      ]
    },
    {
      "fancy_title": "Why can I only range read 2857 keys?",
      "id": 1517,
      "title": "Why can I only range read 2857 keys?",
      "slug": "why-can-i-only-range-read-2857-keys",
      "posts_count": 2,
      "reply_count": 0,
      "highest_post_number": 2,
      "image_url": null,
      "created_at": "2019-07-13T06:06:58.493Z",
      "last_posted_at": "2019-07-13T19:32:13.906Z",
      "bumped": true,
      "bumped_at": "2019-07-13T19:32:13.906Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 2,
      "views": 634,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 542,
            "username": "jonahwest",
            "name": "",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/j/90db22/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Why can&rsquo;t get the key-value I need for using fdb_transaction_get_range",
      "id": 3038,
      "title": "Why can't get the key-value I need for using fdb_transaction_get_range",
      "slug": "why-cant-get-the-key-value-i-need-for-using-fdb-transaction-get-range",
      "posts_count": 2,
      "reply_count": 0,
      "highest_post_number": 2,
      "image_url": null,
      "created_at": "2021-11-25T09:15:15.954Z",
      "last_posted_at": "2021-11-27T03:37:15.102Z",
      "bumped": true,
      "bumped_at": "2021-11-27T03:37:15.102Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 705,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest single",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 1039,
            "username": "JiangXiNJU",
            "name": "Jiang Xi",
            "avatar_template": "/user_avatar/forums.foundationdb.org/jiangxinju/{size}/1247_2.png",
            "trust_level": 1
          }
        }
      ]
    },
    {
      "fancy_title": "Subspace get_range",
      "id": 2877,
      "title": "Subspace get_range",
      "slug": "subspace-get-range",
      "posts_count": 2,
      "reply_count": 0,
      "highest_post_number": 2,
      "image_url": null,
      "created_at": "2021-09-02T13:55:08.138Z",
      "last_posted_at": "2021-09-02T18:41:05.522Z",
      "bumped": true,
      "bumped_at": "2021-09-02T18:41:05.522Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 478,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 989,
            "username": "laita",
            "name": "Lou",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/l/77aa72/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Copying data from one &ldquo;table&rdquo; to another",
      "id": 860,
      "title": "Copying data from one \"table\" to another",
      "slug": "copying-data-from-one-table-to-another",
      "posts_count": 11,
      "reply_count": 7,
      "highest_post_number": 11,
      "image_url": null,
      "created_at": "2018-11-10T19:48:38.480Z",
      "last_posted_at": "2019-09-19T21:56:33.805Z",
      "bumped": true,
      "bumped_at": "2019-09-19T21:56:33.805Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 3,
      "views": 1653,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 311,
            "username": "ThomasJ",
            "name": "Thomas Johson",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/t/6f9a4e/{size}.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 538,
            "username": "ravilution",
            "name": "Ravilution",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ravilution/{size}/728_2.png",
            "trust_level": 2
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 442,
        "username": "RomanPope",
        "name": "Roman",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/r/f19dbf/{size}.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 12,
        "username": "ajbeamon",
        "name": "A.J. Beamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "admin": true,
        "trust_level": 4
      },
      {
        "id": 13,
        "username": "alexmiller",
        "name": "Alex Miller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      }
    ],
    "created_by": {
      "id": 442,
      "username": "RomanPope",
      "name": "Roman",
      "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/r/f19dbf/{size}.png"
    },
    "last_poster": {
      "id": 12,
      "username": "ajbeamon",
      "name": "A.J. Beamon",
      "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png"
    }
  },
  "bookmarks": []
}