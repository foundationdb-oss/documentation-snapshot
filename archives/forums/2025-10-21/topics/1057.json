{
  "post_stream": {
    "posts": [
      {
        "id": 3106,
        "name": "Iilyak",
        "username": "iilyak",
        "avatar_template": "/user_avatar/forums.foundationdb.org/iilyak/{size}/1073_2.png",
        "created_at": "2019-01-24T21:54:58.429Z",
        "cooked": "<p>How to implement a changes feed in FDB (watching for updates to given range)?</p>\n<p>Unfortunately FoundationDB doesn\u2019t support setting watches on ranges (see this thread <a href=\"https://forums.foundationdb.org/t/changefeeds-watching-and-getting-updates-on-ranges-of-keys/511\" class=\"inline-onebox\">Changefeeds (watching and getting updates on ranges of keys)</a>).</p>\n<p>One possible implementation could be to maintain number_of_records key and update it using atomic add. Then we can setup a watch on that key so other clients can get notification when database is updated. The client would use other means to find out what was updated.</p>\n<p>There is a concern with this implementation that the number_of_records key would be causing transaction conflicts since all changes in the range would be modifying a single key.</p>\n<p>We can replace single key with multiple and atomically update one of them (we can choose randomly). However, this approach doesn\u2019t seem to be compatible with watches. Since:</p>\n<ul>\n<li>we don\u2019t know how many keys would be representing counter</li>\n<li>we would have to set watches for every key used in counter</li>\n</ul>\n<p>The following idea is a bit crazy, that\u2019s why I am asking for help to validate if this is even possible.</p>\n<p>Let\u2019s assume we would form a chain of changes to the range by creating keys named as \u201c{RANGE_PREFIX} / chain / {prev_vsn}\u201d. The value of the key would be new_vsn(). Here vsn is an FDB  versionstamp. We would create these keys only when we add new entries into the range. Here is how changes feed transaction might look like:</p>\n<ol>\n<li>we want to get changes since given since_vsn argument</li>\n<li>we assign last_seen = since_vsn</li>\n<li>we start new transaction and pass last_seen to it</li>\n<li>iterate over \u201c{RANGE_PREFIX} / chain /\u201d range starting from <code>last_seen</code> using range operation</li>\n</ol>\n<ul>\n<li>we use a \u201climit\u201d parameter to control transaction size</li>\n</ul>\n<ol start=\"5\">\n<li>we finish current transaction</li>\n<li>we repeat steps 3-5 until we reach end of range</li>\n<li>we start new transaction and get watch_key as<br>\nwatch_key = txn[\"{RANGE_PREFIX} / chain / {last_seen}\".format(\u2026)]</li>\n<li>we setup a watch for watch_key (note the key doesn\u2019t exist yet)</li>\n<li>we finish current transaction</li>\n<li>wait for watch to fire (another client would create {RANGE_PREFIX} / chain / {last_seen}\" key in the transaction which adds a key into the range)</li>\n<li>cancel the watch and repeat all steps</li>\n</ol>\n<p>The questions are:</p>\n<ul>\n<li>is it possible to set a watch for non-existent key?</li>\n<li>how expensive it is to cancel the watch and create a new one over and over?</li>\n<li>is there a better way of getting notifications about changes in the range</li>\n</ul>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 8,
        "updated_at": "2019-01-24T21:54:58.429Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 269,
        "reads": 52,
        "readers_count": 51,
        "score": 1350.4,
        "yours": false,
        "topic_id": 1057,
        "topic_slug": "changes-feed-without-hot-keys",
        "display_username": "Iilyak",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://forums.foundationdb.org/t/changefeeds-watching-and-getting-updates-on-ranges-of-keys/511",
            "internal": true,
            "reflection": false,
            "title": "Changefeeds (watching and getting updates on ranges of keys)",
            "clicks": 18
          },
          {
            "url": "https://forums.foundationdb.org/t/feature-request-additional-atomic-operations/2782/3",
            "internal": true,
            "reflection": true,
            "title": "Feature Request: Additional atomic operations",
            "clicks": 1
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 491,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/changes-feed-without-hot-keys/1057/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 3107,
        "name": "Ryan Worl",
        "username": "ryanworl",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png",
        "created_at": "2019-01-24T22:20:37.401Z",
        "cooked": "<p>What you\u2019re effectively asking here is \u201chow can I observe all changes to the database in the order they happened\u201d and \u201chow can I be notified promptly of these changes.\u201d</p>\n<p>To answer the first bit of your question, using the atomic add operation does not generate conflicts so long as you do not also read that key in the same transaction. You can use a snapshot read to know what it was at the point your transaction started and it will not generate conflicts.</p>\n<p>Now the reading in order part. If you need to know what changes occurred, write them into a log structure using versionstamped operations, which you can search for on the forums. If you only care that \u201csomething\u201d changed, you can just write the key that was changed and not include any data, or you can choose to include some data. Up to you. This will scale to the capacity of a single storage nodes\u2019 write throughput because all writes will hit one node. You can artificially create \u201cshards\u201d of this log, and you can still know the total order of operations, but reading requires reading all the shards to reconstruct the order.</p>\n<p>This is the first problem you\u2019ll run into. If you keep your universe of what you\u2019re \u201cwatching\u201d small enough (say, one user\u2019s data and a few operations a second at peak), this is fine. Watching literally the entire database, or a very large portion, is not scalable.</p>\n<p>Now onto the \u201cpromptly being notified\u201d bit. This is what watches are for. Watches are for optimizing a polling loop. So if you watch a counter key and poll every second as a fallback, my understanding is you will in most circumstances get the watch firing immediately and then you can fallback to the polling if it breaks for whatever reason.</p>\n<p>I hope this helps. I understand this type of feature is desireable, but the idealized implementation where you can watch anything for changes and expect immediate updates is not scalable, which is why products like Firebase have a limit on connections and throughput. They are just running all operations through a single node. Other systems have other mechanisms, but they typically don\u2019t have a total order over writes, which is important if you actually want to know every single thing that happened and when.</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 8,
        "updated_at": "2019-01-24T22:20:37.401Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 3,
        "reads": 49,
        "readers_count": 48,
        "score": 29.8,
        "yours": false,
        "topic_id": 1057,
        "topic_slug": "changes-feed-without-hot-keys",
        "display_username": "Ryan Worl",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 81,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/changes-feed-without-hot-keys/1057/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3118,
        "name": "Iilyak",
        "username": "iilyak",
        "avatar_template": "/user_avatar/forums.foundationdb.org/iilyak/{size}/1073_2.png",
        "created_at": "2019-01-25T12:33:35.407Z",
        "cooked": "<blockquote>\n<p>What you\u2019re effectively asking here is \u201chow can I observe all changes to the database in the order they happened\u201d and \u201chow can I be notified promptly of these changes.\u201d</p>\n</blockquote>\n<p>There is a third part of a question which is do both ^^ without introducing hot keys in transactions which update database.</p>\n<blockquote>\n<p>To answer the first bit of your question, using the atomic add operation does not generate conflicts so long as you do not also read that key in the same transaction.</p>\n</blockquote>\n<p>As I mention the concern with this approach is the key which is used for atomic updates will be a hot key updated by all write transactions which add new key into the range. Which means that performance of the whole database would be limited by the performance of a single node.</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 8,
        "updated_at": "2019-01-25T12:33:35.407Z",
        "reply_count": 0,
        "reply_to_post_number": 2,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 45,
        "readers_count": 44,
        "score": 14.0,
        "yours": false,
        "topic_id": 1057,
        "topic_slug": "changes-feed-without-hot-keys",
        "display_username": "Iilyak",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 81,
          "username": "ryanworl",
          "name": "Ryan Worl",
          "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 491,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/changes-feed-without-hot-keys/1057/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3126,
        "name": "Anantha Kumaran",
        "username": "ananthakumaran",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ananthakumaran/{size}/526_2.png",
        "created_at": "2019-01-25T14:06:18.829Z",
        "cooked": "<p>Could you explain how would you push items to changefeed?, I believe that operation would get serialized and only one writer can progress at a time.</p>\n<p>{chain, v0} -&gt; v1<br>\n{chain, v1} -&gt; v2<br>\n{chain, v2} -&gt; v3</p>\n<p>If two processes read the current version v3 and try to write, one of them would conflict? Note that, using versionstamp in the value would not prevent conflicts on key AFAIK</p>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 8,
        "updated_at": "2019-01-25T14:16:35.232Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 42,
        "readers_count": 41,
        "score": 13.4,
        "yours": false,
        "topic_id": 1057,
        "topic_slug": "changes-feed-without-hot-keys",
        "display_username": "Anantha Kumaran",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 308,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/changes-feed-without-hot-keys/1057/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3129,
        "name": "Adam Kocoloski",
        "username": "kocolosk",
        "avatar_template": "/user_avatar/forums.foundationdb.org/kocolosk/{size}/412_2.png",
        "created_at": "2019-01-25T16:52:59.335Z",
        "cooked": "<p><a class=\"mention\" href=\"/u/ananthakumaran\">@ananthakumaran</a> I think the use of the word \u201cchain\u201d might be misleading here \u2026 the items in the feed don\u2019t typically need to be linked together but merely need to produce a total ordering. Using versionstamps in the key is sufficient for that purpose.</p>\n<p><a class=\"mention\" href=\"/u/iilyak\">@iilyak</a> you lost me on step 7. Are you trying to guess at the value that a new versionstamp will take? That won\u2019t work; the versionstamps are incrementing constantly regardless of whether any specific transaction is actually associated to a given stamp.</p>\n<p>I don\u2019t know how hot a key that is only being mutated by atomic operations would have to get before it becomes a bottleneck; that\u2019s a really good question. If it did become a problem I think one could probably come up with a scheme to distribute a small, known set of keys across the subspace and watch all of those.</p>\n<p>Or maybe you just turn off updates to that key altogether and return true anytime someone asks \u201cdid this subspace get updated\u201d? <img src=\"https://emoji.discourse-cdn.com/twitter/laughing.png?v=6\" title=\":laughing:\" class=\"emoji\" alt=\":laughing:\"></p>",
        "post_number": 5,
        "post_type": 1,
        "posts_count": 8,
        "updated_at": "2019-01-25T16:52:59.335Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 2,
        "reads": 41,
        "readers_count": 40,
        "score": 23.2,
        "yours": false,
        "topic_id": 1057,
        "topic_slug": "changes-feed-without-hot-keys",
        "display_username": "Adam Kocoloski",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 423,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/changes-feed-without-hot-keys/1057/5",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3133,
        "name": "Iilyak",
        "username": "iilyak",
        "avatar_template": "/user_avatar/forums.foundationdb.org/iilyak/{size}/1073_2.png",
        "created_at": "2019-01-25T19:55:10.453Z",
        "cooked": "<p><a class=\"mention\" href=\"/u/ananthakumaran\">@ananthakumaran</a><br>\nclients would have to provide the current version of the document they want to update. Writer transaction would look something like the following pseudocode. I agree with <a class=\"mention\" href=\"/u/kocolosk\">@kocolosk</a> that name <code>chain</code> is not the best one, naming is hard.</p>\n<pre><code class=\"lang-auto\">@transactional\ndef commit(txn, range_prefix, previous_version, document):\n    watch_key = fdb.tuple.pack(range_prefix, 'chain', previous_version)\n    txn.add_write_conflict_key(watch_key)\n\n    # do something application specific here\n    # it would add keys into the range we want to watch\n    # random is used for illusatration purpose\n    key = fdb.tuple.pack(range_prefix, 'docs', random())\n    txn[key] = document\n\n    # then we update by vsn index\n    key_stamp = fdb.tuple.pack_with_versionstamp((\n       range_prefix, 'by_vsn', fdb.tuple.Versionstamp(),))\n    txn.set_versionstamped_key(key_stamp, key)\n\n    # finally we create the key we use in the watch (the one we added to conflict_range)\n    txn[watch_key] = key # value doesn't really matter \n</code></pre>\n<p>The transaction will fail if concurrent client creates the <code>watch_key</code>. This design allows:</p>\n<ul>\n<li>traversing the keys in the range in the insertion order with the help of <code>by_vsn</code> index</li>\n<li>abort transactions which try to modify the same <code>watch_key</code> (we can call it a lock)</li>\n<li>we have a key to set watch on</li>\n<li>the keys in <code>(range_prefix, 'chain', *)</code> are ordered in insertion order (because <code>previous_version</code> is a version stamp of previous insertion operation in the range)</li>\n<li>we can use <code>clear_range()</code> to clear the <code>chain</code> after watch has been fired (if we decide to)</li>\n</ul>",
        "post_number": 6,
        "post_type": 1,
        "posts_count": 8,
        "updated_at": "2019-01-25T19:55:10.453Z",
        "reply_count": 1,
        "reply_to_post_number": 4,
        "quote_count": 0,
        "incoming_link_count": 6,
        "reads": 38,
        "readers_count": 37,
        "score": 42.6,
        "yours": false,
        "topic_id": 1057,
        "topic_slug": "changes-feed-without-hot-keys",
        "display_username": "Iilyak",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 308,
          "username": "ananthakumaran",
          "name": "Anantha Kumaran",
          "avatar_template": "/user_avatar/forums.foundationdb.org/ananthakumaran/{size}/526_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 491,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/changes-feed-without-hot-keys/1057/6",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3134,
        "name": "Iilyak",
        "username": "iilyak",
        "avatar_template": "/user_avatar/forums.foundationdb.org/iilyak/{size}/1073_2.png",
        "created_at": "2019-01-25T20:05:57.326Z",
        "cooked": "<p>By changing the order in which elements are mentioned in the <code>watch_key</code> to the following <code>fdb.tuple.pack('chain', previous_version, range_prefix)</code> we can ensure that every transaction would be routed to a different range.</p>",
        "post_number": 7,
        "post_type": 1,
        "posts_count": 8,
        "updated_at": "2019-01-25T20:05:57.326Z",
        "reply_count": 0,
        "reply_to_post_number": 6,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 36,
        "readers_count": 35,
        "score": 12.2,
        "yours": false,
        "topic_id": 1057,
        "topic_slug": "changes-feed-without-hot-keys",
        "display_username": "Iilyak",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 491,
          "username": "iilyak",
          "name": "Iilyak",
          "avatar_template": "/user_avatar/forums.foundationdb.org/iilyak/{size}/1073_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 491,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/changes-feed-without-hot-keys/1057/7",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 3135,
        "name": "Iilyak",
        "username": "iilyak",
        "avatar_template": "/user_avatar/forums.foundationdb.org/iilyak/{size}/1073_2.png",
        "created_at": "2019-01-25T20:22:00.709Z",
        "cooked": "<p><a class=\"mention\" href=\"/u/kocolosk\">@kocolosk</a></p>\n<blockquote>\n<p>you lost me on step 7. Are you trying to guess at the value that a new versionstamp will take? That won\u2019t work; the versionstamps are incrementing constantly regardless of whether any specific transaction is actually associated to a given stamp.</p>\n</blockquote>\n<p>No we are not guessing. We use <code>previous_version</code> as part of the key. Very good question\u2026 Maybe we can get the <code>previous_version</code> at the beginning of transaction (by using snapshot reads). It will always be last key in the range_prefix, \u2018chain\u2019, 0x00)<code>range. But in this case we wouldn't be able to use</code>fdb.tuple.pack(\u2018chain\u2019, previous_version, range_prefix)` to move key from server to server.</p>\n<p>I\u2019ll think some more.</p>",
        "post_number": 8,
        "post_type": 1,
        "posts_count": 8,
        "updated_at": "2019-01-25T20:22:30.919Z",
        "reply_count": 0,
        "reply_to_post_number": 5,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 36,
        "readers_count": 35,
        "score": 7.2,
        "yours": false,
        "topic_id": 1057,
        "topic_slug": "changes-feed-without-hot-keys",
        "display_username": "Iilyak",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 423,
          "username": "kocolosk",
          "name": "Adam Kocoloski",
          "avatar_template": "/user_avatar/forums.foundationdb.org/kocolosk/{size}/412_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 491,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/changes-feed-without-hot-keys/1057/8",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      3106,
      3107,
      3118,
      3126,
      3129,
      3133,
      3134,
      3135
    ]
  },
  "timeline_lookup": [
    [
      1,
      2462
    ],
    [
      3,
      2461
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "Changes feed without hot keys",
  "id": 1057,
  "title": "Changes feed without hot keys",
  "posts_count": 8,
  "created_at": "2019-01-24T21:54:58.266Z",
  "views": 1474,
  "reply_count": 4,
  "like_count": 0,
  "last_posted_at": "2019-01-25T20:22:00.709Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "changes-feed-without-hot-keys",
  "category_id": 7,
  "word_count": 1559,
  "deleted_at": null,
  "user_id": 491,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_1057",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 8,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 4,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "Changefeeds (watching and getting updates on ranges of keys)",
      "id": 511,
      "title": "Changefeeds (watching and getting updates on ranges of keys)",
      "slug": "changefeeds-watching-and-getting-updates-on-ranges-of-keys",
      "posts_count": 9,
      "reply_count": 7,
      "highest_post_number": 9,
      "image_url": null,
      "created_at": "2018-06-16T12:26:34.710Z",
      "last_posted_at": "2018-07-06T14:46:54.646Z",
      "bumped": true,
      "bumped_at": "2018-07-06T14:46:54.646Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 2,
      "views": 4221,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 307,
            "username": "jwr",
            "name": "Jan Rychter",
            "avatar_template": "/user_avatar/forums.foundationdb.org/jwr/{size}/302_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 22,
            "username": "dave",
            "name": "David Scherer",
            "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Watchers and not missing changes",
      "id": 474,
      "title": "Watchers and not missing changes",
      "slug": "watchers-and-not-missing-changes",
      "posts_count": 14,
      "reply_count": 6,
      "highest_post_number": 14,
      "image_url": null,
      "created_at": "2018-05-25T13:29:22.034Z",
      "last_posted_at": "2018-06-05T23:23:48.371Z",
      "bumped": true,
      "bumped_at": "2018-06-05T23:23:48.371Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 3,
      "views": 1999,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 289,
            "username": "rowanG",
            "name": "Rowan Goemans",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/r/8baadc/{size}.png",
            "trust_level": 0
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 81,
            "username": "ryanworl",
            "name": "Ryan Worl",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 298,
            "username": "gwillis12",
            "name": "Geo",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/ed655f/{size}.png",
            "trust_level": 0
          }
        }
      ]
    },
    {
      "fancy_title": "Understanding &ldquo;Watches&rdquo;",
      "id": 903,
      "title": "Understanding \"Watches\"",
      "slug": "understanding-watches",
      "posts_count": 10,
      "reply_count": 4,
      "highest_post_number": 10,
      "image_url": null,
      "created_at": "2018-11-26T17:28:09.202Z",
      "last_posted_at": "2018-11-27T17:28:33.763Z",
      "bumped": true,
      "bumped_at": "2018-11-27T17:28:33.763Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 3295,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 437,
            "username": "MansurAshraf",
            "name": "Mansur Ashraf",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/m/b9bd4f/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 435,
            "username": "ArchDev",
            "name": "Arthur Kushka",
            "avatar_template": "/user_avatar/forums.foundationdb.org/archdev/{size}/425_2.png",
            "trust_level": 0
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Transaction.Watch Examples?",
      "id": 257,
      "title": "Transaction.Watch Examples?",
      "slug": "transaction-watch-examples",
      "posts_count": 6,
      "reply_count": 2,
      "highest_post_number": 6,
      "image_url": null,
      "created_at": "2018-04-25T03:34:54.216Z",
      "last_posted_at": "2018-10-23T12:05:15.737Z",
      "bumped": true,
      "bumped_at": "2018-10-23T12:05:15.737Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 2822,
      "category_id": 5,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 174,
            "username": "seddonm1",
            "name": "seddonm1",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/e274bd/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 22,
            "username": "dave",
            "name": "David Scherer",
            "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 265,
            "username": "brainfucker",
            "name": "Illarionov Oleg",
            "avatar_template": "/user_avatar/forums.foundationdb.org/brainfucker/{size}/237_2.png",
            "trust_level": 1
          }
        }
      ]
    },
    {
      "fancy_title": "Getting a realtime feed of changes",
      "id": 2116,
      "title": "Getting a realtime feed of changes",
      "slug": "getting-a-realtime-feed-of-changes",
      "posts_count": 1,
      "reply_count": 0,
      "highest_post_number": 1,
      "image_url": null,
      "created_at": "2020-05-12T23:48:30.073Z",
      "last_posted_at": "2020-05-12T23:48:30.139Z",
      "bumped": true,
      "bumped_at": "2020-05-12T23:48:30.139Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 4,
      "views": 1149,
      "category_id": 9,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest single",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 120,
            "username": "josephg",
            "name": "Seph Gentle",
            "avatar_template": "/user_avatar/forums.foundationdb.org/josephg/{size}/84_2.png",
            "trust_level": 2
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 491,
        "username": "iilyak",
        "name": "Iilyak",
        "avatar_template": "/user_avatar/forums.foundationdb.org/iilyak/{size}/1073_2.png",
        "post_count": 5,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 81,
        "username": "ryanworl",
        "name": "Ryan Worl",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 3
      },
      {
        "id": 308,
        "username": "ananthakumaran",
        "name": "Anantha Kumaran",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ananthakumaran/{size}/526_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      },
      {
        "id": 423,
        "username": "kocolosk",
        "name": "Adam Kocoloski",
        "avatar_template": "/user_avatar/forums.foundationdb.org/kocolosk/{size}/412_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      }
    ],
    "created_by": {
      "id": 491,
      "username": "iilyak",
      "name": "Iilyak",
      "avatar_template": "/user_avatar/forums.foundationdb.org/iilyak/{size}/1073_2.png"
    },
    "last_poster": {
      "id": 491,
      "username": "iilyak",
      "name": "Iilyak",
      "avatar_template": "/user_avatar/forums.foundationdb.org/iilyak/{size}/1073_2.png"
    },
    "links": [
      {
        "url": "https://forums.foundationdb.org/t/changefeeds-watching-and-getting-updates-on-ranges-of-keys/511",
        "title": "Changefeeds (watching and getting updates on ranges of keys)",
        "internal": true,
        "attachment": false,
        "reflection": false,
        "clicks": 18,
        "user_id": 491,
        "domain": "forums.foundationdb.org",
        "root_domain": "foundationdb.org"
      },
      {
        "url": "https://forums.foundationdb.org/t/feature-request-additional-atomic-operations/2782/3",
        "title": "Feature Request: Additional atomic operations",
        "internal": true,
        "attachment": false,
        "reflection": true,
        "clicks": 1,
        "user_id": 491,
        "domain": "forums.foundationdb.org",
        "root_domain": "foundationdb.org"
      }
    ]
  },
  "bookmarks": []
}