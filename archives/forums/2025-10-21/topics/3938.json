{
  "post_stream": {
    "posts": [
      {
        "id": 12791,
        "name": "",
        "username": "behos",
        "avatar_template": "/user_avatar/forums.foundationdb.org/behos/{size}/1576_2.png",
        "created_at": "2023-04-29T14:29:54.101Z",
        "cooked": "<p>Hi,</p>\n<p>Rust has recently enabled a debug assertion which checks pointer alignment on dereference and it started failing with <code>misaligned pointer dereference</code> when dereferencing objects provided by the core client (for example in the <code>fdb_transaction_get_range</code> result).</p>\n<p>I tried to find out why this is the case, and stumbled upon this note in the <code>Arena.cpp</code> which has this note.</p>\n<aside class=\"onebox githubblob\" data-onebox-src=\"https://github.com/apple/foundationdb/blob/5e8feac8c980fbef6b6f523360e42d28dd120e5d/flow/Arena.cpp#L28-L31\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/apple/foundationdb/blob/5e8feac8c980fbef6b6f523360e42d28dd120e5d/flow/Arena.cpp#L28-L31\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <h4><a href=\"https://github.com/apple/foundationdb/blob/5e8feac8c980fbef6b6f523360e42d28dd120e5d/flow/Arena.cpp#L28-L31\" target=\"_blank\" rel=\"noopener nofollow ugc\">apple/foundationdb/blob/5e8feac8c980fbef6b6f523360e42d28dd120e5d/flow/Arena.cpp#L28-L31</a></h4>\n\n\n\n    <pre class=\"onebox\"><code class=\"lang-cpp\">\n      <ol class=\"start lines\" start=\"28\" style=\"counter-reset: li-counter 27 ;\">\n          <li>// We don't align memory properly, and we need to tell lsan about that.</li>\n          <li>extern \"C\" const char* __lsan_default_options(void) {</li>\n          <li>\treturn \"use_unaligned=1\";</li>\n          <li>}</li>\n      </ol>\n    </code></pre>\n\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>Does this mean that any object returned by the shared lib might be unaligned?</p>\n<p>Dereferencing unaligned pointers is treated as undefined behaviour in most languages, and is usually tied with a performance hit too. While there are workarounds (like silencing the warning, or handling the unaligned addresses to re-align them) it would be nice to not have to add additional manual memory management when interacting with the core client.</p>\n<p>Is this a known issue?</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 6,
        "updated_at": "2023-04-29T14:29:54.101Z",
        "reply_count": 3,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 37,
        "reads": 27,
        "readers_count": 26,
        "score": 205.4,
        "yours": false,
        "topic_id": 3938,
        "topic_slug": "unaligned-pointers-in-the-core-client-library",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/apple/foundationdb/blob/5e8feac8c980fbef6b6f523360e42d28dd120e5d/flow/Arena.cpp#L28-L31",
            "internal": false,
            "reflection": false,
            "title": "foundationdb/Arena.cpp at 5e8feac8c980fbef6b6f523360e42d28dd120e5d \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 3
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 1249,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/unaligned-pointers-in-the-core-client-library/3938/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 12792,
        "name": "Andrew Noyes",
        "username": "atn34",
        "avatar_template": "/user_avatar/forums.foundationdb.org/atn34/{size}/617_2.png",
        "created_at": "2023-05-01T21:18:14.762Z",
        "cooked": "<p>Hi! Welcome.</p>\n<p>I agree with all points. Unfortunately, misaligned pointers is currently required by the existing ABI, since the the <code>FDBKeyValue</code> type is declared within a pragma pack as follows. There\u2019s no way to respect the pragma pack and align both pointers to 8 bytes.</p>\n<pre><code class=\"lang-auto\">#pragma pack(push, 4)\n...\ntypedef struct keyvalue {\n\tconst uint8_t* key;\n\tint key_length;\n\tconst uint8_t* value;\n\tint value_length;\n} FDBKeyValue;\n...\n#pragma pack(pop)\n</code></pre>\n<p>That said, we do technically have a mechanism for changing the ABI (in new header versions) without impacting existing users in theory.</p>\n<aside class=\"quote no-group quote-modified\" data-username=\"behos\" data-post=\"1\" data-topic=\"3938\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/behos/48/1576_2.png\" class=\"avatar\"> behos:</div>\n<blockquote>\n<p><a href=\"https://github.com/apple/foundationdb/blob/5e8feac8c980fbef6b6f523360e42d28dd120e5d/flow/Arena.cpp#L28-L31\">https://github.com/apple/foundationdb/blob/5e8feac8c980fbef6b6f523360e42d28dd120e5d/flow/Arena.cpp#L28-L31</a></p>\n</blockquote>\n</aside>\n<p>This is actually referring to a much deeper internal problem, but one that\u2019s mostly an implementation detail and shouldn\u2019t affect the shared lib ABI. There are misaligned accesses happening in the shared lib internally, but rust\u2019s instrumentation presumably won\u2019t be able to see that.</p>\n<p>There\u2019s an issue tracking aligning memory properly, but it doesn\u2019t have any momentum right now it seems: <a href=\"https://github.com/apple/foundationdb/issues/1434\" class=\"inline-onebox\">Undefined behaviour analyzer : Member access within misaligned address \u00b7 Issue #1434 \u00b7 apple/foundationdb \u00b7 GitHub</a></p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 6,
        "updated_at": "2023-05-01T21:18:14.762Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 1,
        "incoming_link_count": 3,
        "reads": 26,
        "readers_count": 25,
        "score": 35.2,
        "yours": false,
        "topic_id": 3938,
        "topic_slug": "unaligned-pointers-in-the-core-client-library",
        "display_username": "Andrew Noyes",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/apple/foundationdb/issues/1434",
            "internal": false,
            "reflection": false,
            "title": "Undefined behaviour analyzer : Member access within misaligned address \u00b7 Issue #1434 \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 7
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 569,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/unaligned-pointers-in-the-core-client-library/3938/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 12818,
        "name": "",
        "username": "behos",
        "avatar_template": "/user_avatar/forums.foundationdb.org/behos/{size}/1576_2.png",
        "created_at": "2023-05-06T03:26:37.640Z",
        "cooked": "<p>Thanks for the quick response <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n<p>I think the issue I\u2019m seeing is not related to the packed struct pointer addresses.</p>\n<p>One of the calls that\u2019s affected by this is <code>fdb_transaction_get_range</code> which results in a <code>Future&lt;[keyvalue]&gt;</code>.</p>\n<aside class=\"onebox githubblob\" data-onebox-src=\"https://github.com/apple/foundationdb/blob/65ed7775fd5777a95547239b22c91e1800f9cdf3/bindings/c/fdb_c.cpp#L1053-L1060\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/apple/foundationdb/blob/65ed7775fd5777a95547239b22c91e1800f9cdf3/bindings/c/fdb_c.cpp#L1053-L1060\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <h4><a href=\"https://github.com/apple/foundationdb/blob/65ed7775fd5777a95547239b22c91e1800f9cdf3/bindings/c/fdb_c.cpp#L1053-L1060\" target=\"_blank\" rel=\"noopener nofollow ugc\">apple/foundationdb/blob/65ed7775fd5777a95547239b22c91e1800f9cdf3/bindings/c/fdb_c.cpp#L1053-L1060</a></h4>\n\n\n\n    <pre class=\"onebox\"><code class=\"lang-cpp\">\n      <ol class=\"start lines\" start=\"1053\" style=\"counter-reset: li-counter 1052 ;\">\n          <li>\t    FDBFuture*)(TXN(tr)</li>\n          <li>\t                    -&gt;getRange(</li>\n          <li>\t                        KeySelectorRef(KeyRef(begin_key_name, begin_key_name_length), begin_or_equal, begin_offset),</li>\n          <li>\t                        KeySelectorRef(KeyRef(end_key_name, end_key_name_length), end_or_equal, end_offset),</li>\n          <li>\t                        GetRangeLimits(limit, target_bytes),</li>\n          <li>\t                        snapshot,</li>\n          <li>\t                        reverse)</li>\n          <li>\t                    .extractPtr());</li>\n      </ol>\n    </code></pre>\n\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>This should eventually resolve to a pointed pointing at an array of <code>keyvalue</code> which is <code>pack(4)</code> <a href=\"https://github.com/apple/foundationdb/blob/65ed7775fd5777a95547239b22c91e1800f9cdf3/bindings/c/foundationdb/fdb_c.h#L110-L115\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">foundationdb/fdb_c.h at 65ed7775fd5777a95547239b22c91e1800f9cdf3 \u00b7 apple/foundationdb \u00b7 GitHub</a>. The expected alignment should be 4.</p>\n<p>The resulting pointer has address <code>0x7f034cefb0a8</code> and the address it points to is <code>0x7f034cc916c6</code>. When converting this to a rust pointer and dereferencing, the complaint is that the address that it points to is not a multiple of 4. Indeed the referenced address is simply a multiple of 2. The address of the pointer itself is aligned.</p>\n<p>The complaint from the alignment checker is</p>\n<pre><code class=\"lang-auto\">misaligned pointer dereference: address must be a multiple of 0x4 but is 0x7f034cc916c6'\n</code></pre>\n<p>Which is also referring to the pointed address.</p>\n<p>Digging in the FoundationDB side of things, it looks like the referenced address is directly pointing to a <code>Standalone&lt;&gt;</code>, which if I understand correctly is allocated through the Arena and could be at any point in memory.</p>\n<p>The \u201cfix\u201d involves reallocating the memory needed for the resulting array, and copying it over, so that makes me think that the packing itself is not a problem because it\u2019s not the pointers\u2019 addresses that are checked here, but the memory that they point to instead.</p>\n<p>What do you think? Could this point to the arena allocations leaking to the ABI?</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 6,
        "updated_at": "2023-05-06T03:26:37.640Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 23,
        "readers_count": 22,
        "score": 14.6,
        "yours": false,
        "topic_id": 3938,
        "topic_slug": "unaligned-pointers-in-the-core-client-library",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/apple/foundationdb/blob/65ed7775fd5777a95547239b22c91e1800f9cdf3/bindings/c/foundationdb/fdb_c.h#L110-L115",
            "internal": false,
            "reflection": false,
            "title": "foundationdb/fdb_c.h at 65ed7775fd5777a95547239b22c91e1800f9cdf3 \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 2
          },
          {
            "url": "https://github.com/apple/foundationdb/blob/65ed7775fd5777a95547239b22c91e1800f9cdf3/bindings/c/fdb_c.cpp#L1053-L1060",
            "internal": false,
            "reflection": false,
            "title": "foundationdb/fdb_c.cpp at 65ed7775fd5777a95547239b22c91e1800f9cdf3 \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 1249,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/unaligned-pointers-in-the-core-client-library/3938/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 12824,
        "name": "Andrew Noyes",
        "username": "atn34",
        "avatar_template": "/user_avatar/forums.foundationdb.org/atn34/{size}/617_2.png",
        "created_at": "2023-05-08T20:49:26.306Z",
        "cooked": "<p>Thanks for digging. I think you\u2019re right.</p>\n<aside class=\"quote no-group\" data-username=\"behos\" data-post=\"1\" data-topic=\"3938\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/behos/48/1576_2.png\" class=\"avatar\"> behos:</div>\n<blockquote>\n<p>Does this mean that any object returned by the shared lib might be unaligned?</p>\n</blockquote>\n</aside>\n<p>I think this is the case after all</p>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 6,
        "updated_at": "2023-05-08T20:49:26.306Z",
        "reply_count": 2,
        "reply_to_post_number": 3,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 22,
        "readers_count": 21,
        "score": 29.4,
        "yours": false,
        "topic_id": 3938,
        "topic_slug": "unaligned-pointers-in-the-core-client-library",
        "display_username": "Andrew Noyes",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 1249,
          "username": "behos",
          "name": "",
          "avatar_template": "/user_avatar/forums.foundationdb.org/behos/{size}/1576_2.png"
        },
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 569,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/unaligned-pointers-in-the-core-client-library/3938/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 12927,
        "name": "",
        "username": "behos",
        "avatar_template": "/user_avatar/forums.foundationdb.org/behos/{size}/1576_2.png",
        "created_at": "2023-06-09T12:51:46.218Z",
        "cooked": "<p>Quick update here, in case anyone bumps into this in the future. For Rust to understand that the API structs are misaligned, when using rust you need to make sure that you are exposing the <code>packed</code> structs, and not wrapping them in a <code>transparent</code>.</p>\n<aside class=\"onebox githubpullrequest\" data-onebox-src=\"https://github.com/foundationdb-rs/foundationdb-rs/pull/95\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/foundationdb-rs/foundationdb-rs/pull/95\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com/foundationdb-rs/foundationdb-rs</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"github-row\">\n\n\n\n    <div class=\"github-icon-container\" title=\"Pull Request\">\n      <svg width=\"60\" height=\"60\" class=\"github-icon\" viewbox=\"0 0 12 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z\"></path></svg>\n    </div>\n\n  <div class=\"github-info-container\">\n\n\n\n      <h4>\n        <a href=\"https://github.com/foundationdb-rs/foundationdb-rs/pull/95\" target=\"_blank\" rel=\"noopener nofollow ugc\">Fix alignment</a>\n      </h4>\n\n    <div class=\"branches\">\n      <code>foundationdb-rs:main</code> \u2190 <code>Wonshtrum:fix_align</code>\n    </div>\n\n      <div class=\"github-info\">\n        <div class=\"date\">\n          opened <span class=\"discourse-local-date\" data-format=\"ll\" data-date=\"2023-05-31\" data-time=\"11:23:49\" data-timezone=\"UTC\">11:23AM - 31 May 23 UTC</span>\n        </div>\n\n        <div class=\"user\">\n          <a href=\"https://github.com/Wonshtrum\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <img alt=\"Wonshtrum\" src=\"https://global.discourse-cdn.com/foundationdb/original/2X/e/e079f025048b4316dc8af752cd3364fd6f3d0b05.png\" class=\"onebox-avatar-inline\" width=\"20\" height=\"20\" data-dominant-color=\"457275\">\n            Wonshtrum\n          </a>\n        </div>\n\n        <div class=\"lines\" title=\"3 commits changed 16 files with 97 additions and 63 deletions\">\n          <a href=\"https://github.com/foundationdb-rs/foundationdb-rs/pull/95/files\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <span class=\"added\">+97</span>\n            <span class=\"removed\">-63</span>\n          </a>\n        </div>\n      </div>\n  </div>\n</div>\n\n  <div class=\"github-row\">\n    <p class=\"github-body-container\">Fdb Arenas allocate structs not aligned, even though `fdb_c.h` explicitly specif<span class=\"show-more-container\"><a href=\"https://github.com/foundationdb-rs/foundationdb-rs/pull/95\" target=\"_blank\" rel=\"noopener nofollow ugc\" class=\"show-more\">\u2026</a></span><span class=\"excerpt hidden\">ies a 4bytes alignment for most of them (the others using their default alignment, 8bytes in general):\nhttps://github.com/foundationdb-rs/foundationdb-rs/blob/e8463554a2cc5f582842bf6b27aef0db57f00456/foundationdb-sys/include/710/fdb_c.h#L88-L92\n\nThese alignment constraints are translated in Rust in bindings.rs by bindgen and exported by `foundationdb_sys`:\nhttps://github.com/foundationdb-rs/foundationdb-rs/blob/e8463554a2cc5f582842bf6b27aef0db57f00456/foundationdb-sys/build.rs#L114-L115\n\n```rs\n#[repr(C, packed(4))]\n#[derive(Debug, Copy, Clone)]\npub struct key {\n    pub key: *const u8,\n    pub key_length: ::std::os::raw::c_int,\n}\npub type FDBKey = key;\n```\n\nAnd inherited by their \"local wrappers\":\nhttps://github.com/foundationdb-rs/foundationdb-rs/blob/e8463554a2cc5f582842bf6b27aef0db57f00456/foundationdb/src/fdb_keys.rs#L156-L158\n\nData is transferred between the fdbserver and foundationdb-rs via pointers which lead to this kind of code:\nhttps://github.com/foundationdb-rs/foundationdb-rs/blob/e8463554a2cc5f582842bf6b27aef0db57f00456/foundationdb/src/fdb_keys.rs#L42-L49\n\n`self.keys` is a C pointer that points to a `FDBKey` potentially misaligned in a Fdb Arena. In the newer versions of Rust `from_raw_parts` panics with debug_assertions on pointer misalignment. Even if we ignore this, the fact that misaligned structs are currently read correctly is probably due to x86 compliance but is still undefined behavior.\n\nIn this PR, \"local wrappers\" are annotated with `packed` instead of `transparent`:\nhttps://github.com/Wonshtrum/foundationdb-rs/blob/c6b198ddef85ca77bab40ea11cda1c08c9d09e35/foundationdb/src/fdb_keys.rs#L157-L159\n\nThis explicitly tells Rust that we do not expect these structs to be aligned. This removes the panics on newer versions as these structs are 1byte align (which a pointer will always be) and furthermore, we do not have to rely on x86 to magically accept unaligned structs as misalignment will be explicitly taken care of at machine code generation.\n\nThese wrappers are used everywhere in favor of their raw counterparts from `fdb_sys`, and `deref` functions are rewritten using this form:\nhttps://github.com/Wonshtrum/foundationdb-rs/blob/c6b198ddef85ca77bab40ea11cda1c08c9d09e35/foundationdb/src/fdb_keys.rs#L46-L50\n\n&gt; note also the `assert_eq_align!(FdbKey, u8);`</span></p>\n  </div>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n",
        "post_number": 5,
        "post_type": 1,
        "posts_count": 6,
        "updated_at": "2023-06-09T12:51:59.270Z",
        "reply_count": 0,
        "reply_to_post_number": 4,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 18,
        "readers_count": 17,
        "score": 8.6,
        "yours": false,
        "topic_id": 3938,
        "topic_slug": "unaligned-pointers-in-the-core-client-library",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/foundationdb-rs/foundationdb-rs/pull/95",
            "internal": false,
            "reflection": false,
            "title": "Fix alignment by Wonshtrum \u00b7 Pull Request #95 \u00b7 foundationdb-rs/foundationdb-rs \u00b7 GitHub",
            "clicks": 7
          }
        ],
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 569,
          "username": "atn34",
          "name": "Andrew Noyes",
          "avatar_template": "/user_avatar/forums.foundationdb.org/atn34/{size}/617_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 1249,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/unaligned-pointers-in-the-core-client-library/3938/5",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 12934,
        "name": "Rajiv M Ranganath",
        "username": "rajivr",
        "avatar_template": "/user_avatar/forums.foundationdb.org/rajivr/{size}/1100_2.png",
        "created_at": "2023-06-12T13:18:55.237Z",
        "cooked": "<aside class=\"quote no-group quote-modified\" data-username=\"atn34\" data-post=\"4\" data-topic=\"3938\" data-full=\"true\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/atn34/48/617_2.png\" class=\"avatar\"> atn34:</div>\n<blockquote>\n<p>Thanks for digging. I think you\u2019re right.</p>\n<aside class=\"quote no-group\" data-username=\"behos\" data-post=\"1\" data-topic=\"3938\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/behos/48/1576_2.png\" class=\"avatar\"> behos:</div>\n<blockquote>\n<p>Does this mean that any object returned by the shared lib might be unaligned?</p>\n</blockquote>\n</aside>\n<p>I think this is the case after all</p>\n</blockquote>\n</aside>\n<p>Thanks <a class=\"mention\" href=\"/u/behos\">@behos</a> for digging into this issue and <a class=\"mention\" href=\"/u/atn34\">@atn34</a> for confirming. I just ran into this issue with my binding, and in my case decided to use <a href=\"https://github.com/rajivr/fdb-wip/blob/6fd4c2a006c47e802c14b41baf38ad41ca4e59a5/fdb/src/future.rs#L435-L451\" rel=\"noopener nofollow ugc\"><code>ptr::read_unaligned</code></a> instead of regular Rust dereference.</p>",
        "post_number": 6,
        "post_type": 1,
        "posts_count": 6,
        "updated_at": "2023-06-12T13:18:55.237Z",
        "reply_count": 0,
        "reply_to_post_number": 4,
        "quote_count": 2,
        "incoming_link_count": 0,
        "reads": 16,
        "readers_count": 15,
        "score": 3.2,
        "yours": false,
        "topic_id": 3938,
        "topic_slug": "unaligned-pointers-in-the-core-client-library",
        "display_username": "Rajiv M Ranganath",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/rajivr/fdb-wip/blob/6fd4c2a006c47e802c14b41baf38ad41ca4e59a5/fdb/src/future.rs#L435-L451",
            "internal": false,
            "reflection": false,
            "title": "fdb-wip/future.rs at 6fd4c2a006c47e802c14b41baf38ad41ca4e59a5 \u00b7 rajivr/fdb-wip \u00b7 GitHub",
            "clicks": 1
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 946,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/unaligned-pointers-in-the-core-client-library/3938/6",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      12791,
      12792,
      12818,
      12824,
      12927,
      12934
    ]
  },
  "timeline_lookup": [
    [
      1,
      906
    ],
    [
      2,
      904
    ],
    [
      3,
      900
    ],
    [
      4,
      897
    ],
    [
      5,
      865
    ],
    [
      6,
      862
    ]
  ],
  "suggested_topics": [],
  "tags": [
    "bindings"
  ],
  "tags_descriptions": {},
  "fancy_title": "Unaligned pointers in the core client library",
  "id": 3938,
  "title": "Unaligned pointers in the core client library",
  "posts_count": 6,
  "created_at": "2023-04-29T14:29:54.027Z",
  "views": 477,
  "reply_count": 3,
  "like_count": 2,
  "last_posted_at": "2023-06-12T13:18:55.237Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "unaligned-pointers-in-the-core-client-library",
  "category_id": 8,
  "word_count": 785,
  "deleted_at": null,
  "user_id": 1249,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_3938",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 6,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 3,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "Golang misaligned pointer conversion",
      "id": 2474,
      "title": "Golang misaligned pointer conversion",
      "slug": "golang-misaligned-pointer-conversion",
      "posts_count": 1,
      "reply_count": 0,
      "highest_post_number": 1,
      "image_url": null,
      "created_at": "2020-12-08T16:57:21.407Z",
      "last_posted_at": "2020-12-08T16:57:21.495Z",
      "bumped": true,
      "bumped_at": "2020-12-08T17:00:08.182Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [
        "bindings"
      ],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 903,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest single",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 861,
            "username": "drewrichardson",
            "name": "",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/d/e79b87/{size}.png",
            "trust_level": 0
          }
        }
      ]
    },
    {
      "fancy_title": "Rust Client API 0.2.0",
      "id": 386,
      "title": "Rust Client API 0.2.0",
      "slug": "rust-client-api-0-2-0",
      "posts_count": 7,
      "reply_count": 4,
      "highest_post_number": 7,
      "image_url": null,
      "created_at": "2018-05-09T13:57:29.898Z",
      "last_posted_at": "2018-07-11T18:44:03.478Z",
      "bumped": true,
      "bumped_at": "2018-07-11T18:44:03.478Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [
        "bindings"
      ],
      "tags_descriptions": {},
      "like_count": 3,
      "views": 1358,
      "category_id": 5,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 226,
            "username": "bluejekyll",
            "name": "Benjamin Fry",
            "avatar_template": "/user_avatar/forums.foundationdb.org/bluejekyll/{size}/195_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 41,
            "username": "amirouche",
            "name": "Amirouche",
            "avatar_template": "/user_avatar/forums.foundationdb.org/amirouche/{size}/1911_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Client side buggify - internal error?",
      "id": 1824,
      "title": "Client side buggify - internal error?",
      "slug": "client-side-buggify-internal-error",
      "posts_count": 8,
      "reply_count": 5,
      "highest_post_number": 8,
      "image_url": null,
      "created_at": "2019-12-07T15:00:26.771Z",
      "last_posted_at": "2019-12-10T19:48:18.000Z",
      "bumped": true,
      "bumped_at": "2019-12-10T19:48:18.000Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 5,
      "views": 744,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 14,
            "username": "andrew.noyes",
            "name": "",
            "avatar_template": "/user_avatar/forums.foundationdb.org/andrew.noyes/{size}/443_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 15,
            "username": "markus.pilman",
            "name": "Markus Pilman",
            "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Building FoundationDB C API static Library for Rust Programing language",
      "id": 2006,
      "title": "Building FoundationDB C API static Library for Rust Programing language",
      "slug": "building-foundationdb-c-api-static-library-for-rust-programing-language",
      "posts_count": 8,
      "reply_count": 6,
      "highest_post_number": 9,
      "image_url": null,
      "created_at": "2020-03-09T09:04:47.529Z",
      "last_posted_at": "2020-03-10T06:44:18.836Z",
      "bumped": true,
      "bumped_at": "2020-03-10T06:44:18.836Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 1285,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 739,
            "username": "nguyenduybinh",
            "name": "Nguyen Duy Binh",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/n/5f9b8f/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 15,
            "username": "markus.pilman",
            "name": "Markus Pilman",
            "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 120,
            "username": "josephg",
            "name": "Seph Gentle",
            "avatar_template": "/user_avatar/forums.foundationdb.org/josephg/{size}/84_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Continuous out-of-memory crashes in small cluster with modest read-only workload",
      "id": 864,
      "title": "Continuous out-of-memory crashes in small cluster with modest read-only workload",
      "slug": "continuous-out-of-memory-crashes-in-small-cluster-with-modest-read-only-workload",
      "posts_count": 10,
      "reply_count": 6,
      "highest_post_number": 10,
      "image_url": null,
      "created_at": "2018-11-12T18:15:45.539Z",
      "last_posted_at": "2018-11-13T22:03:20.420Z",
      "bumped": true,
      "bumped_at": "2018-11-13T22:03:20.420Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 1256,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 424,
            "username": "jwb",
            "name": "Jeff Baker",
            "avatar_template": "/user_avatar/forums.foundationdb.org/jwb/{size}/413_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 22,
            "username": "dave",
            "name": "David Scherer",
            "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
            "trust_level": 1
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 1249,
        "username": "behos",
        "name": "",
        "avatar_template": "/user_avatar/forums.foundationdb.org/behos/{size}/1576_2.png",
        "post_count": 3,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 569,
        "username": "atn34",
        "name": "Andrew Noyes",
        "avatar_template": "/user_avatar/forums.foundationdb.org/atn34/{size}/617_2.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      },
      {
        "id": 946,
        "username": "rajivr",
        "name": "Rajiv M Ranganath",
        "avatar_template": "/user_avatar/forums.foundationdb.org/rajivr/{size}/1100_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      }
    ],
    "created_by": {
      "id": 1249,
      "username": "behos",
      "name": "",
      "avatar_template": "/user_avatar/forums.foundationdb.org/behos/{size}/1576_2.png"
    },
    "last_poster": {
      "id": 946,
      "username": "rajivr",
      "name": "Rajiv M Ranganath",
      "avatar_template": "/user_avatar/forums.foundationdb.org/rajivr/{size}/1100_2.png"
    },
    "links": [
      {
        "url": "https://github.com/apple/foundationdb/issues/1434",
        "title": "Undefined behaviour analyzer : Member access within misaligned address \u00b7 Issue #1434 \u00b7 apple/foundationdb \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 7,
        "user_id": 569,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://github.com/foundationdb-rs/foundationdb-rs/pull/95",
        "title": "Fix alignment by Wonshtrum \u00b7 Pull Request #95 \u00b7 foundationdb-rs/foundationdb-rs \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 7,
        "user_id": 1249,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://github.com/apple/foundationdb/blob/5e8feac8c980fbef6b6f523360e42d28dd120e5d/flow/Arena.cpp#L28-L31",
        "title": "foundationdb/Arena.cpp at 5e8feac8c980fbef6b6f523360e42d28dd120e5d \u00b7 apple/foundationdb \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 3,
        "user_id": 1249,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://github.com/apple/foundationdb/blob/65ed7775fd5777a95547239b22c91e1800f9cdf3/bindings/c/foundationdb/fdb_c.h#L110-L115",
        "title": "foundationdb/fdb_c.h at 65ed7775fd5777a95547239b22c91e1800f9cdf3 \u00b7 apple/foundationdb \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 2,
        "user_id": 1249,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://github.com/rajivr/fdb-wip/blob/6fd4c2a006c47e802c14b41baf38ad41ca4e59a5/fdb/src/future.rs#L435-L451",
        "title": "fdb-wip/future.rs at 6fd4c2a006c47e802c14b41baf38ad41ca4e59a5 \u00b7 rajivr/fdb-wip \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 1,
        "user_id": 946,
        "domain": "github.com",
        "root_domain": "github.com"
      }
    ]
  },
  "bookmarks": []
}