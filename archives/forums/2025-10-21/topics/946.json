{
  "post_stream": {
    "posts": [
      {
        "id": 2836,
        "name": "Sebastian Weyrauch",
        "username": "sfw",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/ad7895/{size}.png",
        "created_at": "2018-12-10T11:32:27.677Z",
        "cooked": "<p>Hi, is there some high level design overview for the Document Layer?</p>\n<p>I\u2019m looking for inspiration for a multi model data store and I\u2019d be interested especially in document to KV data mapping, internal key management, meta data handling, evasion of max transaction size for bigger documents (Mongo limit is 16MB), indexing patterns\u2026</p>\n<p>Of course I already browsed the source, but I\u2019m a Java guy and comprehending C++ code is nothing I can do on the fly.</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 7,
        "updated_at": "2018-12-10T11:51:28.689Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 241,
        "reads": 89,
        "readers_count": 88,
        "score": 1227.8,
        "yours": false,
        "topic_id": 946,
        "topic_slug": "looking-for-layer-design-documentation",
        "display_username": "Sebastian Weyrauch",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 287,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/looking-for-layer-design-documentation/946/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 2854,
        "name": "Bhaskar Muppana",
        "username": "mbhaskar",
        "avatar_template": "/user_avatar/forums.foundationdb.org/mbhaskar/{size}/277_2.png",
        "created_at": "2018-12-12T06:29:47.659Z",
        "cooked": "<p>Sadly, there are no design docs, yet. I will try to answer your questions here in multiple posts.</p>\n<p><strong>Internal Key Management</strong></p>\n<p>Document Layer stores each field of JSON document as a separate FDB key. So, a single document would be stored under multiple FDB keys. Mapping a JSON field to FDB key should be deterministic and maintain the primary key order.</p>\n<p>In Mongo, <code>_id</code> is a mandatory field and acts as the primary key. It should be possible to get any document for a given <code>_id</code> and perform range scans on it. Precisely, for this reason, the Document Layer keeps the value of <code>_id</code> as part of the FDB key.</p>\n<p>FDB key for a JSON field is formed as</p>\n<pre><code class=\"lang-nohighlight\">&lt;collection directory prefix&gt; : &lt;primary key&gt; : &lt;field name&gt;\n</code></pre>\n<p>This can be best explained with an example. Let\u2019s assume we have a collection called <code>employees</code> and a sample document from that collection is as follows</p>\n<pre><code class=\"lang-json\">{\n   _id    :     1,\n   name   :     \"Eric\",\n   title  :     \"Engineer\",\n   salary :     10000\n}\n</code></pre>\n<p>For this example, the Document Layer stores FDB keys as follows</p>\n<pre><code class=\"lang-nohighlight\">0x150b:1:name -&gt; Eric\n0x150b:1:title -&gt; Engineer\n0x150b:1:salary -&gt; 10000\n</code></pre>\n<p><code>0x150b</code> is the <a href=\"https://apple.github.io/foundationdb/javadoc/com/apple/foundationdb/directory/DirectoryLayer.html\" rel=\"nofollow noopener\">directory</a> prefix for <code>employees</code> collection. The Document Layer creates a separate directory prefix for each collection. <code>1</code> is the value of <code>_id</code> for this document. To read all the documents in the collection, Document Layer issues <code>getRange(0x150b)</code> on FDB. And, if the Document Layer needs to read a document with <code>_id</code> as 5, it issues <code>getRange(0x150b:5)</code>. To access just one field, it sends a point get.</p>\n<p>You can imagine an alternative design where the entire document is stored under a single FDB key.  This way we can reduce the number of keys to read for a document. Also reduces the key duplication as every field has to store the entire key again. There are three reasons why this may not be a good fit for the Document Layer.</p>\n<ul>\n<li>Size of the document would be limited to FDB value size (100KB). You can make the scheme bit dynamic by storing the entire document in a key if the document is small and fall back to key per field approach if the document is larger than 100KB.</li>\n<li>Any change to a single field needs to rewrite the entire document.</li>\n<li>With the document data model, it is very common to have embedded documents and arrays, which makes very complicated <a href=\"https://docs.mongodb.com/manual/core/document/#dot-notation\" rel=\"nofollow noopener\">dot notation</a>. With the key per field scheme (the scheme we are using now), the FDB key is deterministic and it can be easily implemented from Query planner. That becomes very complicated with key per document scheme.</li>\n</ul>\n<p>In the future, we are considering have a per collection configuration to set key scheme. That way, collections with small documents can benefit with key per document scheme. Once we support schema collections, this becomes an even more interesting feature.</p>\n<p>I will try to send another post about the key format for secondary indices, tomorrow.</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 7,
        "updated_at": "2018-12-12T06:29:47.659Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 14,
        "reads": 83,
        "readers_count": 82,
        "score": 91.6,
        "yours": false,
        "topic_id": 946,
        "topic_slug": "looking-for-layer-design-documentation",
        "display_username": "Bhaskar Muppana",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://docs.mongodb.com/manual/core/document/#dot-notation",
            "internal": false,
            "reflection": false,
            "title": "Documents \u2014 MongoDB Manual",
            "clicks": 5
          },
          {
            "url": "https://apple.github.io/foundationdb/javadoc/com/apple/foundationdb/directory/DirectoryLayer.html",
            "internal": false,
            "reflection": false,
            "title": "DirectoryLayer (FoundationDB Java Client API)",
            "clicks": 1
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 9,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/looking-for-layer-design-documentation/946/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 2856,
        "name": "Sebastian Weyrauch",
        "username": "sfw",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/ad7895/{size}.png",
        "created_at": "2018-12-12T10:48:42.474Z",
        "cooked": "<p>Concerning mapping this is the obvious first solution but it leaves some shortcomings</p>\n<ul>\n<li>document order is not maintained - fine with JSON but not with f.e. XML</li>\n<li>duplicate names won\u2019t work - this is discouraged but still not illegal JSON use</li>\n<li>beside the 10MB transcaction (= document?) size limit it imposes a 100KB limit per value</li>\n</ul>\n<p>Thanks anyway! Looking forward to coming posts\u2026</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 7,
        "updated_at": "2018-12-12T10:48:42.474Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 70,
        "readers_count": 69,
        "score": 24.0,
        "yours": false,
        "topic_id": 946,
        "topic_slug": "looking-for-layer-design-documentation",
        "display_username": "Sebastian Weyrauch",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 287,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/looking-for-layer-design-documentation/946/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 2861,
        "name": "Bhaskar Muppana",
        "username": "mbhaskar",
        "avatar_template": "/user_avatar/forums.foundationdb.org/mbhaskar/{size}/277_2.png",
        "created_at": "2018-12-12T18:44:34.273Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"sfw\" data-post=\"3\" data-topic=\"946\" data-full=\"true\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/s/ad7895/48.png\" class=\"avatar\"> sfw:</div>\n<blockquote>\n<p>Concerning mapping this is the obvious first solution but it leaves some shortcomings</p>\n<ul>\n<li>document order is not maintained - fine with JSON but not with f.e. XML</li>\n</ul>\n</blockquote>\n</aside>\n<p>I assume you are talking about the order of fields within a document. Order of documents within a collection is maintained by their primary key. Insertion order of fields within a document is not maintained. Fields are ordered lexicographically. Document Layer is designed specifically to store JSON documents only. XML was never a goal.</p>\n<aside class=\"quote no-group\" data-username=\"sfw\" data-post=\"3\" data-topic=\"946\" data-full=\"true\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/s/ad7895/48.png\" class=\"avatar\"> sfw:</div>\n<blockquote>\n<ul>\n<li>duplicate names won\u2019t work - this is discouraged but still not illegal JSON use</li>\n</ul>\n</blockquote>\n</aside>\n<p>Yeah, the Document Layer doesn\u2019t allow duplicate field names. Not sure, if that\u2019s a desired feature. How would updates actually work with duplicate field names? Isn\u2019t it better to use Arrays? I believe MongoDB doesn\u2019t support duplicate fields as well.</p>\n<aside class=\"quote no-group\" data-username=\"sfw\" data-post=\"3\" data-topic=\"946\" data-full=\"true\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/s/ad7895/48.png\" class=\"avatar\"> sfw:</div>\n<blockquote>\n<ul>\n<li>beside the 10MB transcaction (= document?) size limit it imposes a 100KB limit per value</li>\n</ul>\n</blockquote>\n</aside>\n<p>This is one of the limitations we want to fix soon. Here is the <a href=\"https://github.com/FoundationDB/fdb-document-layer/issues/14\">issue</a> on it.</p>\n<aside class=\"quote no-group\" data-username=\"sfw\" data-post=\"3\" data-topic=\"946\" data-full=\"true\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/s/ad7895/48.png\" class=\"avatar\"> sfw:</div>\n<blockquote>\n<p>Thanks anyway! Looking forward to coming posts\u2026</p>\n</blockquote>\n</aside>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 7,
        "updated_at": "2018-12-12T18:44:34.273Z",
        "reply_count": 0,
        "reply_to_post_number": 3,
        "quote_count": 1,
        "incoming_link_count": 7,
        "reads": 68,
        "readers_count": 67,
        "score": 48.6,
        "yours": false,
        "topic_id": 946,
        "topic_slug": "looking-for-layer-design-documentation",
        "display_username": "Bhaskar Muppana",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/FoundationDB/fdb-document-layer/issues/14",
            "internal": false,
            "reflection": false,
            "title": "Allow values to be larger than 100K \u00b7 Issue #14 \u00b7 FoundationDB/fdb-document-layer \u00b7 GitHub",
            "clicks": 24
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 9,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/looking-for-layer-design-documentation/946/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 2873,
        "name": "Bhaskar Muppana",
        "username": "mbhaskar",
        "avatar_template": "/user_avatar/forums.foundationdb.org/mbhaskar/{size}/277_2.png",
        "created_at": "2018-12-13T21:44:36.886Z",
        "cooked": "<p><strong>Secondary indices</strong></p>\n<p>Based on primary index key mapping it is easy to guess the key mapping for secondary indices.</p>\n<pre><code class=\"lang-nohighlight\">&lt;index prefix&gt; : &lt;index key&gt; : &lt;primary key&gt;\n</code></pre>\n<p>For the sample JSON document, we have in the previous post, if there is a secondary index on the field <code>name</code> - index entry would look like</p>\n<pre><code class=\"lang-auto\">0x15ab:name_1:Eric:1  -&gt;  null\n</code></pre>\n<p>Document Layer keeps the primary key in the FDB key to deal with duplicate index keys. Document Layer doesn\u2019t store anything in the value for indices. So, a query that\u2019s using secondary indices needs to dereference the document using the primary key found in the index entry. This can be optimized by providing covered indices, which store either entire or part of the document as a value in the index entry. We don\u2019t have covered indices yet.</p>\n<p><strong>Size Limitations</strong></p>\n<p>As you mentioned, transaction size limits the size of the document as we try to insert the complete document in a single transaction. Even though transaction size can be as big as 10MB, I think it\u2019s better to limit the document size to 1MB to be safe. This could be a limitation for some use cases for sure, hope is majority use cases would have smaller documents and large objects would keep the data in some kind of blob store.</p>\n<p><strong>Note</strong>: It is always possible to work around these limitations by splitting the insert of a document into insert and update. But, that may not be a desirable solution for applications.</p>\n<p><strong>FDB Transactions</strong></p>\n<p>Every request on the Document Layer uses one or more FDB transactions to read/update state in FDB keyspace. Running entire request under a single transaction gives us better isolation guarantees. But this may not be possible based on the kind of request, considering FDB transactions have 5-second limitation.</p>\n<p>Document Layer enforces certain operations to run in a single transaction. Metadata updates and inserts fall into those categories. If it can\u2019t finish in a single transaction it sends an error back to the application. Queries with predicates work differently. As a predicate can match the entire collection, if the operation takes too long then it will divide the work into multiple transactions.</p>\n<p><strong>Metadata management</strong></p>\n<p>Collection metadata is maintained as FDB keys. A metadata version is maintained for each collection. It gets updated every time there is a change to metadata like new index created. Document Layer caches metadata. Metadata version is used to invalidate cached metadata. Every operation on the collection would first read metadata version to make sure it is same as the cached data. If it is not the same then it will get the latest metadata. This is a very simple approach. Even though it avoids reading metadata, again and again, every operation has to read metadata version. This will make version key hot. There are multiple optimizations we can apply to reduce the hotness also to avoid the latency hit. I will raise issues on them soon with details.</p>\n<p>Hopefully, I answered all your questions. This project is just getting started. It can use a lot of optimizations. And of course, features. We are happy to discuss any ideas you might have. PRs are always welcome <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=6\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\">.</p>",
        "post_number": 5,
        "post_type": 1,
        "posts_count": 7,
        "updated_at": "2018-12-13T21:44:36.886Z",
        "reply_count": 0,
        "reply_to_post_number": 2,
        "quote_count": 0,
        "incoming_link_count": 4,
        "reads": 70,
        "readers_count": 69,
        "score": 34.0,
        "yours": false,
        "topic_id": 946,
        "topic_slug": "looking-for-layer-design-documentation",
        "display_username": "Bhaskar Muppana",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 9,
          "username": "mbhaskar",
          "name": "Bhaskar Muppana",
          "avatar_template": "/user_avatar/forums.foundationdb.org/mbhaskar/{size}/277_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 9,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/looking-for-layer-design-documentation/946/5",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 2928,
        "name": "Amirouche",
        "username": "amirouche",
        "avatar_template": "/user_avatar/forums.foundationdb.org/amirouche/{size}/1911_2.png",
        "created_at": "2018-12-28T21:53:07.795Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"sfw\" data-post=\"1\" data-topic=\"946\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/s/ad7895/48.png\" class=\"avatar\"> sfw:</div>\n<blockquote>\n<p>I\u2019m looking for inspiration for a multi model data store</p>\n</blockquote>\n</aside>\n<p>I am into multi-model database for sometime now it started 5 years ago when I wanted to the flexibility of graphdb with the power of lucene. Of course, it did not work out well until I discovered wiredtiger and later FDB. I am still trying to put together my ideas. Ramblings ahead.</p>\n<p>What I had in mind in the beginning is bolt together Document, Graph and KV serialized values with msgpack and  an Inverted Index for full text search like arangodb does. But it doesn\u2019t work. Mostly the issue of foreign keys (or references if you prefer) basically you can not cascade delete / update easily without putting together a facade on top of it like mongodb does ie. you have a constrained abstraction aka. the document inside collections and declare indices for each collection which are stored as collection\u2019s metadata. Indices have different behaviours aka. implement various indexing schemes and the layer takes the responsibility to cascade delete / update indices when a document changes via observers I guess.</p>\n<p>I am trying something else. Instead of a facade or an abstraction that doesn\u2019t leak. I am trying to code \u201cinsides out\u201d where a minimal understanding of actual how FDB works to be able to use (and extend) the layer(s) I am working on. Why? Because, AFAIK with a closed abstraction like the Document layer, you can not tap into the lower level FDB KV space to grab extra performance boost. For instance, the layer I am working on preserves lexicographic ordering.</p>\n<p>Mind the fact that the Document layer is still useful if you want to scale an existing mongodb project. I am in a different situation where I am coding from scratch.</p>\n<aside class=\"quote no-group\" data-username=\"sfw\" data-post=\"1\" data-topic=\"946\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/s/ad7895/48.png\" class=\"avatar\"> sfw:</div>\n<blockquote>\n<p>I\u2019d be interested especially in document to KV data mapping,</p>\n</blockquote>\n</aside>\n<p>Contrary to what you wrote, the design decision made in the Document layer is not the most obvious and actually I don\u2019t why that choice was made. My initial design was using msgpack to store the JSON documents.</p>\n<aside class=\"quote no-group\" data-username=\"sfw\" data-post=\"1\" data-topic=\"946\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/s/ad7895/48.png\" class=\"avatar\"> sfw:</div>\n<blockquote>\n<p>internal key management,</p>\n</blockquote>\n</aside>\n<p>What do you mean by \u201cinternal key\u201d?</p>\n<aside class=\"quote no-group\" data-username=\"sfw\" data-post=\"1\" data-topic=\"946\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/s/ad7895/48.png\" class=\"avatar\"> sfw:</div>\n<blockquote>\n<p>meta data handling,</p>\n</blockquote>\n</aside>\n<p>You can use a subspace to store all metadata about your layer like the <code>Directory</code> layer does. Also, FWIW, I don\u2019t use the <code>Directory</code> layer. <a href=\"https://forums.foundationdb.org/t/whats-the-purpose-of-the-directory-layer/677/2\">It seems too dangerous.</a>. Instead I use an integer from an Enum as a key prefix.</p>\n<aside class=\"quote no-group\" data-username=\"sfw\" data-post=\"1\" data-topic=\"946\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/s/ad7895/48.png\" class=\"avatar\"> sfw:</div>\n<blockquote>\n<p>evasion of max transaction size for bigger documents (Mongo limit is 16MB),</p>\n</blockquote>\n</aside>\n<p>See <a href=\"https://forums.foundationdb.org/t/object-store-on-foundationdb/387/8\" class=\"inline-onebox\">Object store on FoundationDB - #8 by bbc</a> and <a href=\"https://forums.foundationdb.org/t/missing-information-in-documentation-about-how-to-store-blobs/749\" class=\"inline-onebox\">Missing information in documentation about how to store blobs</a></p>\n<aside class=\"quote no-group\" data-username=\"sfw\" data-post=\"1\" data-topic=\"946\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/s/ad7895/48.png\" class=\"avatar\"> sfw:</div>\n<blockquote>\n<p>indexing patterns\u2026</p>\n</blockquote>\n</aside>\n<p>See:</p>\n<ul>\n<li><a href=\"https://forums.foundationdb.org/t/how-to-model-a-leaderboard/373\" class=\"inline-onebox\">How to model a Leaderboard</a></li>\n<li><a href=\"https://forums.foundationdb.org/t/data-modeling-efficient-encoding-for-wgs84-coordinate-key-ids/354\" class=\"inline-onebox\">[Data Modeling] Efficient encoding for WGS84-coordinate key IDs</a></li>\n</ul>\n<p>You might also take advantage of the fact that each record key is unique or otherwise said you might not need to use the value part.</p>",
        "post_number": 6,
        "post_type": 1,
        "posts_count": 7,
        "updated_at": "2018-12-28T21:53:07.795Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 1,
        "incoming_link_count": 7,
        "reads": 62,
        "readers_count": 61,
        "score": 47.4,
        "yours": false,
        "topic_id": 946,
        "topic_slug": "looking-for-layer-design-documentation",
        "display_username": "Amirouche",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://forums.foundationdb.org/t/object-store-on-foundationdb/387/8",
            "internal": true,
            "reflection": false,
            "title": "Object store on FoundationDB",
            "clicks": 12
          },
          {
            "url": "https://forums.foundationdb.org/t/whats-the-purpose-of-the-directory-layer/677/2",
            "internal": true,
            "reflection": false,
            "title": "What's the purpose of the Directory layer?",
            "clicks": 10
          },
          {
            "url": "https://forums.foundationdb.org/t/missing-information-in-documentation-about-how-to-store-blobs/749",
            "internal": true,
            "reflection": false,
            "title": "Missing information in documentation about how to store blobs",
            "clicks": 5
          },
          {
            "url": "https://forums.foundationdb.org/t/how-to-model-a-leaderboard/373",
            "internal": true,
            "reflection": false,
            "title": "How to model a Leaderboard",
            "clicks": 3
          },
          {
            "url": "https://forums.foundationdb.org/t/data-modeling-efficient-encoding-for-wgs84-coordinate-key-ids/354",
            "internal": true,
            "reflection": false,
            "title": "[Data Modeling] Efficient encoding for WGS84-coordinate key IDs",
            "clicks": 1
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 41,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/looking-for-layer-design-documentation/946/6",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 2929,
        "name": "Amirouche",
        "username": "amirouche",
        "avatar_template": "/user_avatar/forums.foundationdb.org/amirouche/{size}/1911_2.png",
        "created_at": "2018-12-28T22:14:09.611Z",
        "cooked": "<p>            <iframe width=\"480\" height=\"360\" src=\"https://www.youtube.com/embed/KPqmB13zI9c?feature=oembed&amp;wmode=opaque&amp;list=PLbzoR-pLrL6q7uYN-94-p_-Q3hyAmpI7o\" frameborder=\"0\" allowfullscreen=\"\" seamless=\"seamless\" sandbox=\"allow-same-origin allow-scripts allow-forms allow-popups allow-popups-to-escape-sandbox allow-presentation\">\n            </iframe>\n</p>",
        "post_number": 7,
        "post_type": 1,
        "posts_count": 7,
        "updated_at": "2018-12-28T22:14:09.611Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 2,
        "reads": 53,
        "readers_count": 52,
        "score": 20.6,
        "yours": false,
        "topic_id": 946,
        "topic_slug": "looking-for-layer-design-documentation",
        "display_username": "Amirouche",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 41,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/looking-for-layer-design-documentation/946/7",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      2836,
      2854,
      2856,
      2861,
      2873,
      2928,
      2929
    ]
  },
  "timeline_lookup": [
    [
      1,
      2507
    ],
    [
      2,
      2506
    ],
    [
      3,
      2505
    ],
    [
      5,
      2504
    ],
    [
      6,
      2489
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "Looking for layer design documentation",
  "id": 946,
  "title": "Looking for layer design documentation",
  "posts_count": 7,
  "created_at": "2018-12-10T11:32:27.613Z",
  "views": 2665,
  "reply_count": 2,
  "like_count": 0,
  "last_posted_at": "2018-12-28T22:14:09.611Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "looking-for-layer-design-documentation",
  "category_id": 11,
  "word_count": 1990,
  "deleted_at": null,
  "user_id": 287,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_946",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 7,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 3,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "Document layer plans?",
      "id": 180,
      "title": "Document layer plans?",
      "slug": "document-layer-plans",
      "posts_count": 2,
      "reply_count": 0,
      "highest_post_number": 2,
      "image_url": null,
      "created_at": "2018-04-21T14:43:09.747Z",
      "last_posted_at": "2018-04-22T14:19:56.095Z",
      "bumped": true,
      "bumped_at": "2018-04-22T16:39:24.212Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 2,
      "views": 1916,
      "category_id": 9,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 30,
            "username": "wwilson",
            "name": "Will Wilson",
            "avatar_template": "/user_avatar/forums.foundationdb.org/wwilson/{size}/88_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 140,
            "username": "Andrej",
            "name": "",
            "avatar_template": "/user_avatar/forums.foundationdb.org/andrej/{size}/261_2.png",
            "trust_level": 1
          }
        }
      ]
    },
    {
      "fancy_title": "Document Layer Performance",
      "id": 1255,
      "title": "Document Layer Performance",
      "slug": "document-layer-performance",
      "posts_count": 2,
      "reply_count": 0,
      "highest_post_number": 2,
      "image_url": null,
      "created_at": "2019-03-25T02:01:43.056Z",
      "last_posted_at": "2019-04-08T20:36:48.678Z",
      "bumped": true,
      "bumped_at": "2019-04-08T20:36:48.678Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [
        "performance"
      ],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 1531,
      "category_id": 11,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 542,
            "username": "jonahwest",
            "name": "",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/j/90db22/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 9,
            "username": "mbhaskar",
            "name": "Bhaskar Muppana",
            "avatar_template": "/user_avatar/forums.foundationdb.org/mbhaskar/{size}/277_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "1 M rows write via Mongo client using document layer",
      "id": 1157,
      "title": "1 M rows write via Mongo client using document layer",
      "slug": "1-m-rows-write-via-mongo-client-using-document-layer",
      "posts_count": 13,
      "reply_count": 6,
      "highest_post_number": 13,
      "image_url": null,
      "created_at": "2019-02-19T21:32:16.215Z",
      "last_posted_at": "2019-06-13T13:08:26.134Z",
      "bumped": true,
      "bumped_at": "2019-06-13T13:08:26.134Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 2,
      "views": 2280,
      "category_id": 14,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 521,
            "username": "vaggarwal",
            "name": "VISHAL AGGARWAL",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/v/b3f665/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 9,
            "username": "mbhaskar",
            "name": "Bhaskar Muppana",
            "avatar_template": "/user_avatar/forums.foundationdb.org/mbhaskar/{size}/277_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 81,
            "username": "ryanworl",
            "name": "Ryan Worl",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 584,
            "username": "aaerofeev",
            "name": "Alexandr Erofeev",
            "avatar_template": "/user_avatar/forums.foundationdb.org/aaerofeev/{size}/582_2.png",
            "trust_level": 1
          }
        }
      ]
    },
    {
      "fancy_title": "Best practice of storing structs. Should I pack or store fields separately",
      "id": 425,
      "title": "Best practice of storing structs. Should I pack or store fields separately",
      "slug": "best-practice-of-storing-structs-should-i-pack-or-store-fields-separately",
      "posts_count": 6,
      "reply_count": 4,
      "highest_post_number": 6,
      "image_url": null,
      "created_at": "2018-05-16T23:07:22.662Z",
      "last_posted_at": "2018-05-17T13:16:48.924Z",
      "bumped": true,
      "bumped_at": "2018-05-17T13:16:48.924Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 10,
      "views": 2000,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 265,
            "username": "brainfucker",
            "name": "Illarionov Oleg",
            "avatar_template": "/user_avatar/forums.foundationdb.org/brainfucker/{size}/237_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 81,
            "username": "ryanworl",
            "name": "Ryan Worl",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 30,
            "username": "wwilson",
            "name": "Will Wilson",
            "avatar_template": "/user_avatar/forums.foundationdb.org/wwilson/{size}/88_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Announcing FoundationDB Document Layer",
      "id": 914,
      "title": "Announcing FoundationDB Document Layer",
      "slug": "announcing-foundationdb-document-layer",
      "posts_count": 2,
      "reply_count": 0,
      "highest_post_number": 2,
      "image_url": null,
      "created_at": "2018-11-29T20:15:26.902Z",
      "last_posted_at": "2018-11-29T21:22:01.867Z",
      "bumped": true,
      "bumped_at": "2018-11-29T20:15:27.009Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": true,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 5,
      "views": 902,
      "category_id": 6,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest single",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 1,
            "username": "davelester",
            "name": "Dave Lester",
            "avatar_template": "/user_avatar/forums.foundationdb.org/davelester/{size}/1927_2.png",
            "trust_level": 4
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 9,
        "username": "mbhaskar",
        "name": "Bhaskar Muppana",
        "avatar_template": "/user_avatar/forums.foundationdb.org/mbhaskar/{size}/277_2.png",
        "post_count": 3,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      },
      {
        "id": 41,
        "username": "amirouche",
        "name": "Amirouche",
        "avatar_template": "/user_avatar/forums.foundationdb.org/amirouche/{size}/1911_2.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      },
      {
        "id": 287,
        "username": "sfw",
        "name": "Sebastian Weyrauch",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/ad7895/{size}.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      }
    ],
    "created_by": {
      "id": 287,
      "username": "sfw",
      "name": "Sebastian Weyrauch",
      "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/ad7895/{size}.png"
    },
    "last_poster": {
      "id": 41,
      "username": "amirouche",
      "name": "Amirouche",
      "avatar_template": "/user_avatar/forums.foundationdb.org/amirouche/{size}/1911_2.png"
    },
    "links": [
      {
        "url": "https://github.com/FoundationDB/fdb-document-layer/issues/14",
        "title": "Allow values to be larger than 100K \u00b7 Issue #14 \u00b7 FoundationDB/fdb-document-layer \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 24,
        "user_id": 9,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://forums.foundationdb.org/t/object-store-on-foundationdb/387/8",
        "title": "Object store on FoundationDB",
        "internal": true,
        "attachment": false,
        "reflection": false,
        "clicks": 12,
        "user_id": 41,
        "domain": "forums.foundationdb.org",
        "root_domain": "foundationdb.org"
      },
      {
        "url": "https://forums.foundationdb.org/t/whats-the-purpose-of-the-directory-layer/677/2",
        "title": "What's the purpose of the Directory layer?",
        "internal": true,
        "attachment": false,
        "reflection": false,
        "clicks": 10,
        "user_id": 41,
        "domain": "forums.foundationdb.org",
        "root_domain": "foundationdb.org"
      },
      {
        "url": "https://forums.foundationdb.org/t/missing-information-in-documentation-about-how-to-store-blobs/749",
        "title": "Missing information in documentation about how to store blobs",
        "internal": true,
        "attachment": false,
        "reflection": false,
        "clicks": 5,
        "user_id": 41,
        "domain": "forums.foundationdb.org",
        "root_domain": "foundationdb.org"
      },
      {
        "url": "https://docs.mongodb.com/manual/core/document/#dot-notation",
        "title": "Documents \u2014 MongoDB Manual",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 5,
        "user_id": 9,
        "domain": "docs.mongodb.com",
        "root_domain": "mongodb.com"
      },
      {
        "url": "https://forums.foundationdb.org/t/how-to-model-a-leaderboard/373",
        "title": "How to model a Leaderboard",
        "internal": true,
        "attachment": false,
        "reflection": false,
        "clicks": 3,
        "user_id": 41,
        "domain": "forums.foundationdb.org",
        "root_domain": "foundationdb.org"
      },
      {
        "url": "https://apple.github.io/foundationdb/javadoc/com/apple/foundationdb/directory/DirectoryLayer.html",
        "title": "DirectoryLayer (FoundationDB Java Client API)",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 1,
        "user_id": 9,
        "domain": "apple.github.io",
        "root_domain": "apple.github.io"
      },
      {
        "url": "https://forums.foundationdb.org/t/data-modeling-efficient-encoding-for-wgs84-coordinate-key-ids/354",
        "title": "[Data Modeling] Efficient encoding for WGS84-coordinate key IDs",
        "internal": true,
        "attachment": false,
        "reflection": false,
        "clicks": 1,
        "user_id": 41,
        "domain": "forums.foundationdb.org",
        "root_domain": "foundationdb.org"
      }
    ]
  },
  "bookmarks": []
}