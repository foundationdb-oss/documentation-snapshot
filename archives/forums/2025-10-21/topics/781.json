{
  "post_stream": {
    "posts": [
      {
        "id": 2357,
        "name": "",
        "username": "wll",
        "avatar_template": "/user_avatar/forums.foundationdb.org/wll/{size}/386_2.png",
        "created_at": "2018-10-17T13:29:37.320Z",
        "cooked": "<p>Assuming <code>double</code>, <code>triple</code>, or the upcoming <code>satellite</code> redundancy modes, can FoundationDB recover from any form of data corruption while a cluster remains healthy? <a href=\"https://apple.github.io/foundationdb/configuration.html#filesystem\" rel=\"nofollow noopener\">FoundationDB is not compatible with zfs or btrfs</a>, which would lead to the requirement for a higher-level means to repair object-level failure.</p>\n<p>As I see no mention of erasure coding within the codebase I assume it must be built at layer level; and if so, would public-facing access to the internal and/or external (e.g., satellite) <code>tlog</code> make sense (to rebuild corrupted data according to the layer\u2019s requirements without having to employ/in combination with erasure coding/fingerprinting)?</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 6,
        "updated_at": "2018-10-17T14:27:01.694Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 243,
        "reads": 65,
        "readers_count": 64,
        "score": 1223.0,
        "yours": false,
        "topic_id": 781,
        "topic_slug": "replication-automatic-repairs-errors-and-bit-rot",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://apple.github.io/foundationdb/configuration.html#filesystem",
            "internal": false,
            "reflection": false,
            "title": "Configuration \u2014 FoundationDB 5.2",
            "clicks": 18
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 387,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/replication-automatic-repairs-errors-and-bit-rot/781/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 2361,
        "name": "Alex Miller",
        "username": "alexmiller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "created_at": "2018-10-17T22:37:10.311Z",
        "cooked": "<p>Regardless of replication mode, the existence of other full replicas of the same data allows for FDB to resolve these issues without intervention:</p>\n<p><strong>Repairs</strong>, that of restoring replication when a host or drive has failed, is handled by FoundationDB automatically, in particular by its data distribution subcomponent.  Key ranges that were affected by the loss will be assigned to a new team of servers.  Until the data is re-replicated, <code>status</code> will report decreased failure tolerance.</p>\n<p><strong>Errors</strong>, those of IO requests failing or transiently returning incorrect data, and <strong>Bit rot</strong>, that of data being silently corrupted on disk over time without being accessed, are handled similarly.  Errors cause an <code>io_error</code> to be thrown, and bit rot will be detected when accessed and treated as an IO error as well.  The storage server will die, effectively discarding all of its data as potentially corrupt, and the data will be re-replicated from the non-corrupt nodes.</p>\n<p>I\u2019m interested to hear your specific reasons for desiring erasure encoding.  It\u2019d impose either an additional storage overhead per node, to provide resilience for data already held elsewhere, or require reads to hit more than 1 replica, if you\u2019re doing erasure codes across replicas.  Neither tradeoff seems appealing to me, but I\u2019ve never actually dealt with an erasure encoded system to see the other side of this.</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 6,
        "updated_at": "2018-10-17T22:37:58.459Z",
        "reply_count": 2,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 2,
        "reads": 64,
        "readers_count": 63,
        "score": 47.8,
        "yours": false,
        "topic_id": 781,
        "topic_slug": "replication-automatic-repairs-errors-and-bit-rot",
        "display_username": "Alex Miller",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 13,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/replication-automatic-repairs-errors-and-bit-rot/781/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 2390,
        "name": "David Scherer",
        "username": "dave",
        "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
        "created_at": "2018-10-20T15:22:52.456Z",
        "cooked": "<p>One thing that we don\u2019t (to my knowledge) have out of the box in this area is anything that reads extremely cold data periodically to ensure that bit rot is detected.  If you have a FDB database with tons of data that is simply never read or written, and you never have any failures that require it to be moved around, over a long period of time the likelihood that multiple disks have failed silently under all the replicas of some piece of data might slowly climb.  I\u2019m not sure that the backup process reliably solves this, because depending on your setup at a low write rate you might be doing just incremental backups for a long time, and anyway it only needs to read data from one replica.  Running a consistency check every once in a while would do it, but I\u2019m not sure that\u2019s even documented.</p>\n<p>One other caveat with regard to bad disk behavior is that disks that fail at durability can concievably result in durability failures - checksums can\u2019t always detect if a disk simply fails to commit writes.</p>\n<p>An erasure coding based storage engine plugin for big, cold data that is expensive to store replicated wouldn\u2019t be totally crazy.  You could assign specific key spaces to it and it would make FDB even more of an all-in-one storage solution.</p>\n<p>Alternatively, if someone ever adds a log structured storage engine that has decent write performance on spinning disks, doing replication with one fast SSD (which serves all reads) and one or two slow spinning disks (which accept writes and will be used to reconstruct the SSD replica in case of failure) would be an intermediate point on the cost/performance curve.</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 6,
        "updated_at": "2018-10-20T15:22:52.456Z",
        "reply_count": 1,
        "reply_to_post_number": 2,
        "quote_count": 0,
        "incoming_link_count": 10,
        "reads": 63,
        "readers_count": 62,
        "score": 82.6,
        "yours": false,
        "topic_id": 781,
        "topic_slug": "replication-automatic-repairs-errors-and-bit-rot",
        "display_username": "David Scherer",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 13,
          "username": "alexmiller",
          "name": "Alex Miller",
          "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png"
        },
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 22,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/replication-automatic-repairs-errors-and-bit-rot/781/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 2400,
        "name": "Alex Miller",
        "username": "alexmiller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "created_at": "2018-10-21T22:13:46.609Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"dave\" data-post=\"3\" data-topic=\"781\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/dave/48/89_2.png\" class=\"avatar\"> dave:</div>\n<blockquote>\n<p>out of the box in this area is anything that reads extremely cold data periodically to ensure that bit rot is detected</p>\n</blockquote>\n</aside>\n<p><a href=\"https://github.com/apple/foundationdb/blob/8bf67c7afc7082e131ea8a02ae22f5635c3f683a/fdbserver/workloads/ConsistencyCheck.actor.cpp\">It is implemented</a>, and pass <a href=\"https://github.com/apple/foundationdb/blob/a62b7f1054351fb9b753779d7972284092715e7f/fdbserver/fdbserver.actor.cpp#L573\">-r consistencycheck</a> to use, but fair point that I didn\u2019t realize it wasn\u2019t a thing that gets run by default.</p>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 6,
        "updated_at": "2018-10-22T15:51:43.066Z",
        "reply_count": 1,
        "reply_to_post_number": 3,
        "quote_count": 1,
        "incoming_link_count": 5,
        "reads": 61,
        "readers_count": 60,
        "score": 42.2,
        "yours": false,
        "topic_id": 781,
        "topic_slug": "replication-automatic-repairs-errors-and-bit-rot",
        "display_username": "Alex Miller",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/apple/foundationdb/blob/8bf67c7afc7082e131ea8a02ae22f5635c3f683a/fdbserver/workloads/ConsistencyCheck.actor.cpp",
            "internal": false,
            "reflection": false,
            "title": "foundationdb/ConsistencyCheck.actor.cpp at 8bf67c7afc7082e131ea8a02ae22f5635c3f683a \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 26
          },
          {
            "url": "https://github.com/apple/foundationdb/blob/a62b7f1054351fb9b753779d7972284092715e7f/fdbserver/fdbserver.actor.cpp#L573",
            "internal": false,
            "reflection": false,
            "title": "foundationdb/fdbserver.actor.cpp at a62b7f1054351fb9b753779d7972284092715e7f \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 19
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 13,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/replication-automatic-repairs-errors-and-bit-rot/781/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 2407,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2018-10-22T16:02:15.214Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"alexmiller\" data-post=\"4\" data-topic=\"781\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/alexmiller/48/326_2.png\" class=\"avatar\"> alexmiller:</div>\n<blockquote>\n<p><a href=\"https://github.com/apple/foundationdb/blob/8bf67c7afc7082e131ea8a02ae22f5635c3f683a/fdbserver/workloads/ConsistencyCheck.actor.cpp\">It is implemented </a>, and pass <a href=\"https://github.com/apple/foundationdb/blob/a62b7f1054351fb9b753779d7972284092715e7f/fdbserver/fdbserver.actor.cpp#L573\">-r consistencycheck </a> to use, but fair point that I didn\u2019t realize it wasn\u2019t a thing that gets run by default.</p>\n</blockquote>\n</aside>\n<p>In case you\u2019re curious, this starts the consistency check in a mode where it runs indefinitely at a modest rate controlled by a knob. If you start one of these processes up on a cluster, it should periodically check all of the data. I don\u2019t recall what guarantees are made here, though, particularly in the face of data movement.</p>",
        "post_number": 5,
        "post_type": 1,
        "posts_count": 6,
        "updated_at": "2018-10-22T16:02:15.214Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 1,
        "incoming_link_count": 3,
        "reads": 56,
        "readers_count": 55,
        "score": 26.2,
        "yours": false,
        "topic_id": 781,
        "topic_slug": "replication-automatic-repairs-errors-and-bit-rot",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/replication-automatic-repairs-errors-and-bit-rot/781/5",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 4084,
        "name": "gaurav",
        "username": "gaurav",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
        "created_at": "2019-05-10T02:58:46.403Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"alexmiller\" data-post=\"2\" data-topic=\"781\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/alexmiller/48/326_2.png\" class=\"avatar\"> alexmiller:</div>\n<blockquote>\n<p><strong>Errors</strong> , those of IO requests failing or transiently returning incorrect data, and <strong>Bit rot</strong> , that of data being silently corrupted on disk over time without being accessed, are handled similarly. Errors cause an <code>io_error</code> to be thrown, and bit rot will be detected when accessed and treated as an IO error as well. The storage server will die, effectively discarding all of its data as potentially corrupt, and the data will be re-replicated from the non-corrupt nodes.</p>\n</blockquote>\n</aside>\n<p>Hi Alex, what would precisely happen to the storage server when it detects an IO/corruption error? Will it simply quit? If so, will not fdbmonitor bring it back up again after some delay? Or will the corrupt storage server explicitly discard all its shards (files on disk) before quitting?</p>",
        "post_number": 6,
        "post_type": 1,
        "posts_count": 6,
        "updated_at": "2019-05-10T03:23:24.740Z",
        "reply_count": 0,
        "reply_to_post_number": 2,
        "quote_count": 1,
        "incoming_link_count": 2,
        "reads": 40,
        "readers_count": 39,
        "score": 18.0,
        "yours": false,
        "topic_id": 781,
        "topic_slug": "replication-automatic-repairs-errors-and-bit-rot",
        "display_username": "gaurav",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 166,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/replication-automatic-repairs-errors-and-bit-rot/781/6",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      2357,
      2361,
      2390,
      2400,
      2407,
      4084
    ]
  },
  "timeline_lookup": [
    [
      1,
      2561
    ],
    [
      3,
      2558
    ],
    [
      4,
      2557
    ],
    [
      5,
      2556
    ],
    [
      6,
      2357
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "Replication, automatic repairs, errors and bit rot",
  "id": 781,
  "title": "Replication, automatic repairs, errors and bit rot",
  "posts_count": 6,
  "created_at": "2018-10-17T13:29:37.254Z",
  "views": 1796,
  "reply_count": 3,
  "like_count": 2,
  "last_posted_at": "2019-05-10T02:58:46.403Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "replication-automatic-repairs-errors-and-bit-rot",
  "category_id": 8,
  "word_count": 967,
  "deleted_at": null,
  "user_id": 387,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_781",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 6,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 5,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "Data integrity resiliency on single node deployments",
      "id": 650,
      "title": "Data integrity resiliency on single node deployments",
      "slug": "data-integrity-resiliency-on-single-node-deployments",
      "posts_count": 3,
      "reply_count": 0,
      "highest_post_number": 3,
      "image_url": null,
      "created_at": "2018-08-22T14:08:51.932Z",
      "last_posted_at": "2018-08-23T04:57:31.534Z",
      "bumped": true,
      "bumped_at": "2018-08-23T04:57:31.534Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 795,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 4,
            "username": "bbc",
            "name": "Ben Collins",
            "avatar_template": "/user_avatar/forums.foundationdb.org/bbc/{size}/4_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Fdbserver error in a cluster with double redundancy",
      "id": 2348,
      "title": "Fdbserver error in a cluster with double redundancy",
      "slug": "fdbserver-error-in-a-cluster-with-double-redundancy",
      "posts_count": 3,
      "reply_count": 1,
      "highest_post_number": 3,
      "image_url": null,
      "created_at": "2020-09-20T18:50:42.932Z",
      "last_posted_at": "2020-09-22T07:33:44.911Z",
      "bumped": true,
      "bumped_at": "2020-09-22T11:25:55.307Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 3,
      "views": 859,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 714,
            "username": "tuk",
            "name": "",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/t/b5ac83/{size}.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 14,
            "username": "andrew.noyes",
            "name": "",
            "avatar_template": "/user_avatar/forums.foundationdb.org/andrew.noyes/{size}/443_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "R/w performance impact and replicas consistency while moving data",
      "id": 567,
      "title": "R/w performance impact and replicas consistency while moving data",
      "slug": "r-w-performance-impact-and-replicas-consistency-while-moving-data",
      "posts_count": 1,
      "reply_count": 0,
      "highest_post_number": 1,
      "image_url": null,
      "created_at": "2018-07-13T06:23:02.381Z",
      "last_posted_at": "2018-07-13T06:23:02.474Z",
      "bumped": true,
      "bumped_at": "2018-07-13T06:23:02.474Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 2,
      "views": 499,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest single",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 327,
            "username": "zhanghuan",
            "name": "",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/z/5fc32e/{size}.png",
            "trust_level": 1
          }
        }
      ]
    },
    {
      "fancy_title": "Technical overview of the database",
      "id": 135,
      "title": "Technical overview of the database",
      "slug": "technical-overview-of-the-database",
      "posts_count": 27,
      "reply_count": 15,
      "highest_post_number": 27,
      "image_url": null,
      "created_at": "2018-04-20T15:30:31.788Z",
      "last_posted_at": "2019-01-11T23:25:47.462Z",
      "bumped": true,
      "bumped_at": "2019-01-11T23:25:47.462Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 64,
      "views": 12958,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 96,
            "username": "idiot",
            "name": "",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/i/f04885/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 22,
            "username": "dave",
            "name": "David Scherer",
            "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 443,
            "username": "junius",
            "name": "junius",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/j/f08c70/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 54,
            "username": "Evan",
            "name": "Evan Tschannen",
            "avatar_template": "/user_avatar/forums.foundationdb.org/evan/{size}/104_2.png",
            "moderator": true,
            "trust_level": 1
          }
        }
      ]
    },
    {
      "fancy_title": "Fatal Error: Corrupted backup data",
      "id": 1260,
      "title": "Fatal Error: Corrupted backup data",
      "slug": "fatal-error-corrupted-backup-data",
      "posts_count": 5,
      "reply_count": 1,
      "highest_post_number": 5,
      "image_url": null,
      "created_at": "2019-03-26T10:17:46.267Z",
      "last_posted_at": "2019-03-27T00:46:59.654Z",
      "bumped": true,
      "bumped_at": "2019-03-27T00:46:59.654Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 1228,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 419,
            "username": "doublemax",
            "name": "",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/d/8e7dd6/{size}.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 7,
            "username": "SteavedHams",
            "name": "Steve Atherton",
            "avatar_template": "/user_avatar/forums.foundationdb.org/steavedhams/{size}/18_2.png",
            "trust_level": 4
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 13,
        "username": "alexmiller",
        "name": "Alex Miller",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      },
      {
        "id": 12,
        "username": "ajbeamon",
        "name": "A.J. Beamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "admin": true,
        "trust_level": 4
      },
      {
        "id": 22,
        "username": "dave",
        "name": "David Scherer",
        "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 166,
        "username": "gaurav",
        "name": "gaurav",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 3
      },
      {
        "id": 387,
        "username": "wll",
        "name": "",
        "avatar_template": "/user_avatar/forums.foundationdb.org/wll/{size}/386_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      }
    ],
    "created_by": {
      "id": 387,
      "username": "wll",
      "name": "",
      "avatar_template": "/user_avatar/forums.foundationdb.org/wll/{size}/386_2.png"
    },
    "last_poster": {
      "id": 166,
      "username": "gaurav",
      "name": "gaurav",
      "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png"
    },
    "links": [
      {
        "url": "https://github.com/apple/foundationdb/blob/8bf67c7afc7082e131ea8a02ae22f5635c3f683a/fdbserver/workloads/ConsistencyCheck.actor.cpp",
        "title": "foundationdb/ConsistencyCheck.actor.cpp at 8bf67c7afc7082e131ea8a02ae22f5635c3f683a \u00b7 apple/foundationdb \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 26,
        "user_id": 13,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://github.com/apple/foundationdb/blob/a62b7f1054351fb9b753779d7972284092715e7f/fdbserver/fdbserver.actor.cpp#L573",
        "title": "foundationdb/fdbserver.actor.cpp at a62b7f1054351fb9b753779d7972284092715e7f \u00b7 apple/foundationdb \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 19,
        "user_id": 13,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://apple.github.io/foundationdb/configuration.html#filesystem",
        "title": "Configuration \u2014 FoundationDB 5.2",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 18,
        "user_id": 387,
        "domain": "apple.github.io",
        "root_domain": "apple.github.io"
      }
    ]
  },
  "bookmarks": []
}