{
  "post_stream": {
    "posts": [
      {
        "id": 778,
        "name": "",
        "username": "hiroshi",
        "avatar_template": "/user_avatar/forums.foundationdb.org/hiroshi/{size}/147_2.png",
        "created_at": "2018-05-03T03:12:22.692Z",
        "cooked": "<p>With go binding, given the code like this</p>\n<pre><code class=\"lang-auto\">package main\n\nimport (\n  \"github.com/apple/foundationdb/bindings/go/src/fdb\"\n  \"fmt\"\n)\n\nfunc main() {\n  db.MustAPIVersion(510)\n  db := fdb.MustOpenDefault()\n  _, err = db.Transact(func (tr fdb.Transaction) (ret interface{}, e error) {\n    fmt.Printf(\"hello: %v\\n\", tr.Get(fdb.Key(\"hello\")).MustGet())\n  }\n}\n</code></pre>\n<p>If the key \u201chello\u201d is not set yet, the output is</p>\n<pre><code class=\"lang-auto\">hello: []\n</code></pre>\n<p>Even if I set the empty value for the key</p>\n<pre><code class=\"lang-auto\">tr.Set(fdb.Key(\"hello\"), []byte{})\n</code></pre>\n<p>I get same result</p>\n<pre><code class=\"lang-auto\">hello: []\n</code></pre>\n<p>However, with <code>fdbcli</code> command, I can tell the key exists or not,</p>\n<pre><code class=\"lang-auto\">fdb&gt; get hello\n`hello': not found\nfdb&gt; set hello \"\"\nCommitted (29036447425)\nfdb&gt; get hello\n`hello' is `'\n</code></pre>\n<p>How can I tell a key exists or not with the golang binding?</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 3,
        "updated_at": "2018-05-03T03:12:22.692Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 722,
        "reads": 66,
        "readers_count": 65,
        "score": 3635.2,
        "yours": false,
        "topic_id": 327,
        "topic_slug": "how-to-tell-a-single-key-exists-or-not-using-golang-binding",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 187,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/how-to-tell-a-single-key-exists-or-not-using-golang-binding/327/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 971,
        "name": "Matthew Wilson",
        "username": "mwilson",
        "avatar_template": "/user_avatar/forums.foundationdb.org/mwilson/{size}/214_2.png",
        "created_at": "2018-05-09T02:15:39.191Z",
        "cooked": "<p>Go\u2019s <code>%v</code> print formatter is displaying a nil byte slice and an empty byte slice the same way. If you perform an explicit nil check, you can confirm that <code>tr.Get().MustGet()</code> returns nil if the key doesn\u2019t exist.</p>\n<pre><code class=\"lang-auto\">package main\n\nimport (\n  \"fmt\"\n  \"github.com/apple/foundationdb/bindings/go/src/fdb\"\n)\n\nfunc main() {\n  fdb.MustAPIVersion(510)\n  db := fdb.MustOpenDefault()\n\n  db.Transact(func(tr fdb.Transaction) (interface{}, error) {\n    // Ensure that key 'hello' is gone\n    tr.Clear(fdb.Key(\"hello\"))\n\n    hello := tr.Get(fdb.Key(\"hello\")).MustGet()\n    if hello == nil {\n      fmt.Println(\"Hello does not exist.\")\n    } else {\n      fmt.Println(\"Hello exists.\")\n    }\n\n    // Note that the empty byte slice is different than nil\n    if []byte{} == nil {\n      panic(\"This is never true.\")\n    }\n\n    // This is maintained through FoundationDB:\n    tr.Set(fdb.Key(\"hello\"), []byte{})\n    hello = tr.Get(fdb.Key(\"hello\")).MustGet()\n    if hello == nil {\n      fmt.Println(\"Hello does not exist.\")\n    } else {\n      fmt.Println(\"Hello exists.\")\n    }\n\n    return nil, nil\n  })\n}\n</code></pre>\n<p>Running this program, the output is as expected: we can detect that the key doesn\u2019t exist after the first get, and that it does exist after the second get:</p>\n<pre><code class=\"lang-auto\">Hello does not exist.\nHello exists.\n</code></pre>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 3,
        "updated_at": "2018-05-09T02:16:17.513Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 16,
        "reads": 55,
        "readers_count": 54,
        "score": 121.0,
        "yours": false,
        "topic_id": 327,
        "topic_slug": "how-to-tell-a-single-key-exists-or-not-using-golang-binding",
        "display_username": "Matthew Wilson",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 2
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 246,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/how-to-tell-a-single-key-exists-or-not-using-golang-binding/327/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 978,
        "name": "",
        "username": "hiroshi",
        "avatar_template": "/user_avatar/forums.foundationdb.org/hiroshi/{size}/147_2.png",
        "created_at": "2018-05-09T05:48:33.270Z",
        "cooked": "<p><a class=\"mention\" href=\"/u/mwilson\">@mwilson</a><br>\nThanks for your reply. I\u2019ll try it.</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 3,
        "updated_at": "2018-05-09T05:48:33.270Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 49,
        "readers_count": 48,
        "score": 14.8,
        "yours": false,
        "topic_id": 327,
        "topic_slug": "how-to-tell-a-single-key-exists-or-not-using-golang-binding",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 187,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/how-to-tell-a-single-key-exists-or-not-using-golang-binding/327/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      778,
      971,
      978
    ]
  },
  "timeline_lookup": [
    [
      1,
      2729
    ],
    [
      2,
      2723
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "How to tell a single key exists or not using golang binding",
  "id": 327,
  "title": "How to tell a single key exists or not using golang binding",
  "posts_count": 3,
  "created_at": "2018-05-03T03:12:22.590Z",
  "views": 2034,
  "reply_count": 0,
  "like_count": 3,
  "last_posted_at": "2018-05-09T05:48:33.270Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "how-to-tell-a-single-key-exists-or-not-using-golang-binding",
  "category_id": 7,
  "word_count": 324,
  "deleted_at": null,
  "user_id": 187,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_327",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 3,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 2,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "Java Hello World insert- fdbcli get Hello is not returning value",
      "id": 291,
      "title": "Java Hello World insert- fdbcli get Hello is not returning value",
      "slug": "java-hello-world-insert-fdbcli-get-hello-is-not-returning-value",
      "posts_count": 5,
      "reply_count": 2,
      "highest_post_number": 5,
      "image_url": null,
      "created_at": "2018-04-27T15:29:50.468Z",
      "last_posted_at": "2018-04-29T17:50:50.229Z",
      "bumped": true,
      "bumped_at": "2018-04-29T21:14:09.076Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 4,
      "views": 3588,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 194,
            "username": "nchiring",
            "name": "Nitu Chiring",
            "avatar_template": "/user_avatar/forums.foundationdb.org/nchiring/{size}/154_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 11,
            "username": "ral",
            "name": "Richard Low",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/r/f04885/{size}.png",
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Running a Go test with a Transaction",
      "id": 1288,
      "title": "Running a Go test with a Transaction",
      "slug": "running-a-go-test-with-a-transaction",
      "posts_count": 6,
      "reply_count": 2,
      "highest_post_number": 6,
      "image_url": null,
      "created_at": "2019-04-08T23:38:28.704Z",
      "last_posted_at": "2020-03-19T22:39:42.212Z",
      "bumped": true,
      "bumped_at": "2020-03-19T22:39:42.212Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 727,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 558,
            "username": "bancron",
            "name": "bancron",
            "avatar_template": "/user_avatar/forums.foundationdb.org/bancron/{size}/550_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 407,
            "username": "pjvds",
            "name": "Pieter Joost Van De Sande",
            "avatar_template": "/user_avatar/forums.foundationdb.org/pjvds/{size}/394_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 13,
            "username": "alexmiller",
            "name": "Alex Miller",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alexmiller/{size}/326_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Ranges without explicit end (Go)",
      "id": 773,
      "title": "Ranges without explicit end (Go)",
      "slug": "ranges-without-explicit-end-go",
      "posts_count": 13,
      "reply_count": 10,
      "highest_post_number": 13,
      "image_url": null,
      "created_at": "2018-10-15T21:10:57.504Z",
      "last_posted_at": "2018-10-25T14:38:53.425Z",
      "bumped": true,
      "bumped_at": "2018-10-25T14:38:53.425Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [
        "bindings"
      ],
      "tags_descriptions": {},
      "like_count": 6,
      "views": 3281,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 391,
            "username": "atombender",
            "name": "",
            "avatar_template": "/user_avatar/forums.foundationdb.org/atombender/{size}/688_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 378,
            "username": "num",
            "name": null,
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/n/db5fbb/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Can do a step by step walk through on how to run hello world for Go on foundationdb",
      "id": 3653,
      "title": "Can do a step by step walk through on how to run hello world for Go on foundationdb",
      "slug": "can-do-a-step-by-step-walk-through-on-how-to-run-hello-world-for-go-on-foundationdb",
      "posts_count": 2,
      "reply_count": 0,
      "highest_post_number": 2,
      "image_url": null,
      "created_at": "2022-11-10T02:14:20.199Z",
      "last_posted_at": "2022-11-11T06:16:01.023Z",
      "bumped": true,
      "bumped_at": "2022-11-11T06:16:01.023Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [
        "bindings"
      ],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 381,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 1185,
            "username": "BUguy",
            "name": "Rhett",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/b/e19adc/{size}.png",
            "trust_level": 0
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 405,
            "username": "harikb",
            "name": "Hari B",
            "avatar_template": "/user_avatar/forums.foundationdb.org/harikb/{size}/1033_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Issue linking foundationDB with Go bindings : m2 chip",
      "id": 3650,
      "title": "Issue linking foundationDB with Go bindings : m2 chip",
      "slug": "issue-linking-foundationdb-with-go-bindings-m2-chip",
      "posts_count": 1,
      "reply_count": 0,
      "highest_post_number": 1,
      "image_url": "https://global.discourse-cdn.com/foundationdb/optimized/2X/e/eb88199670f7bdb72e52be121c1209821925dc39_2_1024x367.png",
      "created_at": "2022-11-10T02:11:02.489Z",
      "last_posted_at": "2022-11-10T02:11:02.553Z",
      "bumped": true,
      "bumped_at": "2022-11-10T02:11:02.553Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [
        "bindings"
      ],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 267,
      "category_id": 5,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest single",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 1173,
            "username": "stephensweet",
            "name": "Stephensweet",
            "avatar_template": "/user_avatar/forums.foundationdb.org/stephensweet/{size}/1446_2.png",
            "trust_level": 1
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 187,
        "username": "hiroshi",
        "name": "",
        "avatar_template": "/user_avatar/forums.foundationdb.org/hiroshi/{size}/147_2.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 246,
        "username": "mwilson",
        "name": "Matthew Wilson",
        "avatar_template": "/user_avatar/forums.foundationdb.org/mwilson/{size}/214_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      }
    ],
    "created_by": {
      "id": 187,
      "username": "hiroshi",
      "name": "",
      "avatar_template": "/user_avatar/forums.foundationdb.org/hiroshi/{size}/147_2.png"
    },
    "last_poster": {
      "id": 187,
      "username": "hiroshi",
      "name": "",
      "avatar_template": "/user_avatar/forums.foundationdb.org/hiroshi/{size}/147_2.png"
    }
  },
  "bookmarks": []
}