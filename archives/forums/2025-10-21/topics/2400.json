{
  "post_stream": {
    "posts": [
      {
        "id": 8123,
        "name": "Jun Li",
        "username": "jltz",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/j/c0e974/{size}.png",
        "created_at": "2020-10-21T09:54:00.051Z",
        "cooked": "<p>Hi,</p>\n<p>Based on what I understand from the FDB Java Binding APIs,  for a getRange() query that can potentially run over 5 seconds and encounter the \u201ctransaction too old\u201d exception, I can capture this transaction exception with code 1007, <a href=\"https://apple.github.io/foundationdb/api-error-codes.html\" rel=\"noopener nofollow ugc\">https://apple.github.io/foundationdb/api-error-codes.html</a>, and create a new transaction and then set the new query range that starts from the last key before the transaction. With this mechanism, I can continue the long-range scan.</p>\n<p>I am trying to look into the Record Layer Java Library on how it exposes systematically the APIs (with continuations) and composable iterators (or cursors), so that I can compose iterator-based pipeline processing for the key-value retrieved from the FDB getRange() queries.</p>\n<p>In the FQA section, <a href=\"https://github.com/FoundationDB/fdb-record-layer/blob/master/docs/FAQ.md\" rel=\"noopener nofollow ugc\">https://github.com/FoundationDB/fdb-record-layer/blob/master/docs/FAQ.md</a>, I see the statement \u201cAll streaming operations in the Record Layer support continuations\u2026 so restarting the same operation with a new transaction and a continuation can allow the operation to continue where it left off.\u201d</p>\n<p>My questions are:</p>\n<p>(1)does the record layer provide the APIs that handle \u201crestarting the same operation with the new transaction\u201d?  if so, can I get the link to the code in the record layer that handle this?</p>\n<p>(2) or the application will need to capture the exception, and start a new transaction, along with the \u201ccontinuation\u201d object retrieved from the failed transaction? If so, how will the application code look like?</p>\n<p>(3) With iterator (or cursor) chaining in a processing pipeline,  if during one of the iterators processing, transaction becomes too old and the exception gets raised, and transaction gets restarted (either by record layer or by application), how can the remaining chained iterators (cursors) be resumed after the transaction gets restarted? My understanding is that an iterator (may be cursor as well) is tied to a transaction object and no way to resume from a new transaction.</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 7,
        "updated_at": "2020-10-21T09:54:00.051Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 361,
        "reads": 73,
        "readers_count": 72,
        "score": 1819.6,
        "yours": false,
        "topic_id": 2400,
        "topic_slug": "how-record-layer-provides-apis-to-handle-large-range-scan-longer-than-5-seconds",
        "display_username": "Jun Li",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/FoundationDB/fdb-record-layer/blob/master/docs/FAQ.md",
            "internal": false,
            "reflection": false,
            "title": "fdb-record-layer/FAQ.md at master \u00b7 FoundationDB/fdb-record-layer \u00b7 GitHub",
            "clicks": 10
          },
          {
            "url": "https://apple.github.io/foundationdb/api-error-codes.html",
            "internal": false,
            "reflection": false,
            "title": "Error Codes \u2014 FoundationDB 6.2",
            "clicks": 2
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 531,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/how-record-layer-provides-apis-to-handle-large-range-scan-longer-than-5-seconds/2400/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 8149,
        "name": "Scott Gray",
        "username": "scgray",
        "avatar_template": "/user_avatar/forums.foundationdb.org/scgray/{size}/30_2.png",
        "created_at": "2020-10-22T18:48:32.265Z",
        "cooked": "<blockquote>\n<p>(1)does the record layer provide the APIs that handle \u201crestarting the same operation with the new transaction\u201d? if so, can I get the link to the code in the record layer that handle this?</p>\n</blockquote>\n<p>There isn\u2019t a generic API that exposes continuing any given operation, but all streaming operations individually accept a continuation that will cause them to resume streaming at the point at which the continuation from the previous operation was started.   For example:</p>\n<aside class=\"onebox githubblob\" data-onebox-src=\"https://github.com/FoundationDB/fdb-record-layer/blob/2432438481709b7108eb800d30adbc46544dc2a3/fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/provider/foundationdb/FDBRecordStoreBase.java#L670\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/FoundationDB/fdb-record-layer/blob/2432438481709b7108eb800d30adbc46544dc2a3/fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/provider/foundationdb/FDBRecordStoreBase.java#L670\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <h4><a href=\"https://github.com/FoundationDB/fdb-record-layer/blob/2432438481709b7108eb800d30adbc46544dc2a3/fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/provider/foundationdb/FDBRecordStoreBase.java#L670\" target=\"_blank\" rel=\"noopener nofollow ugc\">FoundationDB/fdb-record-layer/blob/2432438481709b7108eb800d30adbc46544dc2a3/fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/provider/foundationdb/FDBRecordStoreBase.java#L670</a></h4>\n\n\n\n    <pre class=\"onebox\"><code class=\"lang-java\">\n      <ol class=\"start lines\" start=\"660\" style=\"counter-reset: li-counter 659 ;\">\n          <li> * @param low low point of scan range</li>\n          <li> * @param high high point of scan point</li>\n          <li> * @param lowEndpoint whether low point is inclusive or exclusive</li>\n          <li> * @param highEndpoint whether high point is inclusive or exclusive</li>\n          <li> * @param continuation any continuation from a previous scan</li>\n          <li> * @param scanProperties skip, limit and other scan properties</li>\n          <li> *</li>\n          <li> * @return a cursor that will scan everything in the range, picking up at continuation, and honoring the given scan properties</li>\n          <li> */</li>\n          <li>@Nonnull</li>\n          <li class=\"selected\">RecordCursor&lt;FDBStoredRecord&lt;M&gt;&gt; scanRecords(@Nullable Tuple low, @Nullable Tuple high,</li>\n          <li>                                             @Nonnull EndpointType lowEndpoint, @Nonnull EndpointType highEndpoint,</li>\n          <li>                                             @Nullable byte[] continuation,</li>\n          <li>                                             @Nonnull ScanProperties scanProperties);</li>\n          <li></li>\n          <li>/**</li>\n          <li> * Count the number of records in the database in a range.</li>\n          <li> *</li>\n          <li> * @param low low point of scan range</li>\n          <li> * @param high high point of scan point</li>\n          <li> * @param lowEndpoint whether low point is inclusive or exclusive</li>\n      </ol>\n    </code></pre>\n\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>without a continuation, it will start scanning at the beginning of the range specified (or end, depending on direction).  With a continuation, it will resume at the point the continuation represents.  It is important that the arguments to the operation be identical from call to call, with the exception of the continuation itself.</p>\n<blockquote>\n<p>(2) or the application will need to capture the exception, and start a new transaction, along with the \u201ccontinuation\u201d object retrieved from the failed transaction? If so, how will the application code look like?</p>\n</blockquote>\n<p>The continuation isn\u2019t exposed in the exception itself, but all streaming operations return a <code>RecordCursor</code>.  The <code>.onNext()</code> method returns a <code>RecordCursorResult</code> object.  This encapsulates the next fetched value (if present), the reason the scan stopped, called the <code>NoNextReason</code> (if no value is present to be fetched), and a <code>RecordCursorContinuation</code> that will continue the scan immediately following the value just returned.</p>\n<p>There are two strategies you can take to handling the continuations:</p>\n<ol>\n<li>Always keep the continuation around from the most recently returned value.  After receiving your exception, re-start the operation with that continuation.</li>\n<li>Set limits in the <code>ExecuteProperties</code> which restricts the scan to some amount that makes it unlikely to hit the exception, such as limiting the scan to a set number of milliseconds.  Then, when the scan ends, and the <code>NoNextReason</code> indicates that there are more pending results, you use the current continuation to restart the operation.</li>\n</ol>\n<p>Here is an example from one of the unit tests using a query along with continuations and limits:</p>\n<aside class=\"onebox githubblob\" data-onebox-src=\"https://github.com/FoundationDB/fdb-record-layer/blob/187cfbd68417d4cc412f5db9145aa4655994ef2c/fdb-record-layer-core/src/test/java/com/apple/foundationdb/record/provider/foundationdb/limits/FDBRecordStoreScanLimitTest.java#L230\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/FoundationDB/fdb-record-layer/blob/187cfbd68417d4cc412f5db9145aa4655994ef2c/fdb-record-layer-core/src/test/java/com/apple/foundationdb/record/provider/foundationdb/limits/FDBRecordStoreScanLimitTest.java#L230\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <h4><a href=\"https://github.com/FoundationDB/fdb-record-layer/blob/187cfbd68417d4cc412f5db9145aa4655994ef2c/fdb-record-layer-core/src/test/java/com/apple/foundationdb/record/provider/foundationdb/limits/FDBRecordStoreScanLimitTest.java#L230\" target=\"_blank\" rel=\"noopener nofollow ugc\">FoundationDB/fdb-record-layer/blob/187cfbd68417d4cc412f5db9145aa4655994ef2c/fdb-record-layer-core/src/test/java/com/apple/foundationdb/record/provider/foundationdb/limits/FDBRecordStoreScanLimitTest.java#L230</a></h4>\n\n\n\n    <pre class=\"onebox\"><code class=\"lang-java\">\n      <ol class=\"start lines\" start=\"220\" style=\"counter-reset: li-counter 219 ;\">\n          <li>    }</li>\n          <li>    for (int limit = maximumToScan + 1; limit &lt;= 100; limit++) {</li>\n          <li>        assertNumberOfRecordsScanned(maximumToScan, plan,</li>\n          <li>                ExecuteProperties.newBuilder().setFailOnScanLimitReached(fail).setScannedRecordsLimit(limit).build(),</li>\n          <li>                \"should not be limited by record scan limit\");</li>\n          <li>    }</li>\n          <li>}</li>\n          <li></li>\n          <li>@ParameterizedTest(name = \"plansByContinuation() [{index}] {0}\")</li>\n          <li>@MethodSource(\"plansWithoutFail\")</li>\n          <li class=\"selected\">public void plansByContinuation(String description, boolean fail, RecordQueryPlan plan) throws Exception {</li>\n          <li>    int maximumToScan = getMaximumToScan(plan);</li>\n          <li></li>\n          <li>    // include a scanLimit of 0, in which case all progress happens via the first \"free\" key-value scan.</li>\n          <li>    for (int scanLimit = 0; scanLimit &lt;= maximumToScan * 2; scanLimit = 2 * scanLimit + 1) {</li>\n          <li>        final Function&lt;FDBQueriedRecord&lt;Message&gt;, Long&gt; getRecNo = r -&gt; {</li>\n          <li>            TestRecords1Proto.MySimpleRecord.Builder record = TestRecords1Proto.MySimpleRecord.newBuilder();</li>\n          <li>            record.mergeFrom(r.getRecord());</li>\n          <li>            return record.getRecNo();</li>\n          <li>        };</li>\n          <li></li>\n      </ol>\n    </code></pre>\n\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>There is also a cursor designed to make this sort of iteration easier, called the <code>AutoContinuingCursor</code>.  It\u2019s general principal is that you hand it a generator (a lambda) that takes an <code>FDBRecordContext</code> and a continuation, and it will call it repeatedly, as necessary, to continue your operation.  There is an example of using it in the <code>AutoContinuingCursorTest</code> (sorry, it doesn\u2019t have many examples of its use).  It also takes advantage of using the <code>FDBDatabaseRunner</code> which helps with retrying of failed operations.</p>",
        "post_number": 6,
        "post_type": 1,
        "posts_count": 7,
        "updated_at": "2020-10-22T18:48:32.265Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 15,
        "reads": 69,
        "readers_count": 68,
        "score": 88.8,
        "yours": false,
        "topic_id": 2400,
        "topic_slug": "how-record-layer-provides-apis-to-handle-large-range-scan-longer-than-5-seconds",
        "display_username": "Scott Gray",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/FoundationDB/fdb-record-layer/blob/187cfbd68417d4cc412f5db9145aa4655994ef2c/fdb-record-layer-core/src/test/java/com/apple/foundationdb/record/provider/foundationdb/limits/FDBRecordStoreScanLimitTest.java#L230",
            "internal": false,
            "reflection": false,
            "title": "fdb-record-layer/FDBRecordStoreScanLimitTest.java at 187cfbd68417d4cc412f5db9145aa4655994ef2c \u00b7 FoundationDB/fdb-record-layer \u00b7 GitHub",
            "clicks": 11
          },
          {
            "url": "https://github.com/FoundationDB/fdb-record-layer/blob/2432438481709b7108eb800d30adbc46544dc2a3/fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/provider/foundationdb/FDBRecordStoreBase.java#L670",
            "internal": false,
            "reflection": false,
            "title": "fdb-record-layer/FDBRecordStoreBase.java at 2432438481709b7108eb800d30adbc46544dc2a3 \u00b7 FoundationDB/fdb-record-layer \u00b7 GitHub",
            "clicks": 8
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 34,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/how-record-layer-provides-apis-to-handle-large-range-scan-longer-than-5-seconds/2400/6",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 8176,
        "name": "Jun Li",
        "username": "jltz",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/j/c0e974/{size}.png",
        "created_at": "2020-10-23T10:45:49.196Z",
        "cooked": "<p><a class=\"mention\" href=\"/u/scgray\">@scgray</a>: thank you very much for the detailed explanation and code illustration! The following is what I learned from looking into record layer code based on the code examples that you showed above:</p>\n<p>(1) the exception on \u201ctransaction too old\u201d is defined as a retryable exception, in \u201cFDBExceptions.java\u201d.<br>\n(2)  FDBDatabaseRunner, defined in FDBDatabasRunnerImpl.java, has a private class called \u201cRunRetriable\u201d, and the whole retry logic is implemented in the method called \u201chandle\u201d. In particular,<br>\n<a href=\"https://github.com/FoundationDB/fdb-record-layer/blob/2432438481709b7108eb800d30adbc46544dc2a3/fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/provider/foundationdb/FDBDatabaseRunnerImpl.java#L243\" rel=\"noopener nofollow ugc\">https://github.com/FoundationDB/fdb-record-layer/blob/2432438481709b7108eb800d30adbc46544dc2a3/fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/provider/foundationdb/FDBDatabaseRunnerImpl.java#L243</a>.<br>\n(3) FDBRunner\u2019s runAsync <a href=\"https://github.com/FoundationDB/fdb-record-layer/blob/2432438481709b7108eb800d30adbc46544dc2a3/fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/provider/foundationdb/FDBDatabaseRunnerImpl.java#L305\" rel=\"noopener nofollow ugc\">https://github.com/FoundationDB/fdb-record-layer/blob/2432438481709b7108eb800d30adbc46544dc2a3/fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/provider/foundationdb/FDBDatabaseRunnerImpl.java#L305</a>, runs in a loop \u201cAsyncUtil.whileTrue()\u201d that in each iteration, a new transaction object is created and invoke \u201chandle\u201d described above.</p>\n<p>Following your suggestion, it seems that for range scan, what needs to specify is the scan limit, but no need for the scan time, as the 5-seconds limit will lead to the transaction-too-old transaction which is a retryable transaction, and then get handled automatically by FDBDataabseRunner (with max attempts configurable).</p>\n<p>Is the flow that I described above correctly, to handle transaction-too-old exception by the Record Layer?</p>\n<p>Following the transaction retry logic above, what about my third question that I raised earlier: on how to handle  iterator (or cursor) chaining in a processing pipeline?  Let\u2019s use the example of: FlatMapPipelinedCursor, that accepts two cursors. Supposed the first cursor encounter transaction restart internally,  (1) does the second cursor share the same transaction object defined in FoundationDB Runner? (2) if so, how the second cursor being forced to restart, as it is running fine without exception when the first cursor triggers the exception?</p>",
        "post_number": 7,
        "post_type": 1,
        "posts_count": 7,
        "updated_at": "2020-10-23T10:45:49.196Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 13,
        "reads": 56,
        "readers_count": 55,
        "score": 76.2,
        "yours": false,
        "topic_id": 2400,
        "topic_slug": "how-record-layer-provides-apis-to-handle-large-range-scan-longer-than-5-seconds",
        "display_username": "Jun Li",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/FoundationDB/fdb-record-layer/blob/2432438481709b7108eb800d30adbc46544dc2a3/fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/provider/foundationdb/FDBDatabaseRunnerImpl.java#L243",
            "internal": false,
            "reflection": false,
            "title": "fdb-record-layer/FDBDatabaseRunnerImpl.java at 2432438481709b7108eb800d30adbc46544dc2a3 \u00b7 FoundationDB/fdb-record-layer \u00b7 GitHub",
            "clicks": 4
          },
          {
            "url": "https://github.com/FoundationDB/fdb-record-layer/blob/2432438481709b7108eb800d30adbc46544dc2a3/fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/provider/foundationdb/FDBDatabaseRunnerImpl.java#L305",
            "internal": false,
            "reflection": false,
            "title": "fdb-record-layer/FDBDatabaseRunnerImpl.java at 2432438481709b7108eb800d30adbc46544dc2a3 \u00b7 FoundationDB/fdb-record-layer \u00b7 GitHub",
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 531,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/how-record-layer-provides-apis-to-handle-large-range-scan-longer-than-5-seconds/2400/7",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 8719,
        "name": "Scott Gray",
        "username": "scgray",
        "avatar_template": "/user_avatar/forums.foundationdb.org/scgray/{size}/30_2.png",
        "created_at": "2020-10-26T13:34:35.543Z",
        "cooked": "<p>Hi <a class=\"mention\" href=\"/u/jltz\">@jltz</a>.  I think the problem that you\u2019ll hit with the <code>AutoContinuingCursor</code> and its use of the <code>FDBDatabaseRunner</code> is that the retry loop will retry the <em>current</em> transaction on <code>transaction_too_old</code>, it will not move forward to the next point in the continuation.   Part of the reason for this is <code>FDBDatabaseRunner</code> doesn\u2019t know what work you were doing, and if the transaction contained writes, then by hitting that error, you would not have committed the writes and, thus, should not be moving forward (perhaps the <code>AutoContinuingCursor</code> would be updated to change that behavior, but technically, you <strong>can</strong> do writes within its transactions).  So, I would suggest always specifying a time limit if you want to use the <code>AutoContinuingCursor</code>, or you can roll your own similar logic that treats <code>transaction_too_old</code> differently.</p>\n<blockquote>\n<p>how to handle iterator (or cursor) chaining in a processing pipeline?  Let\u2019s use the example of: FlatMapPipelinedCursor, that accepts two cursors</p>\n</blockquote>\n<p>The proper way to create a <code>FlatMapPiplinedCursor</code> is with <code>RecordCursor.flatMapPipelined</code>, like so:</p>\n<pre><code>RecordCursor&lt;X&gt; cursor = RecordCursor.flatMapPiplined(\n    (continuation) -&gt; { ...create outer cursor from continuation... },\n    (continuation) -&gt; { ...create inner cursor from continuation... },\n    continuation,  /* null if you don't have a continuation yet */\n    10 /* pipeline size */);\n</code></pre>\n<p>When iterating, the <code>RecordCursor</code> will produce continuations that represent the combined continuation state of the outer and inner cursors.  This construction method will take this combined continuation, decompose it into the two outer/inner continuations, and call the lambdas provided to reconstitute those cursors in the correct state.</p>\n<p>An example can be found here: <a href=\"https://github.com/FoundationDB/fdb-record-layer/blob/f034a282e40428c450e82cd72d902fd73b6e5cdb/fdb-record-layer-core/src/test/java/com/apple/foundationdb/record/RecordCursorTest.java#L514\" rel=\"noopener nofollow ugc\">https://github.com/FoundationDB/fdb-record-layer/blob/f034a282e40428c450e82cd72d902fd73b6e5cdb/fdb-record-layer-core/src/test/java/com/apple/foundationdb/record/RecordCursorTest.java#L514</a></p>\n<blockquote>\n<p>Supposed the first cursor encounter transaction restart internally,</p>\n</blockquote>\n<p>That would imply the outer cursor was in a different transaction than the inner which seems like it would be a bad idea, however I think it wouldn\u2019t really matter.  The overall state of the <code>FlatMapPiplinedCursor</code> is really just the combined continuations of the two cursors, and the fact that those continuations came from different transactions shouldn\u2019t really matter (transactional consistency concerns aside).</p>\n<blockquote>\n<p>(1) does the second cursor share the same transaction object defined in FoundationDB Runner?</p>\n</blockquote>\n<p>It depends on how you constructed the outer/inner cursors.  If <em>each</em> of them are using their own <code>FDBDatabaseRunner</code>, then they would each have their own transaction and their own retry loop.  Again, I think this is probably a Bad Idea\u2122, but I guess one could invent a reason to want to do it.  But, if you are encapsulating the construction of the <code>FlatMapPiplinedCursor</code> itself and, thus, the inner/outer cursors within a runner, then provided you pass both of those cursors the same context, they are now in the same transaction (which, IMHO, is what you should be doing).</p>\n<blockquote>\n<p>(2) if so, how the second cursor being forced to restart, as it is running fine without exception when the first cursor triggers the exception?</p>\n</blockquote>\n<p>The continuation returned from the <code>FlatMapPiplinedCursor</code> is the combined continuations of the most recently returned values of the inner/outer cursors, thus it is always a valid continuation, whether or not either of the cursors were to go on to subsequently throw an exception on the next fetch.</p>",
        "post_number": 8,
        "post_type": 1,
        "posts_count": 7,
        "updated_at": "2020-10-26T13:34:35.543Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 14,
        "reads": 52,
        "readers_count": 51,
        "score": 85.4,
        "yours": false,
        "topic_id": 2400,
        "topic_slug": "how-record-layer-provides-apis-to-handle-large-range-scan-longer-than-5-seconds",
        "display_username": "Scott Gray",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/FoundationDB/fdb-record-layer/blob/f034a282e40428c450e82cd72d902fd73b6e5cdb/fdb-record-layer-core/src/test/java/com/apple/foundationdb/record/RecordCursorTest.java#L514",
            "internal": false,
            "reflection": false,
            "title": "fdb-record-layer/RecordCursorTest.java at f034a282e40428c450e82cd72d902fd73b6e5cdb \u00b7 FoundationDB/fdb-record-layer \u00b7 GitHub",
            "clicks": 5
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 34,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/how-record-layer-provides-apis-to-handle-large-range-scan-longer-than-5-seconds/2400/8",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 8721,
        "name": "Alec Grieser",
        "username": "alloc",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "created_at": "2020-10-26T16:41:45.163Z",
        "cooked": "<p>Regarding automatically restarting cursors on <code>transaction_too_old</code>:</p>\n<p>I think the things discussed in this thread are an accurate description of the current state of cursors, but I\u2019ve also thought about whether we should add something that allows for automatically executing cursors across (retriable) exception boundaries.</p>\n<p>I could see it happening one of two ways:</p>\n<ol>\n<li>We add a new <code>NoNextReason</code> that indicates that a retriable exception was hit, and if we hit <code>transaction_too_old</code> and friends, we return that instead of propagating the exception up, and each cursor terminates (just as if we hit a limit). Then we can use existing resumption logic to resume the cursor</li>\n<li>We add an option to the <code>AutoContinuingCursor</code> to catch retriable exceptions. It would need to keep track of all intermediate continuations in this case (but I think it already does), and then if it hits an error, it can resume the inner cursor from the last continuation just as if it had hit a limit.</li>\n</ol>\n<p>As is mentioned above, you\u2019d definitely only want one auto-continuing cursor in your cursor chain to avoid having multiple cursors using different databases (e.g., you wouldn\u2019t want the children of a <code>FlatMapPipelinedCursor</code> to be <code>AutoContinuingCursor</code>s\u2026), and I suppose the semantics of this make the most sense when the operations are read-only. (You might be able to make something like this work with read/write transactions, but it would be messy.)</p>",
        "post_number": 9,
        "post_type": 1,
        "posts_count": 7,
        "updated_at": "2020-10-26T16:41:45.163Z",
        "reply_count": 0,
        "reply_to_post_number": 8,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 50,
        "readers_count": 49,
        "score": 15.0,
        "yours": false,
        "topic_id": 2400,
        "topic_slug": "how-record-layer-provides-apis-to-handle-large-range-scan-longer-than-5-seconds",
        "display_username": "Alec Grieser",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 34,
          "username": "scgray",
          "name": "Scott Gray",
          "avatar_template": "/user_avatar/forums.foundationdb.org/scgray/{size}/30_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 8,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/how-record-layer-provides-apis-to-handle-large-range-scan-longer-than-5-seconds/2400/9",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 8869,
        "name": "Quang Le Hong",
        "username": "iamquang95",
        "avatar_template": "/user_avatar/forums.foundationdb.org/iamquang95/{size}/889_2.png",
        "created_at": "2020-12-10T03:25:25.043Z",
        "cooked": "<p>I\u2019m writing a large range scan, i split the large transaction to many small transactions. For each small transaction, i apply a function to modify records that are returned by this transaction. I\u2019m wondering is there any chance that the modified record is re-visited in later transactions?</p>\n<p>One more question, what if i\u2019m in the middle of a large range scan and there are some new records added to database. Will i visit these new records?</p>",
        "post_number": 10,
        "post_type": 1,
        "posts_count": 7,
        "updated_at": "2020-12-10T03:25:25.043Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 41,
        "readers_count": 40,
        "score": 13.2,
        "yours": false,
        "topic_id": 2400,
        "topic_slug": "how-record-layer-provides-apis-to-handle-large-range-scan-longer-than-5-seconds",
        "display_username": "Quang Le Hong",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 775,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/how-record-layer-provides-apis-to-handle-large-range-scan-longer-than-5-seconds/2400/10",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 8890,
        "name": "Scott Gray",
        "username": "scgray",
        "avatar_template": "/user_avatar/forums.foundationdb.org/scgray/{size}/30_2.png",
        "created_at": "2020-12-16T17:43:49.426Z",
        "cooked": "<p>For all of the answers below, I am assuming that you are talking about a simple range scan over a single range of keys.  The answers get more complex if we are talking about operations involving more complex cursor operations, such as joining different scans with mapped pipelines.</p>\n<blockquote>\n<p>I\u2019m wondering is there any chance that the modified record is re-visited in later transactions?</p>\n</blockquote>\n<p>If the modification involves modifying the row key such that it will appear after logically later in the scan, then yes you could see it again.  If you are not modifying the row key, then no you will not see it again.</p>\n<blockquote>\n<p>what if i\u2019m in the middle of a large range scan and there are some new records added to database. Will i visit these new records?</p>\n</blockquote>\n<p>If there are new records that are added to the database in the key range that you have not yet reached in your scan, then yes you will see them.  Records added in prior ranges you have visited will not be seen and, since transactions are serializable in FDB, you will not see records added within the range currently being scanned if they are added after your transaction has begun.</p>\n<p>At its heart, a scan is just a range scan, meaning that it is simply scanning a range of keys in either an ascending or descending direction.  A continuation is really just a record of the key that you last read so when you resume with a continuation, you are really just asking to start a new scan immediate after (for ascending scans) or before (for descending scans), the requested key.  When you think about things in these terms, it gets easier to reason about which keys you may or may not see as you continue your scan.</p>",
        "post_number": 11,
        "post_type": 1,
        "posts_count": 7,
        "updated_at": "2020-12-16T17:43:49.426Z",
        "reply_count": 0,
        "reply_to_post_number": 10,
        "quote_count": 0,
        "incoming_link_count": 3,
        "reads": 38,
        "readers_count": 37,
        "score": 37.6,
        "yours": false,
        "topic_id": 2400,
        "topic_slug": "how-record-layer-provides-apis-to-handle-large-range-scan-longer-than-5-seconds",
        "display_username": "Scott Gray",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 775,
          "username": "iamquang95",
          "name": "Quang Le Hong",
          "avatar_template": "/user_avatar/forums.foundationdb.org/iamquang95/{size}/889_2.png"
        },
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 34,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/how-record-layer-provides-apis-to-handle-large-range-scan-longer-than-5-seconds/2400/11",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      8123,
      8149,
      8176,
      8719,
      8721,
      8869,
      8890
    ]
  },
  "timeline_lookup": [
    [
      1,
      1827
    ],
    [
      2,
      1825
    ],
    [
      3,
      1824
    ],
    [
      4,
      1821
    ],
    [
      6,
      1777
    ],
    [
      7,
      1770
    ]
  ],
  "suggested_topics": [],
  "tags": [
    "bindings"
  ],
  "tags_descriptions": {},
  "fancy_title": "How Record Layer Provides APIs to Handle Large Range Scan Longer Than 5 seconds",
  "id": 2400,
  "title": "How Record Layer Provides APIs to Handle Large Range Scan Longer Than 5 seconds",
  "posts_count": 7,
  "created_at": "2020-10-21T09:53:59.939Z",
  "views": 1805,
  "reply_count": 2,
  "like_count": 1,
  "last_posted_at": "2020-12-16T17:43:49.426Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "how-record-layer-provides-apis-to-handle-large-range-scan-longer-than-5-seconds",
  "category_id": 12,
  "word_count": 2346,
  "deleted_at": null,
  "user_id": 531,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_2400",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 11,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 4,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "Large Range Scans - avoid 5s limit",
      "id": 292,
      "title": "Large Range Scans - avoid 5s limit",
      "slug": "large-range-scans-avoid-5s-limit",
      "posts_count": 35,
      "reply_count": 26,
      "highest_post_number": 36,
      "image_url": null,
      "created_at": "2018-04-27T16:55:36.641Z",
      "last_posted_at": "2022-09-12T17:09:06.929Z",
      "bumped": true,
      "bumped_at": "2022-09-12T17:09:06.929Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 23,
      "views": 7854,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 695,
            "username": "nischalkumar",
            "name": "nischal kumar",
            "avatar_template": "/user_avatar/forums.foundationdb.org/nischalkumar/{size}/933_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 711,
            "username": "osamarin",
            "name": "Oleg Samarin",
            "avatar_template": "/user_avatar/forums.foundationdb.org/osamarin/{size}/905_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 15,
            "username": "markus.pilman",
            "name": "Markus Pilman",
            "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 997,
            "username": "mping",
            "name": "Miguel Ping",
            "avatar_template": "/user_avatar/forums.foundationdb.org/mping/{size}/1180_2.png",
            "trust_level": 1
          }
        }
      ]
    },
    {
      "fancy_title": "Scanning a large range with Locality API hangs",
      "id": 2183,
      "title": "Scanning a large range with Locality API hangs",
      "slug": "scanning-a-large-range-with-locality-api-hangs",
      "posts_count": 13,
      "reply_count": 10,
      "highest_post_number": 13,
      "image_url": null,
      "created_at": "2020-06-15T13:08:44.375Z",
      "last_posted_at": "2020-08-12T17:02:10.244Z",
      "bumped": true,
      "bumped_at": "2020-08-12T17:02:10.244Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 1961,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 711,
            "username": "osamarin",
            "name": "Oleg Samarin",
            "avatar_template": "/user_avatar/forums.foundationdb.org/osamarin/{size}/905_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 799,
            "username": "SarthakGhosh16",
            "name": "Sarthak Ghosh16",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/ba9def/{size}.png",
            "trust_level": 1
          }
        }
      ]
    },
    {
      "fancy_title": "Consistency of queries using continuation cursor",
      "id": 1694,
      "title": "Consistency of queries using continuation cursor",
      "slug": "consistency-of-queries-using-continuation-cursor",
      "posts_count": 6,
      "reply_count": 3,
      "highest_post_number": 6,
      "image_url": null,
      "created_at": "2019-10-22T21:05:26.451Z",
      "last_posted_at": "2019-10-23T17:12:25.547Z",
      "bumped": true,
      "bumped_at": "2019-10-23T17:12:25.547Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 2,
      "views": 1552,
      "category_id": 12,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 545,
            "username": "rishabh",
            "name": "Rishabh",
            "avatar_template": "/user_avatar/forums.foundationdb.org/rishabh/{size}/540_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 485,
            "username": "nblintao",
            "name": "Tao Lin",
            "avatar_template": "/user_avatar/forums.foundationdb.org/nblintao/{size}/484_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "A few design-pattern + check-my-understanding questions",
      "id": 1153,
      "title": "A few design-pattern + check-my-understanding questions",
      "slug": "a-few-design-pattern-check-my-understanding-questions",
      "posts_count": 10,
      "reply_count": 6,
      "highest_post_number": 10,
      "image_url": null,
      "created_at": "2019-02-19T15:18:58.329Z",
      "last_posted_at": "2019-02-21T19:51:53.686Z",
      "bumped": true,
      "bumped_at": "2019-02-21T19:51:53.686Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 2273,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 519,
            "username": "JamesThompson",
            "name": "James Thompson",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/j/c67d28/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 173,
            "username": "jkominek",
            "name": "Jay Kominek",
            "avatar_template": "/user_avatar/forums.foundationdb.org/jkominek/{size}/140_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "FoundationDB as backend for JanusGraph - Iterate through all vertices",
      "id": 2280,
      "title": "FoundationDB as backend for JanusGraph - Iterate through all vertices",
      "slug": "foundationdb-as-backend-for-janusgraph-iterate-through-all-vertices",
      "posts_count": 4,
      "reply_count": 2,
      "highest_post_number": 4,
      "image_url": null,
      "created_at": "2020-08-06T18:41:32.903Z",
      "last_posted_at": "2020-08-10T03:42:01.690Z",
      "bumped": true,
      "bumped_at": "2020-08-10T10:38:29.945Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 2118,
      "category_id": 14,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 799,
            "username": "SarthakGhosh16",
            "name": "Sarthak Ghosh16",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/ba9def/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 34,
        "username": "scgray",
        "name": "Scott Gray",
        "avatar_template": "/user_avatar/forums.foundationdb.org/scgray/{size}/30_2.png",
        "post_count": 3,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 531,
        "username": "jltz",
        "name": "Jun Li",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/j/c0e974/{size}.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 8,
        "username": "alloc",
        "name": "Alec Grieser",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      },
      {
        "id": 775,
        "username": "iamquang95",
        "name": "Quang Le Hong",
        "avatar_template": "/user_avatar/forums.foundationdb.org/iamquang95/{size}/889_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      }
    ],
    "created_by": {
      "id": 531,
      "username": "jltz",
      "name": "Jun Li",
      "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/j/c0e974/{size}.png"
    },
    "last_poster": {
      "id": 34,
      "username": "scgray",
      "name": "Scott Gray",
      "avatar_template": "/user_avatar/forums.foundationdb.org/scgray/{size}/30_2.png"
    },
    "links": [
      {
        "url": "https://github.com/FoundationDB/fdb-record-layer/blob/187cfbd68417d4cc412f5db9145aa4655994ef2c/fdb-record-layer-core/src/test/java/com/apple/foundationdb/record/provider/foundationdb/limits/FDBRecordStoreScanLimitTest.java#L230",
        "title": "fdb-record-layer/FDBRecordStoreScanLimitTest.java at 187cfbd68417d4cc412f5db9145aa4655994ef2c \u00b7 FoundationDB/fdb-record-layer \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 11,
        "user_id": 34,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://github.com/FoundationDB/fdb-record-layer/blob/master/docs/FAQ.md",
        "title": "fdb-record-layer/FAQ.md at master \u00b7 FoundationDB/fdb-record-layer \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 10,
        "user_id": 531,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://github.com/FoundationDB/fdb-record-layer/blob/2432438481709b7108eb800d30adbc46544dc2a3/fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/provider/foundationdb/FDBRecordStoreBase.java#L670",
        "title": "fdb-record-layer/FDBRecordStoreBase.java at 2432438481709b7108eb800d30adbc46544dc2a3 \u00b7 FoundationDB/fdb-record-layer \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 8,
        "user_id": 34,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://github.com/FoundationDB/fdb-record-layer/blob/f034a282e40428c450e82cd72d902fd73b6e5cdb/fdb-record-layer-core/src/test/java/com/apple/foundationdb/record/RecordCursorTest.java#L514",
        "title": "fdb-record-layer/RecordCursorTest.java at f034a282e40428c450e82cd72d902fd73b6e5cdb \u00b7 FoundationDB/fdb-record-layer \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 5,
        "user_id": 34,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://github.com/FoundationDB/fdb-record-layer/blob/2432438481709b7108eb800d30adbc46544dc2a3/fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/provider/foundationdb/FDBDatabaseRunnerImpl.java#L243",
        "title": "fdb-record-layer/FDBDatabaseRunnerImpl.java at 2432438481709b7108eb800d30adbc46544dc2a3 \u00b7 FoundationDB/fdb-record-layer \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 4,
        "user_id": 531,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://apple.github.io/foundationdb/api-error-codes.html",
        "title": "Error Codes \u2014 FoundationDB 6.2",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 2,
        "user_id": 531,
        "domain": "apple.github.io",
        "root_domain": "apple.github.io"
      }
    ]
  },
  "bookmarks": []
}