{
  "post_stream": {
    "posts": [
      {
        "id": 2342,
        "name": "",
        "username": "atombender",
        "avatar_template": "/user_avatar/forums.foundationdb.org/atombender/{size}/688_2.png",
        "created_at": "2018-10-15T21:10:57.591Z",
        "cooked": "<p>It\u2019s unclear from the documentation, particularly those for the Go bindings, how you can construct a selector range which doesn\u2019t have an explicit end.</p>\n<p>For example, assume that tuples are <code>{\"age\", &lt;n&gt;}</code>. You can easily do a search starting at the beginning:</p>\n<pre><code class=\"lang-auto\">result := tx.GetRange(fdb.SelectorRange{\n  Begin: fdb.FirstGreaterThan(tuple.Tuple{\"age\"}),\n  End: fdb.LastLessThan(tuple.Tuple{\"age\", 100},\n}), fdb.RangeOptions{})\n</code></pre>\n<p>This will find all records from the lowest age up to <code>{age, 99}</code>. However, it\u2019s unclear to me how to create an \u201copen\u201d range (i.e. corresponding to SQL <code>age &gt; 30</code>). Frequently in the documentation <code>\\xFF</code> is used as a placeholder, but this doesn\u2019t work:</p>\n<pre><code class=\"lang-auto\">result := tx.GetRange(fdb.SelectorRange{\n  Begin: fdb.FirstGreaterThan(tuple.Tuple{\"age\"}),\n  End: fdb.LastLessThan(tuple.Tuple{\"age\", \"\\xFF\"},\n}), fdb.RangeOptions{})\n</code></pre>\n<p>Using <code>End: fdb.LastLessThan(fdb.Key(\"\\xFF\"))</code> does work, but this obviously spills into other, unrelated tuple prefixes.</p>\n<p>I could also just use a synthetic maximum: <code>fdb.LastLessThan(tuple.Tuple{\"age\", 2147483648})</code>. I would like to avoid that.</p>\n<p>(It\u2019d be nice if <code>Begin: nil</code> and <code>End: nil</code> actually were valid offsets.)</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 13,
        "updated_at": "2018-10-15T21:16:54.480Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 965,
        "reads": 86,
        "readers_count": 85,
        "score": 4847.2,
        "yours": false,
        "topic_id": 773,
        "topic_slug": "ranges-without-explicit-end-go",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 3,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://forums.foundationdb.org/t/range-keys-for-subspace-dont-include-first-or-last-key/2337",
            "internal": true,
            "reflection": true,
            "title": "Range keys for subspace don't include first or last key",
            "clicks": 2
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 391,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/ranges-without-explicit-end-go/773/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 2345,
        "name": "Christophe Chevalier",
        "username": "KrzysFR",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "created_at": "2018-10-15T22:45:49.381Z",
        "cooked": "<p>There <em>really</em> needs to be a big red warning on top of the documentation about tuples and tuple encoding, because I see a lot of people falling victim of the same pitfall:</p>\n<ul>\n<li>Strings, in the tuple encoding, are escaped as <code>0x02</code> followed by the utf-8 bytes, and terminated by a NUL byte, so <code>\"\\xFF\"</code> is <em>not</em> the <code>FF</code> byte (a single byte), but the string composed of a single character with code point 255, which translates to <code>02 FF 00</code> (well not really, code point 255 would be encoded by UTF-8 into some sequence of bytes that I don\u2019t remember off the top of my head, but you get the point).</li>\n<li>Integers use a smart trick to preserve ordering, and 0 is encoded as <code>14</code>, and small integers (&lt;255) are encoded as <code>15 xx</code>, then <code>16 xx yy</code> for 2-byte integers and so on.</li>\n</ul>\n<p>So, the tuple {\u2026, \u201c\\xFF\u201d }, once transformed into bytes by the tuple encoding, represents a key that is actually <em>BEFORE</em>  the tuple {\u2026, 1} ! (<code>... 02 FF 00</code> &lt; <code>.... 15 01</code>).</p>\n<p>If the end key selector is <em>less than</em>  the begin key selector, the set is by definition empty and your get_range will never return anything! <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=6\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\"></p>\n<p>If you want to generate a byte sequence that will always be greater than whatever value (or type!) you could fit in the last element for the age value, you would need to provide of a custom token that would be recognized by the tuple encoder as a special value that outputs as a single <code>FF</code> byte. So not a string, integer, or any other common type. I don\u2019t know if the go implementation has this special singleton or not\u2026</p>\n<p>And of course, you could also use a different encoding scheme than the tuple encoding (which is used by default, but is not the only one possible!) and you\u2019d still want to be able to do that.</p>\n<p>If you want a <em>generic</em>  way to create such an open ended range, there are two ways:</p>\n<ol>\n<li>\n<p>add a single <code>FF</code> byte at the end of <em>the result of packing the tuple</em>  (i.e: add it to the resulting byte array, <em>not</em> the tuple\u2019s items). So encode the tuple <code>{\"age\", }</code> into bytes (will output something like <code>02 a g e 00</code>) and append to that the <code>FF</code> byte (to get <code>02 a g e 00 FF</code>). With most tuple encoders, this would <em>NOT</em> be a valid encoding (since FF is not a valid type header). Other encoders may accept the <code>FF</code> anyway, depends on the binding`s implementation.</p>\n</li>\n<li>\n<p>increment the last byte of the key prefix, so for our tuple above, \u201802 a g e 00\u2019 + 1 = <code>02 a g e 01</code>. Again, this is NOT a valid tuple encoding (un-terminated string). If the last byte is already <code>FF</code> then carry the one like regular addition in base 10.</p>\n</li>\n</ol>\n<p>But in both cases, all possible tuples <code>{ \"age\", &lt;some_int&gt; }</code> are less than both <code>02 a g e 00 FF</code> and <code>02 a g e 01</code>.</p>\n<p>The first solution works for tuple encoding, because it NEVER* produces with items that starts with FF (*: some do! <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=6\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\"> ), but other encodings MAY NOT, so solution 2. is universal, while 1. is a bit easier to do in practice and works fine with tuples.</p>\n<p>I think in most bindings, there is a method called <code>increment</code> (or with increment in the name) that does that for you.</p>\n<p>\u2013<br>\nEdit: so yeah, if the <code>go</code> binding would introduce some singleton of a custom type (let\u2019s call it <code>ALEPH_0</code>), that would be encoded as <code>FF</code> then you could write <code>fdb.lastLessThan(tuple.Tuple(\"age\", ALEPH_0))</code> to get what you want. This would not be a canonical encoding with the current spec, though. In the mean time, when dealing with integers, you can cheat a little and think of <code>2147483648</code> as the best approximation of ALEPH_0 we can use right know <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=6\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\"> )</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 13,
        "updated_at": "2018-10-15T23:00:15.399Z",
        "reply_count": 2,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 302,
        "reads": 80,
        "readers_count": 79,
        "score": 1566.0,
        "yours": false,
        "topic_id": 773,
        "topic_slug": "ranges-without-explicit-end-go",
        "display_username": "Christophe Chevalier",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 3,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 2
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 53,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/ranges-without-explicit-end-go/773/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 2349,
        "name": "Alec Grieser",
        "username": "alloc",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "created_at": "2018-10-16T18:00:41.025Z",
        "cooked": "<p>Firstly, \u2135<sub>0</sub> would be a pretty chill constant.</p>\n<p>It looks like the go bindings are missing that increment method, and in fact, both the tuple and subspace layers re-implement a <code>concat</code> method to concatenate methods together. I filed an issue about this: <a href=\"https://github.com/apple/foundationdb/issues/846\">https://github.com/apple/foundationdb/issues/846</a></p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 13,
        "updated_at": "2018-10-16T18:00:41.025Z",
        "reply_count": 0,
        "reply_to_post_number": 2,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 66,
        "readers_count": 65,
        "score": 48.2,
        "yours": false,
        "topic_id": 773,
        "topic_slug": "ranges-without-explicit-end-go",
        "display_username": "Alec Grieser",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/apple/foundationdb/issues/846",
            "internal": false,
            "reflection": false,
            "title": "Add byte array \"increment\" method to go bindings \u00b7 Issue #846 \u00b7 apple/foundationdb \u00b7 GitHub",
            "clicks": 33
          }
        ],
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 53,
          "username": "KrzysFR",
          "name": "Christophe Chevalier",
          "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png"
        },
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 2
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 8,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/ranges-without-explicit-end-go/773/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 2352,
        "name": "",
        "username": "atombender",
        "avatar_template": "/user_avatar/forums.foundationdb.org/atombender/{size}/688_2.png",
        "created_at": "2018-10-16T20:32:25.624Z",
        "cooked": "<p>Ack. Thanks for the detailed explanation, this clears up a few things!</p>\n<p>I guess I\u2019m somewhat tripped up by how FoundationDB\u2019s client API is so low-level, or rather that the tuple encoding seems to be an explicit part of the API, something you wouldn\u2019t see with, say, PostgreSQL. I understand the necessity, to an extent, but the Go API (which, being Go, doesn\u2019t distinguish between bytes and strings) doesn\u2019t make it easier.</p>\n<p>A special singleton to represent the <code>FF</code> would certainly help.</p>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 13,
        "updated_at": "2018-10-16T20:32:25.624Z",
        "reply_count": 1,
        "reply_to_post_number": 2,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 64,
        "readers_count": 63,
        "score": 17.8,
        "yours": false,
        "topic_id": 773,
        "topic_slug": "ranges-without-explicit-end-go",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 53,
          "username": "KrzysFR",
          "name": "Christophe Chevalier",
          "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 391,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/ranges-without-explicit-end-go/773/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 2353,
        "name": "Christophe Chevalier",
        "username": "KrzysFR",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "created_at": "2018-10-16T20:41:36.565Z",
        "cooked": "<p>The Tuple encoding is indeed maybe too much coupled with some bindings\u2026 It is such a useful tool because it allows you to think about your data in term of vectors, instead of raw bytes, that after a while you start forgetting that it is only a convention on how to encode keys. But sometimes you have to come back down to earth and remember that the API is very low level indeed and that in the end you can decide to encode things however you like.</p>\n<p>I tried to solve this issue with the .NET binding (ability to have custom encodings and type systems) but the complexity goes up to 11 immediately. You are now introducing encoding schemes, encoders/decoders, dynamic vs statically typed, fixed vs arbitrary length, vector manipulation, negative indexing, tuple deconstruction, etc\u2026 You really need to already have a good grip on what\u2019s going on under the hood (at the byte level), before being able to understand <em>why</em> you need a complex type system like this.</p>",
        "post_number": 5,
        "post_type": 1,
        "posts_count": 13,
        "updated_at": "2018-10-16T20:42:44.821Z",
        "reply_count": 0,
        "reply_to_post_number": 4,
        "quote_count": 0,
        "incoming_link_count": 5,
        "reads": 64,
        "readers_count": 63,
        "score": 52.8,
        "yours": false,
        "topic_id": 773,
        "topic_slug": "ranges-without-explicit-end-go",
        "display_username": "Christophe Chevalier",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 391,
          "username": "atombender",
          "name": "",
          "avatar_template": "/user_avatar/forums.foundationdb.org/atombender/{size}/688_2.png"
        },
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 53,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/ranges-without-explicit-end-go/773/5",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 2410,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2018-10-22T16:35:36.163Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"atombender\" data-post=\"1\" data-topic=\"773\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/atombender/48/688_2.png\" class=\"avatar\"> atombender:</div>\n<blockquote>\n<p>This will find all records from the lowest age up to <code>{age, 99}</code> . However, it\u2019s unclear to me how to create an \u201copen\u201d range (i.e. corresponding to SQL <code>age &gt; 30</code> ). Frequently in the documentation <code>\\xFF</code> is used as a placeholder, but this doesn\u2019t work:</p>\n</blockquote>\n</aside>\n<p>The Tuple APIs should all support querying a Tuple range that will return the sub-elements of a Tuple (e.g. for your tuple <code>{\"age\", &lt;n&gt;}</code>, you could query all elements starting with <code>{\"age\",}</code>. Note that this range excludes the prefix tuple itself, so if you have a key <code>{\"age\"}</code>, it won\u2019t return that.</p>\n<p>In Go, you would do this with <a href=\"https://godoc.org/github.com/apple/foundationdb/bindings/go/src/fdb/tuple#Tuple.FDBRangeKeys\" class=\"inline-onebox\">tuple package - github.com/apple/foundationdb/bindings/go/src/fdb/tuple - Go Packages</a>. If you want to perform a query like <code>age &gt; 30</code>, then you could probably create a new range that sets the begin key to be <code>fdb.FirstGreaterThan(tuple.Tuple{\"age\",30})</code> and the end key to be the one extracted from the Tuple range.</p>",
        "post_number": 6,
        "post_type": 1,
        "posts_count": 13,
        "updated_at": "2018-10-22T16:35:36.163Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 1,
        "incoming_link_count": 3,
        "reads": 55,
        "readers_count": 54,
        "score": 31.0,
        "yours": false,
        "topic_id": 773,
        "topic_slug": "ranges-without-explicit-end-go",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://godoc.org/github.com/apple/foundationdb/bindings/go/src/fdb/tuple#Tuple.FDBRangeKeys",
            "internal": false,
            "reflection": false,
            "title": "tuple - GoDoc",
            "clicks": 22
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/ranges-without-explicit-end-go/773/6",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 2411,
        "name": "",
        "username": "atombender",
        "avatar_template": "/user_avatar/forums.foundationdb.org/atombender/{size}/688_2.png",
        "created_at": "2018-10-22T16:40:42.042Z",
        "cooked": "<blockquote>\n<p>and the end key to be the one extracted from the Tuple range.</p>\n</blockquote>\n<p>What do you mean by \u201cthe one extracted from the Tuple range\u201d? Determining what the end key should be is the point of my question. <a href=\"https://forums.foundationdb.org/t/ranges-without-explicit-end-go/773/2\">The above comment</a> already provides the solution, by the way.</p>",
        "post_number": 7,
        "post_type": 1,
        "posts_count": 13,
        "updated_at": "2018-10-22T16:40:42.042Z",
        "reply_count": 1,
        "reply_to_post_number": 6,
        "quote_count": 0,
        "incoming_link_count": 3,
        "reads": 50,
        "readers_count": 49,
        "score": 30.0,
        "yours": false,
        "topic_id": 773,
        "topic_slug": "ranges-without-explicit-end-go",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 12,
          "username": "ajbeamon",
          "name": "A.J. Beamon",
          "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 391,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/ranges-without-explicit-end-go/773/7",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 2413,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2018-10-22T16:57:03.589Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"atombender\" data-post=\"7\" data-topic=\"773\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://sea1.discourse-cdn.com/foundationdb/user_avatar/forums.foundationdb.org/atombender/48/688_2.png\" class=\"avatar\"> atombender:</div>\n<blockquote>\n<p>What do you mean by \u201cthe one extracted from the Tuple range\u201d? Determining what the end key should be is the point of my question. <a href=\"https://forums.foundationdb.org/t/ranges-without-explicit-end-go/773/2\">The above comment</a> already provides the solution, by the way.</p>\n</blockquote>\n</aside>\n<p>There\u2019s a function in the API already to produce a Tuple range (see the link in my comment) which is intended to make it easy to do the query you were trying to perform. If you wanted only one half of that range (e.g. the end key), then you could create the range and grab the end key out of it.</p>",
        "post_number": 8,
        "post_type": 1,
        "posts_count": 13,
        "updated_at": "2018-10-22T16:57:03.589Z",
        "reply_count": 1,
        "reply_to_post_number": 7,
        "quote_count": 1,
        "incoming_link_count": 0,
        "reads": 50,
        "readers_count": 49,
        "score": 15.0,
        "yours": false,
        "topic_id": 773,
        "topic_slug": "ranges-without-explicit-end-go",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/ranges-without-explicit-end-go/773/8",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 2414,
        "name": "",
        "username": "atombender",
        "avatar_template": "/user_avatar/forums.foundationdb.org/atombender/{size}/688_2.png",
        "created_at": "2018-10-22T18:31:11.648Z",
        "cooked": "<p>Still not sure what you men by \u201cgrab the end key out of it\u201d. Do you mean to actually query FDB to find the last key, then plug that into the range query? I\u2019d want to avoid the round trip.</p>\n<p>You shouldn\u2019t need to ask FDB for keys in order to do an \u201copen\u201d range query. All you want is either the key that sorts lexicographically after the highest possible key (so <code>tuple.Tuple{\"age\"} + 1</code> or <code>tuple.Tuple{\"age\", ALEPH_0}</code>, as <a class=\"mention\" href=\"/u/krzysfr\">@KrzysFR</a> explained. My problem was that I was using <code>0xFF</code> (the <code>ALELPH_0</code>) inside the tuple encoding instead of outside it.</p>",
        "post_number": 9,
        "post_type": 1,
        "posts_count": 13,
        "updated_at": "2018-10-22T18:31:11.648Z",
        "reply_count": 2,
        "reply_to_post_number": 8,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 47,
        "readers_count": 46,
        "score": 24.4,
        "yours": false,
        "topic_id": 773,
        "topic_slug": "ranges-without-explicit-end-go",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 12,
          "username": "ajbeamon",
          "name": "A.J. Beamon",
          "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 391,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/ranges-without-explicit-end-go/773/9",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 2417,
        "name": "Christophe Chevalier",
        "username": "KrzysFR",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "created_at": "2018-10-22T18:56:42.063Z",
        "cooked": "<p>I think <a class=\"mention\" href=\"/u/ajbeamon\">@ajbeamon</a> meant to call <code>FDBRangeKeys()</code> and use the second element of the pair that is returned, as the  key of your end selector.</p>\n<p>Key selectors can point to non-existent keys in the database, so you don\u2019t need to actually do a read to get the last key, and use that for the range. It is most probable that the <code>FDBRangeKeys</code> helper either appends a 0xFF byte, or increment the whole key, so it does what you want already.</p>",
        "post_number": 10,
        "post_type": 1,
        "posts_count": 13,
        "updated_at": "2018-10-22T18:56:42.063Z",
        "reply_count": 0,
        "reply_to_post_number": 9,
        "quote_count": 0,
        "incoming_link_count": 16,
        "reads": 45,
        "readers_count": 44,
        "score": 89.0,
        "yours": false,
        "topic_id": 773,
        "topic_slug": "ranges-without-explicit-end-go",
        "display_username": "Christophe Chevalier",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 391,
          "username": "atombender",
          "name": "",
          "avatar_template": "/user_avatar/forums.foundationdb.org/atombender/{size}/688_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 53,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/ranges-without-explicit-end-go/773/10",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 2418,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2018-10-22T19:02:03.102Z",
        "cooked": "<p>Here is an example to demonstrate what I mean:</p>\n<pre><code>_, e := db.Transact(func(tr fdb.Transaction) (interface{}, error) {\n\ttr.Set(tuple.Tuple{\"age\", 30}, []byte(\"test\"))\n\ttr.Set(tuple.Tuple{\"age\", 31}, []byte(\"test\"))\n\treturn nil, nil\n})\n\nif e != nil {\n\tlog.Fatalf(\"Unable to perform FDB transaction (%v)\", e)\n}\n\nfmt.Printf(\"All ages:\\n\")\ndb.Transact(func(tr fdb.Transaction) (interface{}, error) {\n\tt := tuple.Tuple{\"age\"}\n\tr := tr.GetRange(t, fdb.RangeOptions{}).GetSliceOrPanic()\n\n\tfor _, kv := range r {\n\t\tt, _ := tuple.Unpack(kv.Key)\n\t\tfmt.Printf(\"%d = %s\\n\", t[1].(int64), string(kv.Value))\n\t}\n\n\treturn nil, nil\n})\n\nfmt.Printf(\"\\nage &gt; 30:\\n\")\ndb.Transact(func(tr fdb.Transaction) (interface{}, error) {\n\tt := tuple.Tuple{\"age\"}\n\t_, endKey := t.FDBRangeKeys()\n\n\tr := tr.GetRange(fdb.SelectorRange{\n\t\tfdb.FirstGreaterThan(tuple.Tuple{\"age\", 30}),\n\t\tfdb.FirstGreaterOrEqual(endKey),\n\t}, fdb.RangeOptions{}).GetSliceOrPanic()\n\n\tfor _, kv := range r {\n\t\tt, _ := tuple.Unpack(kv.Key)\n\t\tfmt.Printf(\"%d = %s\\n\", t[1].(int64), string(kv.Value))\n\t}\n\n\treturn nil, nil\n})\n</code></pre>\n<p>And the result:</p>\n<pre><code>All ages:\n30 = test\n31 = test\n\nage &gt; 30:\n31 = test</code></pre>",
        "post_number": 11,
        "post_type": 1,
        "posts_count": 13,
        "updated_at": "2018-10-23T03:36:47.404Z",
        "reply_count": 1,
        "reply_to_post_number": 9,
        "quote_count": 0,
        "incoming_link_count": 24,
        "reads": 45,
        "readers_count": 44,
        "score": 134.0,
        "yours": false,
        "topic_id": 773,
        "topic_slug": "ranges-without-explicit-end-go",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 391,
          "username": "atombender",
          "name": "",
          "avatar_template": "/user_avatar/forums.foundationdb.org/atombender/{size}/688_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/ranges-without-explicit-end-go/773/11",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 2436,
        "name": null,
        "username": "num",
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/n/db5fbb/{size}.png",
        "created_at": "2018-10-25T06:18:59.304Z",
        "cooked": "<p>Go Bindings allow you to use just a key prefix to create a range for all keys with that prefix:</p>\n<pre><code> myRange, err := fdb.PrefixRange(prefixKey)\n myRangeIterator := tr.GetRange(myRange, fdb.RangeOptions{}).Iterator()\n for myRangeIterator.Advance() {\n     kv := myRangeIterator.MustGet()\n     // some code\n }\n</code></pre>\n<p>This should solve your problem.</p>",
        "post_number": 12,
        "post_type": 1,
        "posts_count": 13,
        "updated_at": "2018-10-25T22:29:35.769Z",
        "reply_count": 1,
        "reply_to_post_number": 11,
        "quote_count": 0,
        "incoming_link_count": 7,
        "reads": 42,
        "readers_count": 41,
        "score": 48.4,
        "yours": false,
        "topic_id": 773,
        "topic_slug": "ranges-without-explicit-end-go",
        "display_username": null,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 5,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 12,
          "username": "ajbeamon",
          "name": "A.J. Beamon",
          "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 378,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/ranges-without-explicit-end-go/773/12",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 2437,
        "name": "A.J. Beamon",
        "username": "ajbeamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "created_at": "2018-10-25T14:38:53.425Z",
        "cooked": "<aside class=\"quote no-group\" data-username=\"num\" data-post=\"12\" data-topic=\"773\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://avatars.discourse-cdn.com/v4/letter/n/db5fbb/48.png\" class=\"avatar\"> num:</div>\n<blockquote>\n<p>Go Bindings allow you to use just a key prefix to create a range for all keys with that prefix:</p>\n</blockquote>\n</aside>\n<p>This is very similar to the example using a <code>Tuple</code> as a range with a couple differences:</p>\n<ol>\n<li>The beginning of the range is inclusive of the prefix, whereas with a tuple range the prefix tuple is itself excluded.</li>\n<li>The end key is equal to the begin key with the last byte incremented. This means that every key with the given prefix will be included. With tuple ranges, the range end will be larger than any valid packed tuple with the given tuple prefix, but there are some keys which are not valid tuples that have that prefix and would be excluded.</li>\n</ol>\n<p>You can also do the same thing with <code>PrefixRange</code> that I described with <code>t.FDBRangeKeys()</code> if you want to customize the beginning of your range. Specifically, you could create a <code>SelectorRange</code> with your desired beginning and the end copied from the <code>PrefixRange</code>. Or, you could just use <a href=\"https://godoc.org/github.com/apple/foundationdb/bindings/go/src/fdb#Strinc\">Strinc</a> directly to create your end key (this function is apparently not documented, but it returns the first key that doesn\u2019t have the specified key as a prefix).</p>\n<p>If you are using exclusively tuples as your keys in the range being queried, then passing in your <code>Tuple</code> as the range is likely the more straightforward approach. If you aren\u2019t using tuples or if you have a mixture of keys that includes some that aren\u2019t tuples, it\u2019ll probably be safer to use the <code>PrefixRange</code>.</p>",
        "post_number": 13,
        "post_type": 1,
        "posts_count": 13,
        "updated_at": "2018-10-25T14:39:23.022Z",
        "reply_count": 0,
        "reply_to_post_number": 12,
        "quote_count": 1,
        "incoming_link_count": 8,
        "reads": 39,
        "readers_count": 38,
        "score": 62.8,
        "yours": false,
        "topic_id": 773,
        "topic_slug": "ranges-without-explicit-end-go",
        "display_username": "A.J. Beamon",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://godoc.org/github.com/apple/foundationdb/bindings/go/src/fdb#Strinc",
            "internal": false,
            "reflection": false,
            "title": "fdb - GoDoc",
            "clicks": 11
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 12,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/ranges-without-explicit-end-go/773/13",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      2342,
      2345,
      2349,
      2352,
      2353,
      2410,
      2411,
      2413,
      2414,
      2417,
      2418,
      2436,
      2437
    ]
  },
  "timeline_lookup": [
    [
      1,
      2563
    ],
    [
      3,
      2562
    ],
    [
      6,
      2556
    ],
    [
      12,
      2554
    ],
    [
      13,
      2553
    ]
  ],
  "suggested_topics": [],
  "tags": [
    "bindings"
  ],
  "tags_descriptions": {},
  "fancy_title": "Ranges without explicit end (Go)",
  "id": 773,
  "title": "Ranges without explicit end (Go)",
  "posts_count": 13,
  "created_at": "2018-10-15T21:10:57.504Z",
  "views": 3281,
  "reply_count": 10,
  "like_count": 6,
  "last_posted_at": "2018-10-25T14:38:53.425Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "ranges-without-explicit-end-go",
  "category_id": 7,
  "word_count": 2186,
  "deleted_at": null,
  "user_id": 391,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_773",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 13,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 5,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "Range-reading all key-values",
      "id": 1647,
      "title": "Range-reading all key-values",
      "slug": "range-reading-all-key-values",
      "posts_count": 3,
      "reply_count": 1,
      "highest_post_number": 3,
      "image_url": null,
      "created_at": "2019-09-23T22:11:27.790Z",
      "last_posted_at": "2019-09-23T22:28:35.915Z",
      "bumped": true,
      "bumped_at": "2019-09-23T22:28:35.915Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 2097,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 517,
            "username": "janderland",
            "name": "Jon Anderson",
            "avatar_template": "/user_avatar/forums.foundationdb.org/janderland/{size}/517_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Copying data from one &ldquo;table&rdquo; to another",
      "id": 860,
      "title": "Copying data from one \"table\" to another",
      "slug": "copying-data-from-one-table-to-another",
      "posts_count": 11,
      "reply_count": 7,
      "highest_post_number": 11,
      "image_url": null,
      "created_at": "2018-11-10T19:48:38.480Z",
      "last_posted_at": "2019-09-19T21:56:33.805Z",
      "bumped": true,
      "bumped_at": "2019-09-19T21:56:33.805Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 3,
      "views": 1653,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 311,
            "username": "ThomasJ",
            "name": "Thomas Johson",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/t/6f9a4e/{size}.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 538,
            "username": "ravilution",
            "name": "Ravilution",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ravilution/{size}/728_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Foundation DB Go Lang Pagination",
      "id": 1305,
      "title": "Foundation DB Go Lang Pagination",
      "slug": "foundation-db-go-lang-pagination",
      "posts_count": 17,
      "reply_count": 7,
      "highest_post_number": 17,
      "image_url": null,
      "created_at": "2019-04-14T15:00:51.893Z",
      "last_posted_at": "2023-12-04T17:16:23.383Z",
      "bumped": true,
      "bumped_at": "2023-12-04T17:16:23.383Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 1967,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 538,
            "username": "ravilution",
            "name": "Ravilution",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ravilution/{size}/728_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 1313,
            "username": "leginachen",
            "name": "Legina Chen",
            "avatar_template": "/user_avatar/forums.foundationdb.org/leginachen/{size}/1647_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "Range keys for subspace don&rsquo;t include first or last key",
      "id": 2337,
      "title": "Range keys for subspace don't include first or last key",
      "slug": "range-keys-for-subspace-dont-include-first-or-last-key",
      "posts_count": 4,
      "reply_count": 2,
      "highest_post_number": 4,
      "image_url": null,
      "created_at": "2020-09-15T03:12:25.601Z",
      "last_posted_at": "2020-09-16T23:26:17.094Z",
      "bumped": true,
      "bumped_at": "2020-09-16T23:26:17.094Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 880,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 810,
            "username": "amanda",
            "name": "Amanda",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/a/67e7ee/{size}.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        }
      ]
    },
    {
      "fancy_title": "How to get exact range of keys using fdb_transaction_get_range in C Programming",
      "id": 1355,
      "title": "How to get exact range of keys using fdb_transaction_get_range in C Programming",
      "slug": "how-to-get-exact-range-of-keys-using-fdb-transaction-get-range-in-c-programming",
      "posts_count": 5,
      "reply_count": 3,
      "highest_post_number": 5,
      "image_url": null,
      "created_at": "2019-05-09T12:22:07.878Z",
      "last_posted_at": "2019-05-20T14:14:50.692Z",
      "bumped": true,
      "bumped_at": "2019-05-20T14:14:50.692Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [
        "bindings"
      ],
      "tags_descriptions": {},
      "like_count": 2,
      "views": 1573,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 511,
            "username": "sakthivelpvs",
            "name": "Sakthivel",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/s/9dc877/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 219,
            "username": "MMcM",
            "name": "Mike McMahon",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/m/d07c76/{size}.png",
            "trust_level": 1
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 12,
        "username": "ajbeamon",
        "name": "A.J. Beamon",
        "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
        "post_count": 4,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "admin": true,
        "trust_level": 4
      },
      {
        "id": 391,
        "username": "atombender",
        "name": "",
        "avatar_template": "/user_avatar/forums.foundationdb.org/atombender/{size}/688_2.png",
        "post_count": 4,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 53,
        "username": "KrzysFR",
        "name": "Christophe Chevalier",
        "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
        "post_count": 3,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      },
      {
        "id": 8,
        "username": "alloc",
        "name": "Alec Grieser",
        "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 4
      },
      {
        "id": 378,
        "username": "num",
        "name": null,
        "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/n/db5fbb/{size}.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      }
    ],
    "created_by": {
      "id": 391,
      "username": "atombender",
      "name": "",
      "avatar_template": "/user_avatar/forums.foundationdb.org/atombender/{size}/688_2.png"
    },
    "last_poster": {
      "id": 12,
      "username": "ajbeamon",
      "name": "A.J. Beamon",
      "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png"
    },
    "links": [
      {
        "url": "https://github.com/apple/foundationdb/issues/846",
        "title": "Add byte array \"increment\" method to go bindings \u00b7 Issue #846 \u00b7 apple/foundationdb \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 33,
        "user_id": 8,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://godoc.org/github.com/apple/foundationdb/bindings/go/src/fdb/tuple#Tuple.FDBRangeKeys",
        "title": "tuple - GoDoc",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 22,
        "user_id": 12,
        "domain": "godoc.org",
        "root_domain": "godoc.org"
      },
      {
        "url": "https://godoc.org/github.com/apple/foundationdb/bindings/go/src/fdb#Strinc",
        "title": "fdb - GoDoc",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 11,
        "user_id": 12,
        "domain": "godoc.org",
        "root_domain": "godoc.org"
      },
      {
        "url": "https://forums.foundationdb.org/t/range-keys-for-subspace-dont-include-first-or-last-key/2337",
        "title": "Range keys for subspace don't include first or last key",
        "internal": true,
        "attachment": false,
        "reflection": true,
        "clicks": 2,
        "user_id": 810,
        "domain": "forums.foundationdb.org",
        "root_domain": "foundationdb.org"
      }
    ]
  },
  "bookmarks": []
}