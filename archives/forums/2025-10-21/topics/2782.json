{
  "post_stream": {
    "posts": [
      {
        "id": 9656,
        "name": "Iilyak",
        "username": "iilyak",
        "avatar_template": "/user_avatar/forums.foundationdb.org/iilyak/{size}/1073_2.png",
        "created_at": "2021-07-07T14:19:46.709Z",
        "cooked": "<p>How hard it would be to support new additional atomic operations? Few ideas about such operations are bellow:</p>\n<ol>\n<li>version stamped field within value subtracted from current version stamp</li>\n<li>support atomic operations on keys identified by <code>FDB_KEYSEL_LAST_LESS_THAN</code>/ <code>FDB_KEYSEL_LAST_LESS_OR_EQUAL</code>/ <code>FDB_KEYSEL_FIRST_GREATER_THAN</code>/ <code>FDB_KEYSEL_FIRST_GREATER_OR_EQUAL</code>. I.e. we don\u2019t know exactly the key we want to modify atomically.</li>\n<li>\n<code>add_extend</code> - Similar to atomic add, but it would store the given integer field at the end of a binary (without modifying original location) when overflow of the integer field within the value is detected.</li>\n<li>ability to use atomic add for the last integer field within the value (the size is determined by param_length). I.e. it should work when caller doesn\u2019t know the number of integer fields within the value.</li>\n<li>support addition with arbitrary precision integers</li>\n<li>dedicate a byte within a value to signal errors (integer field overflow/min/max)</li>\n<li>\n<code>extend_max</code>/<code>extend_min</code> store the given integer field at the end of a binary (without modifying original location) if the stored value is greater/lesser than given.</li>\n<li>Integer division/reminder</li>\n<li>modular arithmetic within a range passed via param_length. I.e. the value should wrap around instead of overflow. for example if we have decimal 2 in the integer field, allocate 3 bit for it and use <code>mod_add</code> to add decimal 15. The result should be decimal 3. No other bits outside of integer field should be  affected.</li>\n<li>ability to create new key when condition detected (max/min/overflow) which would contain a backup of old value.</li>\n<li>population count</li>\n<li>bsr/bsl</li>\n</ol>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 4,
        "updated_at": "2021-07-07T14:19:46.709Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 100,
        "reads": 38,
        "readers_count": 37,
        "score": 522.6,
        "yours": false,
        "topic_id": 2782,
        "topic_slug": "feature-request-additional-atomic-operations",
        "display_username": "Iilyak",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 491,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/feature-request-additional-atomic-operations/2782/1",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null,
        "can_vote": false
      },
      {
        "id": 9658,
        "name": "Markus Pilman",
        "username": "markus.pilman",
        "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
        "created_at": "2021-07-07T15:09:56.869Z",
        "cooked": "<p>Atomics are relatively easy to implement as long as we know to which storage server the mutation has to go.</p>\n<p>Do you have specific use-cases for the list above?</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 4,
        "updated_at": "2021-07-07T15:09:56.869Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 0,
        "reads": 39,
        "readers_count": 38,
        "score": 12.8,
        "yours": false,
        "topic_id": 2782,
        "topic_slug": "feature-request-additional-atomic-operations",
        "display_username": "Markus Pilman",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": true,
        "staff": true,
        "user_id": 15,
        "hidden": false,
        "trust_level": 4,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/feature-request-additional-atomic-operations/2782/2",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 9659,
        "name": "Iilyak",
        "username": "iilyak",
        "avatar_template": "/user_avatar/forums.foundationdb.org/iilyak/{size}/1073_2.png",
        "created_at": "2021-07-07T16:32:15.839Z",
        "cooked": "<blockquote>\n<p>Atomics are relatively easy to implement as long as we know to which storage server the mutation has to go.</p>\n</blockquote>\n<p>How about cases <span class=\"hashtag-raw\">#2</span> and <span class=\"hashtag-raw\">#10</span>?</p>\n<blockquote>\n<p>Do you have specific use-cases for the list above?</p>\n</blockquote>\n<p>There are few use cases</p>\n<h1><a name=\"key-update-rate-metric-1\" class=\"anchor\" href=\"#key-update-rate-metric-1\"></a>Key update rate metric.</h1>\n<p>We update some key atomically and  want to measure how often it is updated. The idea is to dedicate one field within the value for a version stamp and another field for total number of updates and use suggested feature <span class=\"hashtag-raw\">#1</span> (version stamped field within value subtracted from current version stamp). This wouldn\u2019t work alone and might need some further features to get average rate (or rate within last 5 minutes).</p>\n<h1><a name=\"colocation-of-multiple-invertible-bloom-lookup-table-cells-in-single-fdb-value-2\" class=\"anchor\" href=\"#colocation-of-multiple-invertible-bloom-lookup-table-cells-in-single-fdb-value-2\"></a>Colocation of multiple Invertible Bloom Lookup Table cells in single FDB value</h1>\n<p>IBLT requires multiple independent <code>add</code> operations of  multiple integer fields. The structure supports blind updates.  However the problem is integer overflow. The IBLT needs an operation which would wrap around without corrupting adjacent cells (see proposed features <span class=\"hashtag-raw\">#9</span> and <span class=\"hashtag-raw\">#6</span>).</p>\n<h1><a name=\"automatic-page-3\" class=\"anchor\" href=\"#automatic-page-3\"></a>Automatic page</h1>\n<p>We are working on inverted index. This would require us to store references to FDB keys in FDB values. If our references are the same size we could store them under single value atomically if we  would be able to append at the end (see proposed feature <span class=\"hashtag-raw\">#7</span>). However FDB has limits on the value size. We want to automatically create a next page when we reach that limit  (see feature proposal <span class=\"hashtag-raw\">#10</span>).</p>\n<p>The data model for this use case is something like</p>\n<p>key/0 = ref1,ref2,ref3.ref4,\u2026<br>\nkey/1 = ref10,ref20,\u2026</p>\n<p>We want to automatically create next key when we reach the maximum allowed size value.</p>\n<h1><a name=\"efficient-changes-feed-4\" class=\"anchor\" href=\"#efficient-changes-feed-4\"></a>Efficient changes feed</h1>\n<p>FDB doesn\u2019t support watchers for the range (see some related discussions <a href=\"https://forums.foundationdb.org/t/changefeeds-watching-and-getting-updates-on-ranges-of-keys/511\" class=\"inline-onebox\">Changefeeds (watching and getting updates on ranges of keys)</a> and <a href=\"https://forums.foundationdb.org/t/changes-feed-without-hot-keys/1057\" class=\"inline-onebox\">Changes feed without hot keys</a>)</p>\n<p>At CouchDB we are trying to introduce sharding to replace our first implementation of the feature. There is an opened RFCs for CouchDB project  <a href=\"https://github.com/apache/couchdb-documentation/blob/07c7c36a588a433ce316fd8d1f2d0bdfc420eae2/rfcs/018-sharded-changes-feeds.md\" rel=\"noopener nofollow ugc\">here</a></p>\n<p>We are looking for a way to create and remove shards automatically based on either rate of updates or number of documents. We probably want to double number of shards as needed. The doubling can be achieved using proposed feature <span class=\"hashtag-raw\">#12</span>.</p>\n<h1><a name=\"bloom-filter-in-fdb-value-5\" class=\"anchor\" href=\"#bloom-filter-in-fdb-value-5\"></a>Bloom filter in FDB value</h1>\n<p>Bloom filter can be updated blindly using XOR operation. However sometimes it is useful to protect a filter from updates if it is overpopulated. We can implement such protection If we would prevent XOR if population count is exceeding certain threshold (see <span class=\"hashtag-raw\">#11</span>).</p>\n<h1><a name=\"implementing-lifo-queue-with-ability-to-update-head-6\" class=\"anchor\" href=\"#implementing-lifo-queue-with-ability-to-update-head-6\"></a>implementing lifo queue with ability to update head</h1>\n<p>If the size of items we intend to store in queue is fixed and small we can implement the queue as multiple keys where multiple items are stored in the same key. When we reach the FDB limit  on value  size we create next key. In order to implement such a scheme using atomic operations we need to be able to extend last key in the range (see <span class=\"hashtag-raw\">#2</span>) also we need to be able to append to the end and create new key when we reach FDB value limit (see <span class=\"hashtag-raw\">#10</span>). In order to update head<br>\nwe need to read last field from the value of a last key in a range (see <span class=\"hashtag-raw\">#2</span>  and <span class=\"hashtag-raw\">#4</span>).</p>\n<p>This use case probably would require a take operation as well which would remove last field from the value.  However IRC it cannot be atomic since it returns a part of a value.</p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 4,
        "updated_at": "2021-07-07T16:32:15.839Z",
        "reply_count": 0,
        "reply_to_post_number": 2,
        "quote_count": 0,
        "incoming_link_count": 4,
        "reads": 40,
        "readers_count": 39,
        "score": 28.0,
        "yours": false,
        "topic_id": 2782,
        "topic_slug": "feature-request-additional-atomic-operations",
        "display_username": "Iilyak",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://forums.foundationdb.org/t/changefeeds-watching-and-getting-updates-on-ranges-of-keys/511",
            "internal": true,
            "reflection": false,
            "title": "Changefeeds (watching and getting updates on ranges of keys)",
            "clicks": 2
          },
          {
            "url": "https://github.com/apache/couchdb-documentation/blob/07c7c36a588a433ce316fd8d1f2d0bdfc420eae2/rfcs/018-sharded-changes-feeds.md",
            "internal": false,
            "reflection": false,
            "title": "couchdb-documentation/018-sharded-changes-feeds.md at 07c7c36a588a433ce316fd8d1f2d0bdfc420eae2 \u00b7 apache/couchdb-documentation \u00b7 GitHub",
            "clicks": 1
          },
          {
            "url": "https://forums.foundationdb.org/t/changes-feed-without-hot-keys/1057",
            "internal": true,
            "reflection": false,
            "title": "Changes feed without hot keys",
            "clicks": 0
          }
        ],
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "id": 15,
          "username": "markus.pilman",
          "name": "Markus Pilman",
          "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png"
        },
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 491,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/feature-request-additional-atomic-operations/2782/3",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      },
      {
        "id": 9744,
        "name": "Tao Lin",
        "username": "nblintao",
        "avatar_template": "/user_avatar/forums.foundationdb.org/nblintao/{size}/484_2.png",
        "created_at": "2021-07-26T05:36:50.122Z",
        "cooked": "<p>As <a class=\"mention\" href=\"/u/markus.pilman\">@markus.pilman</a> erfectly summarized, it\u2019s relatively easy to implement is the key is known. I think that are all items you listed except 2 and 10.</p>\n<p>Within these, some (like 8 and 12) are relatively similar to the atomic operations we have today, and should be relatively easy to implement. But the others are trickier because they take more than one argument (for example 9) or require some abstractions that FDB does have (for example, 4 needs \u201cfield\u201d). It will be interesting to generalize it and make FDB able run arbitrary atomic operation by supplying lambda functions in some way. But that\u2019s not a small change.</p>\n<p>I know it\u2019s probably not what you asked (and has probably been considered), but I\u2019d like to mentioned that all requested operations (except 1) can be achieved today by transactions. It might be helpful to implement them with transactions first and see performance impacts. Splitting bloom filters or fields to more keys may be needed to reduce conflicts.</p>\n<p>Also, Record Layer has an <a href=\"https://github.com/FoundationDB/fdb-record-layer/blob/main/fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/provider/foundationdb/SplitHelper.java\" rel=\"noopener nofollow ugc\">implementation</a> to handle arbitrary large values by transactions, which might be helpful.</p>",
        "post_number": 4,
        "post_type": 1,
        "posts_count": 4,
        "updated_at": "2021-07-26T05:49:20.749Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 3,
        "reads": 29,
        "readers_count": 28,
        "score": 20.8,
        "yours": false,
        "topic_id": 2782,
        "topic_slug": "feature-request-additional-atomic-operations",
        "display_username": "Tao Lin",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/FoundationDB/fdb-record-layer/blob/main/fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/provider/foundationdb/SplitHelper.java",
            "internal": false,
            "reflection": false,
            "title": "fdb-record-layer/SplitHelper.java at main \u00b7 FoundationDB/fdb-record-layer \u00b7 GitHub",
            "clicks": 8
          }
        ],
        "read": true,
        "user_title": null,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 485,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "post_url": "/t/feature-request-additional-atomic-operations/2782/4",
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false,
        "topic_accepted_answer": null
      }
    ],
    "stream": [
      9656,
      9658,
      9659,
      9744
    ]
  },
  "timeline_lookup": [
    [
      1,
      1567
    ],
    [
      4,
      1549
    ]
  ],
  "suggested_topics": [],
  "tags": [],
  "tags_descriptions": {},
  "fancy_title": "Feature Request: Additional atomic operations",
  "id": 2782,
  "title": "Feature Request: Additional atomic operations",
  "posts_count": 4,
  "created_at": "2021-07-07T14:19:46.527Z",
  "views": 1038,
  "reply_count": 1,
  "like_count": 1,
  "last_posted_at": "2021-07-26T05:36:50.122Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "feature-request-additional-atomic-operations",
  "category_id": 8,
  "word_count": 1112,
  "deleted_at": null,
  "user_id": 491,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "image_url": null,
  "slow_mode_seconds": 0,
  "draft": null,
  "draft_key": "topic_2782",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "current_post_number": 1,
  "highest_post_number": 4,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 10,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": false,
  "topic_timer": null,
  "message_bus_last_id": 0,
  "participant_count": 3,
  "show_read_indicator": false,
  "thumbnails": null,
  "slow_mode_enabled_until": null,
  "tags_disable_ads": false,
  "related_topics": [
    {
      "fancy_title": "Hot write keys with atomic operations and constraints?",
      "id": 3647,
      "title": "Hot write keys with atomic operations and constraints?",
      "slug": "hot-write-keys-with-atomic-operations-and-constraints",
      "posts_count": 3,
      "reply_count": 0,
      "highest_post_number": 3,
      "image_url": null,
      "created_at": "2022-11-09T09:22:28.397Z",
      "last_posted_at": "2022-11-16T20:24:27.073Z",
      "bumped": true,
      "bumped_at": "2022-11-16T20:24:27.073Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 513,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 1184,
            "username": "gytisgreitai",
            "name": "Gytis",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/7ba0ec/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 8,
            "username": "alloc",
            "name": "Alec Grieser",
            "avatar_template": "/user_avatar/forums.foundationdb.org/alloc/{size}/9_2.png",
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 517,
            "username": "janderland",
            "name": "Jon Anderson",
            "avatar_template": "/user_avatar/forums.foundationdb.org/janderland/{size}/517_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Atomic_Add(key, -1) can &ldquo;leak&rdquo; keys with value 0 if you are not careful",
      "id": 148,
      "title": "Atomic_Add(key, -1) can \"leak\" keys with value 0 if you are not careful",
      "slug": "atomic-add-key-1-can-leak-keys-with-value-0-if-you-are-not-careful",
      "posts_count": 5,
      "reply_count": 2,
      "highest_post_number": 5,
      "image_url": null,
      "created_at": "2018-04-20T19:00:47.495Z",
      "last_posted_at": "2018-04-21T10:05:05.991Z",
      "bumped": true,
      "bumped_at": "2018-04-21T10:05:05.991Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 2,
      "views": 817,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 111,
            "username": "andoma",
            "name": "Andreas Smas",
            "avatar_template": "/user_avatar/forums.foundationdb.org/andoma/{size}/78_2.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 54,
            "username": "Evan",
            "name": "Evan Tschannen",
            "avatar_template": "/user_avatar/forums.foundationdb.org/evan/{size}/104_2.png",
            "moderator": true,
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 22,
            "username": "dave",
            "name": "David Scherer",
            "avatar_template": "/user_avatar/forums.foundationdb.org/dave/{size}/89_2.png",
            "trust_level": 1
          }
        }
      ]
    },
    {
      "fancy_title": "How to minimize transaction conflicts on atomic operations?",
      "id": 1051,
      "title": "How to minimize transaction conflicts on atomic operations?",
      "slug": "how-to-minimize-transaction-conflicts-on-atomic-operations",
      "posts_count": 8,
      "reply_count": 4,
      "highest_post_number": 8,
      "image_url": null,
      "created_at": "2019-01-24T15:30:28.527Z",
      "last_posted_at": "2019-01-25T16:01:20.698Z",
      "bumped": true,
      "bumped_at": "2019-01-25T16:01:20.698Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 5,
      "views": 2181,
      "category_id": 9,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 323,
            "username": "WolfDan",
            "name": "Wolf Dan",
            "avatar_template": "/user_avatar/forums.foundationdb.org/wolfdan/{size}/806_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 81,
            "username": "ryanworl",
            "name": "Ryan Worl",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ryanworl/{size}/440_2.png",
            "trust_level": 3
          }
        }
      ]
    },
    {
      "fancy_title": "A few design-pattern + check-my-understanding questions",
      "id": 1153,
      "title": "A few design-pattern + check-my-understanding questions",
      "slug": "a-few-design-pattern-check-my-understanding-questions",
      "posts_count": 10,
      "reply_count": 6,
      "highest_post_number": 10,
      "image_url": null,
      "created_at": "2019-02-19T15:18:58.329Z",
      "last_posted_at": "2019-02-21T19:51:53.686Z",
      "bumped": true,
      "bumped_at": "2019-02-21T19:51:53.686Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 1,
      "views": 2273,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 519,
            "username": "JamesThompson",
            "name": "James Thompson",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/j/c67d28/{size}.png",
            "trust_level": 1
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 173,
            "username": "jkominek",
            "name": "Jay Kominek",
            "avatar_template": "/user_avatar/forums.foundationdb.org/jkominek/{size}/140_2.png",
            "trust_level": 2
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 12,
            "username": "ajbeamon",
            "name": "A.J. Beamon",
            "avatar_template": "/user_avatar/forums.foundationdb.org/ajbeamon/{size}/13_2.png",
            "admin": true,
            "trust_level": 4
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 53,
            "username": "KrzysFR",
            "name": "Christophe Chevalier",
            "avatar_template": "/user_avatar/forums.foundationdb.org/krzysfr/{size}/43_2.png",
            "trust_level": 2
          }
        }
      ]
    },
    {
      "fancy_title": "Possibility of Server side operations on VersionStamp",
      "id": 1577,
      "title": "Possibility of Server side operations on VersionStamp",
      "slug": "possibility-of-server-side-operations-on-versionstamp",
      "posts_count": 5,
      "reply_count": 2,
      "highest_post_number": 5,
      "image_url": null,
      "created_at": "2019-08-09T06:20:16.581Z",
      "last_posted_at": "2019-08-10T11:56:51.986Z",
      "bumped": true,
      "bumped_at": "2019-08-10T11:56:51.986Z",
      "archetype": "regular",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "tags": [],
      "tags_descriptions": {},
      "like_count": 0,
      "views": 1067,
      "category_id": 7,
      "featured_link": null,
      "has_accepted_answer": false,
      "posters": [
        {
          "extras": "latest",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 166,
            "username": "gaurav",
            "name": "gaurav",
            "avatar_template": "https://avatars.discourse-cdn.com/v4/letter/g/b487fb/{size}.png",
            "trust_level": 3
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 15,
            "username": "markus.pilman",
            "name": "Markus Pilman",
            "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
            "admin": true,
            "trust_level": 4
          }
        }
      ]
    }
  ],
  "summarizable": false,
  "can_vote": false,
  "vote_count": 0,
  "user_voted": false,
  "discourse_zendesk_plugin_zendesk_id": null,
  "discourse_zendesk_plugin_zendesk_url": "https://your-url.zendesk.com/agent/tickets/",
  "details": {
    "can_edit": false,
    "notification_level": 1,
    "participants": [
      {
        "id": 491,
        "username": "iilyak",
        "name": "Iilyak",
        "avatar_template": "/user_avatar/forums.foundationdb.org/iilyak/{size}/1073_2.png",
        "post_count": 2,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 1
      },
      {
        "id": 15,
        "username": "markus.pilman",
        "name": "Markus Pilman",
        "avatar_template": "/user_avatar/forums.foundationdb.org/markus.pilman/{size}/379_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "admin": true,
        "trust_level": 4
      },
      {
        "id": 485,
        "username": "nblintao",
        "name": "Tao Lin",
        "avatar_template": "/user_avatar/forums.foundationdb.org/nblintao/{size}/484_2.png",
        "post_count": 1,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_color": null,
        "flair_bg_color": null,
        "flair_group_id": null,
        "trust_level": 2
      }
    ],
    "created_by": {
      "id": 491,
      "username": "iilyak",
      "name": "Iilyak",
      "avatar_template": "/user_avatar/forums.foundationdb.org/iilyak/{size}/1073_2.png"
    },
    "last_poster": {
      "id": 485,
      "username": "nblintao",
      "name": "Tao Lin",
      "avatar_template": "/user_avatar/forums.foundationdb.org/nblintao/{size}/484_2.png"
    },
    "links": [
      {
        "url": "https://github.com/FoundationDB/fdb-record-layer/blob/main/fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/provider/foundationdb/SplitHelper.java",
        "title": "fdb-record-layer/SplitHelper.java at main \u00b7 FoundationDB/fdb-record-layer \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 8,
        "user_id": 485,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://forums.foundationdb.org/t/changefeeds-watching-and-getting-updates-on-ranges-of-keys/511",
        "title": "Changefeeds (watching and getting updates on ranges of keys)",
        "internal": true,
        "attachment": false,
        "reflection": false,
        "clicks": 2,
        "user_id": 491,
        "domain": "forums.foundationdb.org",
        "root_domain": "foundationdb.org"
      },
      {
        "url": "https://github.com/apache/couchdb-documentation/blob/07c7c36a588a433ce316fd8d1f2d0bdfc420eae2/rfcs/018-sharded-changes-feeds.md",
        "title": "couchdb-documentation/018-sharded-changes-feeds.md at 07c7c36a588a433ce316fd8d1f2d0bdfc420eae2 \u00b7 apache/couchdb-documentation \u00b7 GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 1,
        "user_id": 491,
        "domain": "github.com",
        "root_domain": "github.com"
      }
    ]
  },
  "bookmarks": []
}